array (
  'battled' => 'b.ah/t.eh.l.d / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'aaa' => 't.r.ih/p.eh/l.ay /  / failed phone:t / failed spelling:aa',
  'aaberg' => 'aw/b.er.g / [a^aw]/ / failed phone:b / failed spelling:ab',
  'aachen' => 'aw/k.eh.n / [a^aw]/ / failed phone:k / failed spelling:ac',
  'aaker' => 'aw/k.er / [a^aw]/ / failed phone:k / failed spelling:ak',
  'aamodt' => 'aw/m.eh.t / [a^aw]/ / failed phone:m / failed spelling:am',
  'aancor' => 'aw.n/k.aw.r / [a^aw]. / failed phone:n / failed spelling:an',
  'aardema' => 'aw.r/d.eh/m.eh / [a^oh]. / failed phone:r / failed spelling:ar',
  'aardvark' => 'aw.r.d/v.aw.r.k / [a^oh]. / failed phone:r / failed spelling:ar',
  'aaron' => 'air/eh.n /  / failed phone:air / failed spelling:aa',
  'aarons' => 'air/eh.n.z /  / failed phone:air / failed spelling:aa',
  'aaronson' => 'aw/r.eh.n/s.eh.n / [a^aw]/ / failed phone:r / failed spelling:ar',
  'aase' => 'aw.s / [a^aw]. / failed phone:s / failed spelling:as',
  'aasen' => 'aw/s.eh.n / [a^aw]/ / failed phone:s / failed spelling:as',
  'abbruzzese' => 'aw/b.r.ue.t/s.ay/z.ee / [a^aw]/[bb^b].[r^r].[u^ue]. / failed phone:t / failed spelling:zz',
  'abler' => 'ay/b.eh/l.er / [a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'ables' => 'ay/b.eh.l.z / [a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'ablest' => 'ay/b.eh.l.s.t / [a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'abramczyk' => 'aw/b.r.eh.m/ch.ih.k / [a^aw]/[b^b].[r^r].[a^ah].[m^m]/ / failed phone:t / failed spelling:cz',
  'abramowicz' => 'eh/b.r.aw/m.eh/v.ih.ch / [a^ah]/[b^b].[r^r].[a^aw]/[m^m].[o^uh]/ / failed phone:v / failed spelling:wi',
  'abruzzese' => 'aw/b.r.ue.t/s.ay/z.ee / [a^aw]/[b^b].[r^r].[u^ue]. / failed phone:t / failed spelling:zz',
  'accentuated' => 'ah.k/s.eh.n/ch.eh/w.ay/t.ih.d / [a^ah].[c^k]/[c^s].[e^eh].[n^n]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'accentuating' => 'ah.k/s.eh.n/ch.eh/w.ay/t.ih.ng / [a^ah].[c^k]/[c^s].[e^eh].[n^n]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'accetta' => 'aw/ch.eh/t.eh / [a^aw]/ / failed phone:t / failed spelling:cc',
  'accion' => 'ah/ch.ee/eh.n / [a^ah]/ / failed phone:t / failed spelling:cc',
  'accival' => 'ah/s.ih/v.aw.l / [a^ah]/[c^s]. / failed phone:ih / failed spelling:ci',
  'accompaniiment' => 'eh/k.uh.m.p/n.ih/m.eh.n.t / [a^ah]/[cc^k].[o^uh].[m^m].[p^p]/ / failed phone:n / failed spelling:an',
  'accompaniments' => 'eh/k.uh.m.p/n.ih/m.eh.n.t.s / [a^ah]/[cc^k].[o^uh].[m^m].[p^p]/ / failed phone:n / failed spelling:an',
  'acierno' => 'aw/s.ih.r/n.oh / [a^aw]/[c^s].[i^ih]. / failed phone:r / failed spelling:er',
  'ackles' => 'ah/k.eh.l.z / [a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'acknowledge' => 'ah.k/n.aw/l.ih.j / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledgeable' => 'ah.k/n.aw/l.ih/j.eh/b.eh.l / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledged' => 'ah.k/n.aw/l.ih.j.d / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledgement' => 'ah.k/n.aw/l.ih.j/m.eh.n.t / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledges' => 'ah.k/n.aw/l.ih/j.ih.z / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledging' => 'ah.k/n.aw/l.ih/j.ih.ng / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acknowledgment' => 'ah.k/n.aw/l.ih.j/m.eh.n.t / [a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'acocella' => 'aw/k.oh/ch.eh/l.eh / [a^aw]/[c^k].[o^oh]/ / failed phone:t / failed spelling:ce',
  'acquiesce' => 'ah/kw.ee/eh.s / [a^ah]/[cqu^kw].[i^ee]/[e^eh].[sc^s] / failed phone:s / failed spelling:sc',
  'actuality' => 'ah.k/ch.eh/w.ah/l.eh/t.ee / [a^ah].[c^k]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:al',
  'adabelle' => 'ah/d.eh/b.eh.l / [a^ah]/[d^d].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'adagio' => 'eh/d.aw/zh.ee/oh / [a^ah]/[d^d].[a^aw]/ / failed phone:zh / failed spelling:gi',
  'adah' => 'ah/d.aw / [a^ah]/[d^d].[a^aw] / failed phone:aw / failed spelling:ah',
  'adamcik' => 'aw/d.eh.m/ch.ih.k / [a^aw]/[d^d].[a^ah].[m^m]/ / failed phone:t / failed spelling:ci',
  'adamczak' => 'aw/d.eh.m/ch.ah.k / [a^aw]/[d^d].[a^ah].[m^m]/ / failed phone:t / failed spelling:cz',
  'adamczyk' => 'aw/d.eh.m/ch.ih.k / [a^aw]/[d^d].[a^ah].[m^m]/ / failed phone:t / failed spelling:cz',
  'adamowicz' => 'eh/d.aw/m.eh/v.ih.ch / [a^ah]/[d^d].[a^aw]/[m^m].[o^uh]/ / failed phone:v / failed spelling:wi',
  'addled' => 'ah/d.eh.l.d / [a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'addleman' => 'ah/d.eh.l/m.eh.n / [a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'adduci' => 'aw/d.ue/ch.ee / [a^aw]/[dd^d].[u^ue]/ / failed phone:t / failed spelling:ci',
  'adelaar' => 'ah/d.eh/l.aw.r / [a^ah]/[d^d].[e^eh]/[l^l].[a^oh]. / failed phone:r / failed spelling:ar',
  'adelaide' => 'ah/d.eh/l.ay.d / [a^ah]/[d^d].[e^eh]/[l^l].[ai^ay].[d^d] / failed phone:d / failed spelling:id',
  'adelle' => 'eh/d.eh.l / [a^ah]/[d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'adenauer' => 'ay/d.eh/n.ow.r / [a^ay]/[d^d].[e^eh]/[n^n].[au^aw]. / failed phone:r / failed spelling:er',
  'adieu' => 'eh/d.ue / [a^ah]/[d^d]. / failed phone:ue / failed spelling:ie',
  'adjustables' => 'eh/j.uh/s.t.eh/b.eh.l.z / [a^ah]/[dj^j].[u^uh]/[s^s].[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'adorabelle' => 'ah/d.er/eh/b.eh.l / [a^ah]/[d^d].[o^oh].[r^r]/[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'adrienne' => 'aw/d.r.ee/eh.n / [a^aw]/[d^d].[r^r].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'adventuresome' => 'ah.d/v.eh.n/ch.er/s.eh.m / [a^ah].[d^d]/[v^v].[e^eh].[n^n]/[t^ch].[ure^er]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'ae' => 'ay / [a^ay] / failed phone:ay / failed spelling:ae',
  'aegean' => 'ih/j.ee/eh.n / [a^ih]/ / failed phone:j / failed spelling:eg',
  'aegerter' => 'eh/g.er/t.er / [a^ah]/ / failed phone:g / failed spelling:eg',
  'aegis' => 'ee/j.eh.s /  / failed phone:ee / failed spelling:ae',
  'aegon' => 'ay/g.aw.n / [a^ay]/ / failed phone:g / failed spelling:eg',
  'aeneas' => 'ah/n.ee/eh.s / [a^ah]/ / failed phone:n / failed spelling:en',
  'aequitron' => 'ay/kw.ih/t.r.aw.n / [a^ay]/ / failed phone:kw / failed spelling:eq',
  'aeritalia' => 'air/ih/t.ah/l.ye.eh / [aer^air]/[i^ih]/[t^t].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'aerobics' => 'er/oh/b.ih.k.s /  / failed phone:er / failed spelling:ae',
  'aerospatiale' => 'air/oh/s.p.aw/s.ee/aw.l / [aer^air]/[o^oh]/[s^s].[p^p].[a^aw]/ / failed phone:s / failed spelling:ti',
  'aeschliman' => 'eh/sh.l.ee/m.eh.n / [a^ah]/ / failed phone:sh / failed spelling:es',
  'aesthete' => 'eh.s/th.ee.t / [a^ah]. / failed phone:s / failed spelling:es',
  'aesthetic' => 'eh.s/th.eh/t.ih.k / [a^ah]. / failed phone:s / failed spelling:es',
  'aesthetically' => 'eh.s/th.eh/t.ih/k.l.ee / [a^ah]. / failed phone:s / failed spelling:es',
  'aesthetics' => 'eh.s/th.eh/t.ih.k.s / [a^ah]. / failed phone:s / failed spelling:es',
  'aetna' => 'eh.t/n.eh / [a^ah]. / failed phone:t / failed spelling:et',
  'affeldt' => 'ah/f.ih.l.t / [a^ah]/[ff^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'afheldt' => 'ah/f.eh.l.t / [a^ah]/[f^f]. / failed phone:eh / failed spelling:he',
  'afrikaans' => 'ah/f.r.eh/k.aw.n.z / [a^ah]/[f^f].[r^r].[i^ih]/[k^k].[a^aw]. / failed phone:n / failed spelling:an',
  'agache' => 'ah/g.ah.ch / [a^ah]/[g^g].[a^ah].[ch^ch] / failed phone:t / failed spelling:ch',
  'aghazadeh' => 'ah/g.eh/z.aw/d.eh / [a^ah]/[gh^g].[a^ah]/[z^z].[a^aw]/[d^d].[e^eh] / failed phone:eh / failed spelling:eh',
  'agius' => 'ay/j.ee/ih.s / [a^ay]/[g^j].[i^ee]/ / failed phone:ih / failed spelling:us',
  'agne' => 'ay.n.ye / [a^ay].[gn^n]. / failed phone:ye / failed spelling:e',
  'agribusiness' => 'ah/g.r.eh/b.ih.z/n.eh.s / [a^ah]/[g^g].[r^r].[i^ih]/[b^b]. / failed phone:ih / failed spelling:us',
  'ag+uado' => 'aw/g.w.aw/d.oh / [a^aw]/[g^g]. / failed phone:w / failed spelling:+u',
  'aguiar' => 'aw.g.w/ye.er / [a^aw].[g^g].[u^w]/ / failed phone:er / failed spelling:ia',
  'agustin' => 'eh/g.aw/s.t.ih.n / [a^ah]/[gu^g]. / failed phone:aw / failed spelling:st',
  'ah' => 'aw / [a^aw] / failed phone:aw / failed spelling:ah',
  'ahah' => 'aw/h.aw / [a^aw]/[h^h].[a^aw] / failed phone:aw / failed spelling:ah',
  'aherin' => 'aw/er/ih.n / [a^aw]/ / failed phone:er / failed spelling:he',
  'ahh' => 'aw / [a^aw] / failed phone:aw / failed spelling:ah',
  'ahl' => 'aw.l / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlberg' => 'aw.l/b.er.g / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlborn' => 'aw.l/b.er.n / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlers' => 'aw/l.er.z / [a^aw]/ / failed phone:l / failed spelling:hl',
  'ahles' => 'ay/eh.l.z / [a^ay]/ / failed phone:eh / failed spelling:hl',
  'ahlf' => 'aw.l.f / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlgren' => 'aw.l/g.r.eh.n / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlgrim' => 'aw.l/g.r.ih.m / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlin' => 'aw/l.ih.n / [a^aw]/ / failed phone:l / failed spelling:hl',
  'ahlman' => 'aw.l/m.eh.n / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlquist' => 'aw.l/kw.ih.s.t / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlstrand' => 'aw.l/s.t.r.eh.n.d / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahlstrom' => 'aw.l/s.t.r.eh.m / [a^aw]. / failed phone:l / failed spelling:hl',
  'ahmad' => 'aw/m.aw.d / [a^aw]/ / failed phone:m / failed spelling:hm',
  'ahmadi' => 'aw/m.aw/d.ee / [a^aw]/ / failed phone:m / failed spelling:hm',
  'ahmann' => 'aw/m.eh.n / [a^aw]/ / failed phone:m / failed spelling:hm',
  'ahmanson' => 'aw/m.eh.n/s.eh.n / [a^aw]/ / failed phone:m / failed spelling:hm',
  'ahmed' => 'aw/m.eh.d / [a^aw]/ / failed phone:m / failed spelling:hm',
  'ahr' => 'aw.r / [a^oh]. / failed phone:r / failed spelling:hr',
  'ahren' => 'aw/r.eh.n / [a^aw]/ / failed phone:r / failed spelling:hr',
  'ahrendt' => 'aw/r.ih.n.t / [a^aw]/ / failed phone:r / failed spelling:hr',
  'ahrens' => 'aw/r.ih.n.z / [a^aw]/ / failed phone:r / failed spelling:hr',
  'ahs' => 'aw.z / [a^aw]. / failed phone:z / failed spelling:hs',
  'ahuja' => 'aw/h.ue/ye.eh / [a^aw]/[h^h].[u^ue]/ / failed phone:ue / failed spelling:ja',
  'ahumada' => 'aw/ye.ue/m.aw/d.eh / [a^aw]/ / failed phone:ue / failed spelling:hu',
  'aida' => 'igh/ee/d.eh / [ai^igh]/ / failed phone:ee / failed spelling:da',
  'aide' => 'ay.d / [ai^ay].[d^d] / failed phone:d / failed spelling:id',
  'aiguebelle' => 'igh/g.eh/b.eh.l / [ai^igh]/[gu^g].[e^eh]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'aime' => 'ay.m / [ai^ay].[m^m] / failed phone:m / failed spelling:im',
  'ainge' => 'ay.ng / [ai^ay].[n^ng] / failed phone:ng / failed spelling:in',
  'aisle' => 'igh.l / [ai^igh]. / failed phone:l / failed spelling:sl',
  'aisles' => 'igh.l.z / [ai^igh]. / failed phone:l / failed spelling:sl',
  'aja' => 'igh/eh /  / failed phone:igh / failed spelling:aj',
  'akc' => 'ah.k / [a^ah].[k^k] / failed phone:k / failed spelling:kc',
  'akhtar' => 'ah.k/t.er / [a^ah].[k^k]/ / failed phone:t / failed spelling:ht',
  'akkadian' => 'eh/k.ay/d.ee/eh.n / [a^ah]/[k^k]. / failed phone:ay / failed spelling:ka',
  'akkerman' => 'ah/k.er/m.eh.n / [a^ah]/[k^k]. / failed phone:er / failed spelling:ke',
  'alberthal' => 'ah.l/b.er/t.aw.l / [a^ah].[l^l]/[b^b].[er^er]/[t^t]. / failed phone:aw / failed spelling:ha',
  'albertville' => 'ah.l/b.er.t/v.ih.l / [a^ah].[l^l]/[b^b].[er^er].[t^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'alcina' => 'aw.l/ch.ee/n.eh / [a^aw].[l^l]/ / failed phone:t / failed spelling:ci',
  'aldus' => 'aw.l/d.ih.s / [a^aw].[l^l]/[d^d]. / failed phone:ih / failed spelling:us',
  'alejandre' => 'aw/l.ay/ye.aw.n/d.r.ay / [a^aw]/[l^l].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'alejandro' => 'aw/l.ay/ye.aw.n/d.r.oh / [a^aw]/[l^l].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'alejo' => 'aw/l.ay/ye.oh / [a^aw]/[l^l].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'alejos' => 'aw/l.ay/ye.oh.z / [a^aw]/[l^l].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'aleksandr' => 'ah/l.eh.g/z.ah.n/d.er / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:ks',
  'alessandro' => 'aw/l.ay/z.aw.n/d.r.oh / [a^aw]/[l^l].[e^ay]/[s^z]. / failed phone:aw / failed spelling:sa',
  'alexander' => 'ah/l.eh.g/z.ah.n/d.er / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:xa',
  'alexanders' => 'ah/l.ih.g/z.ah.n/d.er.z / [a^ah]/[l^l].[e^ih]. / failed phone:g / failed spelling:xa',
  'alexandra' => 'ah/l.eh.g/z.ah.n/d.r.eh / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:xa',
  'alexandria' => 'ah/l.eh.g/z.ah.n/d.r.ee/eh / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:xa',
  'alexandrine' => 'ah/l.eh.g/z.ah.n/d.r.ee.n / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:xa',
  'alexandrines' => 'ah/l.eh.g/z.ah.n/d.r.ee.n.z / [a^ah]/[l^l].[e^eh]. / failed phone:g / failed spelling:xa',
  'alexopoulos' => 'ah/l.ih.g/z.aw/p.eh/l.ih.s / [a^ah]/[l^l].[e^ih]. / failed phone:g / failed spelling:xo',
  'alfieri' => 'aw.l/f.ih/r.ee / [a^aw].[l^l]/[f^f].[i^ih]/ / failed phone:r / failed spelling:er',
  'algae' => 'ah.l/j.ee / [a^ah].[l^l]/[g^j]. / failed phone:ee / failed spelling:ae',
  'algiers' => 'ah.l/j.ih.r.z / [a^ah].[l^l]/[g^j].[i^ih]. / failed phone:r / failed spelling:er',
  'algorithm' => 'ah.l/g.er/ih/dh.eh.m / [a^ah].[l^l]/[g^g].[o^oh].[r^r]/[i^ih]/[th^dh]. / failed phone:eh / failed spelling:m',
  'algorithms' => 'ah.l/g.er/ih/dh.eh.m.z / [a^ah].[l^l]/[g^g].[o^oh].[r^r]/[i^ih]/[th^dh]. / failed phone:eh / failed spelling:ms',
  'alhadeff' => 'ah/l.eh/d.eh.f / [a^ah]/[l^l]. / failed phone:eh / failed spelling:ha',
  'alienate' => 'ay/l.ye.eh/n.ay.t / [a^ay]/[l^l]. / failed phone:ue / failed spelling:ie',
  'allais' => 'eh/l.ay / [a^ah]/[ll^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'alleman' => 'ay.l/m.eh.n / [a^ay].[ll^l]/ / failed phone:m / failed spelling:em',
  'allende' => 'aw/ye.eh.n/d.ay / [a^aw]/ / failed phone:ue / failed spelling:ll',
  'allender' => 'aw/l.ye.eh.n/d.ay/er / [a^aw]/[ll^l]. / failed phone:ue / failed spelling:en',
  'aloia' => 'aw/l.oh/ye.eh / [a^aw]/[l^l].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'aloysius' => 'ah/l.oh/ih/sh.ih.s / [a^ah]/[l^l].[o^oh]/[y^ih]/[s^sh].[i^ih]. / failed phone:s / failed spelling:us',
  'alphandery' => 'ah.l/f.ah/d.er/ee / [a^ah].[l^l]/[ph^f].[a^ah]/ / failed phone:d / failed spelling:nd',
  'altay' => 'aw.l/t.igh / [a^aw].[l^l]/[t^t]. / failed phone:igh / failed spelling:ay',
  'altemus' => 'ah.l/t.ih/m.ih.s / [a^ah].[l^l]/[t^t].[e^ih]/[m^m]. / failed phone:ih / failed spelling:us',
  'altieri' => 'aw.l/t.ih/r.ee / [a^aw].[l^l]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'altschiller' => 'aw.l/ch.ih/l.er / [a^aw].[l^l]/[t^t].[sc^sh]. / failed phone:ih / failed spelling:hi',
  'altschul' => 'ah.l/ch.eh.l / [a^ah].[l^l]/[t^t].[sc^sh]. / failed phone:eh / failed spelling:hu',
  'altschuler' => 'ah.l.ch/ye.ue/l.er / [a^ah].[l^l].[t^t].[sc^sh]/ / failed phone:ue / failed spelling:hu',
  'alusuisse' => 'ah/l.ye.ue/s.w.ih.s / [a^ah]/[l^l].[u^ue]/[s^s].[u^w].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'alvah' => 'ah.l/v.aw / [a^ah].[l^l]/[v^v].[a^aw] / failed phone:aw / failed spelling:ah',
  'amabelle' => 'ah/m.eh/b.eh.l / [a^ah]/[m^m].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'amalia' => 'eh/m.aw/l.ye.eh / [a^ah]/[m^m].[a^aw]/[l^l]. / failed phone:ue / failed spelling:ia',
  'amateurish' => 'ah/m.eh/ch.er/ih.sh / [a^ah]/[m^m].[a^ah]/[te^t]. / failed phone:sh / failed spelling:ur',
  'amateurism' => 'ah/m.eh/ch.er/ih/z.eh.m / [a^ah]/[m^m].[a^ah]/[te^t]. / failed phone:sh / failed spelling:ur',
  'ambled' => 'ah.m/b.eh.l.d / [a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'ambles' => 'ah.m/b.eh.l.z / [a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'ambling' => 'ah.m/b.eh/l.ih.ng / [a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'ambrosius' => 'ah.m/b.r.eh/s.ee/ih.s / [a^ah].[m^m]/[b^b].[r^r].[o^uh]/[s^s].[i^ee]/ / failed phone:ih / failed spelling:us',
  'ambuehl' => 'ah.m/b.oo.l / [a^ah].[m^m]/[b^b].[u^oo]. / failed phone:l / failed spelling:eh',
  'amdahl' => 'ah.m/d.aw.l / [a^ah].[m^m]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'amelia' => 'eh/m.ee/l.ye.eh / [a^ah]/[m^m].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'ameliorate' => 'eh/m.ee/l.ye.er/ay.t / [a^ah]/[m^m].[e^ee]/[l^l]. / failed phone:er / failed spelling:io',
  'amelioration' => 'eh/m.ee/l.ye.er/ay/sh.eh.n / [a^ah]/[m^m].[e^ee]/[l^l]. / failed phone:er / failed spelling:io',
  'americorps' => 'eh/m.air/ih/k.aw.r / [a^ah]/[m^m].[er^air]/[i^ih]/[c^k].[o^oh].[r^r] / failed phone:r / failed spelling:rp',
  'amherst' => 'ah/m.er.s.t / [a^ah]/[m^m]. / failed phone:er / failed spelling:he',
  'amityville' => 'ah/m.ih/t.ee/v.ih.l / [a^ah]/[m^m].[i^ih]/[t^t].[y^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'ammonia' => 'eh/m.oh/n.ye.eh / [a^ah]/[mm^m].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'amoeba' => 'eh/m.ee/b.eh / [a^ah]/[m^m]. / failed phone:ee / failed spelling:oe',
  'amoebas' => 'eh/m.ee/b.eh.z / [a^ah]/[m^m]. / failed phone:ee / failed spelling:oe',
  'amoebic' => 'eh/m.ee/b.ih.k / [a^ah]/[m^m]. / failed phone:ee / failed spelling:oe',
  'amphitheatre' => 'ah.m/p.eh/th.ee/eh/t.er / [a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:hi',
  'amphorae' => 'ah.m/f.er/ee / [a^ah].[m^m]/[ph^f].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ae',
  'amraam' => 'ah/m.r.aw.m / [a^ah]/[m^m].[r^r].[a^aw]. / failed phone:m / failed spelling:am',
  'anaerobes' => 'ah/n.er/oh.b.z / [a^ah]/[n^n]. / failed phone:er / failed spelling:ae',
  'anaerobic' => 'ah/n.er/oh/b.ih.k / [a^ah]/[n^n]. / failed phone:er / failed spelling:ae',
  'anaesthesia' => 'ah/n.eh.s/th.ee/zh.eh / [a^ah]/[n^n].[a^ah]. / failed phone:s / failed spelling:es',
  'ancient' => 'ay.n/ch.eh.n.t / [a^ay].[n^n]/ / failed phone:t / failed spelling:ci',
  'ancients' => 'ay.n/ch.eh.n.t.s / [a^ay].[n^n]/ / failed phone:t / failed spelling:ci',
  'ancira' => 'aw.n/ch.ih/r.eh / [a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'andrae' => 'aw.n/d.r.igh / [a^aw].[n^n]/[d^d].[r^r]. / failed phone:igh / failed spelling:ae',
  'andreae' => 'aw.n/d.r.ay/aw / [a^aw].[n^n]/[d^d].[r^r].[e^ay]/[a^aw] / failed phone:aw / failed spelling:ae',
  'andrej' => 'aw.n/d.r.ay / [a^aw].[n^n]/[d^d].[r^r].[e^ay] / failed phone:ay / failed spelling:ej',
  'andreozzi' => 'aw.n/d.r.ee/aw.t/s.ee / [a^aw].[n^n]/[d^d].[r^r].[e^ee]/[o^aw]. / failed phone:t / failed spelling:zz',
  'andruskevich' => 'ah.n/d.r.eh/s.eh/v.ih.ch / [a^ah].[n^n]/[d^d].[r^r].[u^uh]/[s^s]. / failed phone:eh / failed spelling:ke',
  'andrzej' => 'aw.n/d.r.ay / [a^aw].[n^n]/[d^d].[r^r]. / failed phone:ay / failed spelling:ze',
  'andrzejewski' => 'eh.n/j.ay/eh.f/s.k.ee / [a^ah].[n^n]/[d^j]. / failed phone:ay / failed spelling:rz',
  'andujar' => 'aw.n/d.ue/ye.aw.r / [a^aw].[n^n]/[d^d].[u^ue]/ / failed phone:ye / failed spelling:ja',
  'angelle' => 'ay.ng/g.eh.l / [a^ay].[n^ng]/[g^g].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'angelucci' => 'aw.ng/g.eh/l.ue/ch.ee / [a^aw].[n^ng]/[g^g].[e^eh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'angled' => 'ah.ng/g.eh.l.d / [a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'anglen' => 'ah.ng/g.eh/l.eh.n / [a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'angles' => 'ah.ng/g.eh.l.z / [a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'angleton' => 'ah.ng/g.eh.l/t.eh.n / [a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'angst' => 'aw.ng.k.s.t / [a^aw].[n^ng]. / failed phone:x / failed spelling:gs',
  'angstadt' => 'ah.ng.sh/t.ah.t / [a^ah].[ng^ng].[s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'anheuser' => 'ah.n/h.igh/z.er / [a^ah].[n^n]/[h^h]. / failed phone:igh / failed spelling:eu',
  'anhydride' => 'ah.n/h.igh/d.r.ih.d / [a^ah].[n^n]/[h^h].[y^igh]/[d^d].[r^r].[i^ih].[d^d] / failed phone:d / failed spelling:de',
  'anklebone' => 'ah.ng/k.eh.l/b.oh.n / [a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'ankles' => 'ah.ng/k.eh.l.z / [a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'annabelle' => 'ah/n.eh/b.eh.l / [a^ah]/[nn^n].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'anne' => 'ah.n / [a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'annihilate' => 'eh/n.igh/eh/l.ay.t / [a^ah]/[nn^n].[i^igh]/ / failed phone:eh / failed spelling:hi',
  'annihilated' => 'eh/n.igh/eh/l.ay/t.ih.d / [a^ah]/[nn^n].[i^igh]/ / failed phone:eh / failed spelling:hi',
  'annihilation' => 'eh/n.igh/eh/l.ay/sh.eh.n / [a^ah]/[nn^n].[i^igh]/ / failed phone:eh / failed spelling:hi',
  'annunciata' => 'aw/n.ue.n/ch.aw/t.eh / [a^aw]/[nn^n].[u^ue].[n^n]/ / failed phone:t / failed spelling:ci',
  'anoint' => 'eh/n.oy.n/t.eh / [a^ah]/[n^n].[oi^oy].[n^n]/[t^t]. / failed phone:eh / failed spelling:',
  'anschel' => 'ah.n/sh.eh.l / [a^ah].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'anschluss' => 'ah.n/sh.l.eh.s / [a^ah].[n^n]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'anschutz' => 'ah.n/sh.eh.t.s / [a^ah].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:hu',
  'antczak' => 'ah.n.t/ch.ah.k / [a^ah].[n^n].[t^t]/ / failed phone:t / failed spelling:cz',
  'antennae' => 'ah.n/t.eh/n.ee / [a^ah].[n^n]/[t^t].[e^eh]/[n^n]. / failed phone:ee / failed spelling:na',
  'antenne' => 'ah.n/t.eh.n / [a^ah].[n^n]/[t^t].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'antenucci' => 'ah.n/t.ih/n.ue/ch.ee / [a^ah].[n^n]/[t^t].[e^ih]/[n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'antiapartheid' => 'ah.n/t.ee/eh/p.aw.r.t/h.igh.t / [a^ah].[n^n]/[t^t].[i^ee]/[a^ah]/[p^p].[a^oh].[r^r].[t^t]/[h^h].[ei^igh]. / failed phone:t / failed spelling:d',
  'anticorruption' => 'ah.n/t.igh/k.er/uh.p/sh.eh.n / [a^ah].[n^n]/[t^t].[i^igh]/[c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'antigone' => 'ah/t.ih/g.eh/n.ee / [a^ah]/ / failed phone:t / failed spelling:nt',
  'antigovernment' => 'ah.n/t.ee/g.uh/v.er/m.eh.n.t / [a^ah].[n^n]/[t^t].[i^ee]/[g^g].[o^uh]/[ve^v].[r^er]/ / failed phone:m / failed spelling:nm',
  'antoine' => 'aw.n/t.w.aw.n / [a^aw].[n^n]/[t^t]. / failed phone:w / failed spelling:oi',
  'antoinette' => 'ah.n/t.w.eh/n.eh.t / [a^ah].[n^n]/[t^t]. / failed phone:w / failed spelling:oi',
  'antonacci' => 'aw.n/t.oh/n.aw/ch.ee / [a^aw].[n^n]/[t^t].[o^oh]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'antonopoulos' => 'ah.n/t.eh/n.aw/p.eh/l.ih.s / [a^ah].[n^n]/[t^t].[o^uh]/[n^n].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'antonucci' => 'aw.n/t.oh/n.ue/ch.ee / [a^aw].[n^n]/[t^t].[o^oh]/[n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'antrobus' => 'ah.n/t.r.eh/b.ih.s / [a^ah].[n^n]/[t^t].[r^r].[o^uh]/[b^b]. / failed phone:ih / failed spelling:us',
  'anxieties' => 'ah.ng/z.igh/eh/t.ee.z / [a^ah].[n^ng]/ / failed phone:z / failed spelling:xi',
  'anxiety' => 'ah.ng/z.igh/eh/t.ee / [a^ah].[n^ng]/ / failed phone:z / failed spelling:xi',
  'anxious' => 'ah.ng.k/sh.eh.s / [a^ah].[n^ng].[x^k]/ / failed phone:sh / failed spelling:io',
  'anxiously' => 'ah.ng.k/sh.eh/s.l.ee / [a^ah].[n^ng].[x^k]/ / failed phone:sh / failed spelling:io',
  'anyone' => 'eh/n.ee/w.uh.n / [a^ah]/[n^n].[y^ee]/ / failed phone:uh / failed spelling:n',
  'aoi' => 'ow/ee /  / failed phone:ow / failed spelling:ao',
  'aoshima' => 'ow/sh.ee/m.eh /  / failed phone:ow / failed spelling:ao',
  'aoun' => 'ow/eh.n /  / failed phone:ow / failed spelling:ao',
  'aouzou' => 'ow/ye.ue/z.ue /  / failed phone:ow / failed spelling:ao',
  'aoyama' => 'ow/ye.aw/m.eh /  / failed phone:ow / failed spelling:ao',
  'apartheid' => 'eh/p.aw.r/t.igh.t / [a^ah]/[p^p].[a^oh].[r^r]/[t^t]. / failed phone:igh / failed spelling:he',
  'apostles' => 'eh/p.aw/s.eh.l.z / [a^ah]/[p^p].[o^aw]/[st^s]. / failed phone:eh / failed spelling:le',
  'applebaum' => 'ah/p.eh.l/b.ow.m / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'applebee' => 'ah/p.eh.l/b.ee / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleberry' => 'ah/p.eh.l/b.air/ee / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'applegate' => 'ah/p.eh.l/g.ay.t / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleman' => 'ah/p.eh.l/m.eh.n / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'apples' => 'ah/p.eh.l.z / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'applesauce' => 'ah/p.eh.l/s.aw.s / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleseed' => 'ah/p.eh.l/s.ee.d / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleshare' => 'ah/p.eh.l/sh.air / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleton' => 'ah/p.eh.l/t.eh.n / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'applewhite' => 'ah/p.eh.l/w.igh.t / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appleyard' => 'ah/p.eh/l.ye.aw.r.d / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'appling' => 'ah/p.eh/l.ih.ng / [a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'apropos' => 'ah/p.r.eh/p.oh / [a^ah]/[p^p].[r^r].[o^uh]/[p^p].[o^oh] / failed phone:oh / failed spelling:os',
  'aqaba' => 'eh/k.aw/b.eh / [a^ah]/ / failed phone:k / failed spelling:qa',
  'aqazadeh' => 'ah/k.eh/z.aw/d.eh / [a^ah]/ / failed phone:k / failed spelling:qa',
  'aqcess' => 'ah.k/s.eh.s / [a^ah]. / failed phone:x / failed spelling:qc',
  'aquirre' => 'ah/kw.er / [a^ah]/[qu^kw].[irr^er] / failed phone:er / failed spelling:ir',
  'arakelian' => 'ah/r.eh/k.eh/l.ye.eh.n / [a^ah]/[r^r].[a^ah]/[k^k].[e^eh]/[l^l]. / failed phone:ue / failed spelling:ia',
  'araskog' => 'er/ah/s.aw.g / [ar^er]/[a^ah]/[s^s]. / failed phone:aw / failed spelling:ko',
  'araujo' => 'aw/r.ow/ye.oh / [a^aw]/[r^r].[au^aw]/ / failed phone:ye / failed spelling:jo',
  'aravind' => 'aw.r/v.eh.n.d / [a^oh].[r^r]/ / failed phone:v / failed spelling:av',
  'araya' => 'er/igh/eh / [ar^er]/ / failed phone:igh / failed spelling:ay',
  'arbitrager' => 'aw.r/b.ih/t.r.aw/zh.er / [a^oh].[r^r]/[b^b].[i^ih]/[t^t].[r^r].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'arbitragers' => 'aw.r/b.ih/t.r.aw/zh.er.z / [a^oh].[r^r]/[b^b].[i^ih]/[t^t].[r^r].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'arbitrageur' => 'aw.r/b.ih/t.r.aw/zh.er / [a^oh].[r^r]/[b^b].[i^ih]/[t^t].[r^r].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'arbitrageurs' => 'aw.r/b.eh/t.r.aw/zh.er.z / [a^oh].[r^r]/[b^b].[i^ih]/[t^t].[r^r].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'arbuckles' => 'aw.r/b.eh/k.eh.l.z / [a^oh].[r^r]/[b^b].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'arceneaux' => 'aw.r/s.ih/n.oh / [a^oh].[r^r]/[c^s].[e^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'archaeological' => 'aw.r/k.ee/eh/l.aw/j.ih/k.eh.l / [a^oh].[r^r]/[ch^k]. / failed phone:ee / failed spelling:ae',
  'archaeologist' => 'aw.r/k.ee/aw/l.eh/j.ih.s.t / [a^oh].[r^r]/[ch^k]. / failed phone:ee / failed spelling:ae',
  'archaeologists' => 'aw.r/k.ee/aw/l.eh/j.ih.s.t.s / [a^oh].[r^r]/[ch^k]. / failed phone:ee / failed spelling:ae',
  'archaeology' => 'aw.r/k.ee/aw/l.eh/j.ee / [a^oh].[r^r]/[ch^k]. / failed phone:ee / failed spelling:ae',
  'archambault' => 'aw.r/sh.eh.m/b.oh / [a^oh].[r^r]/[ch^sh].[a^ah].[m^m]/[b^b].[a^oh] / failed phone:oh / failed spelling:au',
  'archambeau' => 'aw.r/sh.eh.m/b.oh / [a^oh].[r^r]/[ch^sh].[a^ah].[m^m]/[b^b]. / failed phone:oh / failed spelling:ea',
  'archambeault' => 'aw.r/sh.eh.m/b.oh / [a^oh].[r^r]/[ch^sh].[a^ah].[m^m]/[b^b]. / failed phone:oh / failed spelling:ea',
  'arcidiacono' => 'aw.r/ch.ee/d.ee/aw/k.oh/n.oh / [a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'arcieri' => 'aw.r/ch.ih/r.ee / [a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'arciniega' => 'aw.r/ch.ee/n.ee/g.eh / [a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'ardelle' => 'aw.r/d.eh.l / [a^oh].[r^r]/[d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'arencibia' => 'aw/r.eh.n/ch.ee/b.ee/eh / [a^aw]/[r^r].[e^eh].[n^n]/ / failed phone:t / failed spelling:ci',
  'arendt' => 'air/ih.n.t / [ar^air]/[e^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'argentieri' => 'aw.r/j.eh.n/t.ih/r.ee / [a^oh].[r^r]/[g^j].[e^eh].[n^n]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'argonne' => 'aw.r/g.aw.n / [a^oh].[r^r]/[g^g].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'arguijo' => 'aw.r/g.w.ee/ye.oh / [a^oh].[r^r]/[g^g].[u^w].[i^ee]/ / failed phone:ye / failed spelling:jo',
  'arkansas' => 'aw.r/k.eh.n/s.aw / [a^oh].[r^r]/[k^k].[a^ah].[n^n]/[s^s].[a^aw] / failed phone:aw / failed spelling:as',
  'armandt' => 'aw.r/m.ah.n.t / [a^oh].[r^r]/[m^m].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'armijo' => 'aw.r/m.ee/ye.oh / [a^oh].[r^r]/[m^m].[i^ee]/ / failed phone:ye / failed spelling:jo',
  'arnaud' => 'aw.r/n.oh / [a^oh].[r^r]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'arnault' => 'aw.r/n.oh / [a^oh].[r^r]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'arndt' => 'aw.r.n.t / [a^oh].[r^r].[n^n]. / failed phone:t / failed spelling:dt',
  'arnelle' => 'aw.r/n.eh.l / [a^oh].[r^r]/[n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'arrhythmias' => 'er/ih.dh/m.ee/eh.z / [ar^er]/ / failed phone:ih / failed spelling:rh',
  'arsenault' => 'aw.r/s.ih/n.oh / [a^oh].[r^r]/[s^s].[e^ih]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'arseneault' => 'aw.r/s.ih/n.oh / [a^oh].[r^r]/[s^s].[e^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'articles' => 'aw.r/t.eh/k.eh.l.z / [a^oh].[r^r]/[t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'artois' => 'aw.r/t.w.aw / [a^oh].[r^r]/[t^t]. / failed phone:w / failed spelling:oi',
  'ascencio' => 'aw.s/ch.eh.n/ch.ee/oh / [a^aw].[sc^s]/ / failed phone:t / failed spelling:en',
  'asch' => 'ah.sh / [a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'asche' => 'ah.sh / [a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'aschenbach' => 'ah/sh.ih.n/b.aw.k / [a^ah]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'aschenbrenner' => 'ah/sh.ih.n/b.r.ih/n.er / [a^ah]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'ascher' => 'ah/sh.er / [a^ah]/[sc^sh]. / failed phone:er / failed spelling:he',
  'ascii' => 'ah/s.k.ee / [a^ah]/[s^s].[c^k].[i^ee] / failed phone:ee / failed spelling:ii',
  'ashe' => 'ah.sh / [a^ah].[s^sh] / failed phone:sh / failed spelling:sh',
  'asheville' => 'ah.sh/v.ih.l / [a^ah].[s^sh]/ / failed phone:v / failed spelling:he',
  'aspirin' => 'ah/s.p.r.ih.n / [a^ah]/[s^s].[p^p]. / failed phone:r / failed spelling:ir',
  'assay' => 'ah/s.ee / [a^ah]/[ss^s]. / failed phone:ee / failed spelling:ay',
  'assembled' => 'eh/s.eh.m/b.eh.l.d / [a^ah]/[ss^s].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'assembles' => 'eh/s.eh.m/b.eh.l.z / [a^ah]/[ss^s].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'assembling' => 'eh/s.eh.m/b.eh/l.ih.ng / [a^ah]/[ss^s].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'asthma' => 'ah.z/m.eh / [a^ah].[s^z]/ / failed phone:m / failed spelling:th',
  'asthmatic' => 'ah.z/m.ah/t.ih.k / [a^ah].[s^z]/ / failed phone:m / failed spelling:th',
  'atheism' => 'eh/th.igh/s.eh.m / [a^ah]/[the^th].[i^igh]/[s^s]. / failed phone:eh / failed spelling:m',
  'athenaeum' => 'ah/th.eh/n.ee/eh.m / [a^ah]/[th^th].[e^eh]/[n^n]. / failed phone:ee / failed spelling:ae',
  'atsushi' => 'aw.s/s.ue/sh.ee / [a^aw]. / failed phone:s / failed spelling:ts',
  'attenborough' => 'ah/t.uh.n/b.er/oh / [a^ah]/[tte^t]. / failed phone:uh / failed spelling:nb',
  'attleboro' => 'ah/t.eh.l/b.er/oh / [a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'aube' => 'aw.b / [au^aw].[b^b] / failed phone:b / failed spelling:ub',
  'aue' => 'ow / [au^aw] / failed phone:ow / failed spelling:au',
  'auerback' => 'ow.r/b.ah.k / [au^aw]. / failed phone:r / failed spelling:er',
  'aufderheide' => 'ow.f/d.er/h.igh.d / [au^aw].[f^f]/[d^d].[er^er]/[h^h].[ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'aufiero' => 'oh/f.ih/r.oh / [au^oh]/[f^f].[i^ih]/ / failed phone:r / failed spelling:er',
  'aug' => 'aw/g.eh.s.t / [au^aw]/[g^g]. / failed phone:eh / failed spelling:',
  'augusta' => 'eh/g.uh/s.t.eh / [a^ah]/ / failed phone:g / failed spelling:ug',
  'aunt' => 'ah.n.t / [a^ah]. / failed phone:n / failed spelling:un',
  'aunts' => 'ah.n.t.s / [a^ah]. / failed phone:n / failed spelling:un',
  'aurora' => 'er/aw/r.eh /  / failed phone:er / failed spelling:au',
  'auroral' => 'er/aw/r.eh.l /  / failed phone:er / failed spelling:au',
  'auschwitz' => 'aw/sh.w.ih.t.s / [au^aw]/[sc^sh]. / failed phone:w / failed spelling:hw',
  'ausmus' => 'ow/s.m.ih.s / [au^aw]/[s^s].[m^m]. / failed phone:ih / failed spelling:us',
  'australia' => 'aw/s.t.r.ay/l.ye.eh / [au^aw]/[s^s].[t^t].[r^r].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'australian' => 'aw/s.t.r.ay/l.ye.eh.n / [au^aw]/[s^s].[t^t].[r^r].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'australians' => 'aw/s.t.r.ay/l.ye.eh.n.z / [au^aw]/[s^s].[t^t].[r^r].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'authentic' => 'eh/th.eh.n/t.ih.k / [a^ah]/ / failed phone:th / failed spelling:ut',
  'authoritarian' => 'eh/th.aw/r.eh/t.air/ee/eh.n / [a^ah]/ / failed phone:th / failed spelling:ut',
  'authoritarianism' => 'eh/th.aw/r.eh/t.air/ee/eh/n.ih/z.eh.m / [a^ah]/ / failed phone:th / failed spelling:ut',
  'authoritative' => 'eh/th.aw/r.eh/t.ay/t.ih.v / [a^ah]/ / failed phone:th / failed spelling:ut',
  'authorities' => 'eh/th.aw/r.eh/t.ee.z / [a^ah]/ / failed phone:th / failed spelling:ut',
  'authority' => 'eh/th.aw/r.eh/t.ee / [a^ah]/ / failed phone:th / failed spelling:ut',
  'aux' => 'oh / [a^oh] / failed phone:oh / failed spelling:au',
  'auxiliary' => 'aw.g/z.ih/l.ye.er/ee / [a^aw]. / failed phone:g / failed spelling:ux',
  'auzenne' => 'aw/z.ih.n / [au^aw]/[z^z].[e^ih].[n^n] / failed phone:n / failed spelling:nn',
  'avalanche' => 'ah/v.eh/l.ah.n.ch / [a^ah]/[v^v].[a^ah]/[l^l].[a^ah].[n^n].[ch^ch] / failed phone:t / failed spelling:ch',
  'ave' => 'ah/v.eh/n.ue / [a^ah]/[v^v].[e^eh]/ / failed phone:n / failed spelling:',
  'avedisian' => 'ah/v.ih/d.ih/zh.ih.n / [a^ah]/[v^v].[e^ih]/[d^d].[i^ih]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'aven' => 'aw/v.ay/eh.n / [a^aw]/[v^v].[e^ay]/ / failed phone:eh / failed spelling:n',
  'awalt' => 'aw/v.eh.l.t / [a^aw]/ / failed phone:v / failed spelling:wa',
  'awe' => 'aw / [a^aw] / failed phone:aw / failed spelling:aw',
  'awesome' => 'aw/s.eh.m / [a^aw]/ / failed phone:s / failed spelling:we',
  'awestruck' => 'aw/s.t.r.uh.k / [a^aw]/ / failed phone:s / failed spelling:we',
  'awfully' => 'aw/f.l.ee / [aw^aw]/[f^f]. / failed phone:l / failed spelling:ul',
  'awkward' => 'aw/kw.er.d / [a^aw]/ / failed phone:kw / failed spelling:wk',
  'awkwardly' => 'aw/kw.er.d/l.ee / [a^aw]/ / failed phone:kw / failed spelling:wk',
  'awkwardness' => 'aw/kw.er.d/n.eh.s / [a^aw]/ / failed phone:kw / failed spelling:wk',
  'awry' => 'er/igh /  / failed phone:er / failed spelling:aw',
  'axe' => 'ah.k.s / [a^ah].[x^x] / failed phone:s / failed spelling:e',
  'axles' => 'ah.k/s.eh.l.z / [a^ah].[x^x]/ / failed phone:eh / failed spelling:le',
  'ayacucho' => 'igh/eh/k.uh/ch.oh /  / failed phone:igh / failed spelling:ay',
  'ayatollah' => 'igh/eh/t.oh/l.eh /  / failed phone:igh / failed spelling:ay',
  'ayatollahs' => 'igh/eh/t.aw/l.aw.z /  / failed phone:igh / failed spelling:ay',
  'ayatullah' => 'igh/eh/t.oo/l.eh /  / failed phone:igh / failed spelling:ay',
  'aydt' => 'ay.t / [a^ay]. / failed phone:t / failed spelling:yd',
  'aye' => 'igh /  / failed phone:igh / failed spelling:ay',
  'ayer' => 'igh/er /  / failed phone:igh / failed spelling:ay',
  'ayers' => 'igh/er.z /  / failed phone:igh / failed spelling:ay',
  'ayes' => 'igh.z /  / failed phone:igh / failed spelling:ay',
  'ayodhya' => 'igh/aw/d.ye.eh /  / failed phone:igh / failed spelling:ay',
  'ayre' => 'air /  / failed phone:air / failed spelling:ay',
  'ayres' => 'air.z /  / failed phone:air / failed spelling:ay',
  'ayuso' => 'igh/ue/s.oh /  / failed phone:igh / failed spelling:ay',
  'ayyad' => 'igh/aw.d /  / failed phone:igh / failed spelling:ay',
  'azalea' => 'eh/z.ay/l.ye.eh / [a^ah]/[z^z].[a^ay]/[le^l]. / failed phone:ue / failed spelling:a',
  'azaleas' => 'eh/z.ay/l.ye.eh.z / [a^ah]/[z^z].[a^ay]/[le^l]. / failed phone:ue / failed spelling:as',
  'azcuenaga' => 'ah.z/kw.ay/n.aw/g.eh / [a^ah].[z^z]/ / failed phone:kw / failed spelling:cu',
  'azhar' => 'eh/z.aw.r / [a^ah]/[z^z]. / failed phone:oh / failed spelling:ha',
  'azzara' => 'aw.t/s.aw/r.eh / [a^aw]. / failed phone:t / failed spelling:zz',
  'azzarello' => 'aw.t/s.aw/r.eh/l.oh / [a^aw]. / failed phone:t / failed spelling:zz',
  'azzaro' => 'aw.t/s.aw/r.oh / [a^aw]. / failed phone:t / failed spelling:zz',
  'azzopardi' => 'aw.t/s.oh/p.aw.r/d.ee / [a^aw]. / failed phone:t / failed spelling:zz',
  'b' => 'b.ee / [b^b]. / failed phone:ee / failed spelling:',
  'baab' => 'b.aw.b / [b^b].[a^aw]. / failed phone:b / failed spelling:ab',
  'baack' => 'b.aw.k / [b^b].[a^aw]. / failed phone:k / failed spelling:ac',
  'baade' => 'b.aw.d / [b^b].[a^aw]. / failed phone:d / failed spelling:ad',
  'baar' => 'b.aw.r / [b^b].[a^oh]. / failed phone:r / failed spelling:ar',
  'baars' => 'b.aw.r.z / [b^b].[a^oh]. / failed phone:r / failed spelling:ar',
  'baas' => 'b.aw.z / [b^b].[a^aw]. / failed phone:z / failed spelling:as',
  'baasch' => 'b.aw.sh / [b^b].[a^aw]. / failed phone:sh / failed spelling:as',
  'baatz' => 'b.aw.t.s / [b^b].[a^aw]. / failed phone:t / failed spelling:at',
  'babbled' => 'b.ah/b.eh.l.d / [b^b].[a^ah]/[bb^b]. / failed phone:eh / failed spelling:le',
  'babbling' => 'b.ah/b.eh/l.ih.ng / [b^b].[a^ah]/[bb^b]. / failed phone:eh / failed spelling:li',
  'babineaux' => 'b.ah/b.ih/n.oh / [b^b].[a^ah]/[b^b].[i^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'babler' => 'b.ay/b.eh/l.er / [b^b].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'baccarat' => 'b.aw/k.er/aw / [b^b].[a^aw]/[cc^k].[ar^er]/[a^aw] / failed phone:aw / failed spelling:at',
  'bacchanalia' => 'b.ah/k.eh/n.ay/l.ye.eh / [b^b].[a^ah]/[cc^k]. / failed phone:eh / failed spelling:ha',
  'bacchi' => 'b.ah/k.ee / [b^b].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'bacchus' => 'b.ah/k.ih.s / [b^b].[a^ah]/[cc^k]. / failed phone:ih / failed spelling:hu',
  'bacci' => 'b.aw/ch.ee / [b^b].[a^aw]/ / failed phone:t / failed spelling:cc',
  'bache' => 'b.ah.ch / [b^b].[a^ah].[ch^ch] / failed phone:t / failed spelling:ch',
  'bacigalupi' => 'b.aw/ch.ee/g.aw/l.ue/p.ee / [b^b].[a^aw]/ / failed phone:t / failed spelling:ci',
  'bacigalupo' => 'b.aw/ch.ee/g.aw/l.ue/p.oh / [b^b].[a^aw]/ / failed phone:t / failed spelling:ci',
  'bacik' => 'b.aw/ch.ih.k / [b^b].[a^aw]/ / failed phone:t / failed spelling:ci',
  'bacino' => 'b.aw/ch.ee/n.oh / [b^b].[a^aw]/ / failed phone:t / failed spelling:ci',
  'backe' => 'b.ah.k / [b^b].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'backes' => 'b.ah.k.s / [b^b].[a^ah].[c^k]. / failed phone:s / failed spelling:ke',
  'backward' => 'b.ah/kw.er.d / [b^b].[a^ah]/[ck^kw]. / failed phone:er / failed spelling:wa',
  'backwardation' => 'b.ah/kw.er/d.ay/sh.eh.n / [b^b].[a^ah]/[ck^kw]. / failed phone:er / failed spelling:wa',
  'backwardness' => 'b.ah/kw.er.d/n.eh.s / [b^b].[a^ah]/[ck^kw]. / failed phone:er / failed spelling:wa',
  'backwards' => 'b.ah/kw.er.d.z / [b^b].[a^ah]/[ck^kw]. / failed phone:er / failed spelling:wa',
  'backwater' => 'b.ah/kw.aw/t.er / [b^b].[a^ah]/[ck^kw]. / failed phone:aw / failed spelling:wa',
  'backwaters' => 'b.ah/kw.aw/t.er.z / [b^b].[a^ah]/[ck^kw]. / failed phone:aw / failed spelling:wa',
  'backwoods' => 'b.ah/kw.oo.d.z / [b^b].[a^ah]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'backwoodsman' => 'b.ah/kw.oo.d.z/m.eh.n / [b^b].[a^ah]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'bacus' => 'b.ah/k.ih.s / [b^b].[a^ah]/[c^k]. / failed phone:ih / failed spelling:us',
  'badeau' => 'b.eh/d.oh / [b^b].[a^ah]/[d^d]. / failed phone:oh / failed spelling:ea',
  'badeaux' => 'b.eh/d.oh / [b^b].[a^ah]/[d^d]. / failed phone:oh / failed spelling:ea',
  'badertscher' => 'b.ah/d.er/ch.er / [b^b].[a^ah]/[d^d].[er^er]/[t^t].[sc^sh]. / failed phone:er / failed spelling:he',
  'badges' => 'b.ah/j.ih.z / [b^b].[a^ah]/[d^j]. / failed phone:ih / failed spelling:ge',
  'badgett' => 'b.ah/j.ih.t / [b^b].[a^ah]/[d^j]. / failed phone:ih / failed spelling:ge',
  'badgley' => 'b.ah.j/l.ee / [b^b].[a^ah].[d^j]/ / failed phone:l / failed spelling:gl',
  'bae' => 'b.igh / [b^b]. / failed phone:igh / failed spelling:ae',
  'baechle' => 'b.eh/k.eh.l / [b^b].[a^ah]/ / failed phone:k / failed spelling:ec',
  'baecker' => 'b.eh/k.er / [b^b].[a^ah]/ / failed phone:k / failed spelling:ec',
  'baehr' => 'b.ee.r / [b^b]. / failed phone:ee / failed spelling:ae',
  'baek' => 'b.ee.k / [b^b]. / failed phone:ee / failed spelling:ae',
  'baeten' => 'b.eh/t.eh.n / [b^b].[a^ah]/ / failed phone:t / failed spelling:et',
  'baetjer' => 'b.eh.t/j.er / [b^b].[a^ah]. / failed phone:t / failed spelling:et',
  'baetz' => 'b.ee.t.s / [b^b]. / failed phone:ee / failed spelling:ae',
  'baez' => 'b.igh/eh.z / [b^b]. / failed phone:igh / failed spelling:ae',
  'baeza' => 'b.ee/z.eh / [b^b]. / failed phone:ee / failed spelling:ae',
  'baffled' => 'b.ah/f.eh.l.d / [b^b].[a^ah]/[ff^f]. / failed phone:eh / failed spelling:le',
  'baffles' => 'b.ah/f.eh.l.z / [b^b].[a^ah]/[ff^f]. / failed phone:eh / failed spelling:le',
  'baffling' => 'b.ah/f.eh/l.ih.ng / [b^b].[a^ah]/[ff^f]. / failed phone:eh / failed spelling:li',
  'bagge' => 'b.ah.g / [b^b].[a^ah].[gg^g] / failed phone:g / failed spelling:gg',
  'baggio' => 'b.aw/j.ee/oh / [b^b].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'bah' => 'b.aw / [b^b].[a^aw] / failed phone:aw / failed spelling:ah',
  'baham' => 'b.aw/eh.m / [b^b].[a^aw]/ / failed phone:eh / failed spelling:ha',
  'bahl' => 'b.aw.l / [b^b].[a^aw]. / failed phone:l / failed spelling:hl',
  'bahler' => 'b.aw/l.er / [b^b].[a^aw]/ / failed phone:l / failed spelling:hl',
  'bahls' => 'b.aw.l.z / [b^b].[a^aw]. / failed phone:l / failed spelling:hl',
  'bahm' => 'b.ah.m / [b^b].[a^ah]. / failed phone:m / failed spelling:hm',
  'bahman' => 'b.aw/m.eh.n / [b^b].[a^aw]/ / failed phone:m / failed spelling:hm',
  'bahr' => 'b.air / [b^b]. / failed phone:air / failed spelling:ah',
  'bahrain' => 'b.aw/r.ay.n / [b^b].[a^aw]/ / failed phone:r / failed spelling:hr',
  'bahraini' => 'b.er/ay/n.ee / [b^b]. / failed phone:er / failed spelling:ah',
  'bahrainian' => 'b.er/ay/n.ee/eh.n / [b^b]. / failed phone:er / failed spelling:ah',
  'bahrainis' => 'b.er/ay/n.ee.z / [b^b]. / failed phone:er / failed spelling:ah',
  'bahre' => 'b.aw.r / [b^b].[a^oh]. / failed phone:r / failed spelling:hr',
  'bahrenburg' => 'b.aw/r.eh.n/b.er.g / [b^b].[a^aw]/ / failed phone:r / failed spelling:hr',
  'baht' => 'b.aw.t / [b^b].[a^aw]. / failed phone:t / failed spelling:ht',
  'bailin' => 'b.eh/l.ah.n / [b^b].[a^ah]/[il^l]. / failed phone:ah / failed spelling:in',
  'baillargeon' => 'b.eh/l.aw.r/j.ih.n / [b^b].[ai^eh]/[ll^l].[a^oh].[r^r]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'baisch' => 'b.igh.sh / [b^b].[ai^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'baja' => 'b.aw/h.aw / [b^b].[a^aw]/ / failed phone:h / failed spelling:ja',
  'bajema' => 'b.aw/ye.ay/m.eh / [b^b].[a^aw]/ / failed phone:ye / failed spelling:je',
  'bakeware' => 'b.ay/kw.air / [b^b].[a^ay]/ / failed phone:kw / failed spelling:ke',
  'bakewell' => 'b.ay/kw.eh.l / [b^b].[a^ay]/ / failed phone:kw / failed spelling:ke',
  'bakke' => 'b.ah.k / [b^b].[a^ah].[k^k] / failed phone:k / failed spelling:kk',
  'bakken' => 'b.ah/k.eh.n / [b^b].[a^ah]/[k^k]. / failed phone:eh / failed spelling:ke',
  'bakker' => 'b.ah/k.er / [b^b].[a^ah]/[k^k]. / failed phone:er / failed spelling:ke',
  'bakkers' => 'b.ah/k.er.z / [b^b].[a^ah]/[k^k]. / failed phone:er / failed spelling:ke',
  'bakowski' => 'b.eh/k.aw.f/s.k.ee / [b^b].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'balazs' => 'b.aw/l.eh.sh / [b^b].[a^aw]/[l^l].[a^ah]. / failed phone:sh / failed spelling:zs',
  'balcerowicz' => 'b.ah.l/s.air/eh/w.ih.t.s / [b^b].[a^ah].[l^l]/[c^s].[er^air]/[o^uh]/[w^w].[i^ih]. / failed phone:t / failed spelling:cz',
  'balcerzak' => 'b.eh.l/ch.er/z.eh.k / [b^b].[a^ah].[l^l]/ / failed phone:t / failed spelling:ce',
  'balducci' => 'b.aw.l/d.ue/ch.ee / [b^b].[a^aw].[l^l]/[d^d].[u^ue]/ / failed phone:t / failed spelling:cc',
  'baldus' => 'b.aw.l/d.ih.s / [b^b].[a^aw].[l^l]/[d^d]. / failed phone:ih / failed spelling:us',
  'balestrieri' => 'b.aw/l.eh/s.t.r.ih/r.ee / [b^b].[a^aw]/[l^l].[e^eh]/[s^s].[t^t].[r^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'balfe' => 'b.ay.l.f / [b^b].[a^ay].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'balkcom' => 'b.ah.l/k.eh.m / [b^b].[a^ah].[l^l]/[k^k]. / failed phone:eh / failed spelling:co',
  'balke' => 'b.ay.l.k / [b^b].[a^ay].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'ballade' => 'b.eh/l.aw.d / [b^b].[a^ah]/[ll^l].[a^aw].[d^d] / failed phone:d / failed spelling:de',
  'ballantrae' => 'b.ah/l.eh.n/t.r.ay / [b^b].[a^ah]/[ll^l].[a^ah].[n^n]/[t^t].[r^r].[a^ay] / failed phone:ay / failed spelling:ae',
  'balle' => 'b.ay.l / [b^b].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'ballet' => 'b.ah/l.ay / [b^b].[a^ah]/[ll^l].[e^ay] / failed phone:ay / failed spelling:et',
  'ballets' => 'b.ah/l.ay.z / [b^b].[a^ah]/[ll^l].[e^ay]. / failed phone:z / failed spelling:ts',
  'ballowe' => 'b.ah/l.ow / [b^b].[a^ah]/[ll^l].[ow^ow] / failed phone:ow / failed spelling:ow',
  'balogh' => 'b.ah/l.oh / [b^b].[a^ah]/[l^l].[o^oh] / failed phone:oh / failed spelling:og',
  'baltierra' => 'b.aw.l/t.ih/r.eh / [b^b].[a^aw].[l^l]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'balyeat' => 'b.ah/l.ee/ah.t / [b^b].[a^ah]/[l^l].[y^ee]/ / failed phone:ah / failed spelling:ea',
  'banacci' => 'b.eh/n.aw/ch.ee / [b^b].[a^ah]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'banaszak' => 'b.eh/n.aw/sh.eh.k / [b^b].[a^ah]/[n^n].[a^aw]/[s^sh]. / failed phone:eh / failed spelling:za',
  'bandolier' => 'b.ah.n/d.eh/l.ih.r / [b^b].[a^ah].[n^n]/[d^d].[o^uh]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'bandoliers' => 'b.ah.n/d.eh/l.ih.r.z / [b^b].[a^ah].[n^n]/[d^d].[o^uh]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'bandt' => 'b.ah.n.t / [b^b].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'banducci' => 'b.aw.n/d.ue/ch.ee / [b^b].[a^aw].[n^n]/[d^d].[u^ue]/ / failed phone:t / failed spelling:cc',
  'banh' => 'b.ah.n / [b^b].[a^ah].[n^n] / failed phone:n / failed spelling:nh',
  'banja' => 'b.aw/n.ye.eh / [b^b].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ja',
  'bankcard' => 'b.ah.ng/k.aw.r.d / [b^b].[a^ah].[n^ng]/[k^k]. / failed phone:oh / failed spelling:ca',
  'bankcorp' => 'b.ah.ng/k.aw.r.p / [b^b].[a^ah].[n^ng]/[k^k]. / failed phone:oh / failed spelling:co',
  'banke' => 'b.ah.ng.k / [b^b].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'bankes' => 'b.ah.ng.k.s / [b^b].[a^ah].[n^ng].[k^k]. / failed phone:s / failed spelling:es',
  'bankowski' => 'b.eh.ng/k.aw.f/s.k.ee / [b^b].[a^ah].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'bankrupcty' => 'b.ah.ng/k.r.eh.p.t/s.ee / [b^b].[a^ah].[n^ng]/[k^k].[r^r].[u^uh].[p^p]. / failed phone:t / failed spelling:ct',
  'bankruptcy' => 'b.ah.ng/k.r.eh.p/s.ee / [b^b].[a^ah].[n^ng]/[k^k].[r^r].[u^uh].[p^p]/ / failed phone:s / failed spelling:tc',
  'bankworcester' => 'b.ah.ng/kw.er/ch.eh/s.t.er / [b^b].[a^ah].[n^ng]/ / failed phone:kw / failed spelling:kw',
  'banpais' => 'b.ah.n/p.ay / [b^b].[a^ah].[n^n]/[p^p].[a^ay] / failed phone:ay / failed spelling:ai',
  'banville' => 'b.aw.n/v.ih.l / [b^b].[a^aw].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'banyu' => 'b.aw/n.ue / [b^b].[a^aw]/[n^n]. / failed phone:ue / failed spelling:yu',
  'bao' => 'b.ow / [b^b]. / failed phone:ow / failed spelling:ao',
  'barajas' => 'b.aw/r.aw/ye.aw.z / [b^b].[a^aw]/[r^r].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'baranowski' => 'b.er/eh/n.aw.f/s.k.ee / [b^b].[ar^er]/[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'barasch' => 'b.ah/r.eh.sh / [b^b].[a^ah]/[r^r].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'barbe' => 'b.aw.r.b / [b^b].[a^oh].[r^r].[b^b] / failed phone:b / failed spelling:be',
  'barbeau' => 'b.aw.r/b.oh / [b^b].[a^oh].[r^r]/[b^b]. / failed phone:oh / failed spelling:ea',
  'barbeque' => 'b.aw.r/b.ih/k.ye.ue / [b^b].[a^oh].[r^r]/[b^b].[e^ih]/[que^k]. / failed phone:ue / failed spelling:',
  'barbequed' => 'b.aw.r/b.ih/k.ye.ue.d / [b^b].[a^oh].[r^r]/[b^b].[e^ih]/[que^k]. / failed phone:ue / failed spelling:d',
  'barbequeing' => 'b.aw.r/b.ih/k.ye.ue/ih.ng / [b^b].[a^oh].[r^r]/[b^b].[e^ih]/[que^k]. / failed phone:ue / failed spelling:in',
  'barbeques' => 'b.aw.r/b.ih/k.ye.ue.z / [b^b].[a^oh].[r^r]/[b^b].[e^ih]/[que^k]. / failed phone:ue / failed spelling:s',
  'barbieri' => 'b.aw.r/b.ih/r.ee / [b^b].[a^oh].[r^r]/[b^b].[i^ih]/ / failed phone:r / failed spelling:er',
  'barcelo' => 'b.aw.r/ch.eh/l.oh / [b^b].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'barcia' => 'b.aw.r/ch.eh / [b^b].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'barclays' => 'b.aw.r/k.l.ee.z / [b^b].[a^oh].[r^r]/[c^k].[l^l]. / failed phone:ee / failed spelling:ay',
  'barczak' => 'b.aw.r/ch.ah.k / [b^b].[a^oh].[r^r]/ / failed phone:t / failed spelling:cz',
  'barfknecht' => 'b.aw.r.f/k.eh/n.eh.k.t / [b^b].[a^oh].[r^r].[f^f]/[k^k]. / failed phone:eh / failed spelling:ne',
  'bargainer' => 'b.aw.r/g.ih/n.er / [b^b].[a^oh].[r^r]/[g^g].[a^ih]/ / failed phone:n / failed spelling:in',
  'bargainers' => 'b.aw.r/g.ih/n.er.z / [b^b].[a^oh].[r^r]/[g^g].[a^ih]/ / failed phone:n / failed spelling:in',
  'bargaining' => 'b.aw.r/g.ih/n.ih.ng / [b^b].[a^oh].[r^r]/[g^g].[a^ih]/ / failed phone:n / failed spelling:in',
  'baribeau' => 'b.ah/r.ih/b.oh / [b^b].[a^ah]/[r^r].[i^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'barke' => 'b.aw.r.k / [b^b].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'barkes' => 'b.aw.r.k.s / [b^b].[a^oh].[r^r].[k^k]. / failed phone:s / failed spelling:es',
  'barlettesville' => 'b.aw.r/l.eh.t/s.v.ih.l / [b^b].[a^oh].[r^r]/[l^l].[e^eh].[tte^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'barnacles' => 'b.aw.r/n.eh/k.eh.l.z / [b^b].[a^oh].[r^r]/[n^n].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'barnard' => 'b.aw.r/n.er.r.d / [b^b].[a^oh].[r^r]/[n^n].[ar^er]. / failed phone:r / failed spelling:d',
  'barndt' => 'b.aw.r.n.t / [b^b].[a^oh].[r^r].[n^n]. / failed phone:t / failed spelling:dt',
  'barnhardt' => 'b.aw.r.n/h.aw.r.t / [b^b].[a^oh].[r^r].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'barrages' => 'b.er/aw/zh.ih.z / [b^b].[arr^er]/[a^aw]/ / failed phone:zh / failed spelling:ge',
  'barreiro' => 'b.aw/r.air/oh / [b^b].[a^aw]/[r^r]. / failed phone:air / failed spelling:re',
  'barriere' => 'b.aw/r.ih/r.ee / [b^b].[a^aw]/[rr^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'barrilleaux' => 'b.ah/r.ih/l.oh / [b^b].[a^ah]/[rr^r].[i^ih]/[ll^l]. / failed phone:oh / failed spelling:ea',
  'barsch' => 'b.aw.r.sh / [b^b].[a^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'barschel' => 'b.aw.r/sh.eh.l / [b^b].[a^oh].[r^r]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'barszcz' => 'b.aw.r.sh.ch / [b^b].[a^oh].[r^r].[s^sh]. / failed phone:t / failed spelling:zc',
  'barthelme' => 'b.aw.r/th.eh.l.m / [b^b].[a^oh].[r^r]/[th^th].[e^eh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'bartkowski' => 'b.er.t/k.aw.f/s.k.ee / [b^b].[ar^er].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'bartkus' => 'b.aw.r.t/k.ih.s / [b^b].[a^oh].[r^r].[t^t]/[k^k]. / failed phone:ih / failed spelling:us',
  'bartl' => 'b.aw.r/t.eh.l / [b^b].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:l',
  'bartles' => 'b.aw.r/t.eh.l.z / [b^b].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'bartlesville' => 'b.aw.r/t.eh.l.z/v.ih.l / [b^b].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'bartnicki' => 'b.er.t/n.ih.t/s.k.ee / [b^b].[ar^er].[t^t]/[n^n].[i^ih]. / failed phone:t / failed spelling:ck',
  'bartolucci' => 'b.aw.r/t.oh/l.ue/ch.ee / [b^b].[a^oh].[r^r]/[t^t].[o^oh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'bartosch' => 'b.aw.r/t.aw.sh / [b^b].[a^oh].[r^r]/[t^t].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'bartosiewicz' => 'b.er/t.aw/s.eh/v.ih.ch / [b^b].[ar^er]/[t^t].[o^aw]/[s^s].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'bartoszek' => 'b.er/t.aw/sh.eh.k / [b^b].[ar^er]/[t^t].[o^aw]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'bartsch' => 'b.aw.r.ch / [b^b].[ar^ar].[t^t]. / failed phone:t / failed spelling:ts',
  'basch' => 'b.ah.sh / [b^b].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'basich' => 'b.aw/s.ih.h / [b^b].[a^aw]/[s^s].[i^ih]. / failed phone:h / failed spelling:ch',
  'baskerville' => 'b.ah/s.k.er/v.ih.l / [b^b].[a^ah]/[s^s].[k^k].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'basler' => 'b.ay/z.eh/l.er / [b^b].[a^ay]/[s^z]. / failed phone:eh / failed spelling:le',
  'basse' => 'b.ah.s / [b^b].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'bassham' => 'b.ah/sh.eh.m / [b^b].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:sh',
  'bastian' => 'b.ah.s/ch.ih.n / [b^b].[a^ah].[s^s]/[t^ch].[i^ih]. / failed phone:n / failed spelling:an',
  'bastille' => 'b.ah/s.t.ih.l / [b^b].[a^ah]/[s^s].[t^t].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'bastogne' => 'b.ah/s.t.oh.n / [b^b].[a^ah]/[s^s].[t^t].[o^oh].[gn^n] / failed phone:n / failed spelling:gn',
  'bataan' => 'b.eh/t.aw.n / [b^b].[a^ah]/[t^t].[a^aw]. / failed phone:n / failed spelling:an',
  'batesville' => 'b.ay.t/s.v.ih.l / [b^b].[a^ay].[te^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'bathke' => 'b.ah.th.k / [b^b].[a^ah].[th^th].[k^k] / failed phone:k / failed spelling:ke',
  'batignolles' => 'b.ah/t.ih/n.ye.oh/l.eh.s / [b^b].[a^ah]/[t^t].[i^ih]/[gn^n]. / failed phone:ye / failed spelling:ol',
  'battelle' => 'b.eh/t.eh.l / [b^b].[a^ah]/[tt^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'battlefield' => 'b.ah/t.eh.l/f.ee.l.d / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battlefields' => 'b.ah/t.eh.l/f.ee.l.d.z / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battlefront' => 'b.ah/t.eh.l/f.r.uh.n.t / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battleground' => 'b.ah/t.eh.l/g.r.ow.n.d / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battlegrounds' => 'b.ah/t.eh.l/g.r.ow.n.d.z / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battlement' => 'b.ah/t.eh.l/m.eh.n.t / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battlements' => 'b.ah/t.eh.l/m.eh.n.t.s / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battles' => 'b.ah/t.eh.l.z / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battleship' => 'b.ah/t.eh.l/sh.ih.p / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battleships' => 'b.ah/t.eh.l/sh.ih.p.s / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'battling' => 'b.ah/t.eh/l.ih.ng / [b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'baubles' => 'b.aw/b.eh.l.z / [b^b].[au^aw]/[b^b]. / failed phone:eh / failed spelling:le',
  'baudoin' => 'b.oh/d.w.aw/ay.n / [b^b].[au^oh]/[d^d]. / failed phone:w / failed spelling:oi',
  'baumgardt' => 'b.ow.m/g.aw.r.t / [b^b].[au^aw].[m^m]/[g^g].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'baumhardt' => 'b.ow.m/h.aw.r.t / [b^b].[au^aw].[m^m]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'baumler' => 'b.ow/m.eh/l.er / [b^b].[au^aw]/[m^m]. / failed phone:eh / failed spelling:le',
  'bausch' => 'b.ow.sh / [b^b].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'baye' => 'b.ay / [b^b].[a^ay] / failed phone:ay / failed spelling:ay',
  'bayerische' => 'b.ay/er/ee.sh / [b^b].[ay^ay]/[er^er]/[i^ee].[sc^sh] / failed phone:sh / failed spelling:sc',
  'bayh' => 'b.ay / [b^b].[a^ay] / failed phone:ay / failed spelling:ay',
  'bayonne' => 'b.ay/ye.oh.n / [b^b].[a^ay]/[y^ye].[o^oh].[n^n] / failed phone:n / failed spelling:nn',
  'bayou' => 'b.igh/ue / [b^b]. / failed phone:igh / failed spelling:ay',
  'bayous' => 'b.igh/ue.z / [b^b]. / failed phone:igh / failed spelling:ay',
  'bayreuth' => 'b.ay/r.oy.th / [b^b].[ay^ay]/[r^r]. / failed phone:oy / failed spelling:eu',
  'bazaar' => 'b.eh/z.aw.r / [b^b].[a^ah]/[z^z].[a^oh]. / failed phone:r / failed spelling:ar',
  'bazaars' => 'b.eh/z.aw.r.z / [b^b].[a^ah]/[z^z].[a^oh]. / failed phone:r / failed spelling:ar',
  'bazzano' => 'b.aw.t/s.aw/n.oh / [b^b].[a^aw]. / failed phone:t / failed spelling:zz',
  'bbc' => 'b.ee/b.ee/s.ee / [bb^b]. / failed phone:ee / failed spelling:c',
  'bbq' => 'b.ee/b.ee/k.ye.ue / [bb^b]. / failed phone:ee / failed spelling:q',
  'beachler' => 'b.ee/k.eh/l.er / [b^b].[ea^ee]/[ch^k]. / failed phone:eh / failed spelling:le',
  'beadles' => 'b.ee/d.eh.l.z / [b^b].[ea^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'beagles' => 'b.ee/g.eh.l.z / [b^b].[ea^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'beahm' => 'b.ee.m / [b^b].[e^ee]. / failed phone:m / failed spelling:ah',
  'beaird' => 'b.ih.r.d / [b^b].[e^ih]. / failed phone:r / failed spelling:ai',
  'beatles' => 'b.ee/t.eh.l.z / [b^b].[ea^ee]/[t^t]. / failed phone:eh / failed spelling:le',
  'beau' => 'b.oh / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaubien' => 'b.oh/b.ee.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaucage' => 'b.oh/k.ay.j / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauce' => 'b.oh/s.ee / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauchaine' => 'b.oh/sh.ay.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauchamp' => 'b.oh/sh.aw.m.p / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauchemin' => 'b.oh/sh.ih/m.ah.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauchene' => 'b.oh/sh.ee.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauchesne' => 'b.oh/sh.eh.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudet' => 'b.oh/d.eh.t / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudette' => 'b.oh/d.eh.t / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudin' => 'b.oh/d.ah.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudoin' => 'b.oh/d.oy.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudreau' => 'b.oh/d.r.oh / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaudry' => 'b.oh/d.r.ee / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauford' => 'b.oh/f.aw.r.d / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaufort' => 'b.oh/f.er.t / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaufrere' => 'b.oh/f.r.air / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaujolais' => 'b.oh/j.oh/l.ay / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaulac' => 'b.oh/l.ah.k / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaumier' => 'b.ye.ue/m.ee/er / [b^b]. / failed phone:ue / failed spelling:ea',
  'beaumont' => 'b.oh/m.aw.n.t / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaupre' => 'b.oh/p.er / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauregard' => 'b.oh/r.ih/g.aw.r.d / [b^b]. / failed phone:oh / failed spelling:ea',
  'beausoleil' => 'b.oh/s.eh/l.ay / [b^b]. / failed phone:oh / failed spelling:ea',
  'beautician' => 'b.oh/t.ih/sh.eh.n / [b^b]. / failed phone:oh / failed spelling:ea',
  'beauties' => 'b.ye.ue/t.ee.z / [b^b]. / failed phone:ue / failed spelling:ea',
  'beautiful' => 'b.ye.ue/t.eh/f.eh.l / [b^b]. / failed phone:ue / failed spelling:ea',
  'beautifully' => 'b.ye.ue/t.eh/f.l.ee / [b^b]. / failed phone:ue / failed spelling:ea',
  'beautify' => 'b.ye.ue/t.ih/f.igh / [b^b]. / failed phone:ue / failed spelling:ea',
  'beauty' => 'b.ye.ue/t.ee / [b^b]. / failed phone:ue / failed spelling:ea',
  'beauvais' => 'b.oh/v.ay / [b^b]. / failed phone:oh / failed spelling:ea',
  'beaux' => 'b.oh / [b^b]. / failed phone:oh / failed spelling:ea',
  'bebeau' => 'b.ih/b.oh / [b^b].[e^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'becerra' => 'b.eh/ch.air/eh / [b^b].[e^eh]/ / failed phone:t / failed spelling:ce',
  'beckius' => 'b.eh/k.ee/ih.s / [b^b].[e^eh]/[ck^k].[i^ee]/ / failed phone:ih / failed spelling:us',
  'beckles' => 'b.eh/k.eh.l.z / [b^b].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'beckwith' => 'b.eh/kw.ih.th / [b^b].[e^eh]/[ck^kw]. / failed phone:ih / failed spelling:wi',
  'beckwitt' => 'b.eh/kw.ih.t / [b^b].[e^eh]/[ck^kw]. / failed phone:ih / failed spelling:wi',
  'beckworth' => 'b.eh/kw.er.th / [b^b].[e^eh]/[ck^kw]. / failed phone:er / failed spelling:wo',
  'bedenbaugh' => 'b.eh/d.ih.n/b.ow / [b^b].[e^eh]/[d^d].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'bedient' => 'b.ee/d.ye.ih.n.t / [b^b].[e^ee]/[d^d]. / failed phone:ye / failed spelling:ie',
  'bednarczyk' => 'b.eh.d/n.er/ch.ih.k / [b^b].[e^eh].[d^d]/[n^n].[ar^er]/ / failed phone:t / failed spelling:cz',
  'bedraggled' => 'b.ih/d.r.ah/g.eh.l.d / [b^b].[e^ih]/[d^d].[r^r].[a^ah]/[gg^g]. / failed phone:eh / failed spelling:le',
  'bedrosian' => 'b.eh/d.r.aw/zh.ih.n / [b^b].[e^eh]/[d^d].[r^r].[o^aw]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'beede' => 'b.ee.d / [b^b].[e^ee].[ed^d] / failed phone:d / failed spelling:ed',
  'beehler' => 'b.ee/l.er / [b^b].[e^ee]/ / failed phone:l / failed spelling:eh',
  'beethoven' => 'b.ay/t.oh/v.eh.n / [b^b].[e^ay]/ / failed phone:t / failed spelling:et',
  'beetlejuice' => 'b.ee/t.eh.l/j.ue.s / [b^b].[ee^ee]/[t^t]. / failed phone:eh / failed spelling:le',
  'beetles' => 'b.ee/t.eh.l.z / [b^b].[ee^ee]/[t^t]. / failed phone:eh / failed spelling:le',
  'befuddled' => 'b.ih/f.uh/d.eh.l.d / [b^b].[e^ih]/[f^f].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'befuddles' => 'b.ih/f.uh/d.eh.l.z / [b^b].[e^ih]/[f^f].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'begnaud' => 'b.ih.g/n.oh / [b^b].[e^ih].[g^g]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'begonia' => 'b.ih/g.oh/n.ye.eh / [b^b].[e^ih]/[g^g].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'begonias' => 'b.ih/g.oh/n.ye.eh.z / [b^b].[e^ih]/[g^g].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'behavior' => 'b.ih/h.ay/v.ye.er / [b^b].[e^ih]/[h^h].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'behavioral' => 'b.ih/h.ay/v.ye.er/eh.l / [b^b].[e^ih]/[h^h].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'behaviorists' => 'b.ih/h.ay/v.ye.er/ih.s.t.s / [b^b].[e^ih]/[h^h].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'behaviors' => 'b.ih/h.ay/v.ye.er.z / [b^b].[e^ih]/[h^h].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'behl' => 'b.eh.l / [b^b].[e^eh]. / failed phone:l / failed spelling:hl',
  'behler' => 'b.eh/l.er / [b^b].[e^eh]/ / failed phone:l / failed spelling:hl',
  'behling' => 'b.eh/l.ih.ng / [b^b].[e^eh]/ / failed phone:l / failed spelling:hl',
  'behlke' => 'b.eh.l.k / [b^b].[e^eh]. / failed phone:l / failed spelling:hl',
  'behm' => 'b.eh.m / [b^b].[e^eh]. / failed phone:m / failed spelling:hm',
  'behmer' => 'b.eh/m.er / [b^b].[e^eh]/ / failed phone:m / failed spelling:hm',
  'behne' => 'b.eh.n / [b^b].[e^eh].[hn^n] / failed phone:n / failed spelling:hn',
  'behnke' => 'b.eh.ng.k / [b^b].[e^eh]. / failed phone:ng / failed spelling:hn',
  'behnken' => 'b.eh.ng/k.eh.n / [b^b].[e^eh]. / failed phone:ng / failed spelling:hn',
  'behrendt' => 'b.air/ih.n.t / [b^b].[ehr^air]/[e^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'behringwerke' => 'b.air/ih.ng/w.er.k / [b^b].[ehr^air]/[i^ih].[ng^ng]/[w^w].[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'beidleman' => 'b.igh/d.eh.l/m.eh.n / [b^b].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'beidler' => 'b.igh/d.eh/l.er / [b^b].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'beiersdorf' => 'b.igh.r.z/d.aw.r.f / [b^b].[ei^igh]. / failed phone:r / failed spelling:er',
  'beige' => 'b.ay.zh / [b^b].[e^ay]. / failed phone:zh / failed spelling:ig',
  'beiges' => 'b.ay/zh.eh.z / [b^b].[e^ay]/ / failed phone:zh / failed spelling:ig',
  'beijer' => 'b.igh.r / [b^b].[ei^igh]. / failed phone:r / failed spelling:je',
  'beijing' => 'b.ay/zh.ih.ng / [b^b].[e^ay]/ / failed phone:zh / failed spelling:ij',
  'beilke' => 'b.ee.l.k / [b^b].[e^ee].[il^l].[k^k] / failed phone:k / failed spelling:ke',
  'beirne' => 'b.ih.r.n / [b^b].[e^ih]. / failed phone:r / failed spelling:ir',
  'beitler' => 'b.igh/t.eh/l.er / [b^b].[ei^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'bejar' => 'b.ay/ye.aw.r / [b^b].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'bejarano' => 'b.ay/ye.aw/r.aw/n.oh / [b^b].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'bekaa' => 'b.eh/k.aw / [b^b].[e^eh]/[k^k].[a^aw] / failed phone:aw / failed spelling:aa',
  'bekker' => 'b.eh/k.er / [b^b].[e^eh]/[k^k]. / failed phone:er / failed spelling:ke',
  'bekki' => 'b.eh/k.ee / [b^b].[e^eh]/[k^k]. / failed phone:ee / failed spelling:ki',
  'belgique' => 'b.eh.l/zh.ee.k / [b^b].[e^eh].[l^l]/ / failed phone:zh / failed spelling:gi',
  'belgium' => 'b.eh.l/j.eh.m / [b^b].[e^eh].[l^l]/[g^j].[i^ih]. / failed phone:m / failed spelling:um',
  'belisle' => 'b.eh/l.igh/eh.l / [b^b].[e^eh]/[l^l].[i^igh]/ / failed phone:eh / failed spelling:sl',
  'belittled' => 'b.ih/l.ih/t.eh.l.d / [b^b].[e^ih]/[l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'belittles' => 'b.ih/l.ih/t.eh.l.z / [b^b].[e^ih]/[l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'belittling' => 'b.ih/l.ih/t.eh/l.ih.ng / [b^b].[e^ih]/[l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'belke' => 'b.eh.l.k / [b^b].[e^eh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'belle' => 'b.eh.l / [b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'belleau' => 'b.ih/l.oh / [b^b].[e^ih]/[ll^l]. / failed phone:oh / failed spelling:ea',
  'bellefeuille' => 'b.eh/l.eh/f.ee/ue.l / [b^b].[e^eh]/[ll^l].[e^eh]/[f^f].[e^ee]/[u^ue].[il^l] / failed phone:l / failed spelling:il',
  'belleville' => 'b.eh.l/v.ih.l / [b^b].[e^eh].[ll^l]/ / failed phone:v / failed spelling:ev',
  'bellevue' => 'b.eh.l/v.ye.ue / [b^b].[e^eh].[ll^l]/ / failed phone:v / failed spelling:ev',
  'bellizzi' => 'b.eh/l.ee.t/s.ee / [b^b].[e^eh]/[ll^l].[i^ee]. / failed phone:t / failed spelling:zz',
  'bellucci' => 'b.eh/l.ue/ch.ee / [b^b].[e^eh]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'bellville' => 'b.eh.l/v.ih.l / [b^b].[e^eh].[ll^l]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'belshe' => 'b.eh.l.sh / [b^b].[e^eh].[l^l].[s^sh] / failed phone:sh / failed spelling:sh',
  'beltsville' => 'b.eh.l.t/s.v.ih.l / [b^b].[e^eh].[l^l].[t^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'belville' => 'b.eh.l/v.ih.l / [b^b].[e^eh].[l^l]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'belzberg' => 'b.eh.l.t.s/b.er.g / [b^b].[e^eh].[l^l]. / failed phone:t / failed spelling:zb',
  'belzbergs' => 'b.eh.l.t.s/b.er.g.z / [b^b].[e^eh].[l^l]. / failed phone:t / failed spelling:zb',
  'bencivenga' => 'b.eh.n/ch.ee/v.eh.ng/g.eh / [b^b].[e^eh].[n^n]/ / failed phone:t / failed spelling:ci',
  'bendt' => 'b.eh.n.t / [b^b].[e^eh].[n^n]. / failed phone:t / failed spelling:dt',
  'benecke' => 'b.eh/n.eh.k / [b^b].[e^eh]/[n^n].[e^eh].[c^k] / failed phone:k / failed spelling:ck',
  'beneke' => 'b.eh/n.eh.k / [b^b].[e^eh]/[n^n].[e^eh].[k^k] / failed phone:k / failed spelling:ke',
  'benesch' => 'b.eh/n.eh.sh / [b^b].[e^eh]/[n^n].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'bengt' => 'b.eh.ng.k.t / [b^b].[e^eh].[n^ng]. / failed phone:k / failed spelling:gt',
  'benigno' => 'b.eh/n.ee/n.ye.oh / [b^b].[e^eh]/[n^n].[i^ee]/[gn^n]. / failed phone:ye / failed spelling:o',
  'benke' => 'b.eh.ng.k / [b^b].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'benne' => 'b.eh.n / [b^b].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'bensch' => 'b.eh.n.sh / [b^b].[e^eh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'bentonville' => 'b.eh.n/t.eh.n/v.ih.l / [b^b].[e^eh].[n^n]/[t^t].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'beougher' => 'b.ow/f.er / [b^b]. / failed phone:ow / failed spelling:eo',
  'berarducci' => 'b.er/aw.r/d.ue/ch.ee / [b^b].[er^er]/[a^oh].[r^r]/[d^d].[u^ue]/ / failed phone:t / failed spelling:cc',
  'berdahl' => 'b.er/d.aw.l / [b^b].[er^er]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'berendt' => 'b.air/ih.n.t / [b^b].[er^air]/[e^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'bergdahl' => 'b.er.g/d.aw.l / [b^b].[er^er].[g^g]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'bergendahl' => 'b.er/g.eh.n/d.aw.l / [b^b].[er^er]/[g^g].[e^eh].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'bergstedt' => 'b.er.g/s.t.eh.t / [b^b].[er^er].[g^g]/[s^s].[t^t].[e^eh]. / failed phone:t / failed spelling:dt',
  'berjaya' => 'b.er/j.igh/eh / [b^b].[er^er]/[j^j]. / failed phone:igh / failed spelling:ay',
  'berke' => 'b.er.k / [b^b].[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'berkes' => 'b.er.k.s / [b^b].[er^er].[k^k]. / failed phone:s / failed spelling:es',
  'berkshire' => 'b.er.k/sh.er / [b^b].[er^er].[k^k]/[sh^sh].[ir^er] / failed phone:er / failed spelling:hi',
  'bernabe' => 'b.er/n.eh.b / [b^b].[er^er]/[n^n].[a^ah].[b^b] / failed phone:b / failed spelling:be',
  'bernacki' => 'b.er/n.aw.t/s.k.ee / [b^b].[er^er]/[n^n].[a^aw]. / failed phone:t / failed spelling:ck',
  'bernardino' => 'b.er/n.eh/d.ee/n.oh / [b^b].[er^er]/[n^n].[a^ah]/ / failed phone:d / failed spelling:rd',
  'bernd' => 'b.er.n.t / [b^b].[er^er].[n^n]. / failed phone:t / failed spelling:d',
  'berndt' => 'b.er.n.t / [b^b].[er^er].[n^n]. / failed phone:t / failed spelling:dt',
  'bernhardt' => 'b.er.n/h.aw.r.t / [b^b].[er^er].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'bersch' => 'b.er.sh / [b^b].[er^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'berthiaume' => 'b.er/th.ee/ue/m.ee / [b^b].[er^er]/[th^th].[i^ee]/ / failed phone:ue / failed spelling:au',
  'bertilde' => 'b.er/t.ih.l.d / [b^b].[er^er]/[t^t].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'bertling' => 'b.er/t.eh/l.ih.ng / [b^b].[er^er]/[t^t]. / failed phone:eh / failed spelling:li',
  'bertolucci' => 'b.er/t.oh/l.ue/ch.ee / [b^b].[er^er]/[t^t].[o^oh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'bertrade' => 'b.er/t.r.eh.d / [b^b].[er^er]/[t^t].[r^r].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'bertsch' => 'b.er.ch / [b^b].[er^er].[t^t]. / failed phone:t / failed spelling:ts',
  'bertsche' => 'b.er.ch / [b^b].[er^er].[t^t]. / failed phone:t / failed spelling:ts',
  'bertucci' => 'b.er/t.ue/ch.ee / [b^b].[er^er]/[t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'besch' => 'b.eh.sh / [b^b].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'beschloss' => 'b.eh/sh.l.aw.s / [b^b].[e^eh]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'beske' => 'b.eh.s.k / [b^b].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'besler' => 'b.eh/s.eh/l.er / [b^b].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'besner' => 'b.r.eh/s.n.er / [b^b]. / failed phone:r / failed spelling:es',
  'bespectacled' => 'b.ih/s.p.eh.k/t.eh/k.eh.l.d / [b^b].[e^ih]/[s^s].[p^p].[e^eh].[c^k]/[t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'besse' => 'b.eh.s / [b^b].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'bessmertnykh' => 'b.eh/s.m.air.t/n.eh.k / [b^b].[e^eh]/[ss^s].[m^m].[er^air].[t^t]/[n^n].[y^eh].[k^k] / failed phone:k / failed spelling:kh',
  'bethke' => 'b.eh.th.k / [b^b].[e^eh].[th^th].[k^k] / failed phone:k / failed spelling:ke',
  'betsch' => 'b.eh.ch / [b^b].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'beucler' => 'b.oy/k.eh/l.er / [b^b]. / failed phone:oy / failed spelling:eu',
  'beutler' => 'b.oy/t.eh/l.er / [b^b]. / failed phone:oy / failed spelling:eu',
  'beville' => 'b.ee/v.ih.l / [b^b].[e^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'beyond' => 'b.ih/aw.n.d / [b^b].[e^ih]/ / failed phone:aw / failed spelling:yo',
  'bhakta' => 'b.aw.k/t.eh / [b^b]. / failed phone:aw / failed spelling:ha',
  'bhatia' => 'b.aw/sh.eh / [b^b]. / failed phone:aw / failed spelling:ha',
  'bhatt' => 'b.ah.t / [b^b]. / failed phone:ah / failed spelling:ha',
  'bhattacharjy' => 'b.aw/t.eh/ch.aw.r/j.ee / [b^b]. / failed phone:aw / failed spelling:ha',
  'bhatti' => 'b.aw/t.ee / [b^b]. / failed phone:aw / failed spelling:ha',
  'bhirud' => 'b.ih/r.eh.d / [b^b]. / failed phone:ih / failed spelling:hi',
  'bhopal' => 'b.oh/p.aw.l / [b^b]. / failed phone:oh / failed spelling:ho',
  'bhutan' => 'b.ue/t.ah.n / [b^b]. / failed phone:ue / failed spelling:hu',
  'bhutto' => 'b.ue/t.oh / [b^b]. / failed phone:ue / failed spelling:hu',
  'biaggi' => 'b.ee/ah/j.ee / [b^b].[i^ee]/[a^ah]/[g^j]. / failed phone:ee / failed spelling:gi',
  'bibeau' => 'b.ih/b.oh / [b^b].[i^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'bibeault' => 'b.ih/b.oh / [b^b].[i^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'bibler' => 'b.igh/b.eh/l.er / [b^b].[i^igh]/[b^b]. / failed phone:eh / failed spelling:le',
  'bibles' => 'b.igh/b.eh.l.z / [b^b].[i^igh]/[b^b]. / failed phone:eh / failed spelling:le',
  'bichler' => 'b.ih/k.eh/l.er / [b^b].[i^ih]/[ch^k]. / failed phone:eh / failed spelling:le',
  'bickwit' => 'b.ih/kw.ih.t / [b^b].[i^ih]/[ck^kw]. / failed phone:ih / failed spelling:wi',
  'bicycled' => 'b.igh/s.ih/k.eh.l.d / [b^b].[i^igh]/[c^s].[y^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'bicycles' => 'b.igh/s.ih/k.eh.l.z / [b^b].[i^igh]/[c^s].[y^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'bicycling' => 'b.igh/s.ih/k.eh/l.ih.ng / [b^b].[i^igh]/[c^s].[y^ih]/[c^k]. / failed phone:eh / failed spelling:li',
  'biedermeier' => 'b.ee/d.er/m.igh.r / [b^b].[ie^ee]/[d^d].[er^er]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'biedrzycki' => 'b.ih/j.ih.t/s.k.ee / [b^b].[i^ih]/ / failed phone:j / failed spelling:ed',
  'biegler' => 'b.ee/g.eh/l.er / [b^b].[ie^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'biehl' => 'b.ee.l / [b^b].[ie^ee]. / failed phone:l / failed spelling:hl',
  'biehler' => 'b.ee/l.er / [b^b].[ie^ee]/ / failed phone:l / failed spelling:hl',
  'bielawski' => 'b.ee/l.aw.f/s.k.ee / [b^b].[ie^ee]/[l^l].[a^aw]. / failed phone:f / failed spelling:ws',
  'bielecki' => 'b.ee/l.eh.t/s.k.ee / [b^b].[ie^ee]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'bielefeldt' => 'b.ee/l.ih/f.ih.l.t / [b^b].[ie^ee]/[l^l].[e^ih]/[f^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'bielicki' => 'b.ih/l.ih.t/s.k.ee / [b^b].[i^ih]/[el^l].[i^ih]. / failed phone:t / failed spelling:ck',
  'bielke' => 'b.ee.l.k / [b^b].[ie^ee].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'bieniek' => 'b.ih/n.ee/eh.k / [b^b].[i^ih]/ / failed phone:n / failed spelling:en',
  'bienkowski' => 'b.ih.ng/k.aw.f/s.k.ee / [b^b].[i^ih]. / failed phone:ng / failed spelling:en',
  'bierbauer' => 'b.ih.r/b.ow/er / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierbaum' => 'b.ih.r/b.ow.m / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierbusse' => 'b.ih.r/b.eh.s / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierce' => 'b.ih.r.s / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierer' => 'b.ih/r.er / [b^b].[i^ih]/ / failed phone:r / failed spelling:er',
  'bieri' => 'b.ih/r.ee / [b^b].[i^ih]/ / failed phone:r / failed spelling:er',
  'bierlein' => 'b.ih.r/l.igh.n / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierley' => 'b.ih.r/l.ee / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierly' => 'b.ih.r/l.ee / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierma' => 'b.ih.r/m.eh / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierman' => 'b.ih.r/m.eh.n / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'biermann' => 'b.ih.r/m.eh.n / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'biernacki' => 'b.ih.r/n.aw.t/s.k.ee / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'biernat' => 'b.ih.r/n.ah.t / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'bierwirth' => 'b.ih.r/w.er.th / [b^b].[i^ih]. / failed phone:r / failed spelling:er',
  'biery' => 'b.ih/r.ee / [b^b].[i^ih]/ / failed phone:r / failed spelling:er',
  'biggio' => 'b.ee/j.ee/oh / [b^b].[i^ee]/[g^j]. / failed phone:ee / failed spelling:gi',
  'bigler' => 'b.igh/g.eh/l.er / [b^b].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'bihac' => 'b.ee/h.aw.ch / [b^b].[i^ee]/[h^h].[a^aw]. / failed phone:t / failed spelling:c',
  'bihl' => 'b.ih.l / [b^b].[i^ih]. / failed phone:l / failed spelling:hl',
  'bihm' => 'b.ih.m / [b^b].[i^ih]. / failed phone:m / failed spelling:hm',
  'bijur' => 'b.ee/zh.oo.r / [b^b].[i^ee]/ / failed phone:zh / failed spelling:ju',
  'bilbao' => 'b.ih.l/b.ow / [b^b].[i^ih].[l^l]/[b^b]. / failed phone:ow / failed spelling:ao',
  'bilicki' => 'b.ih/l.ih.t/s.k.ee / [b^b].[i^ih]/[l^l].[i^ih]. / failed phone:t / failed spelling:ck',
  'bille' => 'b.igh.l / [b^b].[i^igh].[ll^l] / failed phone:l / failed spelling:ll',
  'billiard' => 'b.ih/l.ye.er.d / [b^b].[i^ih]/[ll^l]. / failed phone:er / failed spelling:ia',
  'billiards' => 'b.ih/l.ye.er.d.z / [b^b].[i^ih]/[ll^l]. / failed phone:er / failed spelling:ia',
  'bilodeau' => 'b.ih/l.eh/d.oh / [b^b].[i^ih]/[l^l].[o^uh]/[d^d]. / failed phone:oh / failed spelling:ea',
  'bingham' => 'b.ih.ng/eh.m / [b^b].[i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'binghamton' => 'b.ih.ng/eh.m/t.eh.n / [b^b].[i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'binkowski' => 'b.ih.ng/k.aw.f/s.k.ee / [b^b].[i^ih].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'birchler' => 'b.er/k.eh/l.er / [b^b].[ir^er]/[ch^k]. / failed phone:eh / failed spelling:le',
  'birkes' => 'b.er.k.s / [b^b].[ir^er].[k^k]. / failed phone:s / failed spelling:es',
  'bisceglia' => 'b.ih.s/ch.eh/g.l.ee/eh / [b^b].[i^ih].[sc^s]/ / failed phone:t / failed spelling:eg',
  'bisch' => 'b.ih.sh / [b^b].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'bischel' => 'b.ih/sh.eh.l / [b^b].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'bischof' => 'b.ih/sh.eh.f / [b^b].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:ho',
  'biscuit' => 'b.ih/s.k.eh.t / [b^b].[i^ih]/[s^s].[c^k].[u^uh]. / failed phone:t / failed spelling:it',
  'biscuits' => 'b.ih/s.k.eh.t.s / [b^b].[i^ih]/[s^s].[c^k].[u^uh]. / failed phone:t / failed spelling:it',
  'bisexual' => 'b.igh/s.eh.k/sh.ue/eh.l / [b^b].[i^igh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'bistodeau' => 'b.ih/s.t.eh/d.oh / [b^b].[i^ih]/[s^s].[t^t].[o^uh]/[d^d]. / failed phone:oh / failed spelling:ea',
  'bitler' => 'b.igh/t.eh/l.er / [b^b].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'bivouac' => 'b.ih.v/w.ah.k / [b^b].[i^ih].[v^v]/ / failed phone:w / failed spelling:ou',
  'bizarre' => 'b.eh/z.aw.r / [b^b].[i^ih]/[z^z].[a^oh].[r^r] / failed phone:r / failed spelling:rr',
  'bjelland' => 'b.ye.eh/l.eh.n.d / [b^b]. / failed phone:ue / failed spelling:je',
  'bjerke' => 'b.ye.er.k / [b^b]. / failed phone:er / failed spelling:je',
  'bjerklie' => 'b.air/k.l.ee / [b^b]. / failed phone:air / failed spelling:je',
  'bjoern' => 'b.ye.aw.r.n / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjorge' => 'b.ye.aw.r.g / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjork' => 'b.ye.aw.r.k / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjorklund' => 'b.ye.aw.r/k.l.eh.n.d / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjorkman' => 'b.ye.aw.r.k/m.eh.n / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjorn' => 'b.ye.aw.r.n / [b^b]. / failed phone:ye / failed spelling:jo',
  'bjornstad' => 'b.ye.aw.r.n/s.t.eh.d / [b^b]. / failed phone:ye / failed spelling:jo',
  'blackwelder' => 'b.l.ah/kw.eh.l/d.er / [b^b].[l^l].[a^ah]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'blackwell' => 'b.l.ah/kw.eh.l / [b^b].[l^l].[a^ah]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'blackwood' => 'b.l.ah/kw.oo.d / [b^b].[l^l].[a^ah]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'blaese' => 'b.l.ay.z / [b^b].[l^l].[a^ay].[es^z] / failed phone:z / failed spelling:es',
  'blaesing' => 'b.l.eh/s.ih.ng / [b^b].[l^l].[a^ah]/ / failed phone:s / failed spelling:es',
  'blah' => 'b.l.aw / [b^b].[l^l].[a^aw] / failed phone:aw / failed spelling:ah',
  'blanche' => 'b.l.ah.n.ch / [b^b].[l^l].[a^ah].[n^n].[ch^ch] / failed phone:t / failed spelling:ch',
  'blandon' => 'b.l.ah.n/d.ih.n / [b^b].[l^l].[a^ah].[n^n]/[d^d]. / failed phone:ih / failed spelling:on',
  'blanke' => 'b.l.ah.ng.k / [b^b].[l^l].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'blankenbeckler' => 'b.l.ah.ng/k.eh.n/b.eh/k.eh/l.er / [b^b].[l^l].[a^ah].[n^ng]/[k^k].[e^eh].[n^n]/[b^b].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'blaschke' => 'b.l.ah.sh.k / [b^b].[l^l].[a^ah].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'blasius' => 'b.l.ay/s.ee/ih.s / [b^b].[l^l].[a^ay]/[s^s].[i^ee]/ / failed phone:ih / failed spelling:us',
  'blaske' => 'b.l.ay.s.k / [b^b].[l^l].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'blaszak' => 'b.l.aw/sh.eh.k / [b^b].[l^l].[a^aw]/[s^sh]. / failed phone:eh / failed spelling:za',
  'blaszczyk' => 'b.l.aw.sh/ch.ih.k / [b^b].[l^l].[a^aw].[s^sh]/ / failed phone:t / failed spelling:zc',
  'blauer' => 'b.l.ow.r / [b^b].[l^l].[au^aw]. / failed phone:r / failed spelling:er',
  'blazejewski' => 'b.l.eh/z.ay/eh.f/s.k.ee / [b^b].[l^l].[a^ah]/[z^z].[e^ay]/ / failed phone:eh / failed spelling:je',
  'blehm' => 'b.l.eh.m / [b^b].[l^l].[e^eh]. / failed phone:m / failed spelling:hm',
  'blodgett' => 'b.l.aw/j.ih.t / [b^b].[l^l].[o^aw]/[d^j]. / failed phone:ih / failed spelling:ge',
  'blonde' => 'b.l.aw.n.d / [b^b].[l^l].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'blouin' => 'b.l/w.ee.n / [b^b].[l^l]/ / failed phone:w / failed spelling:ou',
  'bloxham' => 'b.l.aw.k/s.eh.m / [b^b].[l^l].[o^aw].[x^x]/ / failed phone:eh / failed spelling:ha',
  'bluhdorn' => 'b.l.uh/d.aw.r.n / [b^b].[l^l].[u^uh]/ / failed phone:d / failed spelling:hd',
  'bluhm' => 'b.l.uh.m / [b^b].[l^l].[u^uh]. / failed phone:m / failed spelling:hm',
  'blumenschein' => 'b.l.uh/m.ih.n/sh.igh.n / [b^b].[l^l].[u^uh]/[m^m].[e^ih].[n^n]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'bnai' => 'b.eh/n.igh / [b^b]. / failed phone:eh / failed spelling:na',
  'boake' => 'b.oh.k / [b^b].[oa^oh].[k^k] / failed phone:k / failed spelling:ak',
  'bobrowski' => 'b.eh/b.r.aw.f/s.k.ee / [b^b].[o^uh]/[b^b].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'bocchino' => 'b.oh/k.ee/n.oh / [b^b].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'boccia' => 'b.oh/ch.eh / [b^b].[o^oh]/ / failed phone:t / failed spelling:cc',
  'boccio' => 'b.oh/ch.ee/oh / [b^b].[o^oh]/ / failed phone:t / failed spelling:cc',
  'boccuzzi' => 'b.oh/k.ue.t/s.ee / [b^b].[o^oh]/[cc^k].[u^ue]. / failed phone:t / failed spelling:zz',
  'bocek' => 'b.oh/ch.eh.k / [b^b].[o^oh]/ / failed phone:t / failed spelling:ce',
  'boche' => 'b.aw.ch / [b^b].[o^aw].[ch^ch] / failed phone:t / failed spelling:ch',
  'bochicchio' => 'b.oh/k.ee/k.ee/oh / [b^b].[o^oh]/[ch^k].[i^ee]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'boeh' => 'b.oh / [b^b].[o^oh] / failed phone:oh / failed spelling:oe',
  'boehl' => 'b.oh.l / [b^b].[o^oh]. / failed phone:l / failed spelling:eh',
  'boehler' => 'b.oh/l.er / [b^b].[o^oh]/ / failed phone:l / failed spelling:eh',
  'boehlert' => 'b.oh/l.er.t / [b^b].[o^oh]/ / failed phone:l / failed spelling:eh',
  'boehlke' => 'b.oh.l.k / [b^b].[o^oh]. / failed phone:l / failed spelling:eh',
  'boehm' => 'b.oh.m / [b^b].[o^oh]. / failed phone:m / failed spelling:eh',
  'boehme' => 'b.oh.m / [b^b].[o^oh]. / failed phone:m / failed spelling:eh',
  'boehmer' => 'b.oh/m.er / [b^b].[o^oh]/ / failed phone:m / failed spelling:eh',
  'boehmke' => 'b.oh.m/k.ee / [b^b].[o^oh]. / failed phone:m / failed spelling:eh',
  'boehne' => 'b.oh.n / [b^b].[oe^oh].[hn^n] / failed phone:n / failed spelling:eh',
  'boehnke' => 'b.oh.ng.k / [b^b].[o^oh]. / failed phone:ng / failed spelling:eh',
  'boehringer' => 'b.aw/r.ih.ng/er / [b^b].[o^aw]/ / failed phone:r / failed spelling:eh',
  'boeke' => 'b.oh.k / [b^b].[oe^oh].[k^k] / failed phone:k / failed spelling:ek',
  'boesch' => 'b.oh.sh / [b^b].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'boeschenstein' => 'b.oh/sh.eh.n/s.t.ee.n / [b^b].[oe^oh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'bogacki' => 'b.eh/g.aw.t/s.k.ee / [b^b].[o^uh]/[g^g].[a^aw]. / failed phone:t / failed spelling:ck',
  'bogacz' => 'b.aw/g.eh.ch / [b^b].[o^aw]/[g^g].[a^ah]. / failed phone:t / failed spelling:cz',
  'bogardus' => 'b.aw/g.aw.r/d.ih.s / [b^b].[o^aw]/[g^g].[a^oh].[r^r]/[d^d]. / failed phone:ih / failed spelling:us',
  'bogenschutz' => 'b.aw/g.ih.n/sh.eh.t.s / [b^b].[o^aw]/[g^g].[e^ih].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:hu',
  'boggio' => 'b.oh/j.ee/oh / [b^b].[o^oh]/[g^j]. / failed phone:ee / failed spelling:gi',
  'boggled' => 'b.aw/g.eh.l.d / [b^b].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:le',
  'boggles' => 'b.aw/g.eh.l.z / [b^b].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:le',
  'boggling' => 'b.aw/g.eh/l.ih.ng / [b^b].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:li',
  'boghosian' => 'b.eh.g/h.aw/zh.ih.n / [b^b].[o^uh].[g^g]/[h^h].[o^aw]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'bogosian' => 'b.eh/g.aw/zh.ih.n / [b^b].[o^uh]/[g^g].[o^aw]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'bogucki' => 'b.eh/g.uh.t/s.k.ee / [b^b].[o^uh]/[g^g].[u^uh]. / failed phone:t / failed spelling:ck',
  'boguslavskaya' => 'b.oh/g.uh/s.l.eh.v/s.k.igh/eh / [b^b].[o^oh]/[g^g].[u^uh]/[s^s].[l^l].[a^ah].[v^v]/[s^s].[k^k]. / failed phone:igh / failed spelling:ay',
  'bogusz' => 'b.aw/g.eh.sh / [b^b].[o^aw]/[g^g].[u^uh].[s^sh] / failed phone:sh / failed spelling:sz',
  'bohlke' => 'b.aw.k / [b^b].[o^aw]. / failed phone:k / failed spelling:hl',
  'bohm' => 'b.aw.m / [b^b].[o^aw]. / failed phone:m / failed spelling:hm',
  'bohren' => 'b.aw/r.eh.n / [b^b].[o^aw]/ / failed phone:r / failed spelling:hr',
  'bohrer' => 'b.aw/r.er / [b^b].[o^aw]/ / failed phone:r / failed spelling:hr',
  'boike' => 'b.oy.k / [b^b].[oi^oy].[k^k] / failed phone:k / failed spelling:ke',
  'bois' => 'b.w.aw / [b^b]. / failed phone:w / failed spelling:oi',
  'boisclair' => 'b.w.aw/k.l.air / [b^b]. / failed phone:w / failed spelling:oi',
  'boisseau' => 'b.w.aw/s.oh / [b^b]. / failed phone:w / failed spelling:oi',
  'boissonneault' => 'b.w.aw/s.eh/n.oh / [b^b]. / failed phone:w / failed spelling:oi',
  'boisvert' => 'b.w.aw/v.er.t / [b^b]. / failed phone:w / failed spelling:oi',
  'boivin' => 'b.oy/v.ah.n / [b^b].[oi^oy]/[v^v]. / failed phone:ah / failed spelling:in',
  'bojanowski' => 'b.eh/ye.eh/n.aw.f/s.k.ee / [b^b].[o^uh]/ / failed phone:ue / failed spelling:ja',
  'bojarski' => 'b.eh/ye.aw.r/s.k.ee / [b^b].[o^uh]/ / failed phone:ye / failed spelling:ja',
  'bojorquez' => 'b.oh/ye.aw.r/kw.eh.z / [b^b].[o^oh]/ / failed phone:ye / failed spelling:jo',
  'boldt' => 'b.oh.l.t / [b^b].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'bolle' => 'b.aw.l / [b^b].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'bologna' => 'b.eh/l.oh/n.ee / [b^b].[o^uh]/[l^l].[o^oh]/[gn^n]. / failed phone:ee / failed spelling:a',
  'bombardier' => 'b.aw.m/b.er/d.ih.r / [b^b].[o^aw].[m^m]/[b^b].[ar^er]/[d^d].[i^ih]. / failed phone:r / failed spelling:er',
  'bonacci' => 'b.oh/n.aw/ch.ee / [b^b].[o^oh]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'bonczek' => 'b.aw.n/ch.eh.k / [b^b].[o^aw].[n^n]/ / failed phone:t / failed spelling:cz',
  'bonde' => 'b.aw.n.d / [b^b].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'bondt' => 'b.aw.n.t / [b^b].[o^aw].[n^n]. / failed phone:t / failed spelling:dt',
  'bongiorno' => 'b.oh.n/j.aw.r/n.oh / [b^b].[o^oh].[n^n]/[g^j]. / failed phone:oh / failed spelling:io',
  'bongiovanni' => 'b.oh.n/j.oh/v.aw/n.ee / [b^b].[o^oh].[n^n]/[g^j]. / failed phone:oh / failed spelling:io',
  'bonjour' => 'b.eh.n/zh.oo.r / [b^b].[o^uh].[n^n]/ / failed phone:zh / failed spelling:jo',
  'bonkowski' => 'b.eh.ng/k.aw.f/s.k.ee / [b^b].[o^uh].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'bonne' => 'b.aw.n / [b^b].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'bonneau' => 'b.eh/n.oh / [b^b].[o^uh]/[n^n]. / failed phone:oh / failed spelling:ne',
  'bonneville' => 'b.aw/n.eh/v.ih.l / [b^b].[o^aw]/[nn^n].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'bonnibelle' => 'b.aw/n.ih/b.eh.l / [b^b].[o^aw]/[nn^n].[i^ih]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'bonville' => 'b.oh.n/v.ih.l / [b^b].[o^oh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'boodles' => 'b.ue/d.eh.l.z / [b^b].[oo^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'booher' => 'b.ue/er / [b^b].[oo^ue]/ / failed phone:er / failed spelling:he',
  'bookwalter' => 'b.oo/kw.eh.l/t.er / [b^b].[o^oo]/ / failed phone:kw / failed spelling:ok',
  'bookworm' => 'b.oo/kw.er.m / [b^b].[o^oo]/ / failed phone:kw / failed spelling:ok',
  'boondoggles' => 'b.ue.n/d.aw/g.eh.l.z / [b^b].[oo^ue].[n^n]/[d^d].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:le',
  'boonville' => 'b.ue.n/v.ih.l / [b^b].[oo^ue].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'borawski' => 'b.er/aw.f/s.k.ee / [b^b].[o^oh].[r^r]/[a^aw]. / failed phone:f / failed spelling:ws',
  'bordeau' => 'b.er/d.oh / [b^b].[o^oh].[r^r]/[d^d]. / failed phone:oh / failed spelling:ea',
  'bordeaux' => 'b.aw.r/d.oh / [b^b].[o^oh].[r^r]/[d^d]. / failed phone:oh / failed spelling:ea',
  'borgwardt' => 'b.aw.r/g.w.aw.r.t / [b^b].[o^oh].[r^r]/[g^g].[w^w].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'borja' => 'b.aw.r/ye.eh / [b^b].[o^oh].[r^r]/ / failed phone:ue / failed spelling:ja',
  'borjas' => 'b.aw.r/ye.eh.z / [b^b].[o^oh].[r^r]/ / failed phone:ue / failed spelling:ja',
  'borkowski' => 'b.er/k.aw.f/s.k.ee / [b^b].[o^oh].[r^r]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'bornholdt' => 'b.aw.r.n/h.oh.l.t / [b^b].[o^oh].[r^r].[n^n]/[h^h].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'borowicz' => 'b.er/oh/v.ih.ch / [b^b].[o^oh].[r^r]/[ow^oh]/ / failed phone:v / failed spelling:ic',
  'borowski' => 'b.er/aw.f/s.k.ee / [b^b].[o^oh].[r^r]/[o^aw]. / failed phone:f / failed spelling:ws',
  'borre' => 'b.aw.r / [b^b].[o^oh].[r^r] / failed phone:r / failed spelling:rr',
  'borror' => 'b.aw/er.r / [b^b].[o^aw]/[r^er].[r^r] / failed phone:r / failed spelling:ro',
  'borsch' => 'b.aw.r.sh / [b^b].[o^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'borscht' => 'b.aw.r.sh.t / [b^b].[o^oh].[r^r].[sc^sh]. / failed phone:t / failed spelling:ht',
  'borucki' => 'b.er/uh.t/s.k.ee / [b^b].[o^oh].[r^r]/[u^uh]. / failed phone:t / failed spelling:ck',
  'bosch' => 'b.aw.sh / [b^b].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'boschee' => 'b.aw/sh.ee / [b^b].[o^aw]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'boschen' => 'b.aw/sh.eh.n / [b^b].[o^aw]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'boschert' => 'b.aw/sh.er.t / [b^b].[o^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'boschwitz' => 'b.aw/sh.w.ih.t.s / [b^b].[o^aw]/[sc^sh]. / failed phone:w / failed spelling:hw',
  'boscia' => 'b.oh.s/ch.eh / [b^b].[o^oh].[sc^s]/ / failed phone:t / failed spelling:ia',
  'bosler' => 'b.aw/s.eh/l.er / [b^b].[o^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'bosse' => 'b.aw.s / [b^b].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'bosshardt' => 'b.aw.s/h.aw.r.t / [b^b].[o^aw].[ss^s]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'bossler' => 'b.aw/s.eh/l.er / [b^b].[o^aw]/[ss^s]. / failed phone:eh / failed spelling:le',
  'bostian' => 'b.aw.s/ch.ih.n / [b^b].[o^aw].[s^s]/[t^ch].[i^ih]. / failed phone:n / failed spelling:an',
  'botelho' => 'b.oh/t.eh/l.oh / [b^b].[o^oh]/[t^t].[e^eh]/[l^l]. / failed phone:oh / failed spelling:ho',
  'bothersome' => 'b.aw/dh.er/s.eh.m / [b^b].[o^aw]/[the^dh].[r^er]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'bottled' => 'b.aw/t.eh.l.d / [b^b].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'bottleneck' => 'b.aw/t.eh.l/n.eh.k / [b^b].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'bottlenecks' => 'b.aw/t.eh.l/n.eh.k.s / [b^b].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'bottles' => 'b.aw/t.eh.l.z / [b^b].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'bottling' => 'b.aw/t.eh/l.ih.ng / [b^b].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'bouche' => 'b.ow.ch / [b^b].[ou^ow].[ch^ch] / failed phone:t / failed spelling:ch',
  'boucher' => 'b.ue/sh.eh / [b^b].[ou^ue]/[ch^sh].[e^eh] / failed phone:eh / failed spelling:he',
  'boudreaux' => 'b.ue/d.r.oh / [b^b].[ou^ue]/[d^d].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'bougainville' => 'b.ue/g.ih.n/v.ih.l / [b^b].[ou^ue]/[g^g].[a^ih]. / failed phone:n / failed spelling:in',
  'bougie' => 'b.ue/zh.ee / [b^b].[ou^ue]/ / failed phone:zh / failed spelling:gi',
  'boulais' => 'b.ue/l.ay / [b^b].[ou^ue]/[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'bouquet' => 'b.ue/k.ay / [b^b].[ou^ue]/[qu^k].[e^ay] / failed phone:ay / failed spelling:t',
  'bouquets' => 'b.oh/k.ay.z / [b^b].[ou^oh]/[qu^k].[e^ay]. / failed phone:z / failed spelling:ts',
  'bourbeau' => 'b.oo.r/b.oh / [b^b].[ou^oo].[r^r]/[b^b]. / failed phone:oh / failed spelling:ea',
  'bourdeau' => 'b.oo.r/d.oh / [b^b].[ou^oo].[r^r]/[d^d]. / failed phone:oh / failed spelling:ea',
  'bourgault' => 'b.oo.r/g.oh / [b^b].[ou^oo].[r^r]/[g^g].[a^oh] / failed phone:oh / failed spelling:au',
  'bourgeois' => 'b.oo.r.zh/w.aw / [b^b].[ou^oo].[r^r]. / failed phone:zh / failed spelling:ge',
  'bourgeoisie' => 'b.oo.r.zh/w.aw/z.ee / [b^b].[ou^oo].[r^r]. / failed phone:zh / failed spelling:ge',
  'bourget' => 'b.oo.r/zh.eh.t / [b^b].[ou^oo].[r^r]/ / failed phone:zh / failed spelling:ge',
  'bourguignon' => 'b.oo.r/g.ee/n.ye.oh.n / [b^b].[ou^oo].[r^r]/[gu^g].[i^ee]/[gn^n]. / failed phone:ye / failed spelling:on',
  'bourke' => 'b.er.k / [b^b].[our^er].[k^k] / failed phone:k / failed spelling:ke',
  'bournonville' => 'b.aw.r/n.eh.n/v.ih.l / [b^b].[ou^oh].[r^r]/[n^n].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'bourquin' => 'b.oo.r/kw.ah.n / [b^b].[ou^oo].[r^r]/[qu^kw]. / failed phone:ah / failed spelling:in',
  'boutelle' => 'b.ue/t.eh.l / [b^b].[ou^ue]/[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'boutin' => 'b.ue/t.ah.n / [b^b].[ou^ue]/[t^t]. / failed phone:ah / failed spelling:in',
  'bouvier' => 'b.ue/v.ee/ay / [b^b].[ou^ue]/[v^v].[i^ee]/[e^ay] / failed phone:ay / failed spelling:r',
  'bouwens' => 'b.ow/eh.n.z / [b^b].[o^ow]/[u^uh]. / failed phone:n / failed spelling:we',
  'bouwkamp' => 'b.ow/k.ah.m.p / [b^b].[ou^ow]/ / failed phone:k / failed spelling:wk',
  'bouwman' => 'b.ow/m.eh.n / [b^b].[ou^ow]/ / failed phone:m / failed spelling:wm',
  'bouwsma' => 'b.ue.z/m.eh / [b^b].[ou^ue]. / failed phone:z / failed spelling:ws',
  'bouyer' => 'b.oy/er / [b^b]. / failed phone:oy / failed spelling:ou',
  'bouygues' => 'b.oy/zh.ay / [b^b]. / failed phone:oy / failed spelling:ou',
  'boyde' => 'b.oy.d / [b^b].[oy^oy].[d^d] / failed phone:d / failed spelling:de',
  'boye' => 'b.oy / [b^b].[oy^oy] / failed phone:oy / failed spelling:oy',
  'bozich' => 'b.aw/z.ih.h / [b^b].[o^aw]/[z^z].[i^ih]. / failed phone:h / failed spelling:ch',
  'braaksma' => 'b.r.aw.k/s.m.eh / [b^b].[r^r].[a^aw]. / failed phone:x / failed spelling:ak',
  'braasch' => 'b.r.aw.sh / [b^b].[r^r].[a^aw]. / failed phone:sh / failed spelling:as',
  'braatz' => 'b.r.aw.t.s / [b^b].[r^r].[a^aw]. / failed phone:t / failed spelling:at',
  'bracci' => 'b.r.aw/ch.ee / [b^b].[r^r].[a^aw]/ / failed phone:t / failed spelling:cc',
  'bracero' => 'b.r.aw/ch.air/oh / [b^b].[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'bradtke' => 'b.r.ah.d/k.ee / [b^b].[r^r].[a^ah].[d^d]/ / failed phone:k / failed spelling:tk',
  'bradtmiller' => 'b.r.ah.t/m.ih/l.er / [b^b].[r^r].[a^ah]. / failed phone:t / failed spelling:dt',
  'brae' => 'b.r.ay / [b^b].[r^r].[a^ay] / failed phone:ay / failed spelling:ae',
  'braendstroem' => 'b.r.ah.n.d/s.t.r.oh.m / [b^b].[r^r].[a^ah]. / failed phone:n / failed spelling:en',
  'braggiotti' => 'b.r.ah/z.ee/aw/t.ee / [b^b].[r^r].[a^ah]/ / failed phone:z / failed spelling:gg',
  'brahm' => 'b.r.aw.m / [b^b].[r^r].[a^aw]. / failed phone:m / failed spelling:hm',
  'brahmin' => 'b.r.aw/m.ih.n / [b^b].[r^r].[a^aw]/ / failed phone:m / failed spelling:hm',
  'brahms' => 'b.r.aw.m.z / [b^b].[r^r].[a^aw]. / failed phone:m / failed spelling:hm',
  'braille' => 'b.r.ay.l / [b^b].[r^r].[a^ay].[il^l] / failed phone:l / failed spelling:il',
  'brajdas' => 'b.r.igh/d.eh.s / [b^b].[r^r]. / failed phone:igh / failed spelling:aj',
  'brajovic' => 'b.r.aw/j.oh/v.ih.ch / [b^b].[r^r].[a^aw]/[j^j].[o^oh]/[v^v].[i^ih]. / failed phone:t / failed spelling:c',
  'brakke' => 'b.r.ah.k / [b^b].[r^r].[a^ah].[k^k] / failed phone:k / failed spelling:kk',
  'brambles' => 'b.r.ah.m/b.eh.l.z / [b^b].[r^r].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'brancaccio' => 'b.r.aw.n/k.aw/ch.ee/oh / [b^b].[r^r].[a^aw].[n^n]/[c^k].[a^aw]/ / failed phone:t / failed spelling:cc',
  'branche' => 'b.r.ah.n.ch / [b^b].[r^r].[a^ah].[n^n].[ch^ch] / failed phone:t / failed spelling:ch',
  'brande' => 'b.r.ah.n.d / [b^b].[r^r].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'brandeberry' => 'b.r.ah.n.d/b.air/ee / [b^b].[r^r].[a^ah].[n^n].[d^d]/ / failed phone:b / failed spelling:eb',
  'brandl' => 'b.r.ah.n/d.eh.l / [b^b].[r^r].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'brandt' => 'b.r.ah.n.t / [b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'brasch' => 'b.r.ah.sh / [b^b].[r^r].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'brasilia' => 'b.r.eh/z.ih/l.ye.eh / [b^b].[r^r].[a^ah]/[s^z].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'brasseaux' => 'b.r.eh/s.oh / [b^b].[r^r].[a^ah]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'brasseur' => 'b.r.ah/s.er / [b^b].[r^r].[a^ah]/[ss^s]. / failed phone:er / failed spelling:eu',
  'bratsch' => 'b.r.ah.ch / [b^b].[r^r].[a^ah].[t^t]. / failed phone:t / failed spelling:ts',
  'braude' => 'b.r.aw.d / [b^b].[r^r].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'braunschweig' => 'b.r.ow.n/sh.w.igh.g / [b^b].[r^r].[au^aw].[n^n]/[sc^sh]. / failed phone:w / failed spelling:hw',
  'brazilian' => 'b.r.eh/z.ih/l.ye.eh.n / [b^b].[r^r].[a^ah]/[z^z].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'brazilians' => 'b.r.eh/z.ih/l.ye.eh.n.z / [b^b].[r^r].[a^ah]/[z^z].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'brazzaville' => 'b.r.ah/z.eh/v.ih.l / [b^b].[r^r].[a^ah]/[zz^z].[a^ah]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'brcko' => 'b.er.ch/k.oh / [b^b].[r^er]. / failed phone:t / failed spelling:ck',
  'breakwater' => 'b.r.ay/kw.aw/t.er / [b^b].[r^r].[e^ay]/ / failed phone:kw / failed spelling:ak',
  'breault' => 'b.r.oh / [b^b].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'breaux' => 'b.r.oh / [b^b].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'brehm' => 'b.r.eh.m / [b^b].[r^r].[e^eh]. / failed phone:m / failed spelling:hm',
  'brehmer' => 'b.r.eh/m.er / [b^b].[r^r].[e^eh]/ / failed phone:m / failed spelling:hm',
  'breisch' => 'b.r.igh.sh / [b^b].[r^r].[ei^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'breitkreutz' => 'b.r.igh.t/k.r.oy.t.s / [b^b].[r^r].[ei^igh].[t^t]/[k^k].[r^r]. / failed phone:oy / failed spelling:eu',
  'breitling' => 'b.r.igh/t.eh/l.ih.ng / [b^b].[r^r].[ei^igh]/[t^t]. / failed phone:eh / failed spelling:li',
  'breitschwerdt' => 'b.r.igh.ch/w.er.t / [b^b].[r^r].[ei^igh].[t^t].[sc^sh]/ / failed phone:w / failed spelling:hw',
  'brekke' => 'b.r.eh.k / [b^b].[r^r].[e^eh].[k^k] / failed phone:k / failed spelling:kk',
  'brendlinger' => 'b.r.eh.n/d.eh/l.ih.ng/er / [b^b].[r^r].[e^eh].[n^n]/[d^d]. / failed phone:eh / failed spelling:li',
  'brennecke' => 'b.r.eh/n.ih.k / [b^b].[r^r].[e^eh]/[nn^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'brenneman' => 'b.r.eh.n/m.eh.n / [b^b].[r^r].[e^eh].[n^n]/ / failed phone:m / failed spelling:ne',
  'brentlinger' => 'b.r.eh.n/t.eh/l.ih.ng/er / [b^b].[r^r].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:li',
  'brescia' => 'b.r.eh.s/ch.eh / [b^b].[r^r].[e^eh].[sc^s]/ / failed phone:t / failed spelling:ia',
  'bresse' => 'b.r.eh.s / [b^b].[r^r].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'bretthauer' => 'b.r.eh/th.ow/er / [b^b].[r^r].[e^eh]/ / failed phone:th / failed spelling:tt',
  'briarcliff' => 'b.r.igh.r/k.l.ih.f / [b^b].[r^r].[i^igh]. / failed phone:r / failed spelling:ar',
  'briccetti' => 'b.r.ih/ch.eh/t.ee / [b^b].[r^r].[i^ih]/ / failed phone:t / failed spelling:cc',
  'briceno' => 'b.r.ee/ch.eh/n.oh / [b^b].[r^r].[i^ee]/ / failed phone:t / failed spelling:cn',
  'brideau' => 'b.r.ih/d.oh / [b^b].[r^r].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'bridenbaugh' => 'b.r.ih/d.ih.n/b.ow / [b^b].[r^r].[i^ih]/[d^d].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'bridgeford' => 'b.r.ih/j.ih/f.aw.r.d / [b^b].[r^r].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'bridges' => 'b.r.ih/j.eh.z / [b^b].[r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'bridget' => 'b.r.ih/j.eh.t / [b^b].[r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'bridgett' => 'b.r.ih/j.ih.t / [b^b].[r^r].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'bridgham' => 'b.r.ih.j/h.eh.m / [b^b].[r^r].[i^ih].[d^j]/ / failed phone:h / failed spelling:gh',
  'bridging' => 'b.r.ih/j.ih.ng / [b^b].[r^r].[i^ih]/[d^j]. / failed phone:ih / failed spelling:gi',
  'bridgman' => 'b.r.ih.j/m.eh.n / [b^b].[r^r].[i^ih].[d^j]/ / failed phone:m / failed spelling:gm',
  'bridled' => 'b.r.igh/d.eh.l.d / [b^b].[r^r].[i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'briere' => 'b.r.ih.r / [b^b].[r^r].[i^ih]. / failed phone:r / failed spelling:er',
  'brietzke' => 'b.r.ee.t.z.k / [b^b].[r^r].[ie^ee].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'brigadier' => 'b.r.ih/g.eh/d.ih.r / [b^b].[r^r].[i^ih]/[g^g].[a^ah]/[d^d].[i^ih]. / failed phone:r / failed spelling:er',
  'brilliance' => 'b.r.ih/l.ye.eh.n.s / [b^b].[r^r].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'brilliant' => 'b.r.ih/l.ye.eh.n.t / [b^b].[r^r].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'brilliantly' => 'b.r.ih/l.ye.eh.n.t/l.ee / [b^b].[r^r].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'brisbois' => 'b.r.ih.z/b.w.aw / [b^b].[r^r].[i^ih].[s^z]/[b^b]. / failed phone:w / failed spelling:oi',
  'bristled' => 'b.r.ih/s.eh.l.d / [b^b].[r^r].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'bristles' => 'b.r.ih/s.eh.l.z / [b^b].[r^r].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'bristling' => 'b.r.ih/s.eh/l.ih.ng / [b^b].[r^r].[i^ih]/[st^s]. / failed phone:eh / failed spelling:li',
  'britsch' => 'b.r.ih.ch / [b^b].[r^r].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'brixius' => 'b.r.igh.k/s.ee/ih.s / [b^b].[r^r].[i^igh].[x^x]/[i^ee]/ / failed phone:ih / failed spelling:us',
  'brizzolara' => 'b.r.ee.t/s.oh/l.aw/r.eh / [b^b].[r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'broaddus' => 'b.r.aw/d.ih.s / [b^b].[r^r].[oa^aw]/[dd^d]. / failed phone:ih / failed spelling:us',
  'broadpfoot' => 'b.r.aw.d/f.oo.t / [b^b].[r^r].[oa^aw].[d^d]/ / failed phone:f / failed spelling:pf',
  'broadview' => 'b.r.aw.d/v.ye.ue / [b^b].[r^r].[oa^aw].[d^d]/[v^v]. / failed phone:ue / failed spelling:ie',
  'brobdingnagian' => 'b.r.aw.b/d.ih.g/n.ah/g.ee/eh.n / [b^b].[r^r].[o^aw].[b^b]/[d^d].[i^ih]. / failed phone:g / failed spelling:ng',
  'brobdingnagians' => 'b.r.aw.b/d.ih.g/n.ah/g.ee/eh.n.z / [b^b].[r^r].[o^aw].[b^b]/[d^d].[i^ih]. / failed phone:g / failed spelling:ng',
  'brocious' => 'b.r.eh/sh.ee.s / [b^b].[r^r].[o^uh]/[c^sh].[i^ee]. / failed phone:s / failed spelling:ou',
  'brockway' => 'b.r.aw/kw.ay / [b^b].[r^r].[o^aw]/[ck^kw]. / failed phone:ay / failed spelling:wa',
  'brockwell' => 'b.r.aw/kw.eh.l / [b^b].[r^r].[o^aw]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'broderbund' => 'b.r.oh/t.er/b.eh.n.d / [b^b].[r^r].[o^oh]/ / failed phone:t / failed spelling:de',
  'brodersohn' => 'b.r.oh/t.er/s.eh.n / [b^b].[r^r].[o^oh]/ / failed phone:t / failed spelling:de',
  'brodeur' => 'b.r.aw/d.er / [b^b].[r^r].[o^aw]/[d^d]. / failed phone:er / failed spelling:eu',
  'brodie' => 'b.r.oh/t.ee / [b^b].[r^r].[o^oh]/ / failed phone:t / failed spelling:di',
  'brodowski' => 'b.r.eh/d.aw.f/s.k.ee / [b^b].[r^r].[o^uh]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'brodzinski' => 'b.r.eh/j.ih.n/s.k.ee / [b^b].[r^r].[o^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'brooke' => 'b.r.oo.k / [b^b].[r^r].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'brookehill' => 'b.r.oo.k/h.ih.l / [b^b].[r^r].[oo^oo].[k^k]/ / failed phone:h / failed spelling:eh',
  'brookes' => 'b.r.oo.k.s / [b^b].[r^r].[oo^oo].[k^k]. / failed phone:x / failed spelling:ok',
  'brooksville' => 'b.r.oo.k/s.v.ih.l / [b^b].[r^r].[oo^oo].[k^k]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'broome' => 'b.r.ue.m / [b^b].[r^r].[oo^ue].[m^m] / failed phone:m / failed spelling:me',
  'brosch' => 'b.r.aw.sh / [b^b].[r^r].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'brosius' => 'b.r.oh/s.ee/ih.s / [b^b].[r^r].[o^oh]/[s^s].[i^ee]/ / failed phone:ih / failed spelling:us',
  'brosseau' => 'b.r.eh/s.oh / [b^b].[r^r].[o^uh]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'brosz' => 'b.r.aw.sh / [b^b].[r^r].[o^aw].[s^sh] / failed phone:sh / failed spelling:sz',
  'brouhard' => 'b.r.aw/ue/er.d / [b^b].[r^r].[o^aw]/[u^ue]/ / failed phone:er / failed spelling:ha',
  'brouillard' => 'b.r/w.ee/l.aw.r.d / [b^b].[r^r]/ / failed phone:w / failed spelling:ou',
  'brouillet' => 'b.r/w.ee/l.eh.t / [b^b].[r^r]/ / failed phone:w / failed spelling:ou',
  'brouillette' => 'b.r/w.ee/l.eh.t / [b^b].[r^r]/ / failed phone:w / failed spelling:ou',
  'brousseau' => 'b.r.ue/s.oh / [b^b].[r^r].[ou^ue]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'brownsville' => 'b.r.ow.n.z/v.ih.l / [b^b].[r^r].[ow^ow].[n^n].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'brozowski' => 'b.r.eh/z.aw.f/s.k.ee / [b^b].[r^r].[o^uh]/[z^z].[o^aw]. / failed phone:f / failed spelling:ws',
  'brueggeman' => 'b.r.ue.g/m.eh.n / [b^b].[r^r].[ue^ue].[gg^g]/ / failed phone:m / failed spelling:em',
  'brueggemann' => 'b.r.ue.g/m.eh.n / [b^b].[r^r].[ue^ue].[gg^g]/ / failed phone:m / failed spelling:em',
  'bruehl' => 'b.r.ue.l / [b^b].[r^r].[u^ue]. / failed phone:l / failed spelling:eh',
  'bruggeman' => 'b.r.uh.g/m.eh.n / [b^b].[r^r].[u^uh].[gg^g]/ / failed phone:m / failed spelling:em',
  'brugh' => 'b.r.uh / [b^b].[r^r].[u^uh] / failed phone:uh / failed spelling:ug',
  'bruhl' => 'b.r.uh.l / [b^b].[r^r].[u^uh]. / failed phone:l / failed spelling:hl',
  'brundtland' => 'b.r.uh.n.t/l.eh.n.d / [b^b].[r^r].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'brunelle' => 'b.r.eh/n.eh.l / [b^b].[r^r].[u^uh]/[n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'brungardt' => 'b.r.uh.ng/g.aw.r.t / [b^b].[r^r].[u^uh].[n^ng]/[g^g].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'brunjes' => 'b.r.eh.n/zh.ee.z / [b^b].[r^r].[u^uh].[n^n]/ / failed phone:zh / failed spelling:je',
  'brunke' => 'b.r.uh.ng.k / [b^b].[r^r].[u^uh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'brunnhilde' => 'b.r.uh.n/h.ih.l.d / [b^b].[r^r].[u^uh].[nn^n]/[h^h].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'bruske' => 'b.r.uh.s.k / [b^b].[r^r].[u^uh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'brusseau' => 'b.r.eh/s.oh / [b^b].[r^r].[u^uh]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'brutsche' => 'b.r.uh/ch.ee / [b^b].[r^r].[u^uh]/[t^t].[sc^sh]. / failed phone:ee / failed spelling:he',
  'bruun' => 'b.r.ue.n / [b^b].[r^r].[u^ue]. / failed phone:n / failed spelling:un',
  'bruzzese' => 'b.r.ue.t/s.ay/z.ee / [b^b].[r^r].[u^ue]. / failed phone:t / failed spelling:zz',
  'brydges' => 'b.r.ih/j.ih.z / [b^b].[r^r].[y^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'brzezinski' => 'b.r.ih/z.ih.n/s.k.ee / [b^b].[r^r]. / failed phone:ih / failed spelling:ze',
  'brzoska' => 'b.r.oh/s.k.eh / [b^b].[r^r]. / failed phone:oh / failed spelling:zo',
  'brzozowski' => 'b.r.eh/z.aw.f/s.k.ee / [b^b].[r^r]. / failed phone:eh / failed spelling:zo',
  'brzycki' => 'b.r.ih.t/s.k.ee / [b^b].[r^r]. / failed phone:ih / failed spelling:zy',
  'bt' => 'b.ee/t.ee / [b^b]. / failed phone:ee / failed spelling:t',
  'bta' => 'b.ee/t.ee/ay / [b^b]. / failed phone:ee / failed spelling:ta',
  'bubbled' => 'b.uh/b.eh.l.d / [b^b].[u^uh]/[bb^b]. / failed phone:eh / failed spelling:le',
  'bubbles' => 'b.uh/b.eh.l.z / [b^b].[u^uh]/[bb^b]. / failed phone:eh / failed spelling:le',
  'bubbling' => 'b.uh/b.eh/l.ih.ng / [b^b].[u^uh]/[bb^b]. / failed phone:eh / failed spelling:li',
  'buccellato' => 'b.ue/ch.eh/l.aw/t.oh / [b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'buccheri' => 'b.ue/k.air/ee / [b^b].[u^ue]/[cc^k]. / failed phone:air / failed spelling:he',
  'bucci' => 'b.ue/ch.ee / [b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'bucciarelli' => 'b.ue/ch.er/eh/l.ee / [b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'buccieri' => 'b.ue/ch.ih/r.ee / [b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'buccino' => 'b.ue/ch.ee/n.oh / [b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'bucek' => 'b.ue/ch.eh.k / [b^b].[u^ue]/ / failed phone:t / failed spelling:ce',
  'buche' => 'b.uh.ch / [b^b].[u^uh].[ch^ch] / failed phone:t / failed spelling:ch',
  'buchler' => 'b.uh/k.eh/l.er / [b^b].[u^uh]/[ch^k]. / failed phone:eh / failed spelling:le',
  'buchwald' => 'b.uh/kw.aw.l.d / [b^b].[u^uh]/ / failed phone:kw / failed spelling:ch',
  'buckled' => 'b.uh/k.eh.l.d / [b^b].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'buckler' => 'b.uh/k.eh/l.er / [b^b].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'buckles' => 'b.uh/k.eh.l.z / [b^b].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'buckwalter' => 'b.uh/kw.eh.l/t.er / [b^b].[u^uh]/[ck^kw]. / failed phone:eh / failed spelling:wa',
  'buckwheat' => 'b.uh/kw.ee.t / [b^b].[u^uh]/[ck^kw]. / failed phone:ee / failed spelling:wh',
  'buczek' => 'b.uh/ch.eh.k / [b^b].[u^uh]/ / failed phone:t / failed spelling:cz',
  'buczkowski' => 'b.eh.ch/k.aw.f/s.k.ee / [b^b].[u^uh]. / failed phone:t / failed spelling:cz',
  'buczynski' => 'b.eh/ch.ih.n/s.k.ee / [b^b].[u^uh]/ / failed phone:t / failed spelling:cz',
  'budde' => 'b.uh.d / [b^b].[u^uh].[dd^d] / failed phone:d / failed spelling:dd',
  'buddha' => 'b.ue/d.eh / [b^b].[u^ue]/[dd^d]. / failed phone:eh / failed spelling:ha',
  'buddhism' => 'b.ue/d.ih/z.eh.m / [b^b].[u^ue]/[dd^d]. / failed phone:ih / failed spelling:hi',
  'buddhist' => 'b.ue/d.eh.s.t / [b^b].[u^ue]/[dd^d]. / failed phone:eh / failed spelling:hi',
  'buddhists' => 'b.ue/d.eh.s.t.s / [b^b].[u^ue]/[dd^d]. / failed phone:eh / failed spelling:hi',
  'budget' => 'b.uh/j.eh.t / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budgetary' => 'b.uh/j.eh/t.air/ee / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budgeted' => 'b.uh/j.eh/t.eh.d / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budgeteers' => 'b.uh/j.eh/t.ih.r.z / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budgeting' => 'b.uh/j.eh/t.ih.ng / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budgets' => 'b.uh/j.eh.t.s / [b^b].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'budging' => 'b.uh/j.ih.ng / [b^b].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'budiman' => 'b.ye.ue/t.ih/m.eh.n / [b^b].[u^ue]/ / failed phone:t / failed spelling:di',
  'budzinski' => 'b.eh/j.ih.n/s.k.ee / [b^b].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'budzynski' => 'b.eh/j.ih.n/s.k.ee / [b^b].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zy',
  'bueche' => 'b.ue.ch / [b^b].[ue^ue].[ch^ch] / failed phone:t / failed spelling:ch',
  'buechler' => 'b.ye.ue/k.eh/l.er / [b^b].[ue^ue]/[ch^k]. / failed phone:eh / failed spelling:le',
  'buehl' => 'b.ye.ue.l / [b^b].[u^ue]. / failed phone:l / failed spelling:eh',
  'buehler' => 'b.ye.ue/l.er / [b^b].[u^ue]/ / failed phone:l / failed spelling:eh',
  'buehrer' => 'b.ye.ue/h.er / [b^b].[ue^ue]/[h^h].[re^er] / failed phone:er / failed spelling:re',
  'buehring' => 'b.ye.ue/r.ih.ng / [b^b].[u^ue]/ / failed phone:r / failed spelling:eh',
  'buehrle' => 'b.ye.ue/r.eh.l / [b^b].[u^ue]/ / failed phone:r / failed spelling:eh',
  'buescher' => 'b.ye.ue/sh.er / [b^b].[ue^ue]/[sc^sh]. / failed phone:er / failed spelling:he',
  'buffeted' => 'b.eh/f.ay.d / [b^b].[u^uh]/[ff^f].[e^ay].[t^d] / failed phone:d / failed spelling:te',
  'buffeting' => 'b.eh/f.ay/ih.ng / [b^b].[u^uh]/[ff^f].[e^ay]/ / failed phone:ih / failed spelling:ti',
  'bugge' => 'b.uh.g / [b^b].[u^uh].[gg^g] / failed phone:g / failed spelling:gg',
  'bugles' => 'b.ye.ue/g.eh.l.z / [b^b].[u^ue]/[g^g]. / failed phone:eh / failed spelling:le',
  'bugling' => 'b.ye.ue/g.eh/l.ih.ng / [b^b].[u^ue]/[g^g]. / failed phone:eh / failed spelling:li',
  'buhl' => 'b.ye.ue.l / [b^b].[u^ue]. / failed phone:l / failed spelling:hl',
  'buhler' => 'b.ue/l.er / [b^b].[u^ue]/ / failed phone:l / failed spelling:hl',
  'buhman' => 'b.uh/m.eh.n / [b^b].[u^uh]/ / failed phone:m / failed spelling:hm',
  'buhr' => 'b.ye.oo.r / [b^b].[u^ue]. / failed phone:r / failed spelling:hr',
  'buhrman' => 'b.oo.r/m.eh.n / [b^b].[u^oo]. / failed phone:r / failed spelling:hr',
  'buhrow' => 'b.oo/r.oh / [b^b].[u^oo]/ / failed phone:r / failed spelling:hr',
  'bujak' => 'b.ue/ye.eh.k / [b^b].[u^ue]/ / failed phone:ue / failed spelling:ja',
  'bukowski' => 'b.ye.ue/k.aw.f/s.k.ee / [b^b].[u^ue]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'bumblebee' => 'b.uh.m/b.eh.l/b.ee / [b^b].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'bumbling' => 'b.uh.m/b.eh/l.ih.ng / [b^b].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'bunde' => 'b.uh.n.d / [b^b].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'bundled' => 'b.uh.n/d.eh.l.d / [b^b].[u^uh].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'bundles' => 'b.uh.n/d.eh.l.z / [b^b].[u^uh].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'bundling' => 'b.uh.n/d.eh/l.ih.ng / [b^b].[u^uh].[n^n]/[d^d]. / failed phone:eh / failed spelling:li',
  'bundschuh' => 'b.uh.n.d/sh.ue / [b^b].[u^uh].[n^n].[d^d]/[sc^sh]. / failed phone:ue / failed spelling:hu',
  'bungled' => 'b.uh.ng/g.eh.l.d / [b^b].[u^uh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'bungling' => 'b.uh.ng/g.eh/l.ih.ng / [b^b].[u^uh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'bunke' => 'b.uh.ng.k / [b^b].[u^uh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'bunzl' => 'b.uh.n/z.eh.l / [b^b].[u^uh].[n^n]/[z^z]. / failed phone:eh / failed spelling:l',
  'buol' => 'b.oh.l / [b^b]. / failed phone:oh / failed spelling:uo',
  'buoy' => 'b.ue/ee / [b^b].[u^ue]/ / failed phone:ee / failed spelling:oy',
  'buoyancy' => 'b.oy/eh.n/s.ee / [b^b]. / failed phone:oy / failed spelling:uo',
  'buoyant' => 'b.oy/eh.n.t / [b^b]. / failed phone:oy / failed spelling:uo',
  'buoyed' => 'b.ue/ee.d / [b^b].[u^ue]/ / failed phone:ee / failed spelling:oy',
  'buoying' => 'b.oy/ih.ng / [b^b]. / failed phone:oy / failed spelling:uo',
  'buoys' => 'b.ue/ee.z / [b^b].[u^ue]/ / failed phone:ee / failed spelling:oy',
  'burandt' => 'b.ye.ue/r.eh.n.t / [b^b].[u^ue]/[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'burckhardt' => 'b.er.k/h.aw.r.t / [b^b].[ur^er].[ck^k]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'burdensome' => 'b.er/d.eh.n/s.eh.m / [b^b].[ur^er]/[d^d].[e^eh].[n^n]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'bureaucrat' => 'b.ye.oo/r.eh/k.r.ah.t / [b^b].[u^ue]/[r^r].[e^eh]/ / failed phone:k / failed spelling:au',
  'bureaucratic' => 'b.ye.oo/r.eh/k.r.ah/t.ih.k / [b^b].[u^ue]/[r^r].[e^eh]/ / failed phone:k / failed spelling:au',
  'bureaucrats' => 'b.ye.oo/r.eh/k.r.ah.t.s / [b^b].[u^ue]/[r^r].[e^eh]/ / failed phone:k / failed spelling:au',
  'burghardt' => 'b.er/g.aw.r.t / [b^b].[ur^er]/[gh^g].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'burke' => 'b.er.k / [b^b].[ur^er].[k^k] / failed phone:k / failed spelling:ke',
  'burkes' => 'b.er.k.s / [b^b].[ur^er].[k^k]. / failed phone:s / failed spelling:es',
  'burkhardt' => 'b.er.k/h.aw.r.t / [b^b].[ur^er].[k^k]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'burleigh' => 'b.er/l.eh / [b^b].[ur^er]/[le^l].[i^ih] / failed phone:eh / failed spelling:ig',
  'burnham' => 'b.er/n.eh.m / [b^b].[ur^er]/[n^n]. / failed phone:eh / failed spelling:ha',
  'burridge' => 'b.aw/r.ih.j / [b^b]. / failed phone:aw / failed spelling:ur',
  'burright' => 'b.aw/r.igh.t / [b^b]. / failed phone:aw / failed spelling:ur',
  'burrill' => 'b.aw/r.eh.l / [b^b]. / failed phone:aw / failed spelling:ur',
  'burriss' => 'b.er/ih/s.ih.z / [b^b].[urr^er]/[i^ih]/[ss^s]. / failed phone:ih / failed spelling:',
  'bursch' => 'b.er.sh / [b^b].[ur^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'busalacchi' => 'b.ue/s.aw/l.aw/k.ee / [b^b].[u^ue]/[s^s].[a^aw]/[l^l].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'busam' => 'b.ih/s.eh.m / [b^b]. / failed phone:ih / failed spelling:us',
  'buscemi' => 'b.ue.s/ch.eh/m.ee / [b^b].[u^ue].[sc^s]/ / failed phone:t / failed spelling:em',
  'busch' => 'b.oo.sh / [b^b].[u^oo].[sc^sh] / failed phone:sh / failed spelling:sc',
  'buschbaum' => 'b.oo.sh/b.ow.m / [b^b].[u^oo].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'busche' => 'b.uh.sh / [b^b].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'buscher' => 'b.ue/sh.er / [b^b].[u^ue]/[sc^sh]. / failed phone:er / failed spelling:he',
  'buschman' => 'b.uh/sh.m.eh.n / [b^b].[u^uh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'buschmann' => 'b.uh/sh.m.eh.n / [b^b].[u^uh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'buseman' => 'b.ih/s.m.eh.n / [b^b]. / failed phone:ih / failed spelling:us',
  'busenbark' => 'b.ih/s.ih.n/b.aw.r.k / [b^b]. / failed phone:ih / failed spelling:us',
  'buser' => 'b.ih/s.er / [b^b]. / failed phone:ih / failed spelling:us',
  'busick' => 'b.ih/s.ih.k / [b^b]. / failed phone:ih / failed spelling:us',
  'busied' => 'b.ih/z.ee.d / [b^b]. / failed phone:ih / failed spelling:us',
  'busier' => 'b.ih/z.ee/er / [b^b]. / failed phone:ih / failed spelling:us',
  'busiest' => 'b.ih/z.ee/eh.s.t / [b^b]. / failed phone:ih / failed spelling:us',
  'busily' => 'b.ih/z.eh/l.ee / [b^b]. / failed phone:ih / failed spelling:us',
  'business' => 'b.ih.z/n.eh.s / [b^b]. / failed phone:ih / failed spelling:us',
  'businesses' => 'b.ih.z/n.eh/s.eh.z / [b^b]. / failed phone:ih / failed spelling:us',
  'businessland' => 'b.ih.z/n.ih/s.l.ah.n.d / [b^b]. / failed phone:ih / failed spelling:us',
  'businesslike' => 'b.ih.z/n.ih/s.l.igh.k / [b^b]. / failed phone:ih / failed spelling:us',
  'businessman' => 'b.ih.z/n.eh/s.m.ah.n / [b^b]. / failed phone:ih / failed spelling:us',
  'businessmen' => 'b.ih.z/n.ih/s.m.eh.n / [b^b]. / failed phone:ih / failed spelling:us',
  'businesswoman' => 'b.ih.z/n.ih/s.w.oo/m.eh.n / [b^b]. / failed phone:ih / failed spelling:us',
  'buske' => 'b.uh.s.k / [b^b].[u^uh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'busler' => 'b.uh/s.eh/l.er / [b^b].[u^uh]/[s^s]. / failed phone:eh / failed spelling:le',
  'busse' => 'b.uh.s / [b^b].[u^uh].[ss^s] / failed phone:s / failed spelling:ss',
  'bustling' => 'b.uh/s.eh/l.ih.ng / [b^b].[u^uh]/[st^s]. / failed phone:eh / failed spelling:li',
  'busy' => 'b.ih/z.ee / [b^b]. / failed phone:ih / failed spelling:us',
  'buterbaugh' => 'b.ye.ue/t.er/b.ow / [b^b].[u^ue]/[te^t].[r^er]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'buthelezi' => 'b.ue/t.eh/l.ay/z.ee / [b^b].[u^ue]/[t^t]. / failed phone:eh / failed spelling:he',
  'butkiewicz' => 'b.uh.t/k.eh/v.ih.ch / [b^b].[u^uh].[t^t]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'butkus' => 'b.uh.t/k.ih.s / [b^b].[u^uh].[t^t]/[k^k]. / failed phone:ih / failed spelling:us',
  'butsch' => 'b.uh.ch / [b^b].[u^uh].[t^t]. / failed phone:t / failed spelling:ts',
  'butterbaugh' => 'b.uh/t.er/b.ow / [b^b].[u^uh]/[tte^t].[r^er]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'buttonville' => 'b.uh/t.eh.n/v.ih.l / [b^b].[u^uh]/[tt^t].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'buus' => 'b.ue.z / [b^b].[u^ue]. / failed phone:z / failed spelling:us',
  'buysse' => 'b.igh.s / [b^b].[uy^igh].[ss^s] / failed phone:s / failed spelling:ss',
  'buzzelli' => 'b.ue.t/s.eh/l.ee / [b^b].[u^ue]. / failed phone:t / failed spelling:zz',
  'bykowski' => 'b.ih/k.aw.f/s.k.ee / [b^b].[y^ih]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'c' => 's.ee / [c^s]. / failed phone:ee / failed spelling:',
  'caballero' => 'k.ah/b.eh/ye.air/oh / [c^k].[a^ah]/[b^b].[a^ah]/ / failed phone:ye / failed spelling:ll',
  'cabaret' => 'k.ah/b.er/ay / [c^k].[a^ah]/[b^b].[ar^er]/[e^ay] / failed phone:ay / failed spelling:et',
  'cabernet' => 'k.ah/b.er/n.ay / [c^k].[a^ah]/[b^b].[er^er]/[n^n].[e^ay] / failed phone:ay / failed spelling:t',
  'cabinetry' => 'k.ah.b/n.eh/t.r.ee / [c^k].[a^ah].[b^b]/ / failed phone:n / failed spelling:in',
  'cablecomms' => 'k.ay/b.eh.l/k.aw.m.z / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cabled' => 'k.ay/b.eh.l.d / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cablegram' => 'k.ay/b.eh.l/g.r.ah.m / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cableone' => 'k.ay/b.eh.l/w.uh.n / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cabler' => 'k.ay/b.eh/l.er / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cables' => 'k.ay/b.eh.l.z / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cablesystems' => 'k.ay/b.eh.l/s.ih/s.t.eh.m.z / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cabletron' => 'k.ay/b.eh.l/t.r.aw.n / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cablevision' => 'k.ay/b.eh.l/v.ih/zh.eh.n / [c^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'cabriolet' => 'k.ah/b.r.ee/oh/l.ay / [c^k].[a^ah]/[b^b].[r^r].[i^ee]/[o^oh]/[l^l].[e^ay] / failed phone:ay / failed spelling:t',
  'caccia' => 'k.aw/ch.eh / [c^k].[a^aw]/ / failed phone:t / failed spelling:cc',
  'cacciatore' => 'k.aw/ch.eh/t.aw/r.ee / [c^k].[a^aw]/ / failed phone:t / failed spelling:cc',
  'cacciola' => 'k.aw.k/ch.oh/l.eh / [c^k].[a^aw].[cc^k]/ / failed phone:t / failed spelling:io',
  'cachet' => 'k.ah/sh.ay / [c^k].[a^ah]/[ch^sh].[e^ay] / failed phone:ay / failed spelling:he',
  'cacioppo' => 'k.aw/ch.oh/p.oh / [c^k].[a^aw]/ / failed phone:t / failed spelling:ci',
  'cackling' => 'k.ah/k.eh/l.ih.ng / [c^k].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'cadieux' => 'k.ah/d.ee/oh / [c^k].[a^ah]/[d^d].[ie^ee]/ / failed phone:oh / failed spelling:ux',
  'caen' => 'k.ah.n / [c^k].[a^ah]. / failed phone:n / failed spelling:en',
  'caesar' => 's.ee/z.er / [c^s]. / failed phone:ee / failed spelling:ae',
  'caesarea' => 'k.ay/s.er/ee/eh / [c^k].[a^ay]/ / failed phone:s / failed spelling:es',
  'caesarean' => 'k.ay/s.er/ee.n / [c^k].[a^ay]/ / failed phone:s / failed spelling:es',
  'caesareans' => 'k.ay/s.er/ee.n.z / [c^k].[a^ay]/ / failed phone:s / failed spelling:es',
  'caesars' => 's.ee/z.er.z / [c^s]. / failed phone:ee / failed spelling:ae',
  'caetano' => 'k.eh/t.aw/n.oh / [c^k].[a^ah]/ / failed phone:t / failed spelling:et',
  'caggiano' => 'k.aw/j.ee/aw/n.oh / [c^k].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'cahouet' => 'k.eh/h.ue.t / [c^k].[a^ah]/[h^h].[ou^ue]. / failed phone:t / failed spelling:et',
  'caiazzo' => 'k.aw/ye.aw/z.oh / [c^k].[a^aw]/ / failed phone:ye / failed spelling:ia',
  'caicedo' => 'k.eh/ch.ay/d.oh / [c^k].[a^ah]/ / failed phone:t / failed spelling:ic',
  'caillouet' => 'k.ay/l.ue.t / [c^k].[ai^ay]/[ll^l].[ou^ue]. / failed phone:t / failed spelling:et',
  'caisse' => 'k.ay.s / [c^k].[ai^ay].[ss^s] / failed phone:s / failed spelling:is',
  'calais' => 'k.eh/l.ay / [c^k].[a^ah]/[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'caldeira' => 'k.aw.l/d.air/eh / [c^k].[a^aw].[l^l]/[d^d]. / failed phone:air / failed spelling:ei',
  'calif' => 'k.ah/l.eh/f.aw.r/n.ye.eh / [c^k].[a^ah]/[l^l].[i^ih]/[f^f]. / failed phone:oh / failed spelling:',
  'california' => 'k.ah/l.eh/f.aw.r/n.ye.eh / [c^k].[a^ah]/[l^l].[i^ih]/[f^f].[o^oh].[r^r]/[n^n]. / failed phone:ue / failed spelling:ia',
  'californian' => 'k.ah/l.ih/f.aw.r/n.ye.eh.n / [c^k].[a^ah]/[l^l].[i^ih]/[f^f].[o^oh].[r^r]/[n^n]. / failed phone:ue / failed spelling:ia',
  'californians' => 'k.ah/l.ih/f.aw.r/n.ye.eh.n.z / [c^k].[a^ah]/[l^l].[i^ih]/[f^f].[o^oh].[r^r]/[n^n]. / failed phone:ue / failed spelling:ia',
  'caligiuri' => 'k.ah/l.eh/j.ih/r.ee / [c^k].[a^ah]/[l^l].[i^ih]/[g^j].[i^ih]/ / failed phone:r / failed spelling:ur',
  'callaghan' => 'k.ah/l.eh/h.ah.n / [c^k].[a^ah]/[ll^l].[a^ah]/ / failed phone:h / failed spelling:gh',
  'callais' => 'k.eh/l.ay / [c^k].[a^ah]/[ll^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'calle' => 'k.ay.l / [c^k].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'calleja' => 'k.aw/l.ay/ye.eh / [c^k].[a^aw]/[ll^l].[e^ay]/ / failed phone:ue / failed spelling:ja',
  'callejas' => 'k.aw/l.ay/ye.aw.z / [c^k].[a^aw]/[ll^l].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'calves' => 'k.ah.v.z / [c^k].[a^ah]. / failed phone:v / failed spelling:lv',
  'calving' => 'k.ah/v.ih.ng / [c^k].[a^ah]/ / failed phone:v / failed spelling:lv',
  'camejo' => 'k.aw/m.ay/ye.oh / [c^k].[a^aw]/[m^m].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'camille' => 'k.eh/m.ee.l / [c^k].[a^ah]/[m^m].[i^ee].[ll^l] / failed phone:l / failed spelling:ll',
  'camouflaging' => 'k.ah/m.eh/f.l.aw/zh.ih.ng / [c^k].[a^ah]/[m^m].[ou^eh]/[f^f].[l^l].[a^aw]/ / failed phone:zh / failed spelling:gi',
  'campbell' => 'k.ah.m/b.eh.l / [c^k].[a^ah].[m^m]/ / failed phone:b / failed spelling:pb',
  'campbells' => 'k.ah.m/b.eh.l.z / [c^k].[a^ah].[m^m]/ / failed phone:b / failed spelling:pb',
  'camus' => 'k.ah/m.ih.s / [c^k].[a^ah]/[m^m]. / failed phone:ih / failed spelling:us',
  'canaan' => 'k.ay/n.eh.n / [c^k].[a^ay]/[n^n].[a^ah]. / failed phone:n / failed spelling:an',
  'canaanite' => 'k.ay/n.eh/n.igh.t / [c^k].[a^ay]/[n^n].[a^ah]/ / failed phone:n / failed spelling:an',
  'canace' => 'k.aw/n.aw/ch.ee / [c^k].[a^aw]/[n^n].[a^aw]/ / failed phone:t / failed spelling:ce',
  'canadienne' => 'k.eh/n.ah/d.ee/eh.n / [c^k].[a^ah]/[n^n].[a^ah]/[d^d].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'cancienne' => 'k.aw.n/ch.ee/eh.n / [c^k].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'cancilla' => 'k.aw.n/ch.ih/l.eh / [c^k].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'cancino' => 'k.aw.n/ch.ee/n.oh / [c^k].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'candlelight' => 'k.ah.n/d.eh.l/l.igh.t / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'candlemaker' => 'k.ah.n/d.eh.l/m.ay/k.er / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'candler' => 'k.ah.n/d.eh/l.er / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'candles' => 'k.ah.n/d.eh.l.z / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'candlestick' => 'k.ah.n/d.eh.l/s.t.ih.k / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'candlesticks' => 'k.ah.n/d.eh.l/s.t.ih.k.s / [c^k].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'cannizzaro' => 'k.aw/n.ee.t/s.aw/r.oh / [c^k].[a^aw]/[nn^n].[i^ee]. / failed phone:t / failed spelling:zz',
  'canoe' => 'k.eh/n.ue / [c^k].[a^ah]/[n^n].[o^ue] / failed phone:ue / failed spelling:oe',
  'canoeing' => 'k.eh/n.ue/ih.ng / [c^k].[a^ah]/[n^n].[o^ue]/[e^ih]. / failed phone:ng / failed spelling:in',
  'canoeist' => 'k.eh/n.ue/eh.s.t / [c^k].[a^ah]/[n^n].[o^ue]/[e^eh]. / failed phone:s / failed spelling:is',
  'cansler' => 'k.ah.n/s.eh/l.er / [c^k].[a^ah].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'cantrelle' => 'k.eh.n/t.r.eh.l / [c^k].[a^ah].[n^n]/[t^t].[r^r].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'cantv' => 'k.ah.n/t.ee/v.ee / [c^k].[a^ah].[n^n]/[t^t]. / failed phone:ee / failed spelling:v',
  'cao' => 'k.ow / [c^k]. / failed phone:ow / failed spelling:ao',
  'caouette' => 'k.ay/ue.t / [c^k].[a^ay]/[ou^ue]. / failed phone:t / failed spelling:et',
  'capelle' => 'k.eh/p.eh.l / [c^k].[a^ah]/[p^p].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'capizzi' => 'k.aw/p.ee.t/s.ee / [c^k].[a^aw]/[p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'caples' => 'k.ay/p.eh.l.z / [c^k].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'caplinger' => 'k.ay/p.eh/l.ih.ng/er / [c^k].[a^ay]/[p^p]. / failed phone:eh / failed spelling:li',
  'capozzoli' => 'k.aw/p.oh.t/s.oh/l.ee / [c^k].[a^aw]/[p^p].[o^oh]. / failed phone:t / failed spelling:zz',
  'cappuccino' => 'k.ah/p.ue/ch.ee/n.oh / [c^k].[a^ah]/[pp^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'cappuccio' => 'k.aw/p.ue/ch.ee/oh / [c^k].[a^aw]/[pp^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'capriciously' => 'k.eh/p.r.ih/sh.ih/s.l.ee / [c^k].[a^ah]/[p^p].[r^r].[i^ih]/[c^sh].[i^ih]/ / failed phone:s / failed spelling:ou',
  'caq' => 'k.ah.k / [c^k].[a^ah]. / failed phone:k / failed spelling:q',
  'caracci' => 'k.aw/r.aw/ch.ee / [c^k].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:cc',
  'caracciolo' => 'k.aw/r.aw.k/ch.oh/l.oh / [c^k].[a^aw]/[r^r].[a^aw].[cc^k]/ / failed phone:t / failed spelling:io',
  'caravelle' => 'k.air/eh/v.eh.l / [c^k].[ar^air]/[a^ah]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'carbajal' => 'k.aw.r/b.aw/ye.ah.l / [c^k].[a^oh].[r^r]/[b^b].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'carbonneau' => 'k.aw.r/b.eh/n.oh / [c^k].[a^oh].[r^r]/[b^b].[o^uh]/[n^n]. / failed phone:oh / failed spelling:ne',
  'carcione' => 'k.aw.r/ch.oh/n.ee / [c^k].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'carducci' => 'k.aw.r/d.ue/ch.ee / [c^k].[a^oh].[r^r]/[d^d].[u^ue]/ / failed phone:t / failed spelling:cc',
  'caresse' => 'k.aw/r.eh.s / [c^k].[a^aw]/[r^r].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'carinii' => 'k.air/ee/n.ee / [c^k].[ar^air]/[i^ee]/[n^n].[i^ee] / failed phone:ee / failed spelling:ii',
  'carlisle' => 'k.aw.r/l.igh.l / [c^k].[a^oh].[r^r]/[l^l].[i^igh]. / failed phone:l / failed spelling:sl',
  'carlstadt' => 'k.aw.r.l/s.t.ah.t / [c^k].[a^oh].[r^r].[l^l]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'carlucci' => 'k.aw.r/l.ue/ch.ee / [c^k].[a^oh].[r^r]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'carnaud' => 'k.aw.r/n.aw.b / [c^k].[a^oh].[r^r]/[n^n].[a^aw]. / failed phone:b / failed spelling:ud',
  'carneiro' => 'k.aw.r/n.air/oh / [c^k].[a^oh].[r^r]/[ne^n]. / failed phone:air / failed spelling:ir',
  'caroche' => 'k.er/oh.ch / [c^k].[ar^er]/[o^oh].[ch^ch] / failed phone:t / failed spelling:ch',
  'carpencic' => 'k.aw.r/p.eh.n/ch.ih.k / [c^k].[a^oh].[r^r]/[p^p].[e^eh].[n^n]/ / failed phone:t / failed spelling:ci',
  'carpentieri' => 'k.aw.r/p.eh.n/t.ih/r.ee / [c^k].[a^oh].[r^r]/[p^p].[e^eh].[n^n]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'carre' => 'k.aw.r / [c^k].[a^oh].[r^r] / failed phone:r / failed spelling:rr',
  'carreira' => 'k.aw/r.air/eh / [c^k].[a^aw]/[r^r]. / failed phone:air / failed spelling:re',
  'carreiro' => 'k.aw/r.air/oh / [c^k].[a^aw]/[r^r]. / failed phone:air / failed spelling:re',
  'carriage' => 'k.ah/r.ih.j / [c^k].[a^ah]/[rr^r].[i^ih]. / failed phone:j / failed spelling:ag',
  'carriages' => 'k.ah/r.ih/j.ih.z / [c^k].[a^ah]/[rr^r].[i^ih]/ / failed phone:j / failed spelling:ag',
  'carriere' => 'k.aw/r.ih/r.ee / [c^k].[a^aw]/[rr^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'carriero' => 'k.aw/r.ih/r.oh / [c^k].[a^aw]/[rr^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'cartaya' => 'k.aw.r/t.igh/eh / [c^k].[a^oh].[r^r]/[t^t]. / failed phone:igh / failed spelling:ay',
  'cartersville' => 'k.aw.r/t.er.z/v.ih.l / [c^k].[a^oh].[r^r]/[te^t].[r^er].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'cartridges' => 'k.aw.r/t.r.eh/j.eh.z / [c^k].[a^oh].[r^r]/[t^t].[r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'carucci' => 'k.aw/r.ue/ch.ee / [c^k].[a^aw]/[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'carvajal' => 'k.aw.r/v.aw/ye.ah.l / [c^k].[a^oh].[r^r]/[v^v].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'carville' => 'k.aw.r/v.ih.l / [c^k].[a^oh].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'casazza' => 'k.aw/s.aw.t/s.eh / [c^k].[a^aw]/[s^s].[a^aw]. / failed phone:t / failed spelling:zz',
  'casciano' => 'k.aw.s/ch.ee/aw/n.oh / [c^k].[a^aw].[sc^s]/ / failed phone:t / failed spelling:ia',
  'casciato' => 'k.aw.s/ch.aw/t.oh / [c^k].[a^aw].[sc^s]/ / failed phone:t / failed spelling:ia',
  'cashier' => 'k.ah/sh.ih.r / [c^k].[a^ah]/[sh^sh].[i^ih]. / failed phone:r / failed spelling:er',
  'cashiered' => 'k.ah/sh.ih.r.d / [c^k].[a^ah]/[sh^sh].[i^ih]. / failed phone:r / failed spelling:er',
  'cashiers' => 'k.ah/sh.ih.r.z / [c^k].[a^ah]/[sh^sh].[i^ih]. / failed phone:r / failed spelling:er',
  'cashion' => 'k.aw/sh.ee.n / [c^k].[a^aw]/[sh^sh].[i^ee]. / failed phone:n / failed spelling:on',
  'cashmere' => 'k.ah.zh/m.ih.r / [c^k].[a^ah].[s^zh]/ / failed phone:m / failed spelling:hm',
  'casler' => 'k.ah/s.eh/l.er / [c^k].[a^ah]/[s^s]. / failed phone:eh / failed spelling:le',
  'casstevens' => 'k.aw/s.t.ay/v.ay/eh.n.z / [c^k].[a^aw]/[ss^s].[t^t].[e^ay]/[v^v].[e^ay]/ / failed phone:eh / failed spelling:ns',
  'castellucci' => 'k.aw/s.t.eh/l.ue/ch.ee / [c^k].[a^aw]/[s^s].[t^t].[e^eh]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'castelluccio' => 'k.aw/s.t.eh/l.ue/ch.ee/oh / [c^k].[a^aw]/[s^s].[t^t].[e^eh]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'castille' => 'k.ah/s.t.ih.l / [c^k].[a^ah]/[s^s].[t^t].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'castilleja' => 'k.aw/s.t.ee/l.ay/ye.eh / [c^k].[a^aw]/[s^s].[t^t].[i^ee]/[ll^l].[e^ay]/ / failed phone:ue / failed spelling:ja',
  'castillo' => 'k.ah/s.t.ee/oh / [c^k].[a^ah]/[s^s].[t^t].[i^ee]/ / failed phone:oh / failed spelling:ll',
  'castleberry' => 'k.ah/s.eh.l/b.air/ee / [c^k].[a^ah]/[st^s]. / failed phone:eh / failed spelling:le',
  'castleman' => 'k.ah/s.eh.l/m.eh.n / [c^k].[a^ah]/[st^s]. / failed phone:eh / failed spelling:le',
  'castles' => 'k.ah/s.eh.l.z / [c^k].[a^ah]/[st^s]. / failed phone:eh / failed spelling:le',
  'castrucci' => 'k.eh/s.t.r.ue/ch.ee / [c^k].[a^ah]/[s^s].[t^t].[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'cataclysm' => 'k.ah/t.eh/k.l.ih/s.eh.m / [c^k].[a^ah]/[t^t].[a^ah]/[c^k].[l^l].[y^ih]/[s^s]. / failed phone:eh / failed spelling:m',
  'catain' => 'k.ah/t.ih.n / [c^k].[a^ah]/[t^t].[a^ih]. / failed phone:n / failed spelling:in',
  'catalonia' => 'k.ah/t.eh/l.oh/n.ye.eh / [c^k].[a^ah]/[t^t].[a^ah]/[l^l].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'catania' => 'k.eh/t.ay/n.ye.eh / [c^k].[a^ah]/[t^t].[a^ay]/[n^n]. / failed phone:ue / failed spelling:ia',
  'caterpillar' => 'k.ah/t.eh/p.ih/l.er / [c^k].[a^ah]/[t^t].[e^eh]/ / failed phone:p / failed spelling:rp',
  'caterpillars' => 'k.ah/t.eh/p.ih/l.er.z / [c^k].[a^ah]/[t^t].[e^eh]/ / failed phone:p / failed spelling:rp',
  'caterpiller' => 'k.ah/t.eh/p.ih/l.er / [c^k].[a^ah]/[t^t].[e^eh]/ / failed phone:p / failed spelling:rp',
  'catharine' => 'k.ah/th.r.ih.n / [c^k].[a^ah]/[th^th].[a^ih]. / failed phone:n / failed spelling:ri',
  'catharines' => 'k.ah/th.r.ih.n.z / [c^k].[a^ah]/[th^th].[a^ih]. / failed phone:n / failed spelling:ri',
  'cathmor' => 'k.ah/th.eh/m.er / [c^k].[a^ah]/[th^th]. / failed phone:eh / failed spelling:mo',
  'catholic' => 'k.ah.th/l.ih.k / [c^k].[a^ah].[th^th]/ / failed phone:l / failed spelling:ol',
  'catholics' => 'k.ah.th/l.ih.k.s / [c^k].[a^ah].[th^th]/ / failed phone:l / failed spelling:ol',
  'cattlemen' => 'k.ah/t.eh.l/m.eh.n / [c^k].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'cavalier' => 'k.ah/v.eh/l.ih.r / [c^k].[a^ah]/[v^v].[a^ah]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'cavaliere' => 'k.aw/v.aw/l.ih/r.ee / [c^k].[a^aw]/[v^v].[a^aw]/[l^l].[i^ih]/ / failed phone:r / failed spelling:er',
  'cavalieri' => 'k.aw/v.aw/l.ih/r.ee / [c^k].[a^aw]/[v^v].[a^aw]/[l^l].[i^ih]/ / failed phone:r / failed spelling:er',
  'cavalierly' => 'k.ah/v.eh/l.ih.r/l.ee / [c^k].[a^ah]/[v^v].[a^ah]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'cavaliers' => 'k.ah/v.eh/l.ih.r.z / [c^k].[a^ah]/[v^v].[a^ah]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'cawsl' => 'k.aw/s.eh.l / [c^k].[aw^aw]/[s^s]. / failed phone:eh / failed spelling:l',
  'cayenne' => 'k.igh/eh.n / [c^k]. / failed phone:igh / failed spelling:ay',
  'cayuses' => 'k.igh/ue/s.eh.z / [c^k]. / failed phone:igh / failed spelling:ay',
  'cd' => 's.ee/d.ee / [c^s]. / failed phone:ee / failed spelling:d',
  'cdebaca' => 's.ee/d.ih/b.aw/k.eh / [c^s]. / failed phone:ee / failed spelling:de',
  'ceausescu' => 'ch.ow/ch.eh/s.k.ye.ue /  / failed phone:t / failed spelling:ce',
  'cebula' => 'ch.eh/b.ue/l.eh /  / failed phone:t / failed spelling:ce',
  'cebulski' => 'ch.ih/b.uh.l/s.k.ee /  / failed phone:t / failed spelling:ce',
  'cecala' => 'ch.eh/k.aw/l.eh /  / failed phone:t / failed spelling:ce',
  'ceccarelli' => 'ch.eh/k.er/eh/l.ee /  / failed phone:t / failed spelling:ce',
  'cecchi' => 's.eh/k.ee / [c^s].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'cecchini' => 'ch.eh/k.ee/n.ee /  / failed phone:t / failed spelling:ce',
  'cecconi' => 'ch.eh/k.oh/n.ee /  / failed phone:t / failed spelling:ce',
  'cecelia' => 's.ih/s.ee/l.ye.eh / [c^s].[e^ih]/[c^s].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'cecere' => 'ch.eh/ch.air/ee /  / failed phone:t / failed spelling:ce',
  'cecilia' => 's.ih/s.ee/l.ye.eh / [c^s].[e^ih]/[c^s].[i^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'cedeno' => 'ch.eh/d.eh/n.oh /  / failed phone:t / failed spelling:ce',
  'cedillo' => 'ch.eh/d.ih/l.oh /  / failed phone:t / failed spelling:ce',
  'cefalo' => 'ch.eh/f.aw/l.oh /  / failed phone:t / failed spelling:ce',
  'cefalu' => 'ch.eh/f.aw/l.ue /  / failed phone:t / failed spelling:ce',
  'cegielski' => 'ch.ih/g.ee.l/s.k.ee /  / failed phone:t / failed spelling:ce',
  'ceja' => 's.ay/ye.eh / [c^s].[e^ay]/ / failed phone:ue / failed spelling:ja',
  'cejka' => 'ch.ay/k.eh /  / failed phone:t / failed spelling:ce',
  'celani' => 'ch.eh/l.aw/n.ee /  / failed phone:t / failed spelling:ce',
  'celano' => 'ch.eh/l.aw/n.oh /  / failed phone:t / failed spelling:ce',
  'celena' => 'ch.eh/l.eh/n.eh /  / failed phone:t / failed spelling:ce',
  'celene' => 'ch.eh/l.ee.n /  / failed phone:t / failed spelling:ce',
  'celentano' => 'ch.eh/l.eh.n/t.aw/n.oh /  / failed phone:t / failed spelling:ce',
  'celestina' => 'ch.eh/l.eh/s.t.ee/n.eh /  / failed phone:t / failed spelling:ce',
  'celestine' => 'ch.eh/l.eh/s.t.ee/n.ee /  / failed phone:t / failed spelling:ce',
  'celestino' => 'ch.eh/l.eh/s.t.ee/n.oh /  / failed phone:t / failed spelling:ce',
  'celia' => 's.ee/l.ye.eh / [c^s].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'celinda' => 'ch.eh/l.ee.n/d.eh /  / failed phone:t / failed spelling:ce',
  'celli' => 'ch.eh/l.ee /  / failed phone:t / failed spelling:ce',
  'cellini' => 'ch.eh/l.ee/n.ee /  / failed phone:t / failed spelling:ce',
  'cellist' => 'ch.eh/l.eh.s.t /  / failed phone:t / failed spelling:ce',
  'cello' => 'ch.eh/l.oh /  / failed phone:t / failed spelling:ce',
  'cellucci' => 'ch.eh/l.ue/ch.ee /  / failed phone:t / failed spelling:ce',
  'celona' => 'ch.eh/l.oh/n.eh /  / failed phone:t / failed spelling:ce',
  'celosia' => 'ch.eh/l.oh/s.ee/eh /  / failed phone:t / failed spelling:ce',
  'cenci' => 'ch.eh.n/ch.ee /  / failed phone:t / failed spelling:ce',
  'cendejas' => 's.ay.n/d.ay/ye.aw.z / [c^s].[e^ay].[n^n]/[d^d].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'centanni' => 'ch.eh.n/t.aw/n.ee /  / failed phone:t / failed spelling:ce',
  'centeno' => 'ch.eh.n/t.eh/n.oh /  / failed phone:t / failed spelling:ce',
  'centofanti' => 'ch.eh.n/t.oh/f.aw.n/t.ee /  / failed phone:t / failed spelling:ce',
  'centola' => 'ch.eh.n/t.oh/l.eh /  / failed phone:t / failed spelling:ce',
  'centrifugal' => 's.eh.n/t.r.ih/f.ih/g.eh.l / [c^s].[e^eh].[n^n]/[t^t].[r^r].[i^ih]/[f^f]. / failed phone:ih / failed spelling:ug',
  'cerami' => 'ch.er/aw/m.ee /  / failed phone:t / failed spelling:ce',
  'cerasoli' => 'ch.er/aw/s.oh/l.ee /  / failed phone:t / failed spelling:ce',
  'ceravolo' => 'ch.er/aw/v.oh/l.oh /  / failed phone:t / failed spelling:ce',
  'cerbone' => 'ch.er/b.oh.n /  / failed phone:t / failed spelling:ce',
  'cercone' => 'ch.er/k.oh/n.ee /  / failed phone:t / failed spelling:ce',
  'cerda' => 'ch.air/d.eh /  / failed phone:t / failed spelling:ce',
  'cereghino' => 'ch.er/eh/g.ee/n.oh /  / failed phone:t / failed spelling:ce',
  'cerelia' => 'ch.er/eh/l.ee/eh /  / failed phone:t / failed spelling:ce',
  'cerino' => 'ch.er/ee/n.oh /  / failed phone:t / failed spelling:ce',
  'cerio' => 'ch.air/ee/oh /  / failed phone:t / failed spelling:ce',
  'cermak' => 'ch.er/m.eh.k /  / failed phone:t / failed spelling:ce',
  'cerna' => 'ch.air/n.eh /  / failed phone:t / failed spelling:ce',
  'cerniglia' => 'ch.er/n.ee/g.l.ee/eh /  / failed phone:t / failed spelling:ce',
  'cerone' => 'ch.er/oh/n.ee /  / failed phone:t / failed spelling:ce',
  'cerrato' => 'ch.er/aw/t.oh /  / failed phone:t / failed spelling:ce',
  'cerreta' => 'ch.er/eh/t.eh /  / failed phone:t / failed spelling:ce',
  'cerrito' => 'ch.er/ee/t.oh /  / failed phone:t / failed spelling:ce',
  'cerrone' => 'ch.er/oh/n.ee /  / failed phone:t / failed spelling:ce',
  'cerruti' => 'ch.er/ue/t.ee /  / failed phone:t / failed spelling:ce',
  'certificate' => 's.er/t.uh/f.eh/k.ay.t / [ce^s].[r^er]/[t^t]. / failed phone:uh / failed spelling:if',
  'certo' => 'ch.air/t.oh /  / failed phone:t / failed spelling:ce',
  'cerulli' => 'ch.er/ue/l.ee /  / failed phone:t / failed spelling:ce',
  'cerullo' => 'ch.er/ue/l.oh /  / failed phone:t / failed spelling:ce',
  'cerutti' => 'ch.er/ue/t.ee /  / failed phone:t / failed spelling:ce',
  'cerveny' => 'ch.er/v.ee/n.ee /  / failed phone:t / failed spelling:ce',
  'cervera' => 'ch.er/v.air/eh /  / failed phone:t / failed spelling:ce',
  'cervi' => 'ch.air/v.ee /  / failed phone:t / failed spelling:ce',
  'cervini' => 'ch.er/v.ee/n.ee /  / failed phone:t / failed spelling:ce',
  'cervone' => 'ch.er/v.oh/n.ee /  / failed phone:t / failed spelling:ce',
  'cesare' => 'ch.ay/z.aw/r.ay /  / failed phone:t / failed spelling:ce',
  'cesario' => 'ch.eh/s.aw/r.ee/oh /  / failed phone:t / failed spelling:ce',
  'cesaro' => 'ch.eh/s.aw/r.oh /  / failed phone:t / failed spelling:ce',
  'cesena' => 'ch.eh/s.eh/n.eh /  / failed phone:t / failed spelling:ce',
  'cestaro' => 'ch.eh/s.t.aw/r.oh /  / failed phone:t / failed spelling:ce',
  'cevaxs' => 's.eh/v.ah.k/s.ih.z / [c^s].[e^eh]/[v^v].[a^ah].[x^k]/[s^s]. / failed phone:ih / failed spelling:',
  'cezanne' => 's.eh/z.ah.n / [c^s].[e^eh]/[z^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'chablis' => 'sh.eh/b.l.ee / [ch^sh].[a^ah]/[b^b].[l^l].[i^ee] / failed phone:ee / failed spelling:is',
  'chabot' => 'sh.eh/b.oh / [ch^sh].[a^ah]/[b^b].[o^oh] / failed phone:oh / failed spelling:ot',
  'chae' => 'ch.igh / [ch^ch]. / failed phone:igh / failed spelling:ae',
  'chaebol' => 'ch.ay/b.eh.l / [ch^ch].[a^ay]/ / failed phone:b / failed spelling:eb',
  'chalet' => 'sh.ah/l.ay / [ch^sh].[a^ah]/[l^l].[e^ay] / failed phone:ay / failed spelling:t',
  'chalets' => 'sh.eh/l.ay.z / [ch^sh].[a^ah]/[l^l].[e^ay]. / failed phone:z / failed spelling:ts',
  'chalifoux' => 'sh.ah/l.ih/f.ue / [ch^sh].[a^ah]/[l^l].[i^ih]/[f^f].[ou^ue] / failed phone:ue / failed spelling:ou',
  'challenged' => 'ch.ah/l.eh.j.d / [ch^ch].[a^ah]/[ll^l].[e^eh]. / failed phone:j / failed spelling:ng',
  'chaloux' => 'sh.eh/l.ue / [ch^sh].[a^ah]/[l^l].[ou^ue] / failed phone:ue / failed spelling:ou',
  'champagne' => 'sh.ah.m/p.ay.n / [ch^sh].[a^ah].[m^m]/[p^p].[a^ay].[gn^n] / failed phone:n / failed spelling:gn',
  'champoux' => 'sh.ah.m/p.ue / [ch^sh].[a^ah].[m^m]/[p^p].[ou^ue] / failed phone:ue / failed spelling:ou',
  'chandelier' => 'sh.ah.n/d.eh/l.ih.r / [ch^sh].[a^ah].[n^n]/[d^d].[e^eh]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'chandeliers' => 'sh.ah.n/d.eh/l.ih.z / [ch^sh].[a^ah].[n^n]/[d^d].[e^eh]/[l^l].[i^ih]. / failed phone:z / failed spelling:er',
  'chandon' => 'ch.ah.n/d.ih.n / [ch^ch].[a^ah].[n^n]/[d^d]. / failed phone:ih / failed spelling:on',
  'chanteuse' => 'sh.ah.n/t.oh.z / [ch^sh].[a^ah].[n^n]/[te^t]. / failed phone:oh / failed spelling:us',
  'chanukah' => 'h.aw/n.eh/k.eh /  / failed phone:h / failed spelling:ch',
  'chao' => 'ch.ow / [ch^ch]. / failed phone:ow / failed spelling:ao',
  'chapelle' => 'sh.eh/p.eh.l / [ch^sh].[a^ah]/[p^p].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'chapin' => 'sh.eh/p.ah.n / [ch^sh].[a^ah]/[p^p]. / failed phone:ah / failed spelling:in',
  'chapoton' => 'ch.ah/p.oh/aw.n / [ch^ch].[a^ah]/[p^p].[o^oh]/ / failed phone:aw / failed spelling:to',
  'chappelle' => 'sh.eh/p.eh.l / [ch^sh].[a^ah]/[pp^p].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'charasse' => 'ch.air/ah.s / [ch^ch].[ar^air]/[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'charbonneau' => 'sh.aw.r/b.eh/n.oh / [ch^sh].[a^oh].[r^r]/[b^b].[o^uh]/[n^n]. / failed phone:oh / failed spelling:ne',
  'chardonnays' => 'ch.aw.r/d.aw/n.ih.z / [ch^ch].[a^oh].[r^r]/[d^d].[o^aw]/[nn^n].[a^ih]. / failed phone:z / failed spelling:ys',
  'charest' => 'ch.aw/r.ay/ih.s.t / [ch^ch].[a^aw]/[r^r].[e^ay]/ / failed phone:ih / failed spelling:st',
  'chargois' => 'sh.aw.r/g.w.aw / [ch^sh].[a^oh].[r^r]/[g^g]. / failed phone:w / failed spelling:oi',
  'charlebois' => 'sh.aw.r/l.ih/b.w.aw / [ch^sh].[a^oh].[r^r]/[l^l].[e^ih]/[b^b]. / failed phone:w / failed spelling:oi',
  'charlemagne' => 'sh.aw.r/l.eh/m.ay.n / [ch^sh].[a^oh].[r^r]/[l^l].[e^eh]/[m^m].[a^ay].[gn^n] / failed phone:n / failed spelling:gn',
  'charlottesville' => 'sh.aw.r/l.eh.t/s.v.ih.l / [ch^sh].[a^oh].[r^r]/[l^l].[o^uh].[tte^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'charpentier' => 'sh.aw.r/p.eh.n/t.ih.r / [ch^sh].[a^oh].[r^r]/[p^p].[e^eh].[n^n]/[t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'chas' => 'ch.aw.r.l.z / [ch^ch].[a^oh]. / failed phone:r / failed spelling:s',
  'chasse' => 'ch.ah.s / [ch^ch].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'chassis' => 'ch.ah/s.ee / [ch^ch].[a^ah]/[ss^s].[i^ee] / failed phone:ee / failed spelling:is',
  'chateaux' => 'sh.eh/t.oh / [ch^sh].[a^ah]/[te^t].[a^oh] / failed phone:oh / failed spelling:au',
  'chatham' => 'ch.ah/t.eh.m / [ch^ch].[a^ah]/[t^t]. / failed phone:eh / failed spelling:ha',
  'chaudhry' => 'ch.aw/d.r.ee / [ch^ch].[au^aw]/[d^d]. / failed phone:r / failed spelling:hr',
  'chauffeur' => 'sh.oh/f.er / [ch^sh].[au^oh]/[ff^f]. / failed phone:er / failed spelling:eu',
  'chauffeured' => 'sh.oh/f.er.d / [ch^sh].[au^oh]/[ff^f]. / failed phone:er / failed spelling:eu',
  'chauffeurs' => 'sh.oh/f.er.z / [ch^sh].[au^oh]/[ff^f]. / failed phone:er / failed spelling:eu',
  'chausse' => 'ch.ow.s / [ch^ch].[au^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'chautauqua' => 'sh.eh/t.aw/kw.eh / [ch^sh].[a^ah]/ / failed phone:t / failed spelling:ut',
  'chautauquans' => 'sh.eh/t.aw/kw.eh.n.z / [ch^sh].[a^ah]/ / failed phone:t / failed spelling:ut',
  'chauvin' => 'sh.oh/v.ah.n / [ch^sh].[au^oh]/[v^v]. / failed phone:ah / failed spelling:in',
  'cheatham' => 'ch.ee/t.eh.m / [ch^ch].[ea^ee]/[t^t]. / failed phone:eh / failed spelling:ha',
  'checchi' => 'ch.eh/k.ee / [ch^ch].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'chenault' => 'sh.ih/n.oh / [ch^sh].[e^ih]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'chengxiang' => 'ch.eh.ng/sh.aw.ng / [ch^ch].[e^eh].[n^ng]/ / failed phone:sh / failed spelling:gx',
  'chesapeake' => 'ch.eh/s.eh/p.ee.k / [ch^ch].[e^eh]/[s^s].[a^ah]/[p^p].[ea^ee].[k^k] / failed phone:k / failed spelling:ak',
  'cheshire' => 'ch.eh/sh.er / [ch^ch].[e^eh]/[sh^sh].[ir^er] / failed phone:er / failed spelling:hi',
  'chesler' => 'ch.eh/s.eh/l.er / [ch^ch].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'chessher' => 'ch.eh/sh.er / [ch^ch].[e^eh]/[s^sh]. / failed phone:er / failed spelling:sh',
  'chesshir' => 'sh.ih/sh.er / [ch^sh].[e^ih]/[s^sh]. / failed phone:er / failed spelling:sh',
  'chevalier' => 'sh.eh/v.eh/l.ih.r / [ch^sh].[e^eh]/[v^v].[a^ah]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'chevrolet' => 'sh.eh/v.r.eh/l.ay / [ch^sh].[e^eh]/[v^v].[r^r].[o^uh]/[l^l].[e^ay] / failed phone:ay / failed spelling:t',
  'chevrolets' => 'sh.eh/v.r.eh/l.ay.z / [ch^sh].[e^eh]/[v^v].[r^r].[o^uh]/[l^l].[e^ay]. / failed phone:z / failed spelling:ts',
  'cheyenne' => 'sh.igh/ah.n / [che^sh].[ye^igh]/ / failed phone:ah / failed spelling:nn',
  'chiang' => 'ch.ah.ng / [ch^ch]. / failed phone:ah / failed spelling:ia',
  'chiara' => 'k.ye.aw/r.eh / [ch^k]. / failed phone:ye / failed spelling:ia',
  'chichauha' => 'ch.ee/ch.ow/eh / [ch^ch].[i^ee]/[ch^ch].[au^aw]/ / failed phone:eh / failed spelling:ha',
  'chihuahua' => 'ch.eh/w.aw/w.aw / [ch^ch].[i^ih]/ / failed phone:w / failed spelling:hu',
  'childe' => 'ch.ih.l.d / [ch^ch].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'chimicles' => 'ch.ih/m.ih/k.eh.l.z / [ch^ch].[i^ih]/[m^m].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'chinh' => 'ch.ih.n / [ch^ch].[i^ih].[n^n] / failed phone:n / failed spelling:nh',
  'chinnici' => 'k.ee/n.ee/ch.ee / [ch^k].[i^ee]/[nn^n].[i^ee]/ / failed phone:t / failed spelling:ci',
  'chisholm' => 'ch.ih/z.eh.m / [ch^ch].[i^ih]/[s^s]. / failed phone:m / failed spelling:ho',
  'chisler' => 'ch.ih/s.eh/l.er / [ch^ch].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'chitrao' => 'ch.ih/t.r.ow / [ch^ch].[i^ih]/[t^t].[r^r]. / failed phone:ow / failed spelling:ao',
  'chiu' => 'ch.ue / [ch^ch]. / failed phone:ue / failed spelling:iu',
  'chlebowski' => 'ch/l.ih/b.aw.f/s.k.ee / [ch^ch]/[l^l].[e^ih]/[b^b].[o^aw]. / failed phone:f / failed spelling:ws',
  'chlorofluorocarbon' => 'k.l.aw/r.oh/f.l.aw/r.oh/k.aw.r/b.aw.n / [ch^k].[l^l].[o^aw]/[r^r].[o^oh]/[f^f].[l^l]. / failed phone:aw / failed spelling:uo',
  'chlorofluorocarbons' => 'k.l.aw/r.oh/f.l.aw/r.oh/k.aw.r/b.aw.n.z / [ch^k].[l^l].[o^aw]/[r^r].[o^oh]/[f^f].[l^l]. / failed phone:aw / failed spelling:uo',
  'chmiel' => 'ch.eh/m.ee.l / [ch^ch]. / failed phone:eh / failed spelling:mi',
  'chmielewski' => 'ch.eh/m.eh/l.eh.f/s.k.ee / [ch^ch]. / failed phone:eh / failed spelling:mi',
  'chmura' => 'ch.eh/m.oo/r.eh / [ch^ch]. / failed phone:eh / failed spelling:mu',
  'chocolat' => 'ch.aw/k.l.eh.t / [ch^ch].[o^aw]/[c^k]. / failed phone:l / failed spelling:ol',
  'chocolate' => 'ch.aw/k.l.eh.t / [ch^ch].[o^aw]/[c^k]. / failed phone:l / failed spelling:ol',
  'chocolates' => 'ch.aw/k.l.eh.t.s / [ch^ch].[o^aw]/[c^k]. / failed phone:l / failed spelling:ol',
  'choir' => 'kw.igh/er /  / failed phone:kw / failed spelling:ch',
  'choirs' => 'kw.igh.r.z /  / failed phone:kw / failed spelling:ch',
  'chojnacki' => 'ch.eh.ye/n.aw.t/s.k.ee / [ch^ch].[o^uh]. / failed phone:ye / failed spelling:jn',
  'chojnowski' => 'ch.eh.ye/n.aw.f/s.k.ee / [ch^ch].[o^uh]. / failed phone:ye / failed spelling:jn',
  'chongqing' => 'ch.aw.ng/k.ih.ng / [ch^ch].[o^aw].[n^ng]/ / failed phone:k / failed spelling:gq',
  'chopin' => 'sh.oh/p.ah.n / [ch^sh].[o^oh]/[p^p]. / failed phone:ah / failed spelling:in',
  'chortled' => 'ch.aw.r/t.eh.l.d / [ch^ch].[o^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'chortles' => 'ch.aw.r/t.eh.l.z / [ch^ch].[o^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'chortling' => 'ch.aw.r/t.eh/l.ih.ng / [ch^ch].[o^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:li',
  'chouinard' => 'sh.w.ee/n.aw.r.d / [c^sh]. / failed phone:w / failed spelling:ho',
  'chrismer' => 'k.er/ih/z.eh/m.er / [ch^k].[r^er]/[i^ih]/[s^z]. / failed phone:eh / failed spelling:me',
  'christabelle' => 'sh.r.ih/s.t.eh/b.eh.l / [ch^sh].[r^r].[i^ih]/[s^s].[t^t].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'christiaan' => 'k.r.ih/s.t.ee/aw.n / [ch^k].[r^r].[i^ih]/[s^s].[t^t].[i^ee]/[a^aw]. / failed phone:n / failed spelling:an',
  'christophe' => 'k.r.ih/s.t.aw.f / [ch^k].[r^r].[i^ih]/[s^s].[t^t].[o^aw].[ph^f] / failed phone:f / failed spelling:ph',
  'christopoulos' => 'k.r.ih/s.t.aw/p.eh/l.ih.s / [ch^k].[r^r].[i^ih]/[s^s].[t^t].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'chronicled' => 'k.r.aw/n.ih/k.eh.l.d / [ch^k].[r^r].[o^aw]/[n^n].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'chronicles' => 'k.r.aw/n.eh/k.eh.l.z / [ch^k].[r^r].[o^aw]/[n^n].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'chrostowski' => 'k.r.eh/s.t.aw.f/s.k.ee / [ch^k].[r^r].[o^uh]/[s^s].[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'chrzanowski' => 'k.er/z.eh/n.aw.f/s.k.ee / [ch^k].[r^er]/[z^z].[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'chseing' => 'ch.ay.ng / [ch^ch]. / failed phone:ay / failed spelling:se',
  'chuah' => 'ch.ue/aw / [ch^ch].[u^ue]/[a^aw] / failed phone:aw / failed spelling:ah',
  'chuang' => 'ch.ah.ng / [ch^ch]. / failed phone:ah / failed spelling:ua',
  'chubais' => 'ch.ue/b.igh / [ch^ch].[u^ue]/[b^b].[ai^igh] / failed phone:igh / failed spelling:ai',
  'chuckled' => 'ch.uh/k.eh.l.d / [ch^ch].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'chuckles' => 'ch.uh/k.eh.l.z / [ch^ch].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'chudzinski' => 'ch.eh/j.ih.n/s.k.ee / [ch^ch].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'chutzpah' => 'ch.uh.t/s.p.aw / [ch^ch].[u^uh].[t^t]/[z^s].[p^p].[a^aw] / failed phone:aw / failed spelling:ah',
  'ciaccia' => 'ch.ee/eh/ch.ee/eh /  / failed phone:t / failed spelling:ci',
  'ciaccio' => 'ch.aw/ch.ee/oh /  / failed phone:t / failed spelling:ci',
  'ciampa' => 'ch.aw.m/p.eh /  / failed phone:t / failed spelling:ci',
  'ciampi' => 'ch.aw.m/p.ee /  / failed phone:t / failed spelling:ci',
  'cian' => 'sh.ee.n / [c^sh].[i^ee]. / failed phone:n / failed spelling:an',
  'cianci' => 'ch.aw.n/ch.ee /  / failed phone:t / failed spelling:ci',
  'ciancio' => 'ch.aw.n/ch.ee/oh /  / failed phone:t / failed spelling:ci',
  'cianciola' => 'ch.aw.n/ch.oh/l.eh /  / failed phone:t / failed spelling:ci',
  'cianciolo' => 'ch.aw.n/ch.oh/l.oh /  / failed phone:t / failed spelling:ci',
  'cianciulli' => 'ch.aw.n/ch.ue/l.ee /  / failed phone:t / failed spelling:ci',
  'ciani' => 'ch.aw/n.ee /  / failed phone:t / failed spelling:ci',
  'ciano' => 'ch.ee/aw/n.oh /  / failed phone:t / failed spelling:ci',
  'ciaobella' => 'ch.ow/b.eh/l.eh /  / failed phone:t / failed spelling:ci',
  'ciaramella' => 'ch.er/aw/m.eh/l.eh /  / failed phone:t / failed spelling:ci',
  'ciaramitaro' => 'ch.er/aw/m.ee/t.aw/r.oh /  / failed phone:t / failed spelling:ci',
  'ciaravino' => 'ch.er/aw/v.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'ciardi' => 'ch.er/d.ee /  / failed phone:t / failed spelling:ci',
  'ciarlo' => 'ch.er/l.oh /  / failed phone:t / failed spelling:ci',
  'ciavarella' => 'ch.eh/v.aw/r.eh/l.eh /  / failed phone:t / failed spelling:ci',
  'ciborowski' => 'ch.ih/b.er/aw.f/s.k.ee /  / failed phone:t / failed spelling:ci',
  'cibula' => 'ch.ee/b.ue/l.eh /  / failed phone:t / failed spelling:ci',
  'cicalese' => 'ch.ee/k.aw/l.ay/z.ee /  / failed phone:t / failed spelling:ci',
  'ciccarelli' => 'ch.ee/k.er/eh/l.ee /  / failed phone:t / failed spelling:ci',
  'ciccarello' => 'ch.ee/k.er/eh/l.oh /  / failed phone:t / failed spelling:ci',
  'ciccone' => 'ch.ee/k.oh/n.ee /  / failed phone:t / failed spelling:ci',
  'cichowski' => 'ch.ih/h.aw.f/s.k.ee /  / failed phone:t / failed spelling:ci',
  'cicily' => 'ch.ih/ch.eh/l.ee /  / failed phone:t / failed spelling:ci',
  'ciesielski' => 'ch.eh/s.ee.l/s.k.ee /  / failed phone:t / failed spelling:ci',
  'ciesla' => 'ch.eh/s.l.eh /  / failed phone:t / failed spelling:ci',
  'cieslak' => 'ch.eh/s.l.eh.k /  / failed phone:t / failed spelling:ci',
  'cieslewicz' => 'ch.eh/s.l.ih/v.ih.ch /  / failed phone:t / failed spelling:ci',
  'cieslik' => 'ch.eh/s.l.ih.k /  / failed phone:t / failed spelling:ci',
  'cieslinski' => 'ch.eh/s.l.ih.n/s.k.ee /  / failed phone:t / failed spelling:ci',
  'cihlar' => 's.ih/l.er / [c^s].[i^ih]/ / failed phone:l / failed spelling:hl',
  'ciliberto' => 'ch.ee/l.ee/b.air/t.oh /  / failed phone:t / failed spelling:ci',
  'cima' => 'ch.ee/m.eh /  / failed phone:t / failed spelling:ci',
  'cimini' => 'ch.ee/m.ee/n.ee /  / failed phone:t / failed spelling:ci',
  'cimino' => 'ch.ee/m.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'cimmino' => 'ch.ee/m.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'cimo' => 'ch.ee/m.oh /  / failed phone:t / failed spelling:ci',
  'cimorelli' => 'ch.ee/m.aw/r.eh/l.ee /  / failed phone:t / failed spelling:ci',
  'cina' => 'ch.ee/n.eh /  / failed phone:t / failed spelling:ci',
  'cincotta' => 'ch.ee.n/k.oh/t.eh /  / failed phone:t / failed spelling:ci',
  'cinemark' => 's.ih/n.eh/m.aw.k / [c^s].[i^ih]/[n^n].[e^eh]/[m^m].[a^aw]. / failed phone:k / failed spelling:rk',
  'cini' => 'ch.ee/n.ee /  / failed phone:t / failed spelling:ci',
  'cino' => 'ch.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'cinq' => 's.ih.ng.k / [c^s].[i^ih].[n^ng]. / failed phone:k / failed spelling:q',
  'cinquemani' => 'ch.ee.n/kw.eh/m.aw/n.ee /  / failed phone:t / failed spelling:ci',
  'ciocca' => 'ch.oh/k.eh /  / failed phone:t / failed spelling:ci',
  'cioffi' => 'ch.ee/oh/f.ee /  / failed phone:t / failed spelling:ci',
  'ciolek' => 'ch.ee/oh/l.eh.k /  / failed phone:t / failed spelling:ci',
  'ciolino' => 'ch.oh/l.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'ciotti' => 'ch.oh/t.ee /  / failed phone:t / failed spelling:ci',
  'cipriani' => 'ch.ee/p.r.ee/aw/n.ee /  / failed phone:t / failed spelling:ci',
  'cipriano' => 'ch.ee/p.r.ee/aw/n.oh /  / failed phone:t / failed spelling:ci',
  'circled' => 's.er/k.eh.l.d / [c^s].[ir^er]/[c^k]. / failed phone:eh / failed spelling:le',
  'circles' => 's.er/k.eh.l.z / [c^s].[ir^er]/[c^k]. / failed phone:eh / failed spelling:le',
  'circling' => 's.er/k.eh/l.ih.ng / [c^s].[ir^er]/[c^k]. / failed phone:eh / failed spelling:li',
  'circuit' => 's.er/k.eh.t / [c^s].[ir^er]/[c^k].[u^uh]. / failed phone:t / failed spelling:it',
  'circuited' => 's.er/k.eh/t.ih.d / [c^s].[ir^er]/[c^k].[u^uh]/ / failed phone:t / failed spelling:it',
  'circuitry' => 's.er/k.eh/t.r.ee / [c^s].[ir^er]/[c^k].[u^uh]/ / failed phone:t / failed spelling:it',
  'circuits' => 's.er/k.eh.t.s / [c^s].[ir^er]/[c^k].[u^uh]. / failed phone:t / failed spelling:it',
  'circumference' => 's.er/k.uh.m/f.r.eh.n.s / [c^s].[ir^er]/[c^k].[u^uh].[m^m]/[f^f]. / failed phone:r / failed spelling:er',
  'cirincione' => 's.er/ee.n/ch.oh/n.ee / [c^s].[ir^er]/[i^ee].[n^n]/ / failed phone:t / failed spelling:ci',
  'cirrhosis' => 's.er/oh/s.eh.s / [c^s].[irr^er]/ / failed phone:oh / failed spelling:ho',
  'cirrincione' => 's.er/r.ee.n/ch.oh/n.ee / [c^s].[ir^er]/[r^r].[i^ee].[n^n]/ / failed phone:t / failed spelling:ci',
  'cisek' => 'ch.ih/s.eh.k /  / failed phone:t / failed spelling:ci',
  'cisewski' => 'ch.ih/s.eh.f/s.k.ee /  / failed phone:t / failed spelling:ci',
  'cisler' => 's.ih/s.eh/l.er / [c^s].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'cislo' => 'ch.ee/s.l.oh /  / failed phone:t / failed spelling:ci',
  'ciszek' => 'ch.ih/sh.eh.k /  / failed phone:t / failed spelling:ci',
  'ciszewski' => 'ch.ih/sh.eh.f/s.k.ee /  / failed phone:t / failed spelling:ci',
  'citrano' => 'ch.ee/t.r.aw/n.oh /  / failed phone:t / failed spelling:ci',
  'cittadino' => 'ch.ee/t.aw/d.ee/n.oh /  / failed phone:t / failed spelling:ci',
  'ciucci' => 'ch.ue/ch.ee /  / failed phone:t / failed spelling:ci',
  'ciulla' => 'ch.ue/l.eh /  / failed phone:t / failed spelling:ci',
  'ciullo' => 'ch.ue/l.oh /  / failed phone:t / failed spelling:ci',
  'civilian' => 's.eh/v.ih/l.ye.eh.n / [c^s].[i^ih]/[v^v].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'civilians' => 's.eh/v.ih/l.ye.eh.n.z / [c^s].[i^ih]/[v^v].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'civitello' => 'ch.ee/v.ee/t.eh/l.oh /  / failed phone:t / failed spelling:ci',
  'cizek' => 'ch.ih/z.eh.k /  / failed phone:t / failed spelling:ci',
  'claar' => 'k.l.aw.r / [c^k].[l^l].[a^oh]. / failed phone:r / failed spelling:ar',
  'claassen' => 'k.l.aw/s.eh.n / [c^k].[l^l].[a^aw]/ / failed phone:s / failed spelling:as',
  'claddagh' => 'k.l.ah/d.uh / [c^k].[l^l].[a^ah]/[dd^d].[a^uh] / failed phone:uh / failed spelling:ag',
  'claeys' => 'k.l.ay.z / [c^k].[l^l].[a^ay]. / failed phone:z / failed spelling:ey',
  'clarabelle' => 'k.l.ah/r.eh/b.eh.l / [c^k].[l^l].[a^ah]/[r^r].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'claramae' => 'k.l.aw/r.aw/m.igh / [c^k].[l^l].[a^aw]/[r^r].[a^aw]/[m^m]. / failed phone:igh / failed spelling:ae',
  'clarisse' => 'k.l.ah/r.ih.s / [c^k].[l^l].[a^ah]/[r^r].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'clarke' => 'k.l.aw.r.k / [c^k].[l^l].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'clarksville' => 'k.l.aw.r.k/s.v.ih.l / [c^k].[l^l].[a^oh].[r^r].[k^k]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'clarrisse' => 'k.l.ah/r.ih.s / [c^k].[l^l].[a^ah]/[rr^r].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'claude' => 'k.l.aw.d / [c^k].[l^l].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'cleah' => 'k.ee/eh / [c^k]. / failed phone:ee / failed spelling:le',
  'clercq' => 'k.l.er.k / [c^k].[le^l].[r^er].[c^k] / failed phone:k / failed spelling:cq',
  'cliffe' => 'k.l.ih.f / [c^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'clotheshorse' => 'k.l.oh.z/h.aw.r.s / [c^k].[l^l].[o^oh]. / failed phone:z / failed spelling:th',
  'clothilde' => 'k.l.aw/th.ih.l.d / [c^k].[l^l].[o^aw]/[th^th].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'clowdus' => 'k.l.ow/d.ih.s / [c^k].[l^l].[ow^ow]/[d^d]. / failed phone:ih / failed spelling:us',
  'clunits' => 's.ee/eh/l.ye.ue/n.ih.t.s / [c^s]. / failed phone:ee / failed spelling:lu',
  'clyde' => 'k.l.igh.d / [c^k].[l^l].[y^igh].[d^d] / failed phone:d / failed spelling:de',
  'cmon' => 'k.eh/m.aw.n / [c^k]. / failed phone:eh / failed spelling:mo',
  'cmos' => 's.ee/m.oh.s / [c^s]. / failed phone:ee / failed spelling:mo',
  'cmu' => 's.ee/eh/m.ye.ue / [c^s]. / failed phone:ee / failed spelling:mu',
  'cmx' => 'k.eh/m.eh.k.s / [c^k]. / failed phone:eh / failed spelling:mx',
  'coalesce' => 'k.oh/eh/l.eh.s / [c^k].[o^oh]/[a^ah]/[l^l].[e^eh].[sc^s] / failed phone:s / failed spelling:sc',
  'coatesville' => 'k.oh.t/s.v.ih.l / [c^k].[oa^oh].[te^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'cobbled' => 'k.aw/b.eh.l.d / [c^k].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'cobblestones' => 'k.aw/b.eh.l/s.t.oh.n.z / [c^k].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'cobleigh' => 'k.aw/b.l.eh / [c^k].[o^aw]/[b^b].[le^l].[i^ih] / failed phone:eh / failed spelling:ig',
  'cobler' => 'k.oh/b.eh/l.er / [c^k].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'cocchi' => 'k.oh/k.ee / [c^k].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'coccia' => 'k.oh/ch.eh / [c^k].[o^oh]/ / failed phone:t / failed spelling:cc',
  'cocke' => 'k.oh.k / [c^k].[o^oh].[c^k] / failed phone:k / failed spelling:ck',
  'cockwell' => 'k.aw/kw.eh.l / [c^k].[o^aw]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'cocozza' => 'k.oh/k.oh.t/s.eh / [c^k].[o^oh]/[c^k].[o^oh]. / failed phone:t / failed spelling:zz',
  'cocuzza' => 'k.oh/k.ue.t/s.eh / [c^k].[o^oh]/[c^k].[u^ue]. / failed phone:t / failed spelling:zz',
  'coddled' => 'k.aw/d.eh.l.d / [c^k].[o^aw]/[dd^d]. / failed phone:eh / failed spelling:le',
  'coddling' => 'k.aw/d.eh/l.ih.ng / [c^k].[o^aw]/[dd^d]. / failed phone:eh / failed spelling:li',
  'coderre' => 'k.eh/d.air / [c^k].[o^uh]/[d^d].[er^air] / failed phone:air / failed spelling:er',
  'coehlo' => 'k.oh/l.oh / [c^k].[o^oh]/ / failed phone:l / failed spelling:eh',
  'coelacanth' => 's.ee/l.eh/k.ah.n.th / [c^s]. / failed phone:ee / failed spelling:oe',
  'coelho' => 'k.oh/eh/l.oh / [c^k].[o^oh]/[e^eh]/[l^l]. / failed phone:oh / failed spelling:ho',
  'coenzyme' => 'k.oh/eh.n/z.igh.m / [c^k].[o^oh]/[e^eh].[n^n]/[z^z].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'coeur' => 'k.ue.r / [c^k].[o^ue]. / failed phone:r / failed spelling:eu',
  'coexist' => 'k.oh/eh.g/z.ih.s.t / [c^k].[o^oh]/[e^eh]. / failed phone:g / failed spelling:xi',
  'coexisted' => 'k.oh/eh.g/z.ih/s.t.eh.d / [c^k].[o^oh]/[e^eh]. / failed phone:g / failed spelling:xi',
  'coexistence' => 'k.oh/ih.g/z.ih/s.t.eh.n.s / [c^k].[o^oh]/[e^ih]. / failed phone:g / failed spelling:xi',
  'coexisting' => 'k.oh/ih.g/z.ih/s.t.ih.ng / [c^k].[o^oh]/[e^ih]. / failed phone:g / failed spelling:xi',
  'cognac' => 'k.oh/n.ye.ah.k / [c^k].[o^oh]/[gn^n]. / failed phone:ye / failed spelling:ac',
  'cohron' => 'k.aw/r.eh.n / [c^k].[o^aw]/ / failed phone:r / failed spelling:hr',
  'coia' => 'k.oh/ye.eh / [c^k].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'cointreau' => 'k.aw.n/t.r.oh / [c^k].[o^aw]. / failed phone:n / failed spelling:in',
  'cojuangco' => 'k.oh/w.aw.ng/k.oh / [c^k].[o^oh]/ / failed phone:w / failed spelling:ju',
  'colaianni' => 'k.oh/l.aw/ye.aw/n.ee / [c^k].[o^oh]/[l^l].[a^aw]/ / failed phone:ye / failed spelling:ia',
  'colao' => 'k.oh/l.ow / [c^k].[o^oh]/[l^l]. / failed phone:ow / failed spelling:ao',
  'colicchio' => 'k.oh/l.ih/k.ee/oh / [c^k].[o^oh]/[l^l].[i^ih]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'collages' => 'k.eh/l.aw/zh.ih.z / [c^k].[o^uh]/[ll^l].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'colle' => 'k.oh.l / [c^k].[o^oh].[ll^l] / failed phone:l / failed spelling:ll',
  'collectibles' => 'k.eh/l.eh.k/t.eh/b.eh.l.z / [c^k].[o^uh]/[ll^l].[e^eh].[c^k]/[t^t].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'collegeville' => 'k.aw/l.eh.j/v.ih.l / [c^k].[o^aw]/[ll^l].[e^eh].[ge^j]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'collegiate' => 'k.eh/l.ee/j.ih.t / [c^k].[o^uh]/[ll^l].[e^ee]/[g^j].[i^ih]. / failed phone:t / failed spelling:at',
  'colleville' => 'k.oh.l/v.ih.l / [c^k].[o^oh].[ll^l]/ / failed phone:v / failed spelling:ev',
  'cologne' => 'k.eh/l.oh.n / [c^k].[o^uh]/[l^l].[o^oh].[gn^n] / failed phone:n / failed spelling:gn',
  'colonel' => 'k.er/n.eh.l / [c^k]. / failed phone:r / failed spelling:ol',
  'colonels' => 'k.er/n.eh.l.z / [c^k]. / failed phone:r / failed spelling:ol',
  'colorfully' => 'k.uh/l.er/f.l.ee / [c^k].[o^uh]/[l^l].[o^oh].[r^r]/[f^f]. / failed phone:l / failed spelling:ul',
  'colucci' => 'k.oh/l.ue/ch.ee / [c^k].[o^oh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'coluccio' => 'k.oh/l.ue/ch.ee/oh / [c^k].[o^oh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'colville' => 'k.aw.l/v.ih.l / [c^k].[o^aw].[l^l]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'combe' => 'k.oh.m / [c^k].[o^oh].[m^m] / failed phone:m / failed spelling:mb',
  'comeau' => 'k.eh/m.oh / [c^k].[o^uh]/[m^m]. / failed phone:oh / failed spelling:ea',
  'comeaux' => 'k.eh/m.oh / [c^k].[o^uh]/[m^m]. / failed phone:oh / failed spelling:ea',
  'comedienne' => 'k.eh/m.ee/d.ee/eh.n / [c^k].[o^uh]/[m^m].[e^ee]/[d^d].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'commemorative' => 'k.eh/m.eh/m.r.eh/t.ih.v / [c^k].[o^uh]/[mm^m].[e^eh]/[m^m]. / failed phone:r / failed spelling:or',
  'commerical' => 'k.eh/m.er/sh.eh.l / [c^k].[o^uh]/[mm^m].[er^er]/ / failed phone:sh / failed spelling:ic',
  'commingled' => 'k.aw/m.ih.ng/g.eh.l.d / [c^k].[o^aw]/[mm^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'commingling' => 'k.aw/m.ih.ng/g.eh/l.ih.ng / [c^k].[o^aw]/[mm^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'commmon' => 'k.aw/m.eh.n / [c^k].[o^aw]/[m^m]. / failed phone:eh / failed spelling:mm',
  'compaq' => 'k.aw.m/p.ah.k / [c^k].[o^aw].[m^m]/[p^p].[a^ah]. / failed phone:k / failed spelling:q',
  'compatibles' => 'k.eh.m/p.ah/t.ih/b.eh.l.z / [c^k].[o^uh].[m^m]/[p^p].[a^ah]/[t^t].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'complementary' => 'k.aw.m/p.l.eh/m.eh.n/t.r.ee / [c^k].[o^aw].[m^m]/[p^p].[l^l].[e^eh]/[m^m].[e^eh].[n^n]/[t^t]. / failed phone:r / failed spelling:ar',
  'complexion' => 'k.eh.m/p.l.eh.k/sh.eh.n / [c^k].[o^uh].[m^m]/[p^p].[l^l].[e^eh].[x^k]/ / failed phone:sh / failed spelling:io',
  'comptroller' => 'k.eh.n/t.r.oh/l.er / [c^k].[o^uh]. / failed phone:n / failed spelling:mp',
  'comrade' => 'k.aw/m.r.ah.d / [c^k].[o^aw]/[m^m].[r^r].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'comtois' => 'k.eh.m/t.w.aw / [c^k].[o^uh].[m^m]/[t^t]. / failed phone:w / failed spelling:oi',
  'concerti' => 'k.eh.n/ch.air/t.ee / [c^k].[o^uh].[n^n]/ / failed phone:t / failed spelling:ce',
  'concerto' => 'k.eh.n/ch.air/t.oh / [c^k].[o^uh].[n^n]/ / failed phone:t / failed spelling:ce',
  'concertos' => 'k.eh.n/ch.air/t.oh.z / [c^k].[o^uh].[n^n]/ / failed phone:t / failed spelling:ce',
  'concierge' => 'k.aw.n/s.ee/air.zh / [c^k].[o^aw].[n^n]/[c^s].[i^ee]/[er^air]. / failed phone:zh / failed spelling:ge',
  'concorde' => 'k.aw.n/k.aw.r.d / [c^k].[o^aw].[n^n]/[c^k].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'conde' => 'k.aw.n.d / [c^k].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'conferencing' => 'k.aw.n/f.r.eh.n/s.ih.ng / [c^k].[o^aw].[n^n]/[f^f]. / failed phone:r / failed spelling:er',
  'confucius' => 'k.eh.n/f.ye.ue/sh.eh.s / [c^k].[o^uh].[n^n]/[f^f].[u^ue]/[c^sh].[i^ih]. / failed phone:s / failed spelling:us',
  'congenial' => 'k.eh.n/j.ee/n.ye.eh.l / [c^k].[o^uh].[n^n]/[g^j].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ia',
  'connecticut' => 'k.eh/n.eh/t.eh/k.eh.t / [c^k].[o^uh]/[nn^n].[e^eh]/ / failed phone:t / failed spelling:ct',
  'connoisseur' => 'k.aw/n.eh/s.er / [c^k].[o^aw]/[nn^n].[o^uh]/ / failed phone:s / failed spelling:is',
  'connoisseurs' => 'k.aw/n.eh/s.er.z / [c^k].[o^aw]/[nn^n].[o^uh]/ / failed phone:s / failed spelling:is',
  'conradt' => 'k.aw.n/r.ah.t / [c^k].[o^aw].[n^n]/[r^r].[a^ah]. / failed phone:t / failed spelling:dt',
  'consciences' => 'k.aw.n/ch.ih.n/s.ih.z / [c^k].[o^aw].[n^n]/ / failed phone:t / failed spelling:sc',
  'conscientiously' => 'k.aw.n/ch.ee/eh.n/ch.eh/s.l.ee / [c^k].[o^aw].[n^n]/ / failed phone:t / failed spelling:sc',
  'consonantal' => 'k.ah.n/s.eh/n.ah.n/t.eh.l / [c^k]. / failed phone:ah / failed spelling:on',
  'consortiums' => 'k.eh.n/s.aw.r/sh.eh.m.z / [c^k].[o^uh].[n^n]/[s^s].[o^oh].[r^r]/[t^sh].[i^ih]. / failed phone:m / failed spelling:um',
  'constables' => 'k.aw.n/s.t.eh/b.eh.l.z / [c^k].[o^aw].[n^n]/[s^s].[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'construcciones' => 'k.eh.n/s.t.r.ue/ch.ee/oh/n.ay.z / [c^k].[o^uh].[n^n]/[s^s].[t^t].[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'contois' => 'k.eh.n/t.w.aw / [c^k].[o^uh].[n^n]/[t^t]. / failed phone:w / failed spelling:oi',
  'convalesce' => 'k.aw.n/v.eh/l.eh.s / [c^k].[o^aw].[n^n]/[v^v].[a^ah]/[l^l].[e^eh].[sc^s] / failed phone:s / failed spelling:sc',
  'convenience' => 'k.eh.n/v.ee/n.ye.eh.n.s / [c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'conveniences' => 'k.eh.n/v.ee/n.ye.eh.n/s.ih.z / [c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'convenient' => 'k.eh.n/v.ee/n.ye.eh.n.t / [c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'conveniently' => 'k.eh.n/v.ee/n.ye.eh.n.t/l.ee / [c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'convertibles' => 'k.eh.n/v.er/t.eh/b.eh.l.z / [c^k].[o^uh].[n^n]/[ve^v].[r^er]/[t^t].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'conville' => 'k.oh.n/v.ih.l / [c^k].[o^oh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'coogler' => 'k.ue/g.eh/l.er / [c^k].[oo^ue]/[g^g]. / failed phone:eh / failed spelling:le',
  'cooke' => 'k.oo.k / [c^k].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'cookware' => 'k.oo/kw.air / [c^k].[o^oo]/ / failed phone:kw / failed spelling:ok',
  'coombe' => 'k.ue.m.b / [c^k].[oo^ue].[m^m].[b^b] / failed phone:b / failed spelling:be',
  'coonradt' => 'k.ue.n/r.ah.t / [c^k].[oo^ue].[n^n]/[r^r].[a^ah]. / failed phone:t / failed spelling:dt',
  'coplen' => 'k.aw/p.eh/l.eh.n / [c^k].[o^aw]/[p^p]. / failed phone:eh / failed spelling:le',
  'corabelle' => 'k.aw/r.eh/b.eh.l / [c^k].[o^aw]/[r^r].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'cordeiro' => 'k.er/d.air/oh / [c^k].[o^oh].[r^r]/[d^d]. / failed phone:air / failed spelling:ei',
  'corinne' => 'k.er/ee.n / [c^k].[o^oh].[r^r]/[i^ee].[n^n] / failed phone:n / failed spelling:nn',
  'corkwood' => 'k.aw.r/kw.oo.d / [c^k].[o^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'cornacchia' => 'k.er/n.aw/k.ee/eh / [c^k].[o^oh].[r^r]/[n^n].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'cornejo' => 'k.er/n.ay/ye.oh / [c^k].[o^oh].[r^r]/[n^n].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'cornelia' => 'k.aw.r/n.ee/l.ye.eh / [c^k].[o^oh].[r^r]/[n^n].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'cornelious' => 'k.aw.r/n.ih/l.ee/ih.s / [c^k].[o^oh].[r^r]/[n^n].[e^ih]/[l^l].[i^ee]/ / failed phone:ih / failed spelling:ou',
  'cornelius' => 'k.aw.r/n.ee/l.ye.eh.s / [c^k].[o^oh].[r^r]/[n^n].[e^ee]/[l^l]. / failed phone:ue / failed spelling:iu',
  'cornelle' => 'k.er/n.eh.l / [c^k].[o^oh].[r^r]/[n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'corporatewatch' => 'k.aw.r/p.r.eh/t.w.aw.ch / [c^k].[o^oh].[r^r]/[p^p]. / failed phone:r / failed spelling:or',
  'corps' => 'k.aw.r / [c^k].[o^oh].[r^r] / failed phone:r / failed spelling:rp',
  'corpsman' => 'k.aw.r/m.eh.n / [c^k].[o^oh].[r^r]/ / failed phone:m / failed spelling:ps',
  'corradi' => 'k.er/aw/d.ee / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ra',
  'corradino' => 'k.er/aw/d.ee/n.oh / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ra',
  'corrado' => 'k.er/aw/d.oh / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ra',
  'corral' => 'k.er/ah.l / [c^k].[o^oh].[r^r]/ / failed phone:ah / failed spelling:ra',
  'corrales' => 'k.er/aw/l.eh.s / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ra',
  'corralled' => 'k.er/ah.l.d / [c^k].[o^oh].[r^r]/ / failed phone:ah / failed spelling:ra',
  'corralling' => 'k.er/ah/l.ih.ng / [c^k].[o^oh].[r^r]/ / failed phone:ah / failed spelling:ra',
  'corrao' => 'k.aw/r.ow / [c^k].[o^aw]/[r^r]. / failed phone:ow / failed spelling:ra',
  'correct' => 'k.er/eh.k.t / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'corrected' => 'k.er/eh.k/t.eh.d / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correcting' => 'k.er/eh.k/t.ih.ng / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correction' => 'k.er/eh.k/sh.eh.n / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correctional' => 'k.er/eh.k/sh.eh/n.eh.l / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'corrections' => 'k.er/eh.k/sh.eh.n.z / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'corrective' => 'k.er/eh.k/t.ih.v / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correctly' => 'k.er/eh.k.t/l.ee / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correctness' => 'k.er/eh.k.t/n.eh.s / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'corrects' => 'k.er/eh.k.t.s / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correia' => 'k.er/ay/ee/eh / [c^k].[o^oh].[r^r]/ / failed phone:ay / failed spelling:re',
  'correira' => 'k.er/air/eh / [c^k].[o^oh].[r^r]/ / failed phone:air / failed spelling:re',
  'correll' => 'k.er/ay.l / [c^k].[o^oh].[r^r]/ / failed phone:ay / failed spelling:re',
  'corrente' => 'k.er/eh.n/t.ee / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'correnti' => 'k.er/eh.n/t.ee / [c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'corriere' => 'k.aw.r/ye.air / [c^k].[o^oh].[r^r]/ / failed phone:ye / failed spelling:ri',
  'corrina' => 'k.er/ee/n.eh / [c^k].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'corroborate' => 'k.er/aw/b.er/ay.t / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corroborated' => 'k.er/aw/b.er/ay/t.ih.d / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corroborates' => 'k.er/aw/b.er/ay.t.s / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corroborating' => 'k.er/aw/b.er/ay/t.ih.ng / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corroboration' => 'k.er/aw/b.er/ay/sh.eh.n / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corrode' => 'k.er/oh.d / [c^k].[o^oh].[r^r]/ / failed phone:oh / failed spelling:ro',
  'corroded' => 'k.er/oh/d.ih.d / [c^k].[o^oh].[r^r]/ / failed phone:oh / failed spelling:ro',
  'corrodes' => 'k.er/oh.d.z / [c^k].[o^oh].[r^r]/ / failed phone:oh / failed spelling:ro',
  'corron' => 'k.er/aw.n / [c^k].[o^oh].[r^r]/ / failed phone:aw / failed spelling:ro',
  'corrosion' => 'k.er/oh/zh.eh.n / [c^k].[o^oh].[r^r]/ / failed phone:oh / failed spelling:ro',
  'corrosive' => 'k.er/oh/s.ih.v / [c^k].[o^oh].[r^r]/ / failed phone:oh / failed spelling:ro',
  'corrupt' => 'k.er/uh.p.t / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corrupted' => 'k.er/uh.p/t.ih.d / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corrupting' => 'k.er/uh.p/t.ih.ng / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corruption' => 'k.er/uh.p/sh.eh.n / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corruptions' => 'k.er/uh.p/sh.eh.n.z / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corruptive' => 'k.er/uh.p/t.ih.v / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corrupts' => 'k.er/uh.p.t.s / [c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'corsa' => 'k.aw/s.eh / [c^k].[o^aw]/ / failed phone:s / failed spelling:rs',
  'coscia' => 'k.oh.s/ch.eh / [c^k].[o^oh].[sc^s]/ / failed phone:t / failed spelling:ia',
  'cosme' => 'k.oh.z.m / [c^k].[o^oh].[s^z].[m^m] / failed phone:m / failed spelling:me',
  'cossairt' => 'k.aw/s.er.t / [c^k].[o^aw]/[ss^s]. / failed phone:er / failed spelling:ai',
  'cotelle' => 'k.oh/t.eh.l / [c^k].[o^oh]/[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'cotler' => 'k.oh/t.eh/l.er / [c^k].[o^oh]/[t^t]. / failed phone:eh / failed spelling:le',
  'cotnoir' => 'k.eh.t.n/w.aw.r / [c^k].[o^uh].[t^t].[n^n]/ / failed phone:w / failed spelling:oi',
  'couillard' => 'kw.ee/l.aw.r.d /  / failed phone:kw / failed spelling:co',
  'counterfeit' => 'k.ow.n/t.er/f.ih.t / [c^k].[ou^ow].[n^n]/[te^t].[r^er]/[f^f].[e^ih]. / failed phone:t / failed spelling:it',
  'counterfeited' => 'k.ow.n/t.er/f.ih/t.ih.d / [c^k].[ou^ow].[n^n]/[te^t].[r^er]/[f^f].[e^ih]/ / failed phone:t / failed spelling:it',
  'counterfeiters' => 'k.ow.n/t.er/f.ih/t.er.z / [c^k].[ou^ow].[n^n]/[te^t].[r^er]/[f^f].[e^ih]/ / failed phone:t / failed spelling:it',
  'counterfeiting' => 'k.ow.n/t.er/f.ih/t.ih.ng / [c^k].[ou^ow].[n^n]/[te^t].[r^er]/[f^f].[e^ih]/ / failed phone:t / failed spelling:it',
  'coup' => 'k.ue / [c^k].[ou^ue] / failed phone:ue / failed spelling:ou',
  'couper' => 'k.ue/er / [c^k].[ou^ue]/ / failed phone:er / failed spelling:pe',
  'coupled' => 'k.uh/p.eh.l.d / [c^k].[ou^uh]/[p^p]. / failed phone:eh / failed spelling:le',
  'couples' => 'k.uh/p.eh.l.z / [c^k].[ou^uh]/[p^p]. / failed phone:eh / failed spelling:le',
  'coups' => 'k.ue.z / [c^k].[ou^ue]. / failed phone:z / failed spelling:ps',
  'courchesne' => 'k.oo.r/sh.eh.n / [c^k].[ou^oo].[r^r]/[ch^sh].[e^eh]. / failed phone:n / failed spelling:sn',
  'courtois' => 'k.aw.r/t.w.aw / [c^k].[ou^oh].[r^r]/[t^t]. / failed phone:w / failed spelling:oi',
  'courville' => 'k.oo.r/v.ih.l / [c^k].[ou^oo].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'couvillion' => 'k.ue/v.ee/l.ye.aw.n / [c^k].[ou^ue]/[v^v].[i^ee]/[ll^l]. / failed phone:ye / failed spelling:io',
  'coville' => 'k.oh/v.ih.l / [c^k].[o^oh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'cowles' => 'k.ow/eh.l.z / [c^k].[ow^ow]/ / failed phone:eh / failed spelling:le',
  'coxe' => 'k.aw.k.s / [c^k].[o^aw].[x^x] / failed phone:s / failed spelling:e',
  'coye' => 'k.oy / [c^k].[oy^oy] / failed phone:oy / failed spelling:oy',
  'coyote' => 'k.igh/oh/t.ee / [c^k]. / failed phone:igh / failed spelling:oy',
  'coyotes' => 'k.igh/oh/t.ee.s / [c^k]. / failed phone:igh / failed spelling:oy',
  'cozza' => 'k.oh.t/s.eh / [c^k].[o^oh]. / failed phone:t / failed spelling:zz',
  'cozzi' => 'k.oh.t/s.ee / [c^k].[o^oh]. / failed phone:t / failed spelling:zz',
  'cozzolino' => 'k.oh.t/s.oh/l.ee/n.oh / [c^k].[o^oh]. / failed phone:t / failed spelling:zz',
  'crabbe' => 'k.r.ah.b / [c^k].[r^r].[a^ah].[bb^b] / failed phone:b / failed spelling:bb',
  'cracchiolo' => 'k.r.aw/k.ee/oh/l.oh / [c^k].[r^r].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'crackled' => 'k.r.ah/k.eh.l.d / [c^k].[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'crackles' => 'k.r.ah/k.eh.l.z / [c^k].[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'cradles' => 'k.r.ay/d.eh.l.z / [c^k].[r^r].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'cradling' => 'k.r.ay/d.eh/l.ih.ng / [c^k].[r^r].[a^ay]/[d^d]. / failed phone:eh / failed spelling:li',
  'crawfordsville' => 'k.r.aw/f.er.d.z/v.ih.l / [c^k].[r^r].[aw^aw]/[f^f].[o^oh].[r^r].[d^d].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'crecelius' => 'k.r.ih/s.ee/l.ee/ih.s / [c^k].[r^r].[e^ih]/[c^s].[e^ee]/[l^l].[i^ee]/ / failed phone:ih / failed spelling:us',
  'credeur' => 'k.r.ih/d.er / [c^k].[r^r].[e^ih]/[d^d]. / failed phone:er / failed spelling:eu',
  'crescenzi' => 'k.r.eh.s/ch.eh.n/z.ee / [c^k].[r^r].[e^eh].[sc^s]/ / failed phone:t / failed spelling:en',
  'crescenzo' => 'k.r.eh.s/ch.eh.n/z.oh / [c^k].[r^r].[e^eh].[sc^s]/ / failed phone:t / failed spelling:en',
  'crewe' => 'k.r.ue / [c^k].[r^r].[ew^ue] / failed phone:ue / failed spelling:ew',
  'crihfield' => 'k.r.ih/f.ee.l.d / [c^k].[r^r].[i^ih]/ / failed phone:f / failed spelling:hf',
  'crippled' => 'k.r.ih/p.eh.l.d / [c^k].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'cripples' => 'k.r.ih/p.eh.l.z / [c^k].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'crippling' => 'k.r.ih/p.eh/l.ih.ng / [c^k].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'criscione' => 'k.r.ee.s/ch.oh/n.ee / [c^k].[r^r].[i^ee].[sc^s]/ / failed phone:t / failed spelling:io',
  'criscuolo' => 'k.r.ee/s.kw.oh/l.oh / [c^k].[r^r].[i^ee]/[sc^s]. / failed phone:kw / failed spelling:uo',
  'crisler' => 'k.r.ih/s.eh/l.er / [c^k].[r^r].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'crittendon' => 'k.r.ih/t.eh.n/d.ih.n / [c^k].[r^r].[i^ih]/[tt^t].[e^eh].[n^n]/[d^d]. / failed phone:ih / failed spelling:on',
  'crnkovich' => 's.er/n.eh/v.ih.ch / [c^s].[r^er]/[n^n]. / failed phone:eh / failed spelling:ko',
  'croce' => 'k.r.oh/ch.ee / [c^k].[r^r].[o^oh]/ / failed phone:t / failed spelling:ce',
  'crochet' => 'k.r.oh/sh.ay / [c^k].[r^r].[o^oh]/[ch^sh].[e^ay] / failed phone:ay / failed spelling:he',
  'crocheted' => 'k.r.oh/sh.ay.d / [c^k].[r^r].[o^oh]/[ch^sh].[e^ay].[t^d] / failed phone:d / failed spelling:te',
  'crocheting' => 'k.r.oh/sh.ay/ih.ng / [c^k].[r^r].[o^oh]/[ch^sh].[e^ay]/ / failed phone:ih / failed spelling:ti',
  'croissant' => 'kw.aw/s.aw.n.t /  / failed phone:kw / failed spelling:cr',
  'croissants' => 'kw.aw/s.aw.n.t.s /  / failed phone:kw / failed spelling:cr',
  'croix' => 'k.r.oy / [c^k].[r^r].[oi^oy] / failed phone:oy / failed spelling:oi',
  'cronauer' => 'k.r.aw/n.ow.r / [c^k].[r^r].[o^aw]/[n^n].[au^aw]. / failed phone:r / failed spelling:er',
  'crooke' => 'k.r.oo.k / [c^k].[r^r].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'croquet' => 'k.r.oh/k.ay / [c^k].[r^r].[o^oh]/[qu^k].[e^ay] / failed phone:ay / failed spelling:t',
  'crosse' => 'k.r.aw.s / [c^k].[r^r].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'crotonville' => 'k.r.oh/t.eh.n/v.ih.l / [c^k].[r^r].[o^oh]/[t^t].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'crovl' => 'k.r.oh/v.eh.l / [c^k].[r^r].[o^oh]/[v^v]. / failed phone:eh / failed spelling:l',
  'crovls' => 'k.r.oh/v.eh.l.z / [c^k].[r^r].[o^oh]/[v^v]. / failed phone:eh / failed spelling:ls',
  'crownx' => 'k.r.ow/n.eh.k.s / [c^k].[r^r].[ow^ow]/[n^n]. / failed phone:eh / failed spelling:x',
  'crucifixion' => 'k.r.ue/s.ih/f.ih.k/sh.eh.n / [c^k].[r^r].[u^ue]/[c^s].[i^ih]/[f^f].[i^ih].[x^k]/ / failed phone:sh / failed spelling:io',
  'crumbled' => 'k.r.uh.m/b.eh.l.d / [c^k].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'crumbles' => 'k.r.uh.m/b.eh.l.z / [c^k].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'crumbling' => 'k.r.uh.m/b.eh/l.ih.ng / [c^k].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'crumpled' => 'k.r.uh.m/p.eh.l.d / [c^k].[r^r].[u^uh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'crumpler' => 'k.r.uh.m/p.eh/l.er / [c^k].[r^r].[u^uh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'cryptoclearance' => 'k.r.ih.p/t.oh/l.ih/r.eh.n.s / [c^k].[r^r].[y^ih].[p^p]/[t^t].[o^oh]/ / failed phone:l / failed spelling:cl',
  'crysler' => 'k.r.ih/s.eh/l.er / [c^k].[r^r].[y^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'csaszar' => 'k.eh/s.aw/sh.er / [c^k]. / failed phone:eh / failed spelling:sa',
  'cuauhtemoc' => 'k.ye.ue/ow/t.eh/m.aw.k / [c^k].[u^ue]/[au^aw]/ / failed phone:t / failed spelling:ht',
  'cubicles' => 'k.ye.ue/b.ih/k.eh.l.z / [c^k].[u^ue]/[b^b].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'cucchi' => 'k.ue/k.ee / [c^k].[u^ue]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'cucchiara' => 'k.ue/k.ee/aw/r.eh / [c^k].[u^ue]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'cucci' => 'k.ue/ch.ee / [c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'cuccia' => 'k.ue/ch.eh / [c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'cuccio' => 'k.ue/ch.ee/oh / [c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'cuddeback' => 'k.uh.d/b.ah.k / [c^k].[u^uh].[dd^d]/ / failed phone:b / failed spelling:eb',
  'cuddled' => 'k.uh/d.eh.l.d / [c^k].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'cudgel' => 'k.uh/j.eh.l / [c^k].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'cudgels' => 'k.uh/j.eh.l.z / [c^k].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'cuenca' => 'kw.eh.n/k.eh /  / failed phone:kw / failed spelling:cu',
  'cuero' => 'kw.air/oh /  / failed phone:kw / failed spelling:cu',
  'cuesta' => 'kw.eh/s.t.eh /  / failed phone:kw / failed spelling:cu',
  'cueto' => 'kw.eh/t.oh /  / failed phone:kw / failed spelling:cu',
  'cueva' => 'kw.eh/v.eh /  / failed phone:kw / failed spelling:cu',
  'cuevas' => 'kw.eh/v.aw.z /  / failed phone:kw / failed spelling:cu',
  'cuffe' => 'k.uh.f / [c^k].[u^uh].[ff^f] / failed phone:f / failed spelling:ff',
  'cuisinart' => 'kw.ee/s.ih/n.er.t /  / failed phone:kw / failed spelling:cu',
  'cuisinarts' => 'kw.ee/z.eh/n.aw.r.t.s /  / failed phone:kw / failed spelling:cu',
  'cuisine' => 'kw.ih/z.ee.n /  / failed phone:kw / failed spelling:cu',
  'cuisines' => 'kw.ih/z.ee.n.z /  / failed phone:kw / failed spelling:cu',
  'cumbersome' => 'k.uh.m/b.er/s.eh.m / [c^k].[u^uh].[m^m]/[b^b].[er^er]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'cunliffe' => 'k.uh.n/l.ih.f / [c^k].[u^uh].[n^n]/[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'cuoco' => 'kw.oh/k.oh /  / failed phone:kw / failed spelling:cu',
  'cuomo' => 'kw.oh/m.oh /  / failed phone:kw / failed spelling:cu',
  'cuong' => 'kw.aw.ng /  / failed phone:kw / failed spelling:cu',
  'cuozzo' => 'kw.oh/z.oh /  / failed phone:kw / failed spelling:cu',
  'cupboard' => 'k.uh/b.er.d / [c^k].[u^uh]/ / failed phone:b / failed spelling:pb',
  'cupboards' => 'k.uh/b.er.d.z / [c^k].[u^uh]/ / failed phone:b / failed spelling:pb',
  'cupples' => 'k.uh/p.eh.l.z / [c^k].[u^uh]/[p^p]. / failed phone:eh / failed spelling:pl',
  'curacao' => 'k.ye.oo/r.eh/s.ow / [c^k].[u^ue]/[r^r].[a^ah]/[c^s]. / failed phone:ow / failed spelling:ao',
  'curci' => 'k.oo.r/ch.ee / [c^k].[u^oo].[r^r]/ / failed phone:t / failed spelling:ci',
  'curcio' => 'k.oo.r/ch.ee/oh / [c^k].[u^oo].[r^r]/ / failed phone:t / failed spelling:ci',
  'curle' => 'k.aw/r.eh.l / [c^k]. / failed phone:aw / failed spelling:ur',
  'curmudgeon' => 'k.er/m.uh/j.ih.n / [c^k].[ur^er]/[m^m].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'curragh' => 'k.uh/r.eh / [c^k].[u^uh]/[rr^r].[a^ah] / failed phone:eh / failed spelling:ra',
  'currin' => 'k.aw/r.ih.n / [c^k]. / failed phone:aw / failed spelling:ur',
  'cutaia' => 'k.ue/t.aw/ye.eh / [c^k].[u^ue]/[t^t].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'cuttlefish' => 'k.uh/t.eh.l/f.ih.sh / [c^k].[u^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'cutugno' => 'k.ye.ue/t.uh/n.ye.oh / [c^k].[u^ue]/[t^t].[u^uh]/[gn^n]. / failed phone:ye / failed spelling:o',
  'cwiertnia' => 'kw.ee.r.t/n.ee/eh /  / failed phone:kw / failed spelling:cw',
  'cwik' => 'kw.ih.k /  / failed phone:kw / failed spelling:cw',
  'cwikla' => 'kw.ih/k.l.eh /  / failed phone:kw / failed spelling:cw',
  'cwiklinski' => 'kw.ih/k.l.ih.n/s.k.ee /  / failed phone:kw / failed spelling:cw',
  'cwynar' => 'kw.ih/n.er /  / failed phone:kw / failed spelling:cw',
  'cxc' => 's.ee/eh.k.s/s.ee / [c^s]. / failed phone:ee / failed spelling:xc',
  'cyacq' => 's.igh/ah.k / [c^s].[y^igh]/[a^ah].[c^k] / failed phone:k / failed spelling:cq',
  'cycled' => 's.igh/k.eh.l.d / [c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:le',
  'cycles' => 's.igh/k.eh.l.z / [c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:le',
  'cycling' => 's.igh/k.eh/l.ih.ng / [c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:li',
  'cyclist' => 's.igh/k.eh/l.ih.s.t / [c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:li',
  'cywinski' => 'k.ih/v.ih.n/s.k.ee / [c^k].[y^ih]/ / failed phone:v / failed spelling:wi',
  'czaja' => 'ch.igh/eh /  / failed phone:t / failed spelling:cz',
  'czajka' => 'ch.igh/k.eh /  / failed phone:t / failed spelling:cz',
  'czajkowski' => 'ch.igh/k.aw.f/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czapla' => 'ch.aw/p.l.eh /  / failed phone:t / failed spelling:cz',
  'czaplewski' => 'ch.eh/p.l.eh.f/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czaplicki' => 'ch.eh/p.l.ih.t/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czar' => 'z.aw.r /  / failed phone:z / failed spelling:cz',
  'czarist' => 'z.aw/r.ih.s.t /  / failed phone:z / failed spelling:cz',
  'czarnecki' => 'ch.er/n.eh.t/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czarnik' => 'ch.aw.r/n.ih.k /  / failed phone:t / failed spelling:cz',
  'czarny' => 'ch.aw.r/n.ee /  / failed phone:t / failed spelling:cz',
  'czars' => 'z.aw.r.z /  / failed phone:z / failed spelling:cz',
  'czech' => 'ch.eh.k /  / failed phone:t / failed spelling:cz',
  'czechoslovak' => 'ch.eh/k.eh/s.l.oh/v.aw.k /  / failed phone:t / failed spelling:cz',
  'czechoslovakia' => 'ch.eh/k.eh/s.l.oh/v.aw/k.ee/eh /  / failed phone:t / failed spelling:cz',
  'czechoslovakian' => 'ch.eh/ch.eh/s.l.oh/v.aw/k.ee/eh.n /  / failed phone:t / failed spelling:cz',
  'czechoslovaks' => 'ch.eh/k.eh/s.l.oh/v.aw.k.s /  / failed phone:t / failed spelling:cz',
  'czechowski' => 'ch.ih/h.aw.f/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czechs' => 'ch.eh.k.s /  / failed phone:t / failed spelling:cz',
  'czekajewski' => 'ch.eh/k.eh/j.ue/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czepiel' => 'ch.eh/p.ee.l /  / failed phone:t / failed spelling:cz',
  'czerniak' => 'ch.er/n.ee/ah.k /  / failed phone:t / failed spelling:cz',
  'czerwinski' => 'ch.er/v.ih.n/s.k.ee /  / failed phone:t / failed spelling:cz',
  'czerwonka' => 'ch.er/v.aw.ng/k.eh /  / failed phone:t / failed spelling:cz',
  'czeslaw' => 'ch.eh/s.l.aw /  / failed phone:t / failed spelling:cz',
  'czyz' => 'ch.ih.z /  / failed phone:t / failed spelling:cz',
  'czyzewski' => 'ch.ih/z.eh.f/s.k.ee /  / failed phone:t / failed spelling:cz',
  'd' => 'd.ee / [d^d]. / failed phone:ee / failed spelling:',
  'daane' => 'd.aw.n / [d^d].[a^aw]. / failed phone:n / failed spelling:an',
  'dabbled' => 'd.ah/b.eh.l.d / [d^d].[a^ah]/[bb^b]. / failed phone:eh / failed spelling:le',
  'dabbles' => 'd.ah/b.eh.l.z / [d^d].[a^ah]/[bb^b]. / failed phone:eh / failed spelling:le',
  'dabbling' => 'd.ah/b.eh/l.ih.ng / [d^d].[a^ah]/[bb^b]. / failed phone:eh / failed spelling:li',
  'dabhol' => 'd.ah/b.oh.l / [d^d].[a^ah]/[b^b]. / failed phone:oh / failed spelling:ho',
  'dabkowski' => 'd.eh.b/k.aw.f/s.k.ee / [d^d].[a^ah].[b^b]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'dabrowski' => 'd.eh/b.r.aw.f/s.k.ee / [d^d].[a^ah]/[b^b].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'dachshunds' => 'd.aw.k.s/h.oo.n.t.s / [d^d].[a^aw].[ch^k].[s^s]/[h^h].[u^oo].[n^n]. / failed phone:t / failed spelling:ds',
  'dacus' => 'd.ah/k.ih.s / [d^d].[a^ah]/[c^k]. / failed phone:ih / failed spelling:us',
  'dae' => 'd.ay / [d^d].[a^ay] / failed phone:ay / failed spelling:ae',
  'daenzer' => 'd.eh.n/z.er / [d^d].[a^ah]. / failed phone:n / failed spelling:en',
  'daewoo' => 'd.ay/w.ue / [d^d].[a^ay]/ / failed phone:w / failed spelling:ew',
  'dagenais' => 'd.ah/zh.ih/n.ay / [d^d].[a^ah]/ / failed phone:zh / failed spelling:ge',
  'daher' => 'd.aw/er / [d^d].[a^aw]/ / failed phone:er / failed spelling:he',
  'dahl' => 'd.aw.l / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahlberg' => 'd.aw.l/b.er.g / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahle' => 'd.aw/eh.l / [d^d].[a^aw]/ / failed phone:eh / failed spelling:hl',
  'dahlem' => 'd.aw/l.ih.m / [d^d].[a^aw]/ / failed phone:l / failed spelling:hl',
  'dahlen' => 'd.aw/l.eh.n / [d^d].[a^aw]/ / failed phone:l / failed spelling:hl',
  'dahler' => 'd.aw/l.er / [d^d].[a^aw]/ / failed phone:l / failed spelling:hl',
  'dahlgren' => 'd.ah.l/g.r.ih.n / [d^d].[a^ah]. / failed phone:l / failed spelling:hl',
  'dahlheimer' => 'd.aw.l/h.igh/m.er / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahlia' => 'd.ah/l.ye.eh / [d^d].[a^ah]/ / failed phone:l / failed spelling:hl',
  'dahlin' => 'd.aw/l.ih.n / [d^d].[a^aw]/ / failed phone:l / failed spelling:hl',
  'dahlke' => 'd.aw.l.k / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahlman' => 'd.aw.l/m.eh.n / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahlquist' => 'd.aw.l/kw.ih.s.t / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahlstrom' => 'd.aw.l/s.t.r.eh.m / [d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'dahm' => 'd.ah.m / [d^d].[a^ah]. / failed phone:m / failed spelling:hm',
  'dahman' => 'd.aw/m.eh.n / [d^d].[a^aw]/ / failed phone:m / failed spelling:hm',
  'dahmen' => 'd.aw/m.eh.n / [d^d].[a^aw]/ / failed phone:m / failed spelling:hm',
  'dahmer' => 'd.aw/m.er / [d^d].[a^aw]/ / failed phone:m / failed spelling:hm',
  'dahms' => 'd.aw.m.z / [d^d].[a^aw]. / failed phone:m / failed spelling:hm',
  'dahnke' => 'd.ah.ng.k / [d^d].[a^ah]. / failed phone:ng / failed spelling:hn',
  'daignault' => 'd.eh.g/n.oh / [d^d].[ai^eh].[g^g]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'daigneault' => 'd.eh.g/n.oh / [d^d].[ai^eh].[g^g]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'dalgleish' => 'd.ah.l/g.eh/l.ih.sh / [d^d].[a^ah].[l^l]/[g^g]. / failed phone:eh / failed spelling:le',
  'dalia' => 'd.aw/l.ye.eh / [d^d].[a^aw]/[l^l]. / failed phone:ue / failed spelling:ia',
  'dalke' => 'd.ay.l.k / [d^d].[a^ay].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'daloia' => 'd.aw/l.oh/ye.eh / [d^d].[a^aw]/[l^l].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'damme' => 'd.ah.m / [d^d].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'danelle' => 'd.eh/n.eh.l / [d^d].[a^ah]/[n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'dangled' => 'd.ah.ng/g.eh.l.d / [d^d].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'dangler' => 'd.ah.ng/g.eh/l.er / [d^d].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'dangles' => 'd.ah.ng/g.eh.l.z / [d^d].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'dangling' => 'd.ah.ng/g.eh/l.ih.ng / [d^d].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'daniel' => 'd.ah/n.ye.eh.l / [d^d].[a^ah]/[n^n]. / failed phone:ue / failed spelling:ie',
  'daniela' => 'd.aw/n.ye.eh/l.eh / [d^d].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ie',
  'daniele' => 'd.aw/n.ye.eh/l.ay / [d^d].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ie',
  'danielle' => 'd.ah/n.ee/eh.l / [d^d].[a^ah]/[n^n].[i^ee]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'daniels' => 'd.ah/n.ye.eh.l.z / [d^d].[a^ah]/[n^n]. / failed phone:ue / failed spelling:ie',
  'danielson' => 'd.ah/n.ye.eh.l/s.eh.n / [d^d].[a^ah]/[n^n]. / failed phone:ue / failed spelling:ie',
  'danowski' => 'd.eh/n.aw.f/s.k.ee / [d^d].[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'danske' => 'd.ah.n.s.k / [d^d].[a^ah].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'danville' => 'd.ah.n/v.ih.l / [d^d].[a^ah].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'danylyszyn' => 'd.ah/n.ih/l.ee/z.ih.n / [d^d].[a^ah]/[n^n].[y^ih]/[l^l].[y^ee]/[s^z]. / failed phone:ih / failed spelling:zy',
  'dao' => 'd.ow / [d^d]. / failed phone:ow / failed spelling:ao',
  'daoud' => 'd.ow.d / [d^d]. / failed phone:ow / failed spelling:ao',
  'daoust' => 'd.ow.s.t / [d^d]. / failed phone:ow / failed spelling:ao',
  'darbonne' => 'd.aw.r/b.eh.n / [d^d].[a^oh].[r^r]/[b^b].[o^uh].[n^n] / failed phone:n / failed spelling:nn',
  'darke' => 'd.aw.r.k / [d^d].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'darmstadt' => 'd.aw.r.m/s.t.ah.t / [d^d].[a^oh].[r^r].[m^m]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'darragh' => 'd.air/eh / [d^d].[arr^air]/[a^ah] / failed phone:eh / failed spelling:ra',
  'darrelle' => 'd.er/eh.l / [d^d].[arr^er]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'darville' => 'd.aw.r/v.ih.l / [d^d].[a^oh].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'dascenzo' => 'd.aw.s/ch.eh.n/z.oh / [d^d].[a^aw].[sc^s]/ / failed phone:t / failed spelling:en',
  'dasch' => 'd.ah.sh / [d^d].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'daschle' => 'd.ah/sh.l.ee / [d^d].[a^ah]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'datapower' => 'd.ay/t.eh/p.ow.r / [d^d].[a^ay]/[t^t].[a^ah]/[p^p].[ow^ow]. / failed phone:r / failed spelling:er',
  'daube' => 'd.aw.b / [d^d].[au^aw].[b^b] / failed phone:b / failed spelling:ub',
  'daudelin' => 'd.oh/d.ih/l.ah.n / [d^d].[au^oh]/[d^d].[e^ih]/[l^l]. / failed phone:ah / failed spelling:in',
  'daugherty' => 'd.aw/k.er/t.ee / [d^d].[a^aw]/ / failed phone:k / failed spelling:ug',
  'dauphinais' => 'd.oh/f.ih/n.ay / [d^d].[au^oh]/[ph^f].[i^ih]/[n^n].[a^ay] / failed phone:ay / failed spelling:ai',
  'davao' => 'd.eh/v.oh / [d^d].[a^ah]/[v^v].[a^oh] / failed phone:oh / failed spelling:ao',
  'davault' => 'd.eh/v.oh / [d^d].[a^ah]/[v^v].[a^oh] / failed phone:oh / failed spelling:au',
  'dawe' => 'd.aw / [d^d].[a^aw] / failed phone:aw / failed spelling:aw',
  'daya' => 'd.igh/eh / [d^d]. / failed phone:igh / failed spelling:ay',
  'daye' => 'd.ay / [d^d].[a^ay] / failed phone:ay / failed spelling:ay',
  'dazs' => 'd.aw.s / [d^d].[a^aw].[z^s] / failed phone:s / failed spelling:zs',
  'dazzled' => 'd.ah/z.eh.l.d / [d^d].[a^ah]/[zz^z]. / failed phone:eh / failed spelling:le',
  'dazzling' => 'd.ah/z.eh/l.ih.ng / [d^d].[a^ah]/[zz^z]. / failed phone:eh / failed spelling:li',
  'dbase' => 'd.ee/b.ay.s / [d^d]. / failed phone:ee / failed spelling:ba',
  'ddt' => 'd.ee/d.ee/t.ee / [dd^d]. / failed phone:ee / failed spelling:t',
  'deahl' => 'd.ee.l / [d^d].[e^ee]. / failed phone:l / failed spelling:ah',
  'deandrea' => 'd.ah/d.r.ee/eh / [d^d]. / failed phone:ah / failed spelling:ea',
  'debacles' => 'd.ay/b.aw/k.eh.l.z / [d^d].[e^ay]/[b^b].[a^aw]/[c^k]. / failed phone:eh / failed spelling:le',
  'debevoise' => 'd.eh/b.eh.v/w.aw.z / [d^d].[e^eh]/[b^b].[e^eh].[v^v]/ / failed phone:w / failed spelling:oi',
  'deblois' => 'd.eh/b.l.ue / [d^d].[e^eh]/[b^b].[l^l].[o^ue] / failed phone:ue / failed spelling:oi',
  'debora' => 'd.eh/b.r.eh / [d^d].[e^eh]/[b^b]. / failed phone:r / failed spelling:or',
  'deborde' => 'd.ih/b.aw.r.d / [d^d].[e^ih]/[b^b].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'debris' => 'd.eh/b.r.ee / [d^d].[e^eh]/[b^b].[r^r].[i^ee] / failed phone:ee / failed spelling:is',
  'debrosse' => 'd.eh/b.r.eh.s / [d^d].[e^eh]/[b^b].[r^r].[o^uh].[ss^s] / failed phone:s / failed spelling:ss',
  'debruhl' => 'd.eh/b.r.eh.l / [d^d].[e^eh]/[b^b].[r^r].[u^uh]. / failed phone:l / failed spelling:hl',
  'debuhr' => 'd.eh/b.oo.r / [d^d].[e^eh]/[b^b].[u^oo]. / failed phone:r / failed spelling:hr',
  'debus' => 'd.eh/b.ih.s / [d^d].[e^eh]/[b^b]. / failed phone:ih / failed spelling:us',
  'debut' => 'd.ay/b.ye.ue / [d^d].[e^ay]/[b^b].[u^ue] / failed phone:ue / failed spelling:ut',
  'debuted' => 'd.ay/b.ye.ue.d / [d^d].[e^ay]/[b^b].[u^ue].[t^d] / failed phone:d / failed spelling:te',
  'debuts' => 'd.ay/b.ye.ue.z / [d^d].[e^ay]/[b^b].[u^ue]. / failed phone:z / failed spelling:ts',
  'decaffeinate' => 'd.ee/k.ah/f.eh/n.ay.t / [d^d].[e^ee]/[c^k].[a^ah]/[ff^f].[e^eh]/ / failed phone:n / failed spelling:in',
  'decaffeinated' => 'd.ee/k.ah/f.eh/n.ay/t.ih.d / [d^d].[e^ee]/[c^k].[a^ah]/[ff^f].[e^eh]/ / failed phone:n / failed spelling:in',
  'decaffeinating' => 'd.ee/k.ah/f.eh/n.ay/t.ih.ng / [d^d].[e^ee]/[c^k].[a^ah]/[ff^f].[e^eh]/ / failed phone:n / failed spelling:in',
  'dececco' => 'd.ih/ch.eh/k.oh / [d^d].[e^ih]/ / failed phone:t / failed spelling:ce',
  'decelle' => 'd.ih/s.eh.l / [d^d].[e^ih]/[c^s].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'decesare' => 'd.ih/ch.eh/s.aw/r.ee / [d^d].[e^ih]/ / failed phone:t / failed spelling:ce',
  'decicco' => 'd.ih/ch.ee/k.oh / [d^d].[e^ih]/ / failed phone:t / failed spelling:ci',
  'decima' => 'd.ih/ch.ee/m.eh / [d^d].[e^ih]/ / failed phone:t / failed spelling:ci',
  'declercq' => 'd.eh/k.l.er.k / [d^d].[e^eh]/[c^k].[le^l].[r^er].[c^k] / failed phone:k / failed spelling:cq',
  'decorative' => 'd.eh/k.r.eh/t.ih.v / [d^d].[e^eh]/[c^k]. / failed phone:r / failed spelling:or',
  'decrescenzo' => 'd.ih/k.r.eh.s/ch.eh.n/z.oh / [d^d].[e^ih]/[c^k].[r^r].[e^eh].[sc^s]/ / failed phone:t / failed spelling:en',
  'decworld' => 'd.eh/kw.er.l.d / [d^d].[e^eh]/ / failed phone:kw / failed spelling:cw',
  'dedeaux' => 'd.ih/d.oh / [d^d].[e^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'dedeurwaerder' => 'd.eh/d.er/w.aw.r/d.er / [d^d].[e^eh]/[d^d]. / failed phone:er / failed spelling:eu',
  'dedham' => 'd.eh/d.eh.m / [d^d].[e^eh]/[d^d]. / failed phone:eh / failed spelling:ha',
  'deductibles' => 'd.ih/d.uh.k/t.eh/b.eh.l.z / [d^d].[e^ih]/[d^d].[u^uh].[c^k]/[t^t].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'defects' => 'd.ih/f.eh.k.t / [d^d].[e^ih]/[f^f].[e^eh].[c^k].[t^t] / failed phone:t / failed spelling:ts',
  'defenbaugh' => 'd.eh/f.ih.n/b.ow / [d^d].[e^eh]/[f^f].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'deffenbaugh' => 'd.eh/f.ih.n/b.ow / [d^d].[e^eh]/[ff^f].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'defrancesco' => 'd.ih/f.r.aw.n/ch.eh/s.k.oh / [d^d].[e^ih]/[f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'defrancisco' => 'd.ih/f.r.aw.n/ch.ee/s.k.oh / [d^d].[e^ih]/[f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'degaulle' => 'd.eh/g.aw.l / [d^d].[e^eh]/[g^g].[au^aw].[ll^l] / failed phone:l / failed spelling:ul',
  'degenhardt' => 'd.eh/g.ih.n/h.aw.r.t / [d^d].[e^eh]/[g^g].[e^ih].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'degraaf' => 'd.eh/g.r.aw.f / [d^d].[e^eh]/[g^g].[r^r].[a^aw]. / failed phone:f / failed spelling:af',
  'degrace' => 'd.ih/g.r.aw/ch.ee / [d^d].[e^ih]/[g^g].[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'dehaan' => 'd.eh/h.aw.n / [d^d].[e^eh]/[h^h].[a^aw]. / failed phone:n / failed spelling:an',
  'dehaas' => 'd.eh/h.aw.z / [d^d].[e^eh]/[h^h].[a^aw]. / failed phone:z / failed spelling:as',
  'dehecq' => 'd.ih/h.eh.k / [d^d].[e^ih]/[h^h].[e^eh].[c^k] / failed phone:k / failed spelling:cq',
  'dehler' => 'd.eh/l.er / [d^d].[e^eh]/ / failed phone:l / failed spelling:hl',
  'dehm' => 'd.eh.m / [d^d].[e^eh]. / failed phone:m / failed spelling:hm',
  'dehmer' => 'd.eh/m.er / [d^d].[e^eh]/ / failed phone:m / failed spelling:hm',
  'dehne' => 'd.eh.n / [d^d].[e^eh].[hn^n] / failed phone:n / failed spelling:hn',
  'deibler' => 'd.igh/b.eh/l.er / [d^d].[ei^igh]/[b^b]. / failed phone:eh / failed spelling:le',
  'deignan' => 'd.eh.g/n.ah.n / [d^d].[e^eh]. / failed phone:g / failed spelling:ig',
  'deihl' => 'd.igh.l / [d^d].[ei^igh]. / failed phone:l / failed spelling:hl',
  'deike' => 'd.ee.k / [d^d].[ei^ee].[k^k] / failed phone:k / failed spelling:ik',
  'deitsch' => 'd.igh.ch / [d^d].[ei^igh].[t^t]. / failed phone:t / failed spelling:ts',
  'dejarnette' => 'd.eh/zh.aw.r/n.eh.t / [d^d].[e^eh]/ / failed phone:zh / failed spelling:ja',
  'dejean' => 'd.ih/zh.ee.n / [d^d].[e^ih]/ / failed phone:zh / failed spelling:je',
  'dejonge' => 'd.eh/j.aw.ng / [d^d].[e^eh]/[j^j].[o^aw].[n^ng] / failed phone:ng / failed spelling:ng',
  'dejongh' => 'd.eh/j.aw.ng / [d^d].[e^eh]/[j^j].[o^aw].[n^ng] / failed phone:ng / failed spelling:ng',
  'dekeyser' => 'd.eh/k.igh/z.er / [d^d].[e^eh]/[k^k]. / failed phone:igh / failed spelling:ey',
  'dekker' => 'd.eh/k.er / [d^d].[e^eh]/[k^k]. / failed phone:er / failed spelling:ke',
  'delacerda' => 'd.eh/l.aw/ch.air/d.eh / [d^d].[e^eh]/[l^l].[a^aw]/ / failed phone:t / failed spelling:ce',
  'delahoussaye' => 'd.eh/l.eh/h.ow/s.ay / [d^d].[e^eh]/[l^l].[a^ah]/[h^h].[ou^ow]/[ss^s].[a^ay] / failed phone:ay / failed spelling:ay',
  'delao' => 'd.eh/l.ow / [d^d].[e^eh]/[l^l]. / failed phone:ow / failed spelling:ao',
  'delaurentiis' => 'd.ee/l.aw/r.eh.n/t.ee.z / [d^d].[e^ee]/[l^l].[au^aw]/[r^r].[e^eh].[n^n]/[t^t].[i^ee]. / failed phone:z / failed spelling:is',
  'delcine' => 'd.eh.l/ch.ee/n.ee / [d^d].[e^eh].[l^l]/ / failed phone:t / failed spelling:ci',
  'delebarre' => 'd.eh/l.eh/b.aw.r / [d^d].[e^eh]/[l^l].[e^eh]/[b^b].[a^oh].[r^r] / failed phone:r / failed spelling:rr',
  'deleeuw' => 'd.eh/l.ee/ue / [d^d].[e^eh]/[le^l].[e^ee]/[u^ue] / failed phone:ue / failed spelling:uw',
  'delfosse' => 'd.eh.l/f.eh.s / [d^d].[e^eh].[l^l]/[f^f].[o^uh].[ss^s] / failed phone:s / failed spelling:ss',
  'delgiorno' => 'd.eh.l/j.aw.r/n.oh / [d^d].[e^eh].[l^l]/[g^j]. / failed phone:oh / failed spelling:io',
  'delgiudice' => 'd.eh.l/j.ue/d.eh.s / [d^d].[e^eh].[l^l]/[g^j]. / failed phone:ue / failed spelling:iu',
  'delguercio' => 'd.eh.l/g.air/ch.ee/oh / [d^d].[e^eh].[l^l]/[gu^g].[er^air]/ / failed phone:t / failed spelling:ci',
  'delhi' => 'd.eh/l.ee / [d^d].[e^eh]/[l^l]. / failed phone:ee / failed spelling:hi',
  'delia' => 'd.ee/l.ye.eh / [d^d].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'delicia' => 'd.eh/l.ee/ch.eh / [d^d].[e^eh]/[l^l].[i^ee]/ / failed phone:t / failed spelling:ci',
  'delisle' => 'd.ih/l.igh.l / [d^d].[e^ih]/[l^l].[i^igh]. / failed phone:l / failed spelling:sl',
  'dellavecchia' => 'd.eh/l.eh/v.eh/k.ee/eh / [d^d].[e^eh]/[ll^l].[a^ah]/[v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'delle' => 'd.eh.l / [d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'delucchi' => 'd.eh/l.ue/k.ee / [d^d].[e^eh]/[l^l].[u^ue]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'deluccia' => 'd.eh/l.ue/ch.eh / [d^d].[e^eh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'delucia' => 'd.eh/l.ue/ch.eh / [d^d].[e^eh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'deluxe' => 'd.eh/l.uh.k.s / [d^d].[e^eh]/[l^l].[u^uh].[x^x] / failed phone:s / failed spelling:e',
  'delvecchio' => 'd.eh.l/v.eh/k.ee/oh / [d^d].[e^eh].[l^l]/[v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'demaggio' => 'd.ih/m.aw/j.ee/oh / [d^d].[e^ih]/[m^m].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'demarais' => 'd.eh/m.er/ay / [d^d].[e^eh]/[m^m].[ar^er]/[a^ay] / failed phone:ay / failed spelling:ai',
  'demarcus' => 'd.eh/m.aw.r/k.ih.s / [d^d].[e^eh]/[m^m].[a^oh].[r^r]/[c^k]. / failed phone:ih / failed spelling:us',
  'demarest' => 'd.ay/m.aw/r.ay/ih.s.t / [d^d].[e^ay]/[m^m].[a^aw]/[r^r].[e^ay]/ / failed phone:ih / failed spelling:st',
  'demattia' => 'd.ih/m.aw/sh.eh / [d^d].[e^ih]/[m^m].[a^aw]/[t^sh]. / failed phone:eh / failed spelling:ti',
  'dembowski' => 'd.ih.m/b.aw.f/s.k.ee / [d^d].[e^ih].[m^m]/[b^b].[o^aw]. / failed phone:f / failed spelling:ws',
  'demisch' => 'd.eh/m.ih.sh / [d^d].[e^eh]/[m^m].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'demjanjuk' => 'd.eh/m.ye.aw/n.ye.ue.k / [d^d].[e^eh]/[m^m]. / failed phone:ye / failed spelling:ja',
  'demme' => 'd.eh.m / [d^d].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'demopoulos' => 'd.eh/m.aw/p.eh/l.ih.s / [d^d].[e^eh]/[m^m].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'demoulin' => 'd.eh/m.ue/l.ah.n / [d^d].[e^eh]/[m^m].[ou^ue]/[l^l]. / failed phone:ah / failed spelling:in',
  'denarii' => 'd.ih/n.ah/r.ee / [d^d].[e^ih]/[n^n].[a^ah]/[r^r].[i^ee] / failed phone:ee / failed spelling:ii',
  'denault' => 'd.ih/n.oh / [d^d].[e^ih]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'deneault' => 'd.ih/n.oh / [d^d].[e^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'deneke' => 'd.eh/n.ih.k / [d^d].[e^eh]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'dengler' => 'd.ih.ng/eh/l.er / [d^d].[e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'denham' => 'd.eh/n.eh.m / [d^d].[e^eh]/[n^n]. / failed phone:eh / failed spelling:ha',
  'denike' => 'd.eh/n.ih.k / [d^d].[e^eh]/[n^n].[i^ih].[k^k] / failed phone:k / failed spelling:ke',
  'denlinger' => 'd.eh/n.eh/l.ih.ng/er / [d^d].[e^eh]/[n^n]. / failed phone:eh / failed spelling:li',
  'denne' => 'd.eh.n / [d^d].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'denomme' => 'd.eh/n.eh.m / [d^d].[e^eh]/[n^n].[o^uh].[m^m] / failed phone:m / failed spelling:mm',
  'denouement' => 'd.ay/n.ue/m.aw.n / [d^d].[e^ay]/[n^n].[ou^ue]/ / failed phone:m / failed spelling:em',
  'denucci' => 'd.ih/n.ue/ch.ee / [d^d].[e^ih]/[n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'dep' => 'd.ih/p.aw.r.t/m.eh.n.t / [d^d].[e^ih]/[p^p]. / failed phone:oh / failed spelling:',
  'depace' => 'd.ih/p.aw/ch.ee / [d^d].[e^ih]/[p^p].[a^aw]/ / failed phone:t / failed spelling:ce',
  'depaola' => 'd.ih/p.ow/l.eh / [d^d].[e^ih]/[p^p]. / failed phone:ow / failed spelling:ao',
  'depaoli' => 'd.ih/p.ow/l.ee / [d^d].[e^ih]/[p^p]. / failed phone:ow / failed spelling:ao',
  'depaolis' => 'd.eh/p.ow/l.ih.s / [d^d].[e^eh]/[p^p]. / failed phone:ow / failed spelling:ao',
  'depaolo' => 'd.ih/p.ow/l.oh / [d^d].[e^ih]/[p^p]. / failed phone:ow / failed spelling:ao',
  'depauw' => 'd.eh/p.ow / [d^d].[e^eh]/[p^p].[au^aw] / failed phone:ow / failed spelling:au',
  'depot' => 'd.ee/p.oh / [d^d].[e^ee]/[p^p].[o^oh] / failed phone:oh / failed spelling:ot',
  'depots' => 'd.ee/p.oh.z / [d^d].[e^ee]/[p^p].[o^oh]. / failed phone:z / failed spelling:ts',
  'deramus' => 'd.air/eh/m.ih.s / [d^d].[er^air]/[a^ah]/[m^m]. / failed phone:ih / failed spelling:us',
  'deregt' => 'd.er/eh.k.t / [d^d].[er^er]/[e^eh]. / failed phone:k / failed spelling:gt',
  'derflinger' => 'd.er/f.eh/l.ih.ng/er / [d^d].[er^er]/[f^f]. / failed phone:eh / failed spelling:li',
  'derouin' => 'd.er/w.ee.n / [d^d].[er^er]/ / failed phone:w / failed spelling:ou',
  'derousse' => 'd.er/ue.s / [d^d].[er^er]/[ou^ue].[ss^s] / failed phone:s / failed spelling:ss',
  'dersch' => 'd.er.sh / [d^d].[er^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'derus' => 'd.air/ih.s / [d^d].[er^air]/ / failed phone:ih / failed spelling:us',
  'des' => 'd.eh / [d^d].[e^eh] / failed phone:eh / failed spelling:es',
  'descarpentries' => 'd.ay/k.aw.r/p.eh.n/t.r.ee.z / [d^d].[e^ay]/ / failed phone:k / failed spelling:sc',
  'descartes' => 'd.ay/k.aw.r.t / [d^d].[e^ay]/ / failed phone:k / failed spelling:sc',
  'desch' => 'd.eh.sh / [d^d].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'deschamps' => 'd.eh/sh.eh.m.p.s / [d^d].[e^eh]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'deschene' => 'd.eh/sh.ee.n / [d^d].[e^eh]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'deschenes' => 'd.eh/sh.ee.n.z / [d^d].[e^eh]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'deschepper' => 'd.eh/sh.ih/p.er / [d^d].[e^eh]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'deschler' => 'd.eh/sh.eh/l.er / [d^d].[e^eh]/[sc^sh]. / failed phone:eh / failed spelling:hl',
  'descoteaux' => 'd.eh/s.k.eh/t.oh / [d^d].[e^eh]/[s^s].[c^k].[o^uh]/[te^t].[a^oh] / failed phone:oh / failed spelling:au',
  'desjardin' => 'd.eh.s/zh.aw.r/d.ah.n / [d^d].[e^eh].[s^s]/ / failed phone:zh / failed spelling:ja',
  'desjardins' => 'd.eh.s/zh.aw.r/d.ih.n.z / [d^d].[e^eh].[s^s]/ / failed phone:zh / failed spelling:ja',
  'desjarlais' => 'd.eh.s/zh.aw.r/l.ay / [d^d].[e^eh].[s^s]/ / failed phone:zh / failed spelling:ja',
  'desmarais' => 'd.eh.z/m.er/ay / [d^d].[e^eh].[s^z]/[m^m].[ar^er]/[a^ay] / failed phone:ay / failed spelling:ai',
  'desormeaux' => 'd.eh/s.er/m.oh / [d^d].[e^eh]/[s^s].[o^oh].[r^r]/[m^m]. / failed phone:oh / failed spelling:ea',
  'desrochers' => 'd.ay/r.oh/sh.er.z / [d^d].[e^ay]/ / failed phone:r / failed spelling:sr',
  'desroches' => 'd.ay/r.oh/sh.ih.z / [d^d].[e^ay]/ / failed phone:r / failed spelling:sr',
  'desrosier' => 'd.ay/r.oh/sh.ee/er / [d^d].[e^ay]/ / failed phone:r / failed spelling:sr',
  'desrosiers' => 'd.ay/r.oh/sh.ee/er.z / [d^d].[e^ay]/ / failed phone:r / failed spelling:sr',
  'dessauer' => 'd.ih/s.ow.r / [d^d].[e^ih]/[ss^s].[au^aw]. / failed phone:r / failed spelling:er',
  'desselle' => 'd.ih/s.eh.l / [d^d].[e^ih]/[ss^s].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'dessert' => 'd.ih/z.er.t / [d^d].[e^ih]/[s^z]. / failed phone:er / failed spelling:se',
  'desserts' => 'd.ih/z.er.t.s / [d^d].[e^ih]/[s^z]. / failed phone:er / failed spelling:se',
  'detente' => 'd.ay/t.aw.n.t / [d^d].[e^ay]/[te^t]. / failed phone:aw / failed spelling:nt',
  'detienne' => 'd.eh/t.ee/eh.n / [d^d].[e^eh]/[t^t].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'deubel' => 'd.oy/b.eh.l / [d^d]. / failed phone:oy / failed spelling:eu',
  'deubler' => 'd.oy/b.eh/l.er / [d^d]. / failed phone:oy / failed spelling:eu',
  'deuschle' => 'd.oy/sh.eh.l / [d^d]. / failed phone:oy / failed spelling:eu',
  'deuser' => 'd.oy/s.er / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutch' => 'd.oy.ch / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutsch' => 'd.oy.ch / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutsche' => 'd.oy.ch / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutschemark' => 'd.oy.ch/m.aw.r.k / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutschemarks' => 'd.oy.ch/m.aw.r.k.s / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutscher' => 'd.oy/ch.er / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutschland' => 'd.oy.ch/l.ah.n.d / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutschman' => 'd.oy.ch/m.eh.n / [d^d]. / failed phone:oy / failed spelling:eu',
  'deutz' => 'd.oy.t.s / [d^d]. / failed phone:oy / failed spelling:eu',
  'deux' => 'd.ue / [d^d].[eu^ue] / failed phone:ue / failed spelling:eu',
  'devault' => 'd.ih/v.oh / [d^d].[e^ih]/[v^v].[a^oh] / failed phone:oh / failed spelling:au',
  'devaux' => 'd.ih/v.oh / [d^d].[e^ih]/[v^v].[a^oh] / failed phone:oh / failed spelling:au',
  'deveaux' => 'd.ih/v.oh / [d^d].[e^ih]/[ve^v].[a^oh] / failed phone:oh / failed spelling:au',
  'develle' => 'd.eh/v.eh.l / [d^d].[e^eh]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'deveraux' => 'd.eh/v.er/oh / [d^d].[e^eh]/[ve^v].[r^er]/[a^oh] / failed phone:oh / failed spelling:au',
  'devereaux' => 'd.eh/v.er/oh / [d^d].[e^eh]/[ve^v].[re^er]/[a^oh] / failed phone:oh / failed spelling:au',
  'devereux' => 'd.eh/v.er/ue / [d^d].[e^eh]/[ve^v].[re^er]/[u^ue] / failed phone:ue / failed spelling:ux',
  'deville' => 'd.eh/v.ih.l / [d^d].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'devincenzi' => 'd.ih/v.ee.n/ch.eh.n/z.ee / [d^d].[e^ih]/[v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ce',
  'devincenzo' => 'd.ih/v.ee.n/ch.eh.n/z.oh / [d^d].[e^ih]/[v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ce',
  'dewaard' => 'd.ue/aw.r.d / [d^d].[ew^ue]/[a^oh]. / failed phone:r / failed spelling:ar',
  'dewaele' => 'd.ue/eh.l / [d^d].[ew^ue]/[a^ah].[el^l] / failed phone:l / failed spelling:el',
  'dewilde' => 'd.ee/w.igh.l.d / [d^d].[e^ee]/[w^w].[i^igh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'dewolfe' => 'd.ue/oo.l.f / [d^d].[ew^ue]/[o^oo].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'deyton' => 'd.ih/t.aw.n / [d^d].[e^ih]/ / failed phone:t / failed spelling:yt',
  'dezeeuw' => 'd.ih/z.ee/ue / [d^d].[e^ih]/[z^z].[e^ee]/[eu^ue] / failed phone:ue / failed spelling:eu',
  'dhabi' => 'd.aw/b.ee / [d^d]. / failed phone:aw / failed spelling:ha',
  'dhaka' => 'd.aw/k.eh / [d^d]. / failed phone:aw / failed spelling:ha',
  'dharma' => 'd.aw.r/m.eh / [d^d]. / failed phone:oh / failed spelling:ha',
  'dhein' => 'd.igh.n / [d^d]. / failed phone:igh / failed spelling:he',
  'dhia' => 'd.ee/eh / [d^d]. / failed phone:ee / failed spelling:hi',
  'dhillon' => 'd.ih/l.eh.n / [d^d]. / failed phone:ih / failed spelling:hi',
  'dhlakama' => 'd.eh/l.eh/k.aw/m.eh / [d^d]. / failed phone:eh / failed spelling:hl',
  'dhole' => 'd.oh.l / [d^d]. / failed phone:oh / failed spelling:ho',
  'dhondt' => 'd/h.aw.n.t / [d^d]/[h^h].[o^aw].[n^n]. / failed phone:t / failed spelling:dt',
  'dhows' => 'd.ow.z / [d^d]. / failed phone:ow / failed spelling:ho',
  'diamond' => 'd.igh/m.eh.n.d / [d^d].[i^igh]/ / failed phone:m / failed spelling:am',
  'diamonds' => 'd.igh/m.eh.n.d.z / [d^d].[i^igh]/ / failed phone:m / failed spelling:am',
  'dianne' => 'd.igh/ah.n / [d^d].[i^igh]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'diaper' => 'd.igh/p.er / [d^d].[i^igh]/ / failed phone:p / failed spelling:ap',
  'diapering' => 'd.igh/p.er/ih.ng / [d^d].[i^igh]/ / failed phone:p / failed spelling:ap',
  'diaphragm' => 'd.igh/eh/f.r.ah.m / [d^d].[i^igh]/[a^ah]/[ph^f].[r^r].[a^ah]. / failed phone:m / failed spelling:gm',
  'diarrhea' => 'd.igh/er/ee/eh / [d^d].[i^igh]/[ar^er]/ / failed phone:ee / failed spelling:rh',
  'diarrhoea' => 'd.igh/er/ee/eh / [d^d].[i^igh]/[ar^er]/ / failed phone:ee / failed spelling:rh',
  'dibbled' => 'd.ih/b.eh.l.d / [d^d].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'dicesare' => 'd.ih/ch.eh/s.aw/r.ee / [d^d].[i^ih]/ / failed phone:t / failed spelling:ce',
  'dicioccio' => 'd.ih/ch.oh/ch.ee/oh / [d^d].[i^ih]/ / failed phone:t / failed spelling:ci',
  'dicke' => 'd.ih.k / [d^d].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'dickes' => 'd.ih.k.s / [d^d].[i^ih].[c^k]. / failed phone:s / failed spelling:ke',
  'diede' => 'd.ee.d / [d^d].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'dieguez' => 'd.ih/g.eh.z / [d^d].[i^ih]/ / failed phone:g / failed spelling:eg',
  'diehl' => 'd.ee.l / [d^d].[ie^ee]. / failed phone:l / failed spelling:hl',
  'diehm' => 'd.ee.m / [d^d].[ie^ee]. / failed phone:m / failed spelling:hm',
  'dieringer' => 'd.ih/r.ih.n/j.er / [d^d].[i^ih]/ / failed phone:r / failed spelling:er',
  'dierkes' => 'd.ee.r.k.s / [d^d].[ie^ee].[r^r].[k^k]. / failed phone:s / failed spelling:es',
  'dierolf' => 'd.ih/r.oh.l.f / [d^d].[i^ih]/ / failed phone:r / failed spelling:er',
  'diery' => 'd.ih/r.ee / [d^d].[i^ih]/ / failed phone:r / failed spelling:er',
  'dietsch' => 'd.ee.ch / [d^d].[ie^ee].[t^t]. / failed phone:t / failed spelling:ts',
  'dietsche' => 'd.ee.ch / [d^d].[ie^ee].[t^t]. / failed phone:t / failed spelling:ts',
  'dieu' => 'd.ye.ue / [d^d]. / failed phone:ue / failed spelling:ie',
  'differently' => 'd.ih/f.r.eh.n.t/l.ee / [d^d].[i^ih]/[ff^f]. / failed phone:r / failed spelling:er',
  'difrancesco' => 'd.ih/f.r.aw.n/ch.eh/s.k.oh / [d^d].[i^ih]/[f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'digaetano' => 'd.ih/j.eh/t.aw/n.oh / [d^d].[i^ih]/[g^j].[a^ah]/ / failed phone:t / failed spelling:et',
  'digioia' => 'd.ih/j.oh/ye.eh / [d^d].[i^ih]/[g^j]. / failed phone:oh / failed spelling:io',
  'digiorgio' => 'd.ih/j.aw.r/j.ee/oh / [d^d].[i^ih]/[g^j]. / failed phone:oh / failed spelling:io',
  'digiovanna' => 'd.ih/j.oh/v.aw/n.eh / [d^d].[i^ih]/[g^j]. / failed phone:oh / failed spelling:io',
  'digiovanni' => 'd.ih/j.oh/v.aw/n.ee / [d^d].[i^ih]/[g^j]. / failed phone:oh / failed spelling:io',
  'digiulio' => 'd.ih/j.ue/l.ee/oh / [d^d].[i^ih]/[g^j]. / failed phone:ue / failed spelling:iu',
  'digiuseppe' => 'd.ee/j.ue/s.eh/p.ee / [d^d].[i^ee]/[g^j]. / failed phone:ue / failed spelling:iu',
  'diianni' => 'd.ee/ah/n.ee / [d^d].[i^ee]/ / failed phone:ah / failed spelling:ia',
  'diiorio' => 'd.ih/ye.aw/r.ee/oh / [d^d].[i^ih]/ / failed phone:ye / failed spelling:io',
  'dijker' => 'd.ee/k.er / [d^d].[i^ee]/ / failed phone:k / failed spelling:jk',
  'dijon' => 'd.ee/zh.aw.n / [d^d].[i^ee]/ / failed phone:zh / failed spelling:jo',
  'dille' => 'd.ih.l / [d^d].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'dimaggio' => 'd.ih/m.ah/j.ee/oh / [d^d].[i^ih]/[m^m].[a^ah]/[g^j]. / failed phone:ee / failed spelling:gi',
  'dimensioned' => 'd.eh/m.eh.n/ch.eh.n.d / [d^d].[i^ih]/[m^m].[e^eh].[n^n]/ / failed phone:t / failed spelling:si',
  'dimiceli' => 'd.ih/m.ee/ch.eh/l.ee / [d^d].[i^ih]/[m^m].[i^ee]/ / failed phone:t / failed spelling:cl',
  'dimpled' => 'd.ih.m/p.eh.l.d / [d^d].[i^ih].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'dingham' => 'd.ih.ng/eh.m / [d^d].[i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'dinghy' => 'd.ih.ng/ee / [d^d].[i^ih].[n^ng]/ / failed phone:ee / failed spelling:gh',
  'dingler' => 'd.ih.ng/g.eh/l.er / [d^d].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'dingus' => 'd.ih.ng/g.ih.s / [d^d].[i^ih].[n^ng]/[gu^g]. / failed phone:ih / failed spelling:s',
  'dinh' => 'd.ih.n / [d^d].[i^ih].[n^n] / failed phone:n / failed spelling:nh',
  'dinius' => 'd.igh/n.ee/ih.s / [d^d].[i^igh]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'dinmukhamed' => 'd.ih.n/m.ue/k.aw/m.eh.d / [d^d].[i^ih].[n^n]/[m^m].[u^ue]/[k^k]. / failed phone:aw / failed spelling:ha',
  'dioceses' => 'd.igh/eh/s.ee.z / [d^d].[i^igh]/[o^uh]/[c^s].[e^ee].[s^z] / failed phone:z / failed spelling:se',
  'dionne' => 'd.ee/aw.n / [d^d].[i^ee]/[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'dipiazza' => 'd.ih/p.ee/aw.t/s.eh / [d^d].[i^ih]/[p^p].[i^ee]/[a^aw]. / failed phone:t / failed spelling:zz',
  'dipiero' => 'd.ih/p.ih/r.oh / [d^d].[i^ih]/[p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'dipierro' => 'd.ih/p.ih/r.oh / [d^d].[i^ih]/[p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'directv' => 'd.er/eh.k/t.ee/v.ee / [d^d].[ir^er]/[e^eh].[c^k]/[t^t]. / failed phone:ee / failed spelling:v',
  'dirhams' => 'd.er/eh.m.z / [d^d].[ir^er]/ / failed phone:eh / failed spelling:ha',
  'dirickson' => 'd.aw/r.ih.k/s.eh.n / [d^d]. / failed phone:aw / failed spelling:ir',
  'dirkes' => 'd.er.k.s / [d^d].[ir^er].[k^k]. / failed phone:s / failed spelling:es',
  'disabled' => 'd.ih/s.ay/b.eh.l.d / [d^d].[i^ih]/[s^s].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'disables' => 'd.ih/s.ay/b.eh.l.z / [d^d].[i^ih]/[s^s].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'disabling' => 'd.ih/s.ay/b.eh/l.ih.ng / [d^d].[i^ih]/[s^s].[a^ay]/[b^b]. / failed phone:eh / failed spelling:li',
  'disassembled' => 'd.ih/s.eh/s.eh.m/b.eh.l.d / [d^d].[i^ih]/[s^s].[a^ah]/[ss^s].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'discenza' => 'd.ih.s/ch.eh.n/z.eh / [d^d].[i^ih].[sc^s]/ / failed phone:t / failed spelling:en',
  'disch' => 'd.ih.sh / [d^d].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'discher' => 'd.ih/sh.er / [d^d].[i^ih]/[sc^sh]. / failed phone:er / failed spelling:he',
  'dischinger' => 'd.ih/sh.ih.n/j.er / [d^d].[i^ih]/[sc^sh]. / failed phone:ih / failed spelling:hi',
  'disciples' => 'd.ih/s.igh/p.eh.l.z / [d^d].[i^ih]/[sc^s].[i^igh]/[p^p]. / failed phone:eh / failed spelling:le',
  'discotheque' => 'd.ih/s.k.oh/t.eh.k / [d^d].[i^ih]/[s^s].[c^k].[o^oh]/[t^t]. / failed phone:eh / failed spelling:he',
  'disembodied' => 'd.ih/s.ih/b.aw/d.ee.d / [d^d].[i^ih]/[s^s].[e^ih]/ / failed phone:b / failed spelling:mb',
  'disgruntled' => 'd.ih.s/g.r.uh.n/t.eh.l.d / [d^d].[i^ih].[s^s]/[g^g].[r^r].[u^uh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'disgruntlement' => 'd.ih.s/g.r.uh.n/t.eh.l/m.eh.n.t / [d^d].[i^ih].[s^s]/[g^g].[r^r].[u^uh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'disgruntling' => 'd.ih.s/g.r.uh.n/t.eh/l.ih.ng / [d^d].[i^ih].[s^s]/[g^g].[r^r].[u^uh].[n^n]/[t^t]. / failed phone:eh / failed spelling:li',
  'disheartened' => 'd.ih.s/h.aw.r/t.eh.n.d / [d^d].[i^ih].[s^s]/[h^h]. / failed phone:oh / failed spelling:ea',
  'disheartening' => 'd.ih.s/h.aw.r/t.eh/n.ih.ng / [d^d].[i^ih].[s^s]/[h^h]. / failed phone:oh / failed spelling:ea',
  'dishon' => 'd.ih/s.eh.n / [d^d].[i^ih]/[s^s]. / failed phone:eh / failed spelling:ho',
  'dislodging' => 'd.ih/s.l.aw/j.ih.ng / [d^d].[i^ih]/[s^s].[l^l].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'dismantled' => 'd.ih/s.m.ah.n/t.eh.l.d / [d^d].[i^ih]/[s^s].[m^m].[a^ah].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'dismantlement' => 'd.ih/s.m.ah.n/t.eh.l/m.eh.n.t / [d^d].[i^ih]/[s^s].[m^m].[a^ah].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'dismantles' => 'd.ih/s.m.ah.n/t.eh.l.z / [d^d].[i^ih]/[s^s].[m^m].[a^ah].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'dismantling' => 'd.ih/s.m.ah.n/t.eh/l.ih.ng / [d^d].[i^ih]/[s^s].[m^m].[a^ah].[n^n]/[t^t]. / failed phone:eh / failed spelling:li',
  'disposables' => 'd.ih/s.p.oh/z.eh/b.eh.l.z / [d^d].[i^ih]/[s^s].[p^p].[o^oh]/[s^z].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'dispossessed' => 'd.ih/s.p.eh/z.eh.s.t / [d^d].[i^ih]/[s^s].[p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'dissolve' => 'd.ih/z.aw.l.v / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'dissolved' => 'd.ih/z.aw.l.v.d / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'dissolver' => 'd.ih/z.aw.l/v.er / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'dissolvers' => 'd.ih/z.aw.l/v.er.z / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'dissolves' => 'd.ih/z.aw.l.v.z / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'dissolving' => 'd.ih/z.aw.l/v.ih.ng / [d^d].[i^ih]/[s^z]. / failed phone:aw / failed spelling:so',
  'divincenzo' => 'd.ih/v.ee.n/ch.eh.n/z.oh / [d^d].[i^ih]/[v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ce',
  'divvied' => 'd.ih/v.ee.d / [d^d].[i^ih]/[v^v]. / failed phone:ee / failed spelling:vi',
  'divvy' => 'd.ih/v.ee / [d^d].[i^ih]/[v^v]. / failed phone:ee / failed spelling:vy',
  'dk' => 'd.ee/k.ay / [d^d]. / failed phone:ee / failed spelling:k',
  'dlouhy' => 'd.eh/l.ow/ee / [d^d]. / failed phone:eh / failed spelling:lo',
  'dlugos' => 'd.eh/l.ue/g.oh.s / [d^d]. / failed phone:eh / failed spelling:lu',
  'dlugosz' => 'd.eh/l.ue/g.oh.s / [d^d]. / failed phone:eh / failed spelling:lu',
  'dmitri' => 'd.eh/m.ee/t.r.ee / [d^d]. / failed phone:eh / failed spelling:mi',
  'doanh' => 'd.oh.n / [d^d].[oa^oh].[n^n] / failed phone:n / failed spelling:an',
  'dobler' => 'd.oh/b.eh/l.er / [d^d].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'dobosz' => 'd.aw/b.eh.sh / [d^d].[o^aw]/[b^b].[o^uh].[s^sh] / failed phone:sh / failed spelling:sz',
  'dobrowski' => 'd.eh/b.r.aw.f/s.k.ee / [d^d].[o^uh]/[b^b].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'dobrzynski' => 'd.oh/b.r.eh/zh.ih.n/s.k.ee / [d^d].[o^oh]/[b^b].[r^r]. / failed phone:eh / failed spelling:zy',
  'dockworkers' => 'd.aw/kw.er/k.er.z / [d^d].[o^aw]/[ck^kw]. / failed phone:er / failed spelling:wo',
  'doddington' => 'd.aw/d.ih.n/t.eh.n / [d^d].[o^aw]/[dd^d].[i^ih].[n^n]/ / failed phone:t / failed spelling:gt',
  'dodgen' => 'd.aw/j.eh.n / [d^d].[o^aw]/[d^j]. / failed phone:eh / failed spelling:ge',
  'dodges' => 'd.aw/j.ih.z / [d^d].[o^aw]/[d^j]. / failed phone:ih / failed spelling:ge',
  'dodging' => 'd.aw/j.ih.ng / [d^d].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'doebler' => 'd.oh/b.eh/l.er / [d^d].[oe^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doehring' => 'd.aw/r.ih.ng / [d^d].[o^aw]/ / failed phone:r / failed spelling:eh',
  'doepke' => 'd.oh.p.k / [d^d].[oe^oh].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'doer' => 'd.ue.r / [d^d].[o^ue]. / failed phone:r / failed spelling:er',
  'doerfler' => 'd.aw.r/f.eh/l.er / [d^d].[oe^oh].[r^r]/[f^f]. / failed phone:eh / failed spelling:le',
  'doerflinger' => 'd.aw.r/f.eh/l.ih.ng/er / [d^d].[oe^oh].[r^r]/[f^f]. / failed phone:eh / failed spelling:li',
  'doescher' => 'd.oh/sh.er / [d^d].[oe^oh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'doetsch' => 'd.oh.ch / [d^d].[oe^oh].[t^t]. / failed phone:t / failed spelling:ts',
  'dohm' => 'd.aw.m / [d^d].[o^aw]. / failed phone:m / failed spelling:hm',
  'dohme' => 'd.oh.m / [d^d].[oh^oh].[m^m] / failed phone:m / failed spelling:me',
  'dokken' => 'd.aw/k.eh.n / [d^d].[o^aw]/[k^k]. / failed phone:eh / failed spelling:ke',
  'dolce' => 'd.oh.l/ch.ay / [d^d].[o^oh].[l^l]/ / failed phone:t / failed spelling:ce',
  'dolecki' => 'd.eh/l.eh.t/s.k.ee / [d^d].[o^uh]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'dolle' => 'd.aw.l / [d^d].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'dombkowski' => 'd.eh.m/k.aw.f/s.k.ee / [d^d].[o^uh].[mb^m]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'dombrowski' => 'd.eh.m/b.r.aw.f/s.k.ee / [d^d].[o^uh].[m^m]/[b^b].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'domecq' => 'd.oh/m.eh.k / [d^d].[o^oh]/[m^m].[e^eh].[c^k] / failed phone:k / failed spelling:cq',
  'domenici' => 'd.eh/m.eh/n.eh/ch.ee / [d^d].[o^uh]/[m^m].[e^eh]/[n^n].[i^ih]/ / failed phone:t / failed spelling:ci',
  'dominguez' => 'd.eh/m.ih.ng/ih.z / [d^d].[o^uh]/[m^m].[i^ih].[ngue^ng]/ / failed phone:ih / failed spelling:z',
  'dominici' => 'd.oh/m.ee/n.ee/ch.ee / [d^d].[o^oh]/[m^m].[i^ee]/[n^n].[i^ee]/ / failed phone:t / failed spelling:ci',
  'domke' => 'd.aw.m.k / [d^d].[o^aw].[m^m].[k^k] / failed phone:k / failed spelling:ke',
  'donais' => 'd.eh/n.ay / [d^d].[o^uh]/[n^n].[a^ay] / failed phone:ay / failed spelling:ai',
  'donde' => 'd.aw.n.d / [d^d].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'dondlinger' => 'd.aw.n/d.eh/l.ih.ng/er / [d^d].[o^aw].[n^n]/[d^d]. / failed phone:eh / failed spelling:li',
  'donne' => 'd.uh.n / [d^d].[o^uh].[n^n] / failed phone:n / failed spelling:nn',
  'donoghue' => 'd.aw/n.eh/h.ye.ue / [d^d].[o^aw]/[n^n].[o^uh]/ / failed phone:h / failed spelling:gh',
  'doodles' => 'd.ue/d.eh.l.z / [d^d].[oo^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'doorbell' => 'd.aw.r / [d^d].[oo^oh].[r^r] / failed phone:r / failed spelling:rb',
  'dorais' => 'd.er/ay / [d^d].[o^oh].[r^r]/[a^ay] / failed phone:ay / failed spelling:ai',
  'doralynne' => 'd.aw/r.eh/l.igh.n / [d^d].[o^aw]/[r^r].[a^ah]/[l^l].[y^igh].[n^n] / failed phone:n / failed spelling:nn',
  'doraville' => 'd.aw/r.eh/v.ih.l / [d^d].[o^aw]/[r^r].[a^ah]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'doremus' => 'd.aw/r.ih/m.ih.s / [d^d].[o^aw]/[r^r].[e^ih]/[m^m]. / failed phone:ih / failed spelling:us',
  'dornbusch' => 'd.aw.r.n/b.eh.sh / [d^d].[o^oh].[r^r].[n^n]/[b^b].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'dornier' => 'd.aw.r/n.ih.r / [d^d].[o^oh].[r^r]/[n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'dornin' => 'd.aw/n.ih.n / [d^d].[o^aw]/ / failed phone:n / failed spelling:rn',
  'dorsay' => 'd.aw.r/s.ee / [d^d].[o^oh].[r^r]/[s^s]. / failed phone:ee / failed spelling:ay',
  'dorsch' => 'd.aw.r.sh / [d^d].[o^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'dosch' => 'd.aw.sh / [d^d].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'doscher' => 'd.aw/sh.er / [d^d].[o^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'dossier' => 'd.aw.s/ye.ay / [d^d].[o^aw].[ss^s]/ / failed phone:ye / failed spelling:ie',
  'dossiers' => 'd.aw.s/ye.ay.z / [d^d].[o^aw].[ss^s]/ / failed phone:ye / failed spelling:ie',
  'doubled' => 'd.uh/b.eh.l.d / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doubleday' => 'd.uh/b.eh.l/d.ay / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doubles' => 'd.uh/b.eh.l.z / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doublespeak' => 'd.uh/b.eh.l/s.p.ee.k / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doublethink' => 'd.uh/b.eh.l/th.ih.ng.k / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doubletree' => 'd.uh/b.eh.l/t.r.ee / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'doubling' => 'd.uh/b.eh/l.ih.ng / [d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:li',
  'douville' => 'd.ue/v.ih.l / [d^d].[ou^ue]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'douwe' => 'd.ue / [d^d].[ou^ue] / failed phone:ue / failed spelling:ou',
  'doverspike' => 'd.eh/v.er/s.p.ih.k / [d^d].[o^uh]/[ve^v].[r^er]/[s^s].[p^p].[i^ih].[k^k] / failed phone:k / failed spelling:ke',
  'dowe' => 'd.ow / [d^d].[ow^ow] / failed phone:ow / failed spelling:ow',
  'dower' => 'd.ow.r / [d^d].[ow^ow]. / failed phone:r / failed spelling:er',
  'dowers' => 'd.ow.r.z / [d^d].[ow^ow]. / failed phone:r / failed spelling:er',
  'doyenne' => 'd.aw/ye.eh.n / [d^d].[o^aw]/[y^ye].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'draeger' => 'd.r.eh/g.er / [d^d].[r^r].[a^ah]/ / failed phone:g / failed spelling:eg',
  'drahuschak' => 'd.r.ah/h.eh/sh.ah.k / [d^d].[r^r].[a^ah]/[h^h].[u^uh]/[sc^sh]. / failed phone:ah / failed spelling:ha',
  'dralle' => 'd.r.ay.l / [d^d].[r^r].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'draught' => 'd.r.ah.f.t / [d^d].[r^r].[a^ah]. / failed phone:f / failed spelling:ug',
  'draughts' => 'd.r.ah.f.t.s / [d^d].[r^r].[a^ah]. / failed phone:f / failed spelling:ug',
  'drawer' => 'd.r.aw.r / [d^d].[r^r].[a^oh]. / failed phone:r / failed spelling:we',
  'drawers' => 'd.r.aw.r.z / [d^d].[r^r].[a^oh]. / failed phone:r / failed spelling:we',
  'drechsler' => 'd.r.eh.k/s.eh/l.er / [d^d].[r^r].[e^eh].[ch^k]/[s^s]. / failed phone:eh / failed spelling:le',
  'dredges' => 'd.r.eh/j.eh.z / [d^d].[r^r].[e^eh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'dredging' => 'd.r.eh/j.ih.ng / [d^d].[r^r].[e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'dreher' => 'd.r.air / [d^d].[r^r]. / failed phone:air / failed spelling:eh',
  'dresch' => 'd.r.eh.sh / [d^d].[r^r].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'drescher' => 'd.r.eh/sh.er / [d^d].[r^r].[e^eh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'dresdner' => 'd.r.eh.z/n.er / [d^d].[r^r].[e^eh].[s^z]/ / failed phone:n / failed spelling:dn',
  'dribbled' => 'd.r.ih/b.eh.l.d / [d^d].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'dribbling' => 'd.r.ih/b.eh/l.ih.ng / [d^d].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:li',
  'drina' => 'd.ee/n.eh / [d^d]. / failed phone:ee / failed spelling:ri',
  'drinas' => 'd.ee/n.eh.z / [d^d]. / failed phone:ee / failed spelling:ri',
  'drinkwater' => 'd.r.ih.ng/kw.aw/t.er / [d^d].[r^r].[i^ih].[n^ng]/ / failed phone:kw / failed spelling:kw',
  'drinkwine' => 'd.r.ih.ng/kw.igh.n / [d^d].[r^r].[i^ih].[n^ng]/ / failed phone:kw / failed spelling:kw',
  'drizzling' => 'd.r.ih/z.eh/l.ih.ng / [d^d].[r^r].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:li',
  'droessler' => 'd.r.oh/s.eh/l.er / [d^d].[r^r].[oe^oh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'drouillard' => 'd.r/w.ee/l.aw.r.d / [d^d].[r^r]/ / failed phone:w / failed spelling:ou',
  'drouin' => 'd.r/w.ee.n / [d^d].[r^r]/ / failed phone:w / failed spelling:ou',
  'drozdowski' => 'd.r.eh.z/d.aw.f/s.k.ee / [d^d].[r^r].[o^uh].[z^z]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'drzewiecki' => 'j.ue/ee.t/s.k.ee / [d^j]. / failed phone:ue / failed spelling:rz',
  'dsouza' => 'd.eh/s.ue/z.eh / [d^d]. / failed phone:eh / failed spelling:so',
  'dubcek' => 'd.uh.b/ch.eh.k / [d^d].[u^uh].[b^b]/ / failed phone:t / failed spelling:ce',
  'dubeau' => 'd.eh/b.oh / [d^d].[u^uh]/[b^b]. / failed phone:oh / failed spelling:ea',
  'dubicki' => 'd.eh/b.ih.t/s.k.ee / [d^d].[u^uh]/[b^b].[i^ih]. / failed phone:t / failed spelling:ck',
  'dubilier' => 'd.ue/b.eh/l.ih.r / [d^d].[u^ue]/[b^b].[i^ih]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'duboise' => 'd.eh/b.w.aw / [d^d].[u^uh]/[b^b]. / failed phone:w / failed spelling:oi',
  'ducharme' => 'd.eh/sh.aw.r.m / [d^d].[u^uh]/[ch^sh].[a^oh].[r^r].[m^m] / failed phone:m / failed spelling:me',
  'duchemin' => 'd.uh/sh.ih/m.ah.n / [d^d].[u^uh]/[ch^sh].[e^ih]/[m^m]. / failed phone:ah / failed spelling:in',
  'duchenne' => 'd.ue/sh.eh.n / [d^d].[u^ue]/[ch^sh].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'duchossois' => 'd.ue/ch.aw/s.w.aw / [d^d].[u^ue]/[ch^ch].[o^aw]/[ss^s]. / failed phone:w / failed spelling:oi',
  'duckwall' => 'd.uh/kw.aw.l / [d^d].[u^uh]/[ck^kw]. / failed phone:aw / failed spelling:wa',
  'duckweed' => 'd.uh/kw.ee.d / [d^d].[u^uh]/[ck^kw]. / failed phone:ee / failed spelling:we',
  'duckworth' => 'd.uh/kw.er.th / [d^d].[u^uh]/[ck^kw]. / failed phone:er / failed spelling:wo',
  'dudayev' => 'd.ue/d.igh/eh.v / [d^d].[u^ue]/[d^d]. / failed phone:igh / failed spelling:ay',
  'dudziak' => 'd.uh/j.ee/ah.k / [d^d].[u^uh]/[d^j]. / failed phone:ee / failed spelling:zi',
  'dudzinski' => 'd.eh/j.ih.n/s.k.ee / [d^d].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'duesler' => 'd.ue/s.eh/l.er / [d^d].[ue^ue]/[s^s]. / failed phone:eh / failed spelling:le',
  'dufault' => 'd.eh/f.oh / [d^d].[u^uh]/[f^f].[a^oh] / failed phone:oh / failed spelling:au',
  'dufresne' => 'd.eh/f.r.eh.n / [d^d].[u^uh]/[f^f].[r^r].[e^eh]. / failed phone:n / failed spelling:sn',
  'duhaime' => 'd.ue/igh.m / [d^d].[u^ue]/ / failed phone:igh / failed spelling:ha',
  'dulciana' => 'd.ue.l/ch.ah/n.eh / [d^d].[u^ue].[l^l]/ / failed phone:t / failed spelling:ci',
  'dulcibelle' => 'd.uh.l/s.ih/b.eh.l / [d^d].[u^uh].[l^l]/[c^s].[i^ih]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'dulle' => 'd.uh.l / [d^d].[u^uh].[ll^l] / failed phone:l / failed spelling:ll',
  'dumais' => 'd.eh/m.ay / [d^d].[u^uh]/[m^m].[a^ay] / failed phone:ay / failed spelling:ai',
  'dumlao' => 'd.ue.m/l.ow / [d^d].[u^ue].[m^m]/[l^l]. / failed phone:ow / failed spelling:ao',
  'dumoulin' => 'd.uh/m.ue/l.ah.n / [d^d].[u^uh]/[m^m].[ou^ue]/[l^l]. / failed phone:ah / failed spelling:in',
  'duncombe' => 'd.uh.ng/k.eh.m / [d^d].[u^uh].[n^ng]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:mb',
  'dunham' => 'd.uh/n.eh.m / [d^d].[u^uh]/[n^n]. / failed phone:eh / failed spelling:ha',
  'dunkleberger' => 'd.uh.ng/k.eh.l/b.er/g.er / [d^d].[u^uh].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'dunlaevy' => 'd.eh.n/l.ay/v.ee / [d^d].[u^uh].[n^n]/[l^l].[a^ay]/ / failed phone:v / failed spelling:ev',
  'dunne' => 'd.uh.n / [d^d].[u^uh].[n^n] / failed phone:n / failed spelling:nn',
  'dupin' => 'd.eh/p.ah.n / [d^d].[u^uh]/[p^p]. / failed phone:ah / failed spelling:in',
  'dupler' => 'd.ue/p.eh/l.er / [d^d].[u^ue]/[p^p]. / failed phone:eh / failed spelling:le',
  'duquesne' => 'd.ue/k.ay.n / [d^d].[u^ue]/[qu^k].[e^ay]. / failed phone:n / failed spelling:sn',
  'durables' => 'd.oo/r.eh/b.eh.l.z / [d^d].[u^oo]/[r^r].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'durakon' => 'd.oo/r.eh/k.ih.n / [d^d].[u^oo]/[r^r].[a^ah]/[k^k]. / failed phone:ih / failed spelling:on',
  'durchholz' => 'd.er/ch.oh.l.t.s / [d^d].[ur^er]/[ch^ch]. / failed phone:oh / failed spelling:ho',
  'durflinger' => 'd.er/f.eh/l.ih.ng/er / [d^d].[ur^er]/[f^f]. / failed phone:eh / failed spelling:li',
  'durham' => 'd.er/eh.m / [d^d].[ur^er]/ / failed phone:eh / failed spelling:ha',
  'durrah' => 'd.aw/r.eh / [d^d]. / failed phone:aw / failed spelling:ur',
  'durrant' => 'd.aw/r.eh.n.t / [d^d]. / failed phone:aw / failed spelling:ur',
  'durrell' => 'd.aw/r.eh.l / [d^d]. / failed phone:aw / failed spelling:ur',
  'durrence' => 'd.aw/r.eh.n.s / [d^d]. / failed phone:aw / failed spelling:ur',
  'durrett' => 'd.aw/r.ih.t / [d^d]. / failed phone:aw / failed spelling:ur',
  'duryee' => 'd.oo/r.ee / [d^d].[u^oo]/[r^r].[y^ee] / failed phone:ee / failed spelling:ye',
  'dusch' => 'd.uh.sh / [d^d].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'dussault' => 'd.eh/s.oh / [d^d].[u^uh]/[ss^s].[a^oh] / failed phone:oh / failed spelling:au',
  'dusseau' => 'd.eh/s.oh / [d^d].[u^uh]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'dusseault' => 'd.eh/s.oh / [d^d].[u^uh]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'dusza' => 'd.uh/sh.eh / [d^d].[u^uh]/[s^sh]. / failed phone:eh / failed spelling:za',
  'duszynski' => 'd.eh/sh.ih.n/s.k.ee / [d^d].[u^uh]/[s^sh]. / failed phone:ih / failed spelling:zy',
  'dutkiewicz' => 'd.uh.t/k.eh/v.ih.ch / [d^d].[u^uh].[t^t]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'dvoracek' => 'd/v.aw/r.eh/ch.eh.k / [d^d]/[v^v].[o^aw]/[r^r].[a^ah]/ / failed phone:t / failed spelling:ce',
  'dwelle' => 'd.w.eh.l / [d^d].[w^w].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'dwindled' => 'd.w.ih.n/d.eh.l.d / [d^d].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'dwindles' => 'd.w.ih.n/d.eh.l.z / [d^d].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'dwindling' => 'd.w.ih.n/d.eh/l.ih.ng / [d^d].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:li',
  'dyche' => 'd.igh.ch / [d^d].[y^igh].[ch^ch] / failed phone:t / failed spelling:ch',
  'dyke' => 'd.igh.k / [d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'dykeman' => 'd.igh.k/m.eh.n / [d^d].[y^igh].[k^k]/ / failed phone:m / failed spelling:em',
  'dykes' => 'd.igh.k.s / [d^d].[y^igh].[k^k]. / failed phone:s / failed spelling:es',
  'dylewski' => 'd.ih/l.eh.f/s.k.ee / [d^d].[y^ih]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'dyslexia' => 'd.eh/s.l.eh.k.s/ye.eh / [d^d].[y^eh]/[s^s].[l^l].[e^eh].[x^x]/ / failed phone:ue / failed spelling:ia',
  'dzhirkvelov' => 'd.eh/z.er.k/v.eh/l.aw.v / [d^d]. / failed phone:eh / failed spelling:zh',
  'dzhokhar' => 'j.oh/k.aw.r / [d^j]. / failed phone:oh / failed spelling:zh',
  'dzialo' => 'j.ee/aw/l.oh / [d^j]. / failed phone:ee / failed spelling:zi',
  'dziedzic' => 'j.ee/j.ih.k / [d^j]. / failed phone:ee / failed spelling:zi',
  'dziekan' => 'j.ee/k.eh.n / [d^j]. / failed phone:ee / failed spelling:zi',
  'dzikowski' => 'j.ih/k.aw.f/s.k.ee / [d^j]. / failed phone:ih / failed spelling:zi',
  'dziuba' => 'j.ee/ue/b.eh / [d^j]. / failed phone:ee / failed spelling:zi',
  'dziuk' => 'j.ee/ue.k / [d^j]. / failed phone:ee / failed spelling:zi',
  'eade' => 'ee.d / [ea^ee].[d^d] / failed phone:d / failed spelling:ad',
  'eagleburger' => 'ee/g.eh.l/b.er/g.er / [ea^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'eagles' => 'ee/g.eh.l.z / [ea^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'eagleton' => 'ee/g.eh.l/t.eh.n / [ea^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'eagleye' => 'ee/g.eh/l.igh / [ea^ee]/[g^g]. / failed phone:eh / failed spelling:le',
  'eakes' => 'ee.k.s / [ea^ee].[k^k]. / failed phone:x / failed spelling:ak',
  'earnhardt' => 'er.n/h.aw.r.t / [ear^er].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'earnheart' => 'er.n/h.aw.r.t / [ear^er].[n^n]/[h^h]. / failed phone:oh / failed spelling:ea',
  'eastham' => 'ee/s.t.eh.m / [ea^ee]/[s^s].[t^t]. / failed phone:eh / failed spelling:ha',
  'eau' => 'oh /  / failed phone:oh / failed spelling:ea',
  'eaux' => 'oh /  / failed phone:oh / failed spelling:ea',
  'eberhard' => 'eh/b.er/h.aw.r.t / [e^eh]/[b^b].[er^er]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:d',
  'eberhardt' => 'eh/b.er/h.aw.r.t / [e^eh]/[b^b].[er^er]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'eberstadt' => 'eh/b.er/s.t.ah.t / [e^eh]/[b^b].[er^er]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'eblen' => 'eh/b.eh/l.eh.n / [e^eh]/[b^b]. / failed phone:eh / failed spelling:le',
  'ebling' => 'eh/b.eh/l.ih.ng / [e^eh]/[b^b]. / failed phone:eh / failed spelling:li',
  'ebullience' => 'ih/b.oo/l.ye.eh.n.s / [e^ih]/[b^b].[u^oo]/[ll^l]. / failed phone:ue / failed spelling:ie',
  'ebullient' => 'ih/b.uh/l.ye.eh.n.t / [e^ih]/[b^b].[u^uh]/[ll^l]. / failed phone:ue / failed spelling:ie',
  'eccles' => 'eh/k.eh.l.z / [e^eh]/[cc^k]. / failed phone:eh / failed spelling:le',
  'eckardt' => 'eh/k.er.t / [e^eh]/[ck^k].[ar^er]. / failed phone:t / failed spelling:dt',
  'eckes' => 'eh.k.s / [e^eh].[c^k]. / failed phone:s / failed spelling:ke',
  'eckhardt' => 'eh.k/h.aw.r.t / [e^eh].[ck^k]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'eckl' => 'eh/k.eh.l / [e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'eckles' => 'eh/k.eh.l.z / [e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'ecuador' => 'eh/kw.eh/d.aw.r / [e^eh]/ / failed phone:kw / failed spelling:cu',
  'ecuadoran' => 'eh/kw.eh/d.aw/r.eh.n / [e^eh]/ / failed phone:kw / failed spelling:cu',
  'ecuadorean' => 'eh/kw.eh/d.aw/r.ee/eh.n / [e^eh]/ / failed phone:kw / failed spelling:cu',
  'ecuadorian' => 'eh/kw.eh/d.aw/r.ee/eh.n / [e^eh]/ / failed phone:kw / failed spelling:cu',
  'eddleman' => 'eh/d.eh.l/m.eh.n / [e^eh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'edelweiss' => 'ay/d.eh.l/v.igh.s / [e^ay]/[d^d].[e^eh].[l^l]/ / failed phone:v / failed spelling:we',
  'edgcomb' => 'eh.j/k.eh.m / [e^eh].[d^j]/ / failed phone:k / failed spelling:gc',
  'edgecombe' => 'eh.j/k.oh.m / [e^eh].[dge^j]/[c^k].[o^oh].[m^m] / failed phone:m / failed spelling:mb',
  'edgell' => 'eh/j.eh.l / [e^eh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'edges' => 'eh/j.eh.z / [e^eh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'edgett' => 'eh/j.ih.t / [e^eh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'edgin' => 'eh/j.ih.n / [e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'edginess' => 'eh/j.ee/n.eh.s / [e^eh]/[d^j]. / failed phone:ee / failed spelling:gi',
  'edging' => 'eh/j.ih.ng / [e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'edgington' => 'eh/j.ih.ng/t.eh.n / [e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'edgley' => 'eh.j/l.ee / [e^eh].[d^j]/ / failed phone:l / failed spelling:gl',
  'edgmon' => 'eh.j/m.eh.n / [e^eh].[d^j]/ / failed phone:m / failed spelling:gm',
  'edgy' => 'eh/j.ee / [e^eh]/[d^j]. / failed phone:ee / failed spelling:gy',
  'edibles' => 'eh/d.eh/b.eh.l.z / [e^eh]/[d^d].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'edinburgh' => 'eh/d.eh.n/b.er/oh / [e^eh]/[d^d].[i^ih].[n^n]/[b^b].[ur^er]/ / failed phone:oh / failed spelling:gh',
  'edoardo' => 'eh/d.w.aw.r/d.oh / [e^eh]/[d^d]. / failed phone:w / failed spelling:oa',
  'egge' => 'eh.g / [e^eh].[gg^g] / failed phone:g / failed spelling:gg',
  'eggleston' => 'eh/g.eh.l/s.t.eh.n / [e^eh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'eh' => 'eh / [e^eh] / failed phone:eh / failed spelling:eh',
  'ehle' => 'eh.l / [e^eh]. / failed phone:l / failed spelling:hl',
  'ehlen' => 'eh/l.eh.n / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehler' => 'eh/l.er / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehlers' => 'eh/l.er.z / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehlert' => 'eh/l.er.t / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehlinger' => 'eh/l.ih.ng/er / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehlke' => 'eh.l.k / [e^eh]. / failed phone:l / failed spelling:hl',
  'ehly' => 'eh/l.ee / [e^eh]/ / failed phone:l / failed spelling:hl',
  'ehman' => 'eh/m.eh.n / [e^eh]/ / failed phone:m / failed spelling:hm',
  'ehmann' => 'eh/m.eh.n / [e^eh]/ / failed phone:m / failed spelling:hm',
  'ehmen' => 'eh/m.eh.n / [e^eh]/ / failed phone:m / failed spelling:hm',
  'ehmke' => 'eh.m/k.ee / [e^eh]. / failed phone:m / failed spelling:hm',
  'ehrhardt' => 'air/h.aw.r.t / [ehr^air]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'ehrke' => 'air.k / [ehr^air].[k^k] / failed phone:k / failed spelling:ke',
  'ehrlich' => 'er/l.ih.k /  / failed phone:er / failed spelling:eh',
  'ehrlichman' => 'er/l.ih.k/m.eh.n /  / failed phone:er / failed spelling:eh',
  'eichler' => 'igh/k.eh/l.er / [ei^igh]/[ch^k]. / failed phone:eh / failed spelling:le',
  'eichstadt' => 'igh.k/s.t.ah.t / [ei^igh].[ch^k]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'eichstaedt' => 'igh.k/s.t.eh.t / [ei^igh].[ch^k]/[s^s].[t^t].[a^ah].[ed^t] / failed phone:t / failed spelling:ed',
  'eide' => 'igh.d / [ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'eiermann' => 'igh.r/m.eh.n / [ei^igh]. / failed phone:r / failed spelling:er',
  'eifler' => 'igh/f.eh/l.er / [ei^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'eighth' => 'ay.t.th / [eigh^ay].[t^t]. / failed phone:th / failed spelling:h',
  'eighths' => 'ay.t.th.s / [eigh^ay].[t^t]. / failed phone:th / failed spelling:hs',
  'eike' => 'igh.k / [ei^igh].[k^k] / failed phone:k / failed spelling:ke',
  'einspahr' => 'igh.n/s.p.aw.r / [ei^igh].[n^n]/[s^s].[p^p].[a^oh]. / failed phone:r / failed spelling:hr',
  'eirena' => 'er/ay/n.eh /  / failed phone:er / failed spelling:ei',
  'eischeid' => 'igh/sh.igh.d / [ei^igh]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'eischen' => 'igh/sh.eh.n / [ei^igh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'eischens' => 'igh/sh.eh.n.z / [ei^igh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'eisenhardt' => 'igh/z.eh.n/h.aw.r.t / [ei^igh]/[s^z].[e^eh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'eisenhour' => 'igh/z.eh/n.ow.r / [ei^igh]/[s^z].[e^eh]/[n^n]. / failed phone:ow / failed spelling:ho',
  'eisenstadt' => 'igh/z.eh.n/s.t.ah.t / [ei^igh]/[s^z].[e^eh].[n^n]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'eissler' => 'igh/s.eh/l.er / [ei^igh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'eiszner' => 'igh.z/n.er / [ei^igh].[s^z]/ / failed phone:n / failed spelling:zn',
  'ekco' => 'eh/k.oh / [e^eh]/[k^k]. / failed phone:oh / failed spelling:co',
  'ekdahl' => 'eh.k/d.aw.l / [e^eh].[k^k]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'ekkehard' => 'eh.k/h.aw.r.d / [e^eh].[k^k]/ / failed phone:h / failed spelling:ke',
  'elaborate' => 'ih/l.ah/b.r.ay.t / [e^ih]/[l^l].[a^ah]/[b^b]. / failed phone:r / failed spelling:or',
  'elaborately' => 'ih/l.ah/b.r.eh.t/l.ee / [e^ih]/[l^l].[a^ah]/[b^b]. / failed phone:r / failed spelling:or',
  'elbe' => 'eh.l.b / [e^eh].[l^l].[b^b] / failed phone:b / failed spelling:be',
  'elektrizitaetswerk' => 'eh/l.ih.k/t.r.ih/z.ih/t.ah.t/s.w.er.k / [e^eh]/[l^l].[e^ih].[k^k]/[t^t].[r^r].[i^ih]/[z^z].[i^ih]/[t^t].[a^ah]. / failed phone:t / failed spelling:et',
  'elementary' => 'eh/l.eh/m.eh.n/t.r.ee / [e^eh]/[l^l].[e^eh]/[m^m].[e^eh].[n^n]/[t^t]. / failed phone:r / failed spelling:ar',
  'elenbaas' => 'eh/l.ih.n/b.aw.z / [e^eh]/[l^l].[e^ih].[n^n]/[b^b].[a^aw]. / failed phone:z / failed spelling:as',
  'eliopoulos' => 'eh/l.ee/aw/p.eh/l.ih.s / [e^eh]/[l^l].[i^ee]/[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'elkes' => 'eh.l.k.s / [e^eh].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'elle' => 'eh.l / [e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'ellerbe' => 'eh/l.er.b / [e^eh]/[ll^l].[er^er].[b^b] / failed phone:b / failed spelling:be',
  'ellesse' => 'eh/l.eh.s / [e^eh]/[ll^l].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'eltringham' => 'eh.l/t.r.ih.ng/ah.m / [e^eh].[l^l]/[t^t].[r^r].[i^ih].[n^ng]/ / failed phone:ah / failed spelling:gh',
  'embattled' => 'eh.m/b.ah/t.eh.l.d / [e^eh].[m^m]/[b^b].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'embezzled' => 'ih.m/b.eh/z.eh.l.d / [e^ih].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'embezzlement' => 'eh.m/b.eh/z.eh.l/m.eh.n.t / [e^eh].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'embezzler' => 'ih.m/b.eh/z.eh/l.er / [e^ih].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'embezzlers' => 'ih.m/b.eh/z.eh/l.er.z / [e^ih].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'embezzles' => 'ih.m/b.eh/z.eh.l.z / [e^ih].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'embezzling' => 'ih.m/b.eh/z.eh/l.ih.ng / [e^ih].[m^m]/[b^b].[e^eh]/[zz^z]. / failed phone:eh / failed spelling:li',
  'emde' => 'eh.m.d / [e^eh].[m^m].[d^d] / failed phone:d / failed spelling:de',
  'emerald' => 'eh/m.r.eh.l.d / [e^eh]/[m^m]. / failed phone:r / failed spelling:er',
  'emeralds' => 'eh/m.r.eh.l.d.z / [e^eh]/[m^m]. / failed phone:r / failed spelling:er',
  'emeraude' => 'eh/m.er/ow.d / [e^eh]/[m^m].[er^er]/[au^aw].[d^d] / failed phone:d / failed spelling:de',
  'emeryville' => 'eh/m.er/ee/v.ih.l / [e^eh]/[m^m].[er^er]/[y^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'emlynne' => 'ih.m/l.igh.n / [e^ih].[m^m]/[l^l].[y^igh].[n^n] / failed phone:n / failed spelling:nn',
  'emme' => 'eh.m / [e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'emotionally' => 'ih/m.oh/sh.n.eh/l.ee / [e^ih]/[m^m].[o^oh]/[t^sh]. / failed phone:n / failed spelling:io',
  'emslie' => 'eh.m/s.eh/l.ee / [e^eh].[m^m]/[s^s]. / failed phone:eh / failed spelling:li',
  'enabled' => 'eh/n.ay/b.eh.l.d / [e^eh]/[n^n].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'enables' => 'eh/n.ay/b.eh.l.z / [e^eh]/[n^n].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'enabling' => 'eh/n.ay/b.eh/l.ih.ng / [e^eh]/[n^n].[a^ay]/[b^b]. / failed phone:eh / failed spelling:li',
  'encircled' => 'ih.n/s.er/k.eh.l.d / [e^ih].[n^n]/[c^s].[ir^er]/[c^k]. / failed phone:eh / failed spelling:le',
  'encircling' => 'eh.n/s.er/k.eh/l.ih.ng / [e^eh].[n^n]/[c^s].[ir^er]/[c^k]. / failed phone:eh / failed spelling:li',
  'enclave' => 'aw.n/k.l.ay.v /  / failed phone:aw / failed spelling:en',
  'enclaves' => 'aw.n/k.l.ay.v.z /  / failed phone:aw / failed spelling:en',
  'encore' => 'aw.n/k.aw.r /  / failed phone:aw / failed spelling:en',
  'encores' => 'aw.n/k.aw.r.z /  / failed phone:aw / failed spelling:en',
  'encyclopaedia' => 'ih.n/s.igh/k.l.eh/p.ee/d.ee/eh / [e^ih].[n^n]/[c^s].[y^igh]/[c^k].[l^l].[o^uh]/[p^p]. / failed phone:ee / failed spelling:ae',
  'ende' => 'eh.n.d / [e^eh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'endrizzi' => 'ih.n/d.r.ee.t/s.ee / [e^ih].[n^n]/[d^d].[r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'enfeebled' => 'eh.n/f.ee/b.eh.l.d / [e^eh].[n^n]/[f^f].[ee^ee]/[b^b]. / failed phone:eh / failed spelling:le',
  'engdahl' => 'eh.ng/d.aw.l / [e^eh].[ng^ng]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'engelhardt' => 'eh.ng/g.ih.l/h.aw.r.t / [e^eh].[n^ng]/[g^g].[e^ih].[l^l]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'engelke' => 'eh.ng/g.ih.l.k / [e^eh].[n^ng]/[g^g].[e^ih].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'engh' => 'eh.ng / [e^eh].[n^ng] / failed phone:ng / failed spelling:ng',
  'englehardt' => 'ih.ng/l.ih/h.aw.r.t / [e^ih].[ng^ng]/[l^l].[e^ih]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'englehart' => 'ih.ng/eh.l/h.aw.r.t / [e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'engleman' => 'ih.ng/eh.l/m.eh.n / [e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'engler' => 'eh.ng/g.eh/l.er / [e^eh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'engles' => 'ih.ng/eh.l.z / [e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'englewood' => 'eh.ng/g.eh.l/w.oo.d / [e^eh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'enholme' => 'eh.n/h.oh.l.m / [e^eh].[n^n]/[h^h].[o^oh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'enke' => 'eh.ng.k / [e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'ennobling' => 'eh/n.oh/b.eh/l.eh.ng / [e^eh]/[nn^n].[o^oh]/[b^b]. / failed phone:eh / failed spelling:li',
  'ensemble' => 'aw.n/s.aw.m/b.eh.l /  / failed phone:aw / failed spelling:en',
  'ensembles' => 'aw.n/s.aw.m/b.eh.l.z /  / failed phone:aw / failed spelling:en',
  'enslen' => 'eh.n/s.eh/l.eh.n / [e^eh].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'ensminger' => 'eh.n/s.eh/m.ih.ng/er / [e^eh].[n^n]/[s^s]. / failed phone:eh / failed spelling:mi',
  'ensz' => 'eh.n.sh / [e^eh].[n^n].[s^sh] / failed phone:sh / failed spelling:sz',
  'entangled' => 'eh.n/t.ah.ng/g.eh.l.d / [e^eh].[n^n]/[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'entanglement' => 'eh.n/t.ah.ng/g.eh.l/m.eh.n.t / [e^eh].[n^n]/[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'entanglements' => 'eh.n/t.ah.ng/g.eh.l/m.eh.n.t.s / [e^eh].[n^n]/[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'entendre' => 'aw.n/t.aw.n/d.r.eh /  / failed phone:aw / failed spelling:en',
  'entitled' => 'eh.n/t.igh/t.eh.l.d / [e^eh].[n^n]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'entitlement' => 'eh.n/t.igh/t.eh.l/m.eh.n.t / [e^eh].[n^n]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'entitlements' => 'eh.n/t.igh/t.eh.l/m.eh.n.t.s / [e^eh].[n^n]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'entitles' => 'eh.n/t.igh/t.eh.l.z / [e^eh].[n^n]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'entitling' => 'eh.n/t.igh/t.eh/l.ih.ng / [e^eh].[n^n]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:li',
  'entourage' => 'aw.n/t.oo/r.aw.zh /  / failed phone:aw / failed spelling:en',
  'entre' => 'aw.n/t.r.ay /  / failed phone:aw / failed spelling:en',
  'entree' => 'aw.n/t.r.ay /  / failed phone:aw / failed spelling:en',
  'entrees' => 'aw.n/t.r.ay.z /  / failed phone:aw / failed spelling:en',
  'entrepreneur' => 'aw.n/t.r.eh/p.r.eh/n.er /  / failed phone:aw / failed spelling:en',
  'entrepreneurial' => 'aw.n/t.r.eh/p.r.eh/n.er/ee/eh.l /  / failed phone:aw / failed spelling:en',
  'entrepreneurs' => 'aw.n/t.r.eh/p.r.eh/n.er.z /  / failed phone:aw / failed spelling:en',
  'entrepreneurship' => 'aw.n/t.r.eh/p.r.eh/n.er/sh.ih.p /  / failed phone:aw / failed spelling:en',
  'entsminger' => 'eh.n.t/s.eh/m.ih.ng/er / [e^eh].[n^n].[t^t]/[s^s]. / failed phone:eh / failed spelling:mi',
  'entwisle' => 'eh.n/t.w.igh/eh.l / [e^eh].[n^n]/[t^t].[w^w].[i^igh]/ / failed phone:eh / failed spelling:sl',
  'environmentalism' => 'eh.n/v.igh/r.eh/eh.n/m.eh.n/t.eh/l.ih/z.eh.m / [e^eh].[n^n]/[v^v].[i^igh]/[r^r].[o^uh]/ / failed phone:eh / failed spelling:nm',
  'enzyme' => 'eh.n/z.igh.m / [e^eh].[n^n]/[z^z].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'equation' => 'ih/kw.ay/zh.eh.n / [e^ih]/[qu^kw].[a^ay]/ / failed phone:zh / failed spelling:ti',
  'equations' => 'ih/kw.ay/zh.eh.n.z / [e^ih]/[qu^kw].[a^ay]/ / failed phone:zh / failed spelling:ti',
  'erbe' => 'er.b / [er^er].[b^b] / failed phone:b / failed spelling:be',
  'erdahl' => 'er/d.aw.l / [er^er]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'erhardt' => 'er/h.aw.r.t / [er^er]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'erkkila' => 'er/k.ih/l.eh / [er^er]/[k^k]. / failed phone:ih / failed spelling:ki',
  'erle' => 'aw/r.eh.l /  / failed phone:aw / failed spelling:er',
  'ertl' => 'er/t.eh.l / [er^er]/[t^t]. / failed phone:eh / failed spelling:l',
  'erwina' => 'er/v.igh/n.eh / [er^er]/ / failed phone:v / failed spelling:wi',
  'erythropoietin' => 'air/ih/th.r.eh/p.oy/t.ih.n / [er^air]/[y^ih]/[th^th].[r^r].[o^uh]/[p^p].[oi^oy]/ / failed phone:t / failed spelling:et',
  'esbenshade' => 'eh.s/b.ih.n/sh.eh.d / [e^eh].[s^s]/[b^b].[e^ih].[n^n]/[sh^sh].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'escarcega' => 'eh/s.k.aw.r/ch.eh/g.eh / [e^eh]/[s^s].[c^k].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'esch' => 'eh.sh / [e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'eschbach' => 'eh.sh/b.aw.k / [e^eh].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'esche' => 'eh.sh / [e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'eschen' => 'eh/sh.eh.n / [e^eh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'eschenbach' => 'eh/sh.ih.n/b.aw.k / [e^eh]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'eschenburg' => 'eh/sh.eh.n/b.er.g / [e^eh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'escher' => 'eh/sh.er / [e^eh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'eschete' => 'eh/sh.ee.t / [e^eh]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'eschewed' => 'eh/sh.ue.d / [e^eh]/[sc^sh]. / failed phone:ue / failed spelling:he',
  'eschewing' => 'eh/sh.ue/ih.ng / [e^eh]/[sc^sh]. / failed phone:ue / failed spelling:he',
  'eschmann' => 'eh/sh.m.eh.n / [e^eh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'eshleman' => 'eh/sh.eh.l/m.eh.n / [e^eh]/[s^sh]. / failed phone:eh / failed spelling:hl',
  'esler' => 'eh/s.eh/l.er / [e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'eslinger' => 'eh/s.eh/l.ih.ng/er / [e^eh]/[s^s]. / failed phone:eh / failed spelling:li',
  'esme' => 'eh.z.m / [e^eh].[s^z].[m^m] / failed phone:m / failed spelling:me',
  'espanol' => 'eh/s.p.aw/n.ye.oh.l / [e^eh]/[s^s].[p^p].[a^aw]/[n^n]. / failed phone:ye / failed spelling:ol',
  'especially' => 'ih/s.p.eh/sh.l.ee / [e^ih]/[s^s].[p^p].[e^eh]/[c^sh]. / failed phone:l / failed spelling:ia',
  'espejo' => 'ay/s.p.ay/ye.oh / [e^ay]/[s^s].[p^p].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'espenschied' => 'eh/s.p.ih.n/sh.ee.d / [e^eh]/[s^s].[p^p].[e^ih].[n^n]/[sc^sh]. / failed phone:ee / failed spelling:hi',
  'espenshade' => 'eh/s.p.ih.n/sh.eh.d / [e^eh]/[s^s].[p^p].[e^ih].[n^n]/[sh^sh].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'espirito' => 'eh/s.ih/r.ee/t.oh / [e^eh]/[s^s]. / failed phone:ih / failed spelling:pi',
  'esplanade' => 'eh/s.p.l.eh/n.aw.d / [e^eh]/[s^s].[p^p].[l^l].[a^ah]/[n^n].[a^aw].[d^d] / failed phone:d / failed spelling:de',
  'esprit' => 'eh/s.p.r.ee / [e^eh]/[s^s].[p^p].[r^r].[i^ee] / failed phone:ee / failed spelling:it',
  'esse' => 'eh.s / [e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'esslinger' => 'eh/s.eh/l.ih.ng/er / [e^eh]/[ss^s]. / failed phone:eh / failed spelling:li',
  'est' => 'eh/s.t.ay.t / [e^eh]/[s^s].[t^t]. / failed phone:ay / failed spelling:',
  'estelle' => 'eh/s.t.eh.l / [e^eh]/[s^s].[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'esther' => 'eh/s.t.er / [e^eh]/[s^s].[t^t]. / failed phone:er / failed spelling:he',
  'etablissements' => 'eh/t.ah/b.l.ih/s.eh/m.aw.n.t.s / [e^eh]/[t^t].[a^ah]/[b^b].[l^l].[i^ih]/[ss^s].[e^eh]/[m^m]. / failed phone:aw / failed spelling:en',
  'etc' => 'eh.t/s.eh/t.er/eh / [e^eh].[t^t]/[c^s]. / failed phone:eh / failed spelling:',
  'etheljean' => 'eh/th.ih/l.ye.eh.n / [e^eh]/[th^th].[e^ih]/[l^l]. / failed phone:ue / failed spelling:je',
  'etienne' => 'eh/t.ee/eh.n / [e^eh]/[t^t].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'eudocia' => 'ye.ue/d.oh/ch.eh / [eu^ue]/[d^d].[o^oh]/ / failed phone:t / failed spelling:ci',
  'euler' => 'oy/l.er /  / failed phone:oy / failed spelling:eu',
  'eurasian' => 'ye.oo/r.ay/zh.ih.n / [eu^ue]/[r^r].[a^ay]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'eure' => 'er /  / failed phone:er / failed spelling:eu',
  'eurich' => 'oy/r.ih.k /  / failed phone:oy / failed spelling:eu',
  'euromobiliare' => 'ye.ue/r.oh/m.oh/b.ih/l.air / [eu^ue]/[r^r].[o^oh]/[m^m].[o^oh]/[b^b].[i^ih]/[l^l]. / failed phone:air / failed spelling:ia',
  'europeenne' => 'ye.ue/r.oh/p.ee.n / [eu^ue]/[r^r].[o^oh]/[p^p].[ee^ee].[n^n] / failed phone:n / failed spelling:en',
  'eustacia' => 'ye.ue/s.t.aw/ch.eh / [eu^ue]/[s^s].[t^t].[a^aw]/ / failed phone:t / failed spelling:ci',
  'evacuated' => 'ih/v.ah/k.ye.eh/w.ay/t.ih.d / [e^ih]/[v^v].[a^ah]/[c^k].[u^ue]/ / failed phone:w / failed spelling:at',
  'evacuating' => 'ih/v.ah/k.ye.eh/w.ay/t.ih.ng / [e^ih]/[v^v].[a^ah]/[c^k].[u^ue]/ / failed phone:w / failed spelling:at',
  'evacuation' => 'ih/v.ah/k.ye.eh/w.ay/sh.eh.n / [e^ih]/[v^v].[a^ah]/[c^k].[u^ue]/ / failed phone:w / failed spelling:at',
  'evacuations' => 'ih/v.ah/k.ye.eh/w.ay/sh.eh.n.z / [e^ih]/[v^v].[a^ah]/[c^k].[u^ue]/ / failed phone:w / failed spelling:at',
  'evansville' => 'eh/v.eh.n.z/v.ih.l / [e^eh]/[v^v].[a^ah].[n^n].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'eveready' => 'eh/v.er/r.eh/d.ee / [e^eh]/[ve^v].[re^er]/ / failed phone:r / failed spelling:ad',
  'everhardt' => 'eh/v.er/h.aw.r.t / [e^eh]/[ve^v].[r^er]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'everyone' => 'eh.v/r.ee/w.uh.n / [e^eh].[ve^v]/[r^r].[y^ee]/ / failed phone:uh / failed spelling:n',
  'evonne' => 'eh/v.aw.n / [e^eh]/[v^v].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'ewoldt' => 'ye.ue/oh.l.t / [ew^ue]/[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'exacerbate' => 'eh.g/z.ah/s.er/b.ay.t / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacerbated' => 'eh.g/z.ah/s.er/b.ay/t.eh.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacerbates' => 'eh.g/z.ah/s.er/b.ay.t.s / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacerbating' => 'eh.g/z.ah/s.er/b.ay/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacerbations' => 'eh.g/z.ah/s.er/b.ay/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'exact' => 'eh.g/z.ah.k.t / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacted' => 'eh.g/z.ah.k/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exacting' => 'eh.g/z.ah.k/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xa',
  'exactions' => 'eh.g/z.ah.k/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'exactitude' => 'eh.g/z.ah.k/t.eh/t.ue.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exactly' => 'eh.g/z.ah.k.t/l.ee / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggerate' => 'eh.g/z.ah/j.er/ay.t / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggerated' => 'eh.g/z.ah/j.er/ay/t.eh.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggerates' => 'eh.g/z.ah/j.er/ay.t.s / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggerating' => 'eh.g/z.ah/j.er/ay/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggeration' => 'eh.g/z.ah/j.er/ay/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xa',
  'exaggerations' => 'eh.g/z.ah/j.er/ay/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'exalt' => 'eh.g/z.aw.l.t / [e^eh]. / failed phone:g / failed spelling:xa',
  'exalted' => 'eh.g/z.aw.l/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exam' => 'eh.g/z.ah.m / [e^eh]. / failed phone:g / failed spelling:xa',
  'examination' => 'eh.g/z.ah/m.eh/n.ay/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xa',
  'examinations' => 'eh.g/z.ah/m.eh/n.ay/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'examine' => 'eh.g/z.ah/m.ih.n / [e^eh]. / failed phone:g / failed spelling:xa',
  'examined' => 'eh.g/z.ah/m.eh.n.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'examiner' => 'eh.g/z.ah/m.eh/n.er / [e^eh]. / failed phone:g / failed spelling:xa',
  'examiners' => 'eh.g/z.ah/m.ih/n.er.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'examines' => 'eh.g/z.ah/m.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'examining' => 'eh.g/z.ah/m.ih/n.ih.ng / [e^eh]. / failed phone:g / failed spelling:xa',
  'example' => 'eh.g/z.ah.m/p.eh.l / [e^eh]. / failed phone:g / failed spelling:xa',
  'examples' => 'eh.g/z.ah.m/p.eh.l.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'exams' => 'eh.g/z.ah.m.z / [e^eh]. / failed phone:g / failed spelling:xa',
  'exasperated' => 'eh.g/z.ah/s.p.er/ay/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xa',
  'exasperating' => 'eh.g/z.ah/s.p.er/ay/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xa',
  'exec' => 'eh.g/z.eh.k / [e^eh]. / failed phone:g / failed spelling:xe',
  'execrable' => 'eh.g/z.eh/k.r.eh/b.eh.l / [e^eh]. / failed phone:g / failed spelling:xe',
  'execs' => 'eh.g/z.eh.k.s / [e^eh]. / failed phone:g / failed spelling:xe',
  'executive' => 'eh.g/z.eh/k.ye.eh/t.ih.v / [e^eh]. / failed phone:g / failed spelling:xe',
  'executives' => 'eh.g/z.eh/k.ye.eh/t.ih.v.z / [e^eh]. / failed phone:g / failed spelling:xe',
  'executone' => 'eh.g/z.eh/k.ye.ue/t.oh.n / [e^eh]. / failed phone:g / failed spelling:xe',
  'executor' => 'eh.g/z.eh/k.ye.eh/t.er / [e^eh]. / failed phone:g / failed spelling:xe',
  'executors' => 'eh.g/z.eh/k.ye.eh/t.er.z / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplary' => 'eh.g/z.eh.m/p.l.er/ee / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplified' => 'eh.g/z.eh.m/p.l.eh/f.igh.d / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplifies' => 'eh.g/z.eh.m/p.l.eh/f.igh.z / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplify' => 'eh.g/z.eh.m/p.l.eh/f.igh / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplifying' => 'eh.g/z.eh.m/p.l.eh/f.igh/ih.ng / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemplum' => 'eh.g/z.eh.m/p.l.eh.m / [e^eh]. / failed phone:g / failed spelling:xe',
  'exempt' => 'eh.g/z.eh.m.p.t / [e^eh]. / failed phone:g / failed spelling:xe',
  'exempted' => 'eh.g/z.eh.m.p/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xe',
  'exempting' => 'eh.g/z.eh.m.p/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemption' => 'eh.g/z.eh.m.p/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xe',
  'exemptions' => 'eh.g/z.eh.m.p/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xe',
  'exempts' => 'eh.g/z.eh.m.p.t.s / [e^eh]. / failed phone:g / failed spelling:xe',
  'exert' => 'eh.g/z.er.t / [e^eh]. / failed phone:g / failed spelling:xe',
  'exerted' => 'eh.g/z.er/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xe',
  'exerting' => 'eh.g/z.er/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xe',
  'exertion' => 'eh.g/z.er/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xe',
  'exertions' => 'eh.g/z.er/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xe',
  'exerts' => 'eh.g/z.er.t.s / [e^eh]. / failed phone:g / failed spelling:xe',
  'exhaust' => 'eh.g/z.aw.s.t / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhausted' => 'eh.g/z.aw/s.t.eh.d / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhausting' => 'eh.g/z.aw/s.t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhaustion' => 'eh.g/z.aw.s/ch.eh.n / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhaustive' => 'eh.g/z.aw/s.t.ih.v / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhaustively' => 'eh.g/z.aw/s.t.ih/v.l.ee / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhausts' => 'eh.g/z.aw.s.t.s / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibit' => 'eh.g/z.ih/b.ih.t / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibited' => 'eh.g/z.ih/b.eh/t.eh.d / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibiting' => 'eh.g/z.ih/b.ih/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibition' => 'eh.k/s.eh/b.ih/sh.eh.n / [e^eh].[x^x]/ / failed phone:eh / failed spelling:hi',
  'exhibitionist' => 'eh.k/s.eh/b.ih/sh.eh/n.eh.s.t / [e^eh].[x^x]/ / failed phone:eh / failed spelling:hi',
  'exhibitionists' => 'eh.k/s.eh/b.ih/sh.eh/n.eh.s.t.s / [e^eh].[x^x]/ / failed phone:eh / failed spelling:hi',
  'exhibitions' => 'eh.k/s.eh/b.ih/sh.eh.n.z / [e^eh].[x^x]/ / failed phone:eh / failed spelling:hi',
  'exhibitor' => 'eh.g/z.ih/b.eh/t.er / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibitors' => 'eh.g/z.ih/b.eh/t.er.z / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhibits' => 'eh.g/z.ih/b.eh.t.s / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhilarated' => 'eh.g/z.ih/l.er/ay/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhilarating' => 'eh.g/z.ih/l.er/ay/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhilaration' => 'eh.g/z.ih/l.er/ay/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhort' => 'eh.g/z.aw.r.t / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhortation' => 'eh.g/z.aw.r/t.ay/sh.eh.n / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhortations' => 'eh.g/z.aw.r/t.ay/sh.eh.n.z / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhorted' => 'eh.g/z.aw.r/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhorting' => 'eh.g/z.aw.r/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xh',
  'exhorts' => 'eh.g/z.aw.r.t.s / [e^eh]. / failed phone:g / failed spelling:xh',
  'exile' => 'eh.g/z.igh.l / [e^eh]. / failed phone:g / failed spelling:xi',
  'exiled' => 'eh.g/z.igh.l.d / [e^eh]. / failed phone:g / failed spelling:xi',
  'exiles' => 'eh.g/z.igh.l.z / [e^eh]. / failed phone:g / failed spelling:xi',
  'exisiting' => 'eh.g/z.ih/s.ih/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xi',
  'exist' => 'eh.g/z.ih.s.t / [e^eh]. / failed phone:g / failed spelling:xi',
  'existed' => 'eh.g/z.ih/s.t.eh.d / [e^eh]. / failed phone:g / failed spelling:xi',
  'existence' => 'eh.g/z.ih/s.t.eh.n.s / [e^eh]. / failed phone:g / failed spelling:xi',
  'existent' => 'eh.g/z.ih/s.t.eh.n.t / [e^eh]. / failed phone:g / failed spelling:xi',
  'existing' => 'eh.g/z.ih/s.t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xi',
  'exists' => 'eh.g/z.ih.s.t.s / [e^eh]. / failed phone:g / failed spelling:xi',
  'exit' => 'eh.g/z.ih.t / [e^eh]. / failed phone:g / failed spelling:xi',
  'exited' => 'eh.g/z.eh/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xi',
  'exiting' => 'eh.g/z.ih/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xi',
  'exits' => 'eh.g/z.ih.t.s / [e^eh]. / failed phone:g / failed spelling:xi',
  'exonerate' => 'eh.g/z.aw/n.er/ay.t / [e^eh]. / failed phone:g / failed spelling:xo',
  'exonerated' => 'eh.g/z.aw/n.er/ay/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xo',
  'exonerating' => 'eh.g/z.aw/n.er/ay/t.ih.ng / [e^eh]. / failed phone:g / failed spelling:xo',
  'exorbitant' => 'eh.g/z.aw.r/b.ih/t.eh.n.t / [e^eh]. / failed phone:g / failed spelling:xo',
  'exorcism' => 'eh.k/s.air/s.ih/z.eh.m / [e^eh].[x^x]/ / failed phone:air / failed spelling:or',
  'exotic' => 'eh.g/z.aw/t.ih.k / [e^eh]. / failed phone:g / failed spelling:xo',
  'exoticism' => 'eh.g/z.aw/t.eh/k.eh/z.eh.m / [e^eh]. / failed phone:g / failed spelling:xo',
  'exotics' => 'eh.g/z.aw/t.ih.k.s / [e^eh]. / failed phone:g / failed spelling:xo',
  'expansionism' => 'eh.k/s.p.ah.n/ch.eh/n.ih/z.eh.m / [e^eh].[x^x]/[p^p].[a^ah].[n^n]/ / failed phone:t / failed spelling:si',
  'expansionist' => 'eh.k/s.p.ah.n/ch.eh/n.ih.s.t / [e^eh].[x^x]/[p^p].[a^ah].[n^n]/ / failed phone:t / failed spelling:si',
  'extraordinarily' => 'eh.k/s.t.r.aw.r/d.eh/n.air/eh/l.ee / [e^eh].[x^x]/[t^t].[r^r].[a^oh]. / failed phone:r / failed spelling:or',
  'extraordinary' => 'eh.k/s.t.r.aw.r/d.eh/n.air/ee / [e^eh].[x^x]/[t^t].[r^r].[a^oh]. / failed phone:r / failed spelling:or',
  'exuberance' => 'eh.g/z.ue/b.er/eh.n.s / [e^eh]. / failed phone:g / failed spelling:xu',
  'exuberant' => 'eh.g/z.ue/b.er/eh.n.t / [e^eh]. / failed phone:g / failed spelling:xu',
  'exude' => 'eh.g/z.ue.d / [e^eh]. / failed phone:g / failed spelling:xu',
  'exuded' => 'eh.g/z.ue/d.ih.d / [e^eh]. / failed phone:g / failed spelling:xu',
  'exudes' => 'eh.g/z.ue.d.z / [e^eh]. / failed phone:g / failed spelling:xu',
  'exultant' => 'eh.g/z.uh.l/t.eh.n.t / [e^eh]. / failed phone:g / failed spelling:xu',
  'exultantly' => 'eh.g/z.uh.l/t.eh.n.t/l.ee / [e^eh]. / failed phone:g / failed spelling:xu',
  'exulted' => 'eh.g/z.uh.l/t.ih.d / [e^eh]. / failed phone:g / failed spelling:xu',
  'exults' => 'eh.g/z.uh.l.t.s / [e^eh]. / failed phone:g / failed spelling:xu',
  'exum' => 'eh.g/z.uh.m / [e^eh]. / failed phone:g / failed spelling:xu',
  'exxon' => 'eh.k/s.aw.n / [e^eh].[x^x]/ / failed phone:aw / failed spelling:xo',
  'eyde' => 'ay.d / [ey^ay].[d^d] / failed phone:d / failed spelling:yd',
  'eyre' => 'air /  / failed phone:air / failed spelling:ey',
  'eyrich' => 'air/ih.ch /  / failed phone:air / failed spelling:ey',
  'eyrie' => 'air/ee /  / failed phone:air / failed spelling:ey',
  'ezelle' => 'ih/z.eh.l / [e^ih]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'f' => 'eh.f /  / failed phone:eh / failed spelling:f',
  'faas' => 'f.aw.z / [f^f].[a^aw]. / failed phone:z / failed spelling:as',
  'fabled' => 'f.ay/b.eh.l.d / [f^f].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'fables' => 'f.ay/b.eh.l.z / [f^f].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'fabrizio' => 'f.aw/b.r.ee.t/s.ee/oh / [f^f].[a^aw]/[b^b].[r^r].[i^ee]. / failed phone:t / failed spelling:zi',
  'facade' => 'f.eh/s.aw.d / [f^f].[a^ah]/[c^s].[a^aw].[d^d] / failed phone:d / failed spelling:de',
  'facchini' => 'f.aw/k.ee/n.ee / [f^f].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'facciola' => 'f.ah/ch.ee/oh/l.eh / [f^f].[a^ah]/ / failed phone:t / failed spelling:cc',
  'facemire' => 'f.aw/ch.eh/m.ih/r.ee / [f^f].[a^aw]/ / failed phone:t / failed spelling:ce',
  'fae' => 'f.igh / [f^f]. / failed phone:igh / failed spelling:ae',
  'faeth' => 'f.ee.th / [f^f]. / failed phone:ee / failed spelling:ae',
  'fahd' => 'f.aw.d / [f^f].[a^aw]. / failed phone:d / failed spelling:hd',
  'fahl' => 'f.aw.l / [f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'fahlman' => 'f.aw.l/m.eh.n / [f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'fahmy' => 'f.aw/m.ee / [f^f].[a^aw]/ / failed phone:m / failed spelling:hm',
  'fahnestock' => 'f.aw.n/s.t.aw.k / [f^f].[a^aw].[hn^n]/ / failed phone:s / failed spelling:es',
  'fahr' => 'f.aw.r / [f^f].[a^oh]. / failed phone:r / failed spelling:hr',
  'fahrenheit' => 'f.air/eh.n/h.igh.t / [f^f]. / failed phone:air / failed spelling:ah',
  'fahrenkopf' => 'f.aw/r.eh.n/k.aw.p.f / [f^f].[a^aw]/ / failed phone:r / failed spelling:hr',
  'fahrer' => 'f.aw/r.er / [f^f].[a^aw]/ / failed phone:r / failed spelling:hr',
  'fahringer' => 'f.aw/r.ih.ng/er / [f^f].[a^aw]/ / failed phone:r / failed spelling:hr',
  'fahrner' => 'f.aw.r/n.er / [f^f].[a^oh]. / failed phone:r / failed spelling:hr',
  'fahrney' => 'f.aw.r/n.ee / [f^f].[a^oh]. / failed phone:r / failed spelling:hr',
  'fahs' => 'f.ah.s / [f^f].[a^ah]. / failed phone:s / failed spelling:hs',
  'fainthearted' => 'f.ay.n.t/h.aw.r/t.ih.d / [f^f].[ai^ay].[n^n].[t^t]/[h^h]. / failed phone:oh / failed spelling:ea',
  'fairbairn' => 'f.air/b.er.n / [f^f].[air^air]/[b^b]. / failed phone:r / failed spelling:ai',
  'fairleigh' => 'f.air/l.eh / [f^f].[air^air]/[le^l].[i^ih] / failed phone:eh / failed spelling:ig',
  'fairview' => 'f.air/v.ye.ue / [f^f].[air^air]/[v^v]. / failed phone:ue / failed spelling:ie',
  'fajardo' => 'f.aw/ye.aw.r/d.oh / [f^f].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'falardeau' => 'f.ah/l.aw.r/d.oh / [f^f].[a^ah]/[l^l].[a^oh].[r^r]/[d^d]. / failed phone:oh / failed spelling:ea',
  'falke' => 'f.aw.k / [f^f].[a^aw].[lk^k] / failed phone:k / failed spelling:lk',
  'falkowski' => 'f.eh.l/k.aw.f/s.k.ee / [f^f].[a^ah].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'familial' => 'f.eh/m.ih/l.ye.eh.l / [f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'familiar' => 'f.eh/m.ih/l.ye.er / [f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:er / failed spelling:ia',
  'familiarity' => 'f.eh/m.ih/l.ye.air/eh/t.ee / [f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:ye / failed spelling:ia',
  'familiarize' => 'f.eh/m.ih/l.ye.er/igh.z / [f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:er / failed spelling:ia',
  'familiarized' => 'f.eh/m.ih/l.ye.er/igh.z.d / [f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:er / failed spelling:ia',
  'fangled' => 'f.ah.ng/g.eh.l.d / [f^f].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'fansler' => 'f.ah.n/s.eh/l.er / [f^f].[a^ah].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'fantozzi' => 'f.aw.n/t.oh.t/s.ee / [f^f].[a^aw].[n^n]/[t^t].[o^oh]. / failed phone:t / failed spelling:zz',
  'fanucchi' => 'f.aw/n.ue/k.ee / [f^f].[a^aw]/[n^n].[u^ue]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'fao' => 'f.ow / [f^f]. / failed phone:ow / failed spelling:ao',
  'farace' => 'f.aw/r.aw/ch.ee / [f^f].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'faraci' => 'f.aw/r.aw/ch.ee / [f^f].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'farinacci' => 'f.aw/r.ee/n.aw/ch.ee / [f^f].[a^aw]/[r^r].[i^ee]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'farnham' => 'f.aw.r/n.eh.m / [f^f].[a^oh].[r^r]/[n^n]. / failed phone:eh / failed spelling:ha',
  'farquhar' => 'f.aw.r/kw.er / [f^f].[a^oh].[r^r]/[qu^kw]. / failed phone:er / failed spelling:ha',
  'farquharson' => 'f.aw.r/k.uh/h.aw.r/s.eh.n / [f^f].[a^oh].[r^r]/[qu^k]. / failed phone:uh / failed spelling:ha',
  'farrakhan' => 'f.aw/r.eh/k.aw.n / [f^f].[a^aw]/[rr^r].[a^ah]/[k^k]. / failed phone:aw / failed spelling:ha',
  'fasching' => 'f.ah/sh.ih.ng / [f^f].[a^ah]/[sc^sh]. / failed phone:ih / failed spelling:hi',
  'fasciano' => 'f.aw.s/ch.ee/aw/n.oh / [f^f].[a^aw].[sc^s]/ / failed phone:t / failed spelling:ia',
  'fatuous' => 'f.ah/ch.eh/w.eh.s / [f^f].[a^ah]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:ou',
  'faucheux' => 'f.oh/sh.oh / [f^f].[au^oh]/[c^sh]. / failed phone:oh / failed spelling:he',
  'faurot' => 'f.aw/r.oh / [f^f].[au^aw]/[r^r].[o^oh] / failed phone:oh / failed spelling:ot',
  'fauroux' => 'f.aw/r.ue / [f^f].[au^aw]/[r^r].[ou^ue] / failed phone:ue / failed spelling:ou',
  'fauteux' => 'f.oh/t.oh / [f^f].[au^oh]/[te^t]. / failed phone:oh / failed spelling:ux',
  'favazza' => 'f.aw/v.aw.t/s.eh / [f^f].[a^aw]/[v^v].[a^aw]. / failed phone:t / failed spelling:zz',
  'fawkes' => 'f.aw.k.s / [f^f].[aw^aw].[k^k]. / failed phone:x / failed spelling:wk',
  'fayanne' => 'f.ay/ih.n / [f^f].[ay^ay]/[a^ih].[n^n] / failed phone:n / failed spelling:an',
  'faye' => 'f.ay / [f^f].[a^ay] / failed phone:ay / failed spelling:ay',
  'fayetteville' => 'f.ay/eh.t/v.ih.l / [f^f].[ay^ay]/[e^eh].[tte^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'fayme' => 'f.ay.m / [f^f].[ay^ay].[m^m] / failed phone:m / failed spelling:ym',
  'faymonville' => 'f.ay/m.eh.n/v.ih.l / [f^f].[ay^ay]/[m^m].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'fazzino' => 'f.aw.t/s.ee/n.oh / [f^f].[a^aw]. / failed phone:t / failed spelling:zz',
  'fdic' => 'eh.f/d.eh.k /  / failed phone:eh / failed spelling:fd',
  'fearsome' => 'f.ih.r/s.eh.m / [f^f].[ea^ih].[r^r]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'feb' => 'f.eh/b.ye.eh/w.air/ee / [f^f].[e^eh]/[b^b]. / failed phone:ue / failed spelling:',
  'febles' => 'f.eh/b.eh.l.z / [f^f].[e^eh]/[b^b]. / failed phone:eh / failed spelling:le',
  'february' => 'f.eh/b.ye.eh/w.air/ee / [f^f].[e^eh]/[b^b]. / failed phone:ue / failed spelling:ru',
  'federici' => 'f.eh/d.er/ee/ch.ee / [f^f].[e^eh]/[d^d].[er^er]/[i^ee]/ / failed phone:t / failed spelling:ci',
  'feehan' => 'f.ee/eh.n / [f^f].[e^ee]/[e^eh]. / failed phone:n / failed spelling:ha',
  'fehl' => 'f.eh.l / [f^f].[e^eh]. / failed phone:l / failed spelling:hl',
  'fehling' => 'f.eh/l.ih.ng / [f^f].[e^eh]/ / failed phone:l / failed spelling:hl',
  'fehlman' => 'f.eh.l/m.eh.n / [f^f].[e^eh]. / failed phone:l / failed spelling:hl',
  'fejes' => 'f.ih/zh.ee.z / [f^f].[e^ih]/ / failed phone:zh / failed spelling:je',
  'felde' => 'f.eh.l.d / [f^f].[e^eh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'feldmuehle' => 'f.eh.l.d/m.ye.ue/l.eh / [f^f].[e^eh].[l^l].[d^d]/[m^m].[u^ue]/ / failed phone:l / failed spelling:eh',
  'feldpausch' => 'f.eh.l.d/p.ow.sh / [f^f].[e^eh].[l^l].[d^d]/[p^p].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'feldt' => 'f.eh.l.t / [f^f].[e^eh].[l^l]. / failed phone:t / failed spelling:dt',
  'felicetti' => 'f.eh/l.ee/ch.eh/t.ee / [f^f].[e^eh]/[l^l].[i^ee]/ / failed phone:t / failed spelling:ct',
  'felske' => 'f.eh.l.s.k / [f^f].[e^eh].[l^l].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'femme' => 'f.eh.m / [f^f].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'fencl' => 'f.eh.ng/k.eh.l / [f^f].[e^eh].[n^ng]/[c^k]. / failed phone:eh / failed spelling:l',
  'fendt' => 'f.eh.n.t / [f^f].[e^eh].[n^n]. / failed phone:t / failed spelling:dt',
  'fenske' => 'f.eh.n.s.k / [f^f].[e^eh].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'ferencz' => 'f.air/ih.n.ch / [f^f].[er^air]/[e^ih].[n^n]. / failed phone:t / failed spelling:cz',
  'fernao' => 'f.er/n.ow / [f^f].[er^er]/[n^n]. / failed phone:ow / failed spelling:ao',
  'ferociously' => 'f.er/oh/sh.ih/s.l.ee / [f^f].[er^er]/[o^oh]/[c^sh].[i^ih]/ / failed phone:s / failed spelling:ou',
  'ferre' => 'f.air / [f^f].[er^air] / failed phone:air / failed spelling:er',
  'ferreiro' => 'f.air/air/oh / [f^f].[er^air]/ / failed phone:air / failed spelling:re',
  'ferriera' => 'f.er/ih/r.eh / [f^f].[err^er]/[i^ih]/ / failed phone:r / failed spelling:er',
  'ferriss' => 'f.air/ih/s.ih.z / [f^f].[err^air]/[i^ih]/[ss^s]. / failed phone:ih / failed spelling:',
  'ferrucci' => 'f.er/ue/ch.ee / [f^f].[err^er]/[u^ue]/ / failed phone:t / failed spelling:cc',
  'feschbach' => 'f.eh.sh/b.aw.k / [f^f].[e^eh].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'fesler' => 'f.eh/s.eh/l.er / [f^f].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'fetsch' => 'f.eh.ch / [f^f].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'feucht' => 'f.oy.k.t / [f^f]. / failed phone:oy / failed spelling:eu',
  'feuerborn' => 'f.oy/er/b.er.n / [f^f]. / failed phone:oy / failed spelling:eu',
  'feulner' => 'f.oy.l/n.er / [f^f]. / failed phone:oy / failed spelling:eu',
  'feustel' => 'f.oy/s.t.eh.l / [f^f]. / failed phone:oy / failed spelling:eu',
  'fialkowski' => 'f.ee/eh.l/k.aw.f/s.k.ee / [f^f].[i^ee]/[a^ah].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'ficke' => 'f.ih.k / [f^f].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'fickes' => 'f.ih.k.s / [f^f].[i^ih].[c^k]. / failed phone:s / failed spelling:ke',
  'fickleness' => 'f.ih/k.eh.l/n.eh.s / [f^f].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'fiddled' => 'f.ih/d.eh.l.d / [f^f].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'fiddler' => 'f.ih/d.eh/l.er / [f^f].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'fiddles' => 'f.ih/d.eh.l.z / [f^f].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'fidelia' => 'f.ih/d.ee/l.ye.eh / [f^f].[i^ih]/[d^d].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'fidget' => 'f.ih/j.ih.t / [f^f].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'fidgeting' => 'f.ih/j.eh/t.ih.ng / [f^f].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'fidler' => 'f.igh/d.eh/l.er / [f^f].[i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'fiechter' => 'f.ih.k/t.er / [f^f].[i^ih]. / failed phone:k / failed spelling:ec',
  'fier' => 'f.ih.r / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fierce' => 'f.ih.r.s / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fiercely' => 'f.ih.r/s.l.ee / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fiercer' => 'f.ih.r/s.er / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fiercest' => 'f.ih.r/s.eh.s.t / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fierman' => 'f.ih.r/m.eh.n / [f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'fierro' => 'f.ih/r.oh / [f^f].[i^ih]/ / failed phone:r / failed spelling:er',
  'fierros' => 'f.ih/r.oh.z / [f^f].[i^ih]/ / failed phone:r / failed spelling:er',
  'figge' => 'f.ih.g / [f^f].[i^ih].[gg^g] / failed phone:g / failed spelling:gg',
  'figler' => 'f.igh/g.eh/l.er / [f^f].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'figueira' => 'f.ee/g.air/eh / [f^f].[i^ee]/[gue^g]. / failed phone:air / failed spelling:ir',
  'filet' => 'f.ih/l.ay / [f^f].[i^ih]/[l^l].[e^ay] / failed phone:ay / failed spelling:t',
  'filets' => 'f.ih/l.ay.z / [f^f].[i^ih]/[l^l].[e^ay]. / failed phone:z / failed spelling:ts',
  'filipkowski' => 'f.ih/l.ih.p/k.aw.f/s.k.ee / [f^f].[i^ih]/[l^l].[i^ih].[p^p]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'filipowicz' => 'f.ih/l.ih/p.eh/v.ih.ch / [f^f].[i^ih]/[l^l].[i^ih]/[p^p].[o^uh]/ / failed phone:v / failed spelling:wi',
  'fillet' => 'f.eh/l.ay / [f^f].[i^ih]/[ll^l].[e^ay] / failed phone:ay / failed spelling:et',
  'filyaw' => 'f.ih/l.ee/aw.v / [f^f].[i^ih]/[l^l].[y^ee]/[a^aw]. / failed phone:v / failed spelling:w',
  'financier' => 'f.ih/n.eh.n/s.ih.r / [f^f].[i^ih]/[n^n].[a^ah].[n^n]/[c^s].[i^ih]. / failed phone:r / failed spelling:er',
  'financiere' => 'f.ih/n.ah.n/s.ih.r / [f^f].[i^ih]/[n^n].[a^ah].[n^n]/[c^s].[i^ih]. / failed phone:r / failed spelling:er',
  'financiers' => 'f.ih/n.eh.n/s.ih.r.z / [f^f].[i^ih]/[n^n].[a^ah].[n^n]/[c^s].[i^ih]. / failed phone:r / failed spelling:er',
  'fincke' => 'f.ih.ng.k / [f^f].[i^ih].[n^ng].[c^k] / failed phone:k / failed spelling:ck',
  'findlay' => 'f.ih.n.d/l.ee / [f^f].[i^ih].[n^n].[d^d]/[l^l]. / failed phone:ee / failed spelling:ay',
  'findling' => 'f.ih.n/d.eh/l.ih.ng / [f^f].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:li',
  'finesse' => 'f.ih/n.eh.s / [f^f].[i^ih]/[n^n].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'finke' => 'f.ih.ng.k / [f^f].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'finkielstain' => 'f.ih.ng/k.ee.l/s.t.ih.n / [f^f].[i^ih].[n^ng]/[k^k].[ie^ee].[l^l]/[s^s].[t^t].[a^ih]. / failed phone:n / failed spelling:in',
  'finlay' => 'f.ih.n/l.ee / [f^f].[i^ih].[n^n]/[l^l]. / failed phone:ee / failed spelling:ay',
  'finlayson' => 'f.ih.n/l.ee/s.eh.n / [f^f].[i^ih].[n^n]/[l^l]. / failed phone:ee / failed spelling:ay',
  'finne' => 'f.ih.n / [f^f].[i^ih].[n^n] / failed phone:n / failed spelling:nn',
  'finocchiaro' => 'f.ee/n.oh/k.ee/aw/r.oh / [f^f].[i^ee]/[n^n].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'finocchio' => 'f.ee/n.oh/k.ee/oh / [f^f].[i^ee]/[n^n].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'finscher' => 'f.ih.n/sh.er / [f^f].[i^ih].[n^n]/[sc^sh]. / failed phone:er / failed spelling:he',
  'fiorucci' => 'f.ee/aw/r.ue/ch.ee / [f^f].[i^ee]/[o^aw]/[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'firkus' => 'f.er/k.ih.s / [f^f].[ir^er]/[k^k]. / failed phone:ih / failed spelling:us',
  'fisch' => 'f.ih.sh / [f^f].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'fischbach' => 'f.ih.sh/b.aw.k / [f^f].[i^ih].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'fischbein' => 'f.ih.sh/b.igh.n / [f^f].[i^ih].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'fischel' => 'f.ih/sh.eh.l / [f^f].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'fischer' => 'f.ih/sh.er / [f^f].[i^ih]/[sc^sh]. / failed phone:er / failed spelling:he',
  'fischl' => 'f.ih/s.k.eh.l / [f^f].[i^ih]/[s^s].[ch^k]. / failed phone:eh / failed spelling:l',
  'fischler' => 'f.ih/sh.eh/l.er / [f^f].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:hl',
  'fischman' => 'f.ih/sh.m.eh.n / [f^f].[i^ih]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'fiske' => 'f.ih.s.k / [f^f].[i^ih].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'fisler' => 'f.ih/s.eh/l.er / [f^f].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'fitzhugh' => 'f.ih.t.s/h.ye.ue / [f^f].[i^ih].[t^t].[z^s]/[h^h].[u^ue] / failed phone:ue / failed spelling:ug',
  'fitzsimmons' => 'f.ih.t/s.ih/m.eh.n.z / [f^f].[i^ih].[t^t]/[z^s]. / failed phone:ih / failed spelling:si',
  'fitzsimons' => 'f.ih.t/s.ih/m.eh.n.z / [f^f].[i^ih].[t^t]/[z^s]. / failed phone:ih / failed spelling:si',
  'fitzwilliam' => 'f.ih.t/s.w.ih/l.ye.eh.m / [f^f].[i^ih].[t^t]/[z^s].[w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'fizzled' => 'f.ih/z.eh.l.d / [f^f].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:le',
  'fizzles' => 'f.ih/z.eh.l.z / [f^f].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:le',
  'fizzling' => 'f.ih/z.eh/l.ih.ng / [f^f].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:li',
  'fjeld' => 'f.ye.eh.l.d / [f^f]. / failed phone:ue / failed spelling:je',
  'fjelstad' => 'f.ye.eh.l/s.t.eh.d / [f^f]. / failed phone:ue / failed spelling:je',
  'fjords' => 'f.ye.aw.r.d.z / [f^f]. / failed phone:ye / failed spelling:jo',
  'flaharty' => 'f.l.air/t.ee / [f^f].[l^l]. / failed phone:air / failed spelling:ah',
  'flaherty' => 'f.l.air/t.ee / [f^f].[l^l]. / failed phone:air / failed spelling:ah',
  'flasch' => 'f.l.ah.sh / [f^f].[l^l].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'flashlights' => 'f.l.ah/l.igh.t.s / [f^f].[l^l].[a^ah]/ / failed phone:l / failed spelling:sh',
  'flavius' => 'f.l.ay/v.ee/ih.s / [f^f].[l^l].[a^ay]/[v^v].[i^ee]/ / failed phone:ih / failed spelling:us',
  'fledging' => 'f.l.eh/j.ih.ng / [f^f].[l^l].[e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'fledgling' => 'f.l.eh.j/l.ih.ng / [f^f].[l^l].[e^eh].[d^j]/ / failed phone:l / failed spelling:gl',
  'fleisch' => 'f.l.igh.sh / [f^f].[le^l].[i^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'fleischauer' => 'f.l.igh/sh.ow/er / [f^f].[le^l].[i^igh]/[sc^sh]. / failed phone:ow / failed spelling:ha',
  'fleischer' => 'f.l.igh/sh.er / [f^f].[le^l].[i^igh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'fleischhacker' => 'f.l.igh.sh/h.eh/k.er / [f^f].[le^l].[i^igh].[sc^sh]/[h^h]. / failed phone:eh / failed spelling:ha',
  'fleischman' => 'f.l.igh/sh.m.eh.n / [f^f].[le^l].[i^igh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'fleischmann' => 'f.l.igh/sh.m.eh.n / [f^f].[le^l].[i^igh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'flesch' => 'f.l.eh.sh / [f^f].[l^l].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'fleuri' => 'f.l.er/r.ee / [f^f].[le^l].[ur^er]/ / failed phone:r / failed spelling:i',
  'flicek' => 'f.l.ih/ch.eh.k / [f^f].[l^l].[i^ih]/ / failed phone:t / failed spelling:ce',
  'flooring' => 'f.l.aw/r.ih.ng / [f^f].[l^l].[o^aw]/ / failed phone:r / failed spelling:or',
  'fluctuate' => 'f.l.uh.k/ch.eh/w.ay.t / [f^f].[l^l].[u^uh].[c^k]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'fluctuated' => 'f.l.uh.k/ch.eh/w.ay/t.ih.d / [f^f].[l^l].[u^uh].[c^k]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'fluctuating' => 'f.l.uh.k/ch.eh/w.ay/t.ih.ng / [f^f].[l^l].[u^uh].[c^k]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'fluegge' => 'f.l.ue.g / [f^f].[l^l].[ue^ue].[gg^g] / failed phone:g / failed spelling:eg',
  'fluharty' => 'f.l.uh/er/t.ee / [f^f].[l^l].[u^uh]/ / failed phone:er / failed spelling:ha',
  'fluhr' => 'f.l.er / [f^f].[l^l]. / failed phone:er / failed spelling:uh',
  'fluoresce' => 'f.l.oo/r.eh.s / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorescent' => 'f.l.oo/r.eh/s.eh.n.t / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorescently' => 'f.l.oo/r.eh/s.eh.n.t/l.ee / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorescents' => 'f.l.oo/r.eh/s.eh.n.t.s / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluoridation' => 'f.l.oo/r.eh/d.ay/sh.eh.n / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluoride' => 'f.l.oo/r.igh.d / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorides' => 'f.l.oo/r.igh.d.z / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorine' => 'f.l.oo/r.ee.n / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorite' => 'f.l.oo/r.igh.t / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorocarbon' => 'f.l.oo/r.oh/k.aw.r/b.eh.n / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorocarbons' => 'f.l.oo/r.oh/k.aw.r/b.eh.n.z / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorometer' => 'f.l.oo/r.aw/m.eh/t.er / [f^f].[l^l].[u^oo]/ / failed phone:r / failed spelling:or',
  'fluorspar' => 'f.l.oo.r/s.p.aw.r / [f^f].[l^l].[u^oo]. / failed phone:r / failed spelling:or',
  'fluxional' => 'f.l.uh.k/sh.eh/n.eh.l / [f^f].[l^l].[u^uh].[x^k]/ / failed phone:sh / failed spelling:io',
  'foehlich' => 'f.oh/l.ih.ch / [f^f].[o^oh]/ / failed phone:l / failed spelling:eh',
  'foell' => 'f.ee.l / [f^f]. / failed phone:ee / failed spelling:oe',
  'foertsch' => 'f.aw.r.ch / [f^f].[oe^oh].[r^r].[t^t]. / failed phone:t / failed spelling:ts',
  'fogleman' => 'f.oh/g.eh.l/m.eh.n / [f^f].[o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'fogler' => 'f.oh/g.eh/l.er / [f^f].[o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'foibles' => 'f.oy/b.eh.l.z / [f^f].[oi^oy]/[b^b]. / failed phone:eh / failed spelling:le',
  'foie' => 'f.oy / [f^f].[oi^oy] / failed phone:oy / failed spelling:oi',
  'fojtik' => 'f.aw.ye/t.ih.k / [f^f].[o^aw]. / failed phone:ye / failed spelling:jt',
  'fokker' => 'f.aw/k.er / [f^f].[o^aw]/[k^k]. / failed phone:er / failed spelling:ke',
  'foliage' => 'f.oh/l.ih.j / [f^f].[o^oh]/[l^l].[i^ih]. / failed phone:j / failed spelling:ag',
  'folkes' => 'f.oh.k.s / [f^f].[o^oh].[lk^k]. / failed phone:s / failed spelling:es',
  'folkways' => 'f.oh/kw.ay.z / [f^f].[o^oh]/ / failed phone:kw / failed spelling:lk',
  'folliard' => 'f.aw/l.ye.er.d / [f^f].[o^aw]/[ll^l]. / failed phone:er / failed spelling:ia',
  'follicles' => 'f.aw/l.ih/k.eh.l.z / [f^f].[o^aw]/[ll^l].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'fonville' => 'f.oh.n/v.ih.l / [f^f].[o^oh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'forbess' => 'f.aw.r.b/z.ih.z / [f^f].[o^oh].[r^r].[b^b]/[es^z]. / failed phone:ih / failed spelling:s',
  'forbus' => 'f.aw.r/b.ih.s / [f^f].[o^oh].[r^r]/[b^b]. / failed phone:ih / failed spelling:us',
  'forde' => 'f.aw.r.d / [f^f].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'fordham' => 'f.aw.r/d.eh.m / [f^f].[o^oh].[r^r]/[d^d]. / failed phone:eh / failed spelling:ha',
  'forero' => 'f.aw/r.oh / [f^f].[o^aw]/[r^r]. / failed phone:oh / failed spelling:er',
  'forerunner' => 'f.aw/r.uh/n.er / [f^f].[o^aw]/[r^r]. / failed phone:uh / failed spelling:er',
  'forerunners' => 'f.aw/r.uh/n.er.z / [f^f].[o^aw]/[r^r]. / failed phone:uh / failed spelling:er',
  'forfeit' => 'f.aw.r/f.ih.t / [f^f].[o^oh].[r^r]/[f^f].[e^ih]. / failed phone:t / failed spelling:it',
  'forfeitable' => 'f.aw.r/f.eh/t.eh/b.eh.l / [f^f].[o^oh].[r^r]/[f^f].[e^eh]/ / failed phone:t / failed spelling:it',
  'forfeited' => 'f.aw.r/f.ih/t.ih.d / [f^f].[o^oh].[r^r]/[f^f].[e^ih]/ / failed phone:t / failed spelling:it',
  'forfeiting' => 'f.aw.r/f.eh/t.ih.ng / [f^f].[o^oh].[r^r]/[f^f].[e^eh]/ / failed phone:t / failed spelling:it',
  'forfeiture' => 'f.aw.r/f.eh/ch.er / [f^f].[o^oh].[r^r]/[f^f].[e^eh]/ / failed phone:t / failed spelling:it',
  'forfeitures' => 'f.aw.r/f.eh/ch.er.z / [f^f].[o^oh].[r^r]/[f^f].[e^eh]/ / failed phone:t / failed spelling:it',
  'forgette' => 'f.er/zh.eh.t / [f^f].[o^oh].[r^r]/ / failed phone:zh / failed spelling:ge',
  'forgings' => 'f.aw/j.ih.ng.z / [f^f].[o^aw]/ / failed phone:j / failed spelling:rg',
  'forgione' => 'f.aw.r/j.oh/n.ee / [f^f].[o^oh].[r^r]/[g^j]. / failed phone:oh / failed spelling:io',
  'formaldehyde' => 'f.aw.r/m.ah.l/d.eh/h.igh.d / [f^f].[o^oh].[r^r]/[m^m].[a^ah].[l^l]/[d^d].[e^eh]/[h^h].[y^igh].[d^d] / failed phone:d / failed spelling:de',
  'forrer' => 'f.aw/er.r / [f^f].[o^aw]/[r^er].[r^r] / failed phone:r / failed spelling:re',
  'fosler' => 'f.aw/s.eh/l.er / [f^f].[o^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'fosse' => 'f.aw.s / [f^f].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'fotopoulos' => 'f.eh/t.aw/p.eh/l.ih.s / [f^f].[o^uh]/[t^t].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'fouche' => 'f.ow.ch / [f^f].[ou^ow].[ch^ch] / failed phone:t / failed spelling:ch',
  'foulke' => 'f.ow.l.k / [f^f].[ou^ow].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'foulkes' => 'f.ow.l.k.s / [f^f].[ou^ow].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'foursome' => 'f.aw.r/s.eh.m / [f^f].[ou^oh].[r^r]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'foward' => 'f.ow.r.d / [f^f].[ow^ow]. / failed phone:r / failed spelling:ar',
  'fowkes' => 'f.ow.k.s / [f^f].[ow^ow].[k^k]. / failed phone:s / failed spelling:es',
  'fowles' => 'f.ow/eh.l.z / [f^f].[ow^ow]/ / failed phone:eh / failed spelling:le',
  'fowlkes' => 'f.ow.l.k.s / [f^f].[ow^ow].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'foye' => 'f.oy / [f^f].[oy^oy] / failed phone:oy / failed spelling:oy',
  'fraas' => 'f.r.aw.z / [f^f].[r^r].[a^aw]. / failed phone:z / failed spelling:as',
  'fraher' => 'f.r.aw/er / [f^f].[r^r].[a^aw]/ / failed phone:er / failed spelling:he',
  'frahm' => 'f.r.ah.m / [f^f].[r^r].[a^ah]. / failed phone:m / failed spelling:hm',
  'fraleigh' => 'f.r.ay/l.ee / [f^f].[r^r].[a^ay]/[le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'francais' => 'f.r.aw.n/s.ay / [f^f].[r^r].[a^aw].[n^n]/[c^s].[a^ay] / failed phone:ay / failed spelling:ai',
  'francaises' => 'f.r.aw.n/s.eh.z / [f^f].[r^r].[a^aw].[n^n]/[c^s].[ai^eh].[s^z] / failed phone:z / failed spelling:is',
  'francek' => 'f.r.ah.n/ch.eh.k / [f^f].[r^r].[a^ah].[n^n]/ / failed phone:t / failed spelling:ce',
  'francesca' => 'f.r.ah.n/ch.eh/s.k.eh / [f^f].[r^r].[a^ah].[n^n]/ / failed phone:t / failed spelling:ce',
  'franceschi' => 'f.r.aw.n/ch.eh/s.k.ee / [f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'franceschini' => 'f.r.aw.n/ch.eh/s.k.ee/n.ee / [f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'francesco' => 'f.r.ah.n/ch.eh/s.k.oh / [f^f].[r^r].[a^ah].[n^n]/ / failed phone:t / failed spelling:ce',
  'francesconi' => 'f.r.aw.n/ch.eh/s.k.oh/n.ee / [f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'francese' => 'f.r.aw.n/ch.ay/z.ee / [f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'francia' => 'f.r.aw.n/ch.eh / [f^f].[r^r].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'francisville' => 'f.r.ah.n/s.ih/s.v.ih.l / [f^f].[r^r].[a^ah].[n^n]/[c^s].[i^ih]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'francke' => 'f.r.ah.ng.k / [f^f].[r^r].[a^ah].[n^ng].[c^k] / failed phone:k / failed spelling:ck',
  'francoeur' => 'f.r.eh.n/k.er / [f^f].[r^r].[a^ah].[n^n]/[c^k]. / failed phone:er / failed spelling:oe',
  'francois' => 'f.r.aw.n/s.w.aw / [f^f].[r^r].[a^aw].[n^n]/[c^s]. / failed phone:w / failed spelling:oi',
  'francoise' => 'f.r.ah.n/s.w.aw.z / [f^f].[r^r].[a^ah].[n^n]/[c^s]. / failed phone:w / failed spelling:oi',
  'franczak' => 'f.r.ah.n/ch.ah.k / [f^f].[r^r].[a^ah].[n^n]/ / failed phone:t / failed spelling:cz',
  'franke' => 'f.r.ah.ng.k / [f^f].[r^r].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'frankiewicz' => 'f.r.ah.n/k.eh/v.ih.ch / [f^f].[r^r].[a^ah].[n^n]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'frankl' => 'f.r.ah.ng/k.eh.l / [f^f].[r^r].[a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:l',
  'frankowski' => 'f.r.eh.ng/k.aw.f/s.k.ee / [f^f].[r^r].[a^ah].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'frascella' => 'f.r.aw.s/ch.eh/l.eh / [f^f].[r^r].[a^aw].[sc^s]/ / failed phone:t / failed spelling:el',
  'frasch' => 'f.r.ah.sh / [f^f].[r^r].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'frashier' => 'f.r.ay.zh/ye.er / [f^f].[r^r].[a^ay].[s^zh]/ / failed phone:er / failed spelling:hi',
  'fratus' => 'f.r.ah/t.ih.s / [f^f].[r^r].[a^ah]/[t^t]. / failed phone:ih / failed spelling:us',
  'fratzke' => 'f.r.ah.t.s.k / [f^f].[r^r].[a^ah].[t^t].[z^s].[k^k] / failed phone:k / failed spelling:ke',
  'frazzini' => 'f.r.aw.t/s.ee/n.ee / [f^f].[r^r].[a^aw]. / failed phone:t / failed spelling:zz',
  'frazzled' => 'f.r.ah/z.eh.l.d / [f^f].[r^r].[a^ah]/[zz^z]. / failed phone:eh / failed spelling:le',
  'freckled' => 'f.r.eh/k.eh.l.d / [f^f].[r^r].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'freda' => 'f.r.eh.d / [f^f].[r^r].[e^eh].[d^d] / failed phone:d / failed spelling:da',
  'frederic' => 'f.r.eh/d.r.ih.k / [f^f].[r^r].[e^eh]/[d^d]. / failed phone:r / failed spelling:er',
  'frederick' => 'f.r.eh/d.r.ih.k / [f^f].[r^r].[e^eh]/[d^d]. / failed phone:r / failed spelling:er',
  'fredericks' => 'f.r.eh/d.r.ih.k.s / [f^f].[r^r].[e^eh]/[d^d]. / failed phone:r / failed spelling:er',
  'fredericksburg' => 'f.r.eh/d.r.ih.k.s/b.er.g / [f^f].[r^r].[e^eh]/[d^d]. / failed phone:r / failed spelling:er',
  'freeh' => 'f.r.ee / [f^f].[r^r].[e^ee] / failed phone:ee / failed spelling:ee',
  'freehling' => 'f.r.ee/l.ih.ng / [f^f].[r^r].[e^ee]/ / failed phone:l / failed spelling:eh',
  'fregeau' => 'f.r.ih/zh.oh / [f^f].[r^r].[e^ih]/ / failed phone:zh / failed spelling:ge',
  'freshour' => 'f.r.eh/s.ow.r / [f^f].[r^r].[e^eh]/[s^s]. / failed phone:ow / failed spelling:ho',
  'freud' => 'f.r.oy.d / [f^f].[r^r]. / failed phone:oy / failed spelling:eu',
  'freudenberg' => 'f.r.oy/d.eh.n/b.er.g / [f^f].[r^r]. / failed phone:oy / failed spelling:eu',
  'freudenthal' => 'f.r.oy/d.ih.n/th.eh.l / [f^f].[r^r]. / failed phone:oy / failed spelling:eu',
  'freundlich' => 'f.r.oy.n.d/l.ih.k / [f^f].[r^r]. / failed phone:oy / failed spelling:eu',
  'freyre' => 'f.r.air / [f^f].[r^r]. / failed phone:air / failed spelling:ey',
  'fricke' => 'f.r.ih.k / [f^f].[r^r].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'friede' => 'f.r.ee.d / [f^f].[r^r].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'friederike' => 'f.r.ee/d.er/ih.k / [f^f].[r^r].[ie^ee]/[d^d].[er^er]/[i^ih].[k^k] / failed phone:k / failed spelling:ke',
  'friedl' => 'f.r.ee/d.eh.l / [f^f].[r^r].[ie^ee]/[d^d]. / failed phone:eh / failed spelling:l',
  'frierson' => 'f.r.ih.r/s.eh.n / [f^f].[r^r].[i^ih]. / failed phone:r / failed spelling:er',
  'friesz' => 'f.r.ee.sh / [f^f].[r^r].[ie^ee].[s^sh] / failed phone:sh / failed spelling:sz',
  'friis' => 'f.r.ee.z / [f^f].[r^r].[i^ee]. / failed phone:z / failed spelling:is',
  'frikkie' => 'f.r.ih/k.ee / [f^f].[r^r].[i^ih]/[k^k]. / failed phone:ee / failed spelling:ki',
  'frisch' => 'f.r.ih.sh / [f^f].[r^r].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'friscia' => 'f.r.ee.s/ch.eh / [f^f].[r^r].[i^ee].[sc^s]/ / failed phone:t / failed spelling:ia',
  'friske' => 'f.r.ih.s.k / [f^f].[r^r].[i^ih].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'fritsch' => 'f.r.ih.ch / [f^f].[r^r].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'fritsche' => 'f.r.ih.ch / [f^f].[r^r].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'fritzsche' => 'f.r.ih.t.z.sh / [f^f].[r^r].[i^ih].[t^t].[z^z].[sc^sh] / failed phone:sh / failed spelling:sc',
  'froehlich' => 'f.r.oh/l.ih.k / [f^f].[r^r].[o^oh]/ / failed phone:l / failed spelling:eh',
  'frogge' => 'f.r.aw.g / [f^f].[r^r].[o^aw].[gg^g] / failed phone:g / failed spelling:gg',
  'frohnmayer' => 'f.r.aw.n/m.igh/er / [f^f].[r^r].[o^aw].[hn^n]/[m^m]. / failed phone:igh / failed spelling:ay',
  'fromme' => 'f.r.aw.m / [f^f].[r^r].[o^aw].[m^m] / failed phone:m / failed spelling:mm',
  'fronczak' => 'f.r.aw.n/ch.ah.k / [f^f].[r^r].[o^aw].[n^n]/ / failed phone:t / failed spelling:cz',
  'fronde' => 'f.r.aw.n.d / [f^f].[r^r].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'frontier' => 'f.r.eh.n/t.ih.r / [f^f].[r^r].[o^uh].[n^n]/[t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'frontiere' => 'f.r.aw.n/t.ye.air / [f^f].[r^r].[o^aw].[n^n]/[t^t]. / failed phone:ye / failed spelling:ie',
  'frontiers' => 'f.r.eh.n/t.ih.r.z / [f^f].[r^r].[o^uh].[n^n]/[t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'frosch' => 'f.r.aw.sh / [f^f].[r^r].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'frueh' => 'f.r.ue / [f^f].[r^r].[u^ue] / failed phone:ue / failed spelling:ue',
  'fruehling' => 'f.r.ue/l.ih.ng / [f^f].[r^r].[u^ue]/ / failed phone:l / failed spelling:eh',
  'fslic' => 'eh.f/s.l.eh.k /  / failed phone:eh / failed spelling:fs',
  'fucci' => 'f.ue/ch.ee / [f^f].[u^ue]/ / failed phone:t / failed spelling:cc',
  'fuchsia' => 'f.ye.ue/sh.eh / [f^f].[u^ue]/[c^sh]. / failed phone:eh / failed spelling:hs',
  'fuchsias' => 'f.ye.ue/sh.eh.z / [f^f].[u^ue]/[c^sh]. / failed phone:eh / failed spelling:hs',
  'fudging' => 'f.uh/j.ih.ng / [f^f].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'fudgy' => 'f.uh/j.ee / [f^f].[u^uh]/[d^j]. / failed phone:ee / failed spelling:gy',
  'fuhr' => 'f.oo.r / [f^f].[u^oo]. / failed phone:r / failed spelling:hr',
  'fuhrer' => 'f.oo/r.er / [f^f].[u^oo]/ / failed phone:r / failed spelling:hr',
  'fuhrman' => 'f.oo.r/m.eh.n / [f^f].[u^oo]. / failed phone:r / failed spelling:hr',
  'fuhrmann' => 'f.oo.r/m.eh.n / [f^f].[u^oo]. / failed phone:r / failed spelling:hr',
  'fuhs' => 'f.uh.s / [f^f].[u^uh]. / failed phone:s / failed spelling:hs',
  'fulsome' => 'f.oo.l/s.eh.m / [f^f].[u^oo].[l^l]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'fumbled' => 'f.uh.m/b.eh.l.d / [f^f].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'fumbles' => 'f.uh.m/b.eh.l.z / [f^f].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'fumbling' => 'f.uh.m/b.eh/l.ih.ng / [f^f].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'funderburke' => 'f.uh.n/d.er/b.er.k / [f^f].[u^uh].[n^n]/[d^d].[er^er]/[b^b].[ur^er].[k^k] / failed phone:k / failed spelling:ke',
  'funke' => 'f.uh.ng.k / [f^f].[u^uh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'fuoss' => 'f.ue.s / [f^f].[u^ue]. / failed phone:s / failed spelling:os',
  'furlaud' => 'f.er/l.oh / [f^f].[ur^er]/[l^l].[a^oh] / failed phone:oh / failed spelling:au',
  'furrh' => 'f.er / [f^f].[urr^er] / failed phone:er / failed spelling:ur',
  'fyfe' => 'f.igh.f / [f^f].[y^igh].[f^f] / failed phone:f / failed spelling:fe',
  'fyffe' => 'f.igh.f / [f^f].[y^igh].[ff^f] / failed phone:f / failed spelling:ff',
  'fyffes' => 'f.ih.f.s / [f^f].[y^ih].[ff^f]. / failed phone:s / failed spelling:es',
  'fyke' => 'f.igh.k / [f^f].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'g' => 'j.ee / [g^j]. / failed phone:ee / failed spelling:',
  'gaar' => 'g.aw.r / [g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'gaarder' => 'g.aw.r/d.er / [g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'gabler' => 'g.ay/b.eh/l.er / [g^g].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'gables' => 'g.ay/b.eh.l.z / [g^g].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'gaboriault' => 'g.ah/b.er/ee/oh / [g^g].[a^ah]/[b^b].[o^oh].[r^r]/[i^ee]/[a^oh] / failed phone:oh / failed spelling:au',
  'gabrielle' => 'g.ah/b.r.ee/eh.l / [g^g].[a^ah]/[b^b].[r^r].[i^ee]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'gaccione' => 'g.aw.k/ch.oh/n.ee / [g^g].[a^aw].[cc^k]/ / failed phone:t / failed spelling:io',
  'gacek' => 'g.aw/ch.eh.k / [g^g].[a^aw]/ / failed phone:t / failed spelling:ce',
  'gadbois' => 'g.ah.d/b.w.aw / [g^g].[a^ah].[d^d]/[b^b]. / failed phone:w / failed spelling:oi',
  'gadget' => 'g.ah/j.eh.t / [g^g].[a^ah]/[d^j]. / failed phone:eh / failed spelling:ge',
  'gadgetry' => 'g.ah/j.eh/t.r.ee / [g^g].[a^ah]/[d^j]. / failed phone:eh / failed spelling:ge',
  'gadgets' => 'g.ah/j.eh.t.s / [g^g].[a^ah]/[d^j]. / failed phone:eh / failed spelling:ge',
  'gadhafi' => 'g.eh/d.aw/f.ee / [g^g].[a^ah]/[d^d]. / failed phone:aw / failed spelling:ha',
  'gadzinski' => 'g.eh/j.ih.n/s.k.ee / [g^g].[a^ah]/[d^j]. / failed phone:ih / failed spelling:zi',
  'gae' => 'g.igh / [g^g]. / failed phone:igh / failed spelling:ae',
  'gaea' => 'g.ee/eh / [g^g]. / failed phone:ee / failed spelling:ae',
  'gaebel' => 'g.eh/b.eh.l / [g^g].[a^ah]/ / failed phone:b / failed spelling:eb',
  'gaede' => 'g.ee.d / [g^g]. / failed phone:ee / failed spelling:ae',
  'gaeta' => 'g.ee/t.eh / [g^g]. / failed phone:ee / failed spelling:ae',
  'gaetano' => 'g.igh/t.aw/n.oh / [g^g]. / failed phone:igh / failed spelling:ae',
  'gaeth' => 'g.ee.th / [g^g]. / failed phone:ee / failed spelling:ae',
  'gaetz' => 'g.ee.t.s / [g^g]. / failed phone:ee / failed spelling:ae',
  'gaffe' => 'g.ah.f / [g^g].[a^ah].[ff^f] / failed phone:f / failed spelling:ff',
  'gaffes' => 'g.ah.f.s / [g^g].[a^ah].[ff^f]. / failed phone:s / failed spelling:es',
  'gahli' => 'g.aw/l.ee / [g^g].[a^aw]/ / failed phone:l / failed spelling:hl',
  'gahm' => 'g.ah.m / [g^g].[a^ah]. / failed phone:m / failed spelling:hm',
  'gahr' => 'g.aw.r / [g^g].[a^oh]. / failed phone:r / failed spelling:hr',
  'gainesville' => 'g.ay.n.z/v.ih.l / [g^g].[ai^ay].[ne^n].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'gajda' => 'g.igh/d.eh / [g^g]. / failed phone:igh / failed spelling:aj',
  'gajewski' => 'g.igh/eh.f/s.k.ee / [g^g]. / failed phone:igh / failed spelling:aj',
  'galle' => 'g.ay.l / [g^g].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'gallucci' => 'g.aw/l.ue/ch.ee / [g^g].[a^aw]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'galluccio' => 'g.aw/l.ue/ch.ee/oh / [g^g].[a^aw]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'galus' => 'g.ah/l.ih.s / [g^g].[a^ah]/[l^l]. / failed phone:ih / failed spelling:us',
  'gambled' => 'g.ah.m/b.eh.l.d / [g^g].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'gambles' => 'g.ah.m/b.eh.l.z / [g^g].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'gambling' => 'g.ah.m/b.eh/l.ih.ng / [g^g].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'gamunde' => 'g.eh/m.ue.n.d / [g^g].[a^ah]/[m^m].[u^ue].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'gandhi' => 'g.aw.n/d.ee / [g^g].[a^aw].[n^n]/[d^d]. / failed phone:ee / failed spelling:hi',
  'gangl' => 'g.ah.ng/g.eh.l / [g^g].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:l',
  'ganske' => 'g.ah.n.s.k / [g^g].[a^ah].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'ganus' => 'g.ay/n.ih.s / [g^g].[a^ay]/[n^n]. / failed phone:ih / failed spelling:us',
  'garages' => 'g.er/aw/zh.ih.z / [g^g].[ar^er]/[a^aw]/ / failed phone:zh / failed spelling:ge',
  'garajda' => 'g.er/aw.zh/d.eh / [g^g].[ar^er]/[a^ah]. / failed phone:g / failed spelling:jd',
  'garbacz' => 'g.aw.r/b.eh.ch / [g^g].[a^oh].[r^r]/[b^b].[a^ah]. / failed phone:t / failed spelling:cz',
  'garbe' => 'g.aw.r.b / [g^g].[a^oh].[r^r].[b^b] / failed phone:b / failed spelling:be',
  'garbled' => 'g.aw.r/b.eh.l.d / [g^g].[a^oh].[r^r]/[b^b]. / failed phone:eh / failed spelling:le',
  'garcetti' => 'g.aw.r/ch.eh/t.ee / [g^g].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'garczynski' => 'g.er/ch.ih.n/s.k.ee / [g^g].[ar^er]/ / failed phone:t / failed spelling:cz',
  'garde' => 'g.aw.r.d / [g^g].[a^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'gardenia' => 'g.aw.r/d.ee/n.ye.eh / [g^g].[a^oh].[r^r]/[d^d].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ia',
  'gardenias' => 'g.aw.r/d.ee/n.ye.eh.z / [g^g].[a^oh].[r^r]/[d^d].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ia',
  'gardiner' => 'g.aw.r.d/n.er / [g^g].[a^oh].[r^r].[d^d]/ / failed phone:n / failed spelling:in',
  'gareau' => 'g.er/oh / [g^g].[ar^er]/ / failed phone:oh / failed spelling:ea',
  'gargiulo' => 'g.aw.r/j.ue/l.oh / [g^g].[a^oh].[r^r]/[g^j]. / failed phone:ue / failed spelling:iu',
  'garrigus' => 'g.aw/r.ee/g.ih.s / [g^g].[a^aw]/[rr^r].[i^ee]/[gu^g]. / failed phone:ih / failed spelling:s',
  'garske' => 'g.aw.r.s.k / [g^g].[a^oh].[r^r].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'gartzke' => 'g.aw.r.t.z.k / [g^g].[a^oh].[r^r].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'gasiorowski' => 'g.eh/s.ee/aw/r.aw.f/s.k.ee / [g^g].[a^ah]/[s^s].[i^ee]/[o^aw]/[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'gatx' => 'g.ah/t.eh.k.s / [g^g].[a^ah]/[t^t]. / failed phone:eh / failed spelling:x',
  'gatzke' => 'g.ah.t.z.k / [g^g].[a^ah].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'gaudin' => 'g.oh/d.ah.n / [g^g].[au^oh]/[d^d]. / failed phone:ah / failed spelling:in',
  'gauerke' => 'g.ow/er.k / [g^g].[au^aw]/[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'gaulden' => 'g.ow/d.eh.n / [g^g].[au^aw]/ / failed phone:d / failed spelling:ld',
  'gaulin' => 'g.oh/l.ah.n / [g^g].[au^oh]/[l^l]. / failed phone:ah / failed spelling:in',
  'gaulke' => 'g.aw.l.k / [g^g].[au^aw].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'gaulle' => 'g.aw.l / [g^g].[au^aw].[ll^l] / failed phone:l / failed spelling:ul',
  'gaultier' => 'g.aw.l/t.ee/ay / [g^g].[au^aw].[l^l]/[t^t].[i^ee]/[e^ay] / failed phone:ay / failed spelling:r',
  'gauthreaux' => 'g.oh/th.r.oh / [g^g].[au^oh]/[th^th].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'gautreaux' => 'g.oh/t.r.oh / [g^g].[au^oh]/[t^t].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'gauvin' => 'g.oh/v.ah.n / [g^g].[au^oh]/[v^v]. / failed phone:ah / failed spelling:in',
  'gawronski' => 'g.aw/v.r.aw.n/s.k.ee / [g^g].[a^aw]/ / failed phone:v / failed spelling:wr',
  'gaye' => 'g.ay / [g^g].[a^ay] / failed phone:ay / failed spelling:ay',
  'gayheart' => 'g.ay/h.aw.r.t / [g^g].[ay^ay]/[h^h]. / failed phone:oh / failed spelling:ea',
  'gazelle' => 'g.eh/z.eh.l / [g^g].[a^ah]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'gazzola' => 'g.aw.t/s.oh/l.eh / [g^g].[a^aw]. / failed phone:t / failed spelling:zz',
  'gdansk' => 'g.eh/d.ah.n.s.k / [g^g]. / failed phone:eh / failed spelling:da',
  'gearheart' => 'g.ih.r/h.aw.r.t / [ge^g].[a^ih].[r^r]/[h^h]. / failed phone:oh / failed spelling:ea',
  'gebhardt' => 'g.eh.b/h.aw.r.t / [g^g].[e^eh].[b^b]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'gebler' => 'g.eh/b.eh/l.er / [g^g].[e^eh]/[b^b]. / failed phone:eh / failed spelling:le',
  'gehl' => 'g.eh.l / [g^g].[e^eh]. / failed phone:l / failed spelling:hl',
  'gehlhausen' => 'g.eh.l/h.ow/z.eh.n / [g^g].[e^eh]. / failed phone:l / failed spelling:hl',
  'gehling' => 'g.eh/l.ih.ng / [g^g].[e^eh]/ / failed phone:l / failed spelling:hl',
  'gehm' => 'j.eh.m / [g^j].[e^eh]. / failed phone:m / failed spelling:hm',
  'gehman' => 'g.eh/m.eh.n / [g^g].[e^eh]/ / failed phone:m / failed spelling:hm',
  'gehrke' => 'j.air.k / [g^j].[ehr^air].[k^k] / failed phone:k / failed spelling:ke',
  'geiszler' => 'g.igh/s.l.er / [ge^g].[i^igh]/[s^s]. / failed phone:l / failed spelling:zl',
  'gejdenson' => 'g.ay/d.eh.n/s.eh.n / [g^g].[e^ay]/ / failed phone:d / failed spelling:jd',
  'gekko' => 'g.eh/k.oh / [g^g].[e^eh]/[k^k]. / failed phone:oh / failed spelling:ko',
  'gelette' => 'zh.ih/l.eh.t /  / failed phone:zh / failed spelling:ge',
  'gelineau' => 'zh.eh/l.ih/n.oh /  / failed phone:zh / failed spelling:ge',
  'gemme' => 'j.eh.m / [g^j].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'gen' => 'j.eh/n.er/eh.l / [g^j].[e^eh]/[n^n]. / failed phone:er / failed spelling:',
  'gendarme' => 'zh.aw.n/d.aw.r.m /  / failed phone:zh / failed spelling:ge',
  'gendreau' => 'zh.ih.n/d.r.oh /  / failed phone:zh / failed spelling:ge',
  'gendrisek' => 'j.eh/d.r.ih/s.eh.k / [g^j].[e^eh]/ / failed phone:d / failed spelling:nd',
  'genereux' => 'zh.eh/n.er/oh /  / failed phone:zh / failed spelling:ge',
  'gengler' => 'g.ih.ng/eh/l.er / [g^g].[e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'genial' => 'j.ee/n.ye.eh.l / [g^j].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ia',
  'geniere' => 'j.eh/n.ye.air / [g^j].[e^eh]/[n^n]. / failed phone:ye / failed spelling:ie',
  'genitalia' => 'j.eh/n.eh/t.ay/l.ye.eh / [g^j].[e^eh]/[n^n].[i^ih]/[t^t].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'genius' => 'j.ee/n.ye.eh.s / [g^j].[e^ee]/[n^n]. / failed phone:ue / failed spelling:iu',
  'geniuses' => 'j.ee/n.ye.eh/s.ih.z / [g^j].[e^ee]/[n^n]. / failed phone:ue / failed spelling:iu',
  'genossenschaftsbank' => 'g.eh/n.oh/s.eh.n/sh.ah.f.t.s/b.ah.ng.k / [g^g].[e^eh]/[n^n].[o^oh]/[ss^s].[e^eh].[n^n]/[sc^sh]. / failed phone:ah / failed spelling:ha',
  'genre' => 'zh.aw.n/r.eh /  / failed phone:zh / failed spelling:ge',
  'genres' => 'zh.aw.n/r.eh.z /  / failed phone:zh / failed spelling:ge',
  'genscher' => 'g.eh.n/sh.er / [g^g].[e^eh].[n^n]/[sc^sh]. / failed phone:er / failed spelling:he',
  'genske' => 'j.eh.n.s.k / [g^j].[e^eh].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'gensler' => 'g.eh.n/s.eh/l.er / [g^g].[e^eh].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'gentleman' => 'j.eh.n/t.eh.l/m.eh.n / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentlemanly' => 'j.eh.n/t.eh.l/m.eh.n/l.ee / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentlemen' => 'j.eh.n/t.eh.l/m.ih.n / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentleness' => 'j.eh.n/t.eh.l/n.eh.s / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentles' => 'j.eh.n/t.eh.l.z / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentlest' => 'j.eh.n/t.eh/l.eh.s.t / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentlewoman' => 'j.eh.n/t.eh.l/w.oo/m.eh.n / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'gentlewomen' => 'j.eh.n/t.eh.l/w.ih/m.eh.n / [g^j].[e^eh].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'genuine' => 'j.eh/n.ye.eh/w.eh.n / [g^j].[e^eh]/[n^n].[u^ue]/ / failed phone:w / failed spelling:in',
  'genuinely' => 'j.eh/n.ye.eh/w.eh.n/l.ee / [g^j].[e^eh]/[n^n].[u^ue]/ / failed phone:w / failed spelling:in',
  'genzyme' => 'j.eh.n/z.igh.m / [g^j].[e^eh].[n^n]/[z^z].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'geoghegan' => 'g.eh/h.ay/g.eh.n / [ge^g].[o^uh]/ / failed phone:h / failed spelling:gh',
  'georgienne' => 'j.aw.r/j.ee/eh.n / [ge^j].[o^oh].[r^r]/[g^j].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'georgiou' => 'j.aw.r/j.oh / [ge^j].[o^oh].[r^r]/[g^j]. / failed phone:oh / failed spelling:io',
  'georgopoulos' => 'j.aw.r/j.aw/p.eh/l.ih.s / [ge^j].[o^oh].[r^r]/[g^j].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'gephardt' => 'g.eh.p/h.aw.r.t / [g^g].[e^eh].[p^p]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'gerace' => 'j.er/aw/ch.ee / [g^j].[er^er]/[a^aw]/ / failed phone:t / failed spelling:ce',
  'geraci' => 'j.er/aw/ch.ee / [g^j].[er^er]/[a^aw]/ / failed phone:t / failed spelling:ci',
  'geraghty' => 'j.air/eh/t.ee / [g^j].[er^air]/[a^ah]/ / failed phone:t / failed spelling:gh',
  'gerais' => 'j.er/ay / [g^j].[er^er]/[a^ay] / failed phone:ay / failed spelling:ai',
  'gerashchenko' => 'g.eh/eh/sh.ay.ng/k.oh / [g^g].[e^eh]/ / failed phone:eh / failed spelling:ra',
  'gerbrandt' => 'g.er/b.r.ah.n.t / [ge^g].[r^er]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'gerdeman' => 'g.er.d/m.eh.n / [ge^g].[r^er].[d^d]/ / failed phone:m / failed spelling:em',
  'gerdes' => 'zh.er.d.z /  / failed phone:zh / failed spelling:ge',
  'gerding' => 'g.air/t.ih.ng / [g^g].[er^air]/ / failed phone:t / failed spelling:di',
  'gerety' => 'zh.air/ih/t.ee /  / failed phone:zh / failed spelling:ge',
  'gerhardt' => 'g.er/h.aw.r.t / [ge^g].[r^er]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'gericke' => 'j.air/ih.k / [g^j].[er^air]/[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'gerke' => 'j.er.k / [g^j].[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'gerleman' => 'g.aw/r.eh.l/m.eh.n / [ge^g]. / failed phone:aw / failed spelling:rl',
  'germaine' => 'zh.er/m.ay.n /  / failed phone:zh / failed spelling:ge',
  'germe' => 'j.er.m / [g^j].[er^er].[m^m] / failed phone:m / failed spelling:me',
  'gerome' => 'g.air/eh.m / [g^g].[er^air]/[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'geroux' => 'zh.er/ue /  / failed phone:zh / failed spelling:ge',
  'gersch' => 'g.er.sh / [ge^g].[r^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'gerszewski' => 'g.er/sh.eh.f/s.k.ee / [ge^g].[r^er]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'gertler' => 'g.er/t.eh/l.er / [ge^g].[r^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'gertsch' => 'g.er.ch / [g^g].[er^er].[t^t]. / failed phone:t / failed spelling:ts',
  'gervais' => 'zh.er/v.ay /  / failed phone:zh / failed spelling:ge',
  'geschke' => 'g.eh.sh.k / [g^g].[e^eh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'gesellschaft' => 'g.eh/s.eh.l/sh.ah.f.t / [g^g].[e^eh]/[s^s].[e^eh].[ll^l]/[sc^sh]. / failed phone:ah / failed spelling:ha',
  'geske' => 'j.eh.s.k / [g^j].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'gessler' => 'g.eh/s.eh/l.er / [g^g].[e^eh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'gettler' => 'g.eh/t.eh/l.er / [g^g].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'geurin' => 'zh.er/ah.n /  / failed phone:zh / failed spelling:ge',
  'geurts' => 'zh.er.t.s /  / failed phone:zh / failed spelling:ge',
  'gewgaws' => 'g.ee/g.aw.z / [g^g].[e^ee]/ / failed phone:g / failed spelling:wg',
  'gfeller' => 'g.eh/f.eh/l.er / [g^g]. / failed phone:eh / failed spelling:fe',
  'giacalone' => 'j.aw/k.aw/l.oh/n.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giacco' => 'j.aw/k.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giacinta' => 'j.aw/ch.ee.n/t.eh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giacobbe' => 'j.aw/k.oh/b.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giacomo' => 'j.aw/k.eh/m.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giaimo' => 'j.ay/m.oh / [g^j]. / failed phone:ay / failed spelling:ia',
  'giambalvo' => 'j.aw.m/b.aw.l/v.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giambra' => 'j.aw.m/b.r.eh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giambrone' => 'j.aw.m/b.r.oh/n.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giammarco' => 'j.aw/m.aw.r/k.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giampa' => 'j.aw.m/p.eh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giampaolo' => 'j.aw.m/p.ow/l.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giampietro' => 'j.aw.m/p.ee/t.r.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giancola' => 'j.aw.ng/k.oh/l.eh / [g^j]. / failed phone:aw / failed spelling:ia',
  'gianfrancesco' => 'j.aw.n/f.r.ah.n/ch.eh/s.k.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giangrande' => 'j.aw.n/g.r.ah.n/d.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giannattasio' => 'j.aw/n.aw/t.aw/s.ee/oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'gianni' => 'j.aw/n.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giannola' => 'j.aw/n.oh/l.eh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giannone' => 'j.aw/n.oh/n.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giannotti' => 'j.aw/n.oh/t.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'gianotti' => 'j.aw/n.oh/t.ee / [g^j]. / failed phone:aw / failed spelling:ia',
  'giaquinto' => 'j.aw/kw.ee.n/t.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giardina' => 'j.aw.r/d.ee/n.eh / [g^j]. / failed phone:oh / failed spelling:ia',
  'giardini' => 'j.er/d.ee/n.ee / [g^j]. / failed phone:er / failed spelling:ia',
  'giardino' => 'j.er/d.ee/n.oh / [g^j]. / failed phone:er / failed spelling:ia',
  'giarratano' => 'j.aw/r.eh/t.aw/n.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'giarrusso' => 'j.aw/r.ue/s.oh / [g^j]. / failed phone:aw / failed spelling:ia',
  'gibbard' => 'zh.ih/b.aw.r.d /  / failed phone:zh / failed spelling:gi',
  'gibeau' => 'zh.ih/b.oh /  / failed phone:zh / failed spelling:gi',
  'gibeault' => 'zh.ih/b.oh /  / failed phone:zh / failed spelling:gi',
  'gibler' => 'j.ih/b.eh/l.er / [g^j].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'gidget' => 'g.ih/j.eh.t / [g^g].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'giebler' => 'g.ee/b.eh/l.er / [g^g].[ie^ee]/[b^b]. / failed phone:eh / failed spelling:le',
  'gier' => 'j.ih.r / [g^j].[i^ih]. / failed phone:r / failed spelling:er',
  'giere' => 'j.ih.r / [g^j].[i^ih]. / failed phone:r / failed spelling:er',
  'gierhart' => 'g.ih.r/h.aw.r.t / [g^g].[i^ih]. / failed phone:r / failed spelling:er',
  'gierke' => 'j.ih.r.k / [g^j].[i^ih]. / failed phone:r / failed spelling:er',
  'gierman' => 'g.ih.r/m.eh.n / [g^g].[i^ih]. / failed phone:r / failed spelling:er',
  'giersch' => 'g.ih.r.sh / [g^g].[i^ih]. / failed phone:r / failed spelling:er',
  'giesecke' => 'g.ee/s.ih.k / [g^g].[ie^ee]/[s^s].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'gieseke' => 'g.ee/s.ih.k / [g^g].[ie^ee]/[s^s].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'gieske' => 'j.ee.s.k / [g^j].[ie^ee].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'giesler' => 'g.ee/s.eh/l.er / [g^g].[ie^ee]/[s^s]. / failed phone:eh / failed spelling:le',
  'giggled' => 'g.ih/g.eh.l.d / [g^g].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:le',
  'giggles' => 'g.ih/g.eh.l.z / [g^g].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:le',
  'giggling' => 'g.ih/g.eh/l.ih.ng / [g^g].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:li',
  'giggly' => 'g.ih/g.eh/l.ee / [g^g].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:ly',
  'gignoux' => 'g.ih/n.ue / [g^g].[i^ih]/[gn^n].[ou^ue] / failed phone:ue / failed spelling:ou',
  'gilkes' => 'g.ih.l.k.s / [g^g].[i^ih].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'gillard' => 'zh.ih/l.aw.r.d /  / failed phone:zh / failed spelling:gi',
  'gille' => 'g.igh.l / [g^g].[i^igh].[ll^l] / failed phone:l / failed spelling:ll',
  'gilles' => 'zh.ee.l /  / failed phone:zh / failed spelling:gi',
  'gilmour' => 'zh.ih.l/m.oo.r /  / failed phone:zh / failed spelling:gi',
  'gilyard' => 'zh.eh/l.ye.aw.r.d /  / failed phone:zh / failed spelling:gi',
  'ginghams' => 'g.ih.ng/eh.m.z / [g^g].[i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'gingles' => 'j.ih.ng/g.eh.l.z / [g^j].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'ginocchio' => 'j.ee/n.oh/k.ee/oh / [g^j].[i^ee]/[n^n].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'gioia' => 'j.oh/ye.eh / [g^j]. / failed phone:oh / failed spelling:io',
  'gionfriddo' => 'j.oh.n/f.r.ee/d.oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giordani' => 'j.aw.r/d.aw/n.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giordano' => 'j.aw.r/d.aw/n.oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giorgi' => 'j.aw.r/j.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giorgia' => 'j.aw.r/j.eh / [g^j]. / failed phone:oh / failed spelling:io',
  'giorgio' => 'j.aw.r/j.ee/oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giovanelli' => 'j.oh/v.aw/n.eh/l.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giovanetti' => 'j.oh/v.aw/n.eh/t.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giovannetti' => 'j.oh/v.aw/n.eh/t.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giovanniello' => 'j.oh/v.aw/n.ee/eh/l.oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giovannini' => 'j.oh/v.aw/n.ee/n.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giovannoni' => 'j.oh/v.aw/n.oh/n.ee / [g^j]. / failed phone:oh / failed spelling:io',
  'giovenco' => 'j.oh/v.eh.n/k.oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giovinazzo' => 'j.oh/v.ee/n.aw/z.oh / [g^j]. / failed phone:oh / failed spelling:io',
  'giraffe' => 'j.er/ah.f / [g^j].[ir^er]/[a^ah].[ff^f] / failed phone:f / failed spelling:ff',
  'giraffes' => 'j.er/ah.f.s / [g^j].[ir^er]/[a^ah].[ff^f]. / failed phone:s / failed spelling:es',
  'girardin' => 'zh.aw/r.aw.r/d.ah.n /  / failed phone:zh / failed spelling:gi',
  'girardot' => 'zh.aw/r.aw.r/d.oh /  / failed phone:zh / failed spelling:gi',
  'giraud' => 'zh.igh/r.oh /  / failed phone:zh / failed spelling:gi',
  'girdler' => 'g.er/d.eh/l.er / [g^g].[ir^er]/[d^d]. / failed phone:eh / failed spelling:le',
  'girod' => 'zh.er/aw.d /  / failed phone:zh / failed spelling:gi',
  'giroir' => 'zh.igh.r/w.aw.r /  / failed phone:zh / failed spelling:gi',
  'giron' => 'g.aw/r.eh.n / [g^g]. / failed phone:aw / failed spelling:ir',
  'girouard' => 'zh.igh/r.ue/er.d /  / failed phone:zh / failed spelling:gi',
  'giroux' => 'g.ih/r.ue / [g^g].[i^ih]/[r^r].[ou^ue] / failed phone:ue / failed spelling:ou',
  'gisclair' => 'zh.ih/s.k.l.air /  / failed phone:zh / failed spelling:gi',
  'giselle' => 'zh.ih/s.eh.l /  / failed phone:zh / failed spelling:gi',
  'gisler' => 'g.ih/s.eh/l.er / [g^g].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'gittleman' => 'g.ih/t.eh.l/m.eh.n / [g^g].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'giudice' => 'j.ue/d.ih/s.ee / [g^j]. / failed phone:ue / failed spelling:iu',
  'giudici' => 'j.ue/d.ih/ch.ee / [g^j]. / failed phone:ue / failed spelling:iu',
  'giuffre' => 'j.ue/f.r.ee / [g^j]. / failed phone:ue / failed spelling:iu',
  'giuffrida' => 'j.ue/f.r.ee/d.eh / [g^j]. / failed phone:ue / failed spelling:iu',
  'giuliani' => 'j.ue/l.ee/aw/n.ee / [g^j]. / failed phone:ue / failed spelling:iu',
  'giuliano' => 'j.ue/l.ee/aw/n.oh / [g^j]. / failed phone:ue / failed spelling:iu',
  'giulio' => 'j.ue/l.ee/oh / [g^j]. / failed phone:ue / failed spelling:iu',
  'giunta' => 'j.ue.n/t.eh / [g^j]. / failed phone:ue / failed spelling:iu',
  'giurescu' => 'j.ue/r.eh/s.k.ue / [g^j]. / failed phone:ue / failed spelling:iu',
  'giuseppe' => 'j.ih/s.eh/p.ee / [g^j].[i^ih]/ / failed phone:s / failed spelling:us',
  'giusti' => 'j.ue/s.t.ee / [g^j]. / failed phone:ue / failed spelling:iu',
  'giusto' => 'j.ue/s.t.oh / [g^j]. / failed phone:ue / failed spelling:iu',
  'gizzi' => 'j.ee.t/s.ee / [g^j].[i^ee]. / failed phone:t / failed spelling:zz',
  'gjelten' => 'j.eh.l/t.eh.n / [g^j]. / failed phone:eh / failed spelling:je',
  'gjerde' => 'j.er.d / [g^j]. / failed phone:er / failed spelling:je',
  'glaab' => 'g.l.aw.b / [g^g].[l^l].[a^aw]. / failed phone:b / failed spelling:ab',
  'gladieux' => 'g.l.ah/d.ee/oh / [g^g].[l^l].[a^ah]/[d^d].[ie^ee]/ / failed phone:oh / failed spelling:ux',
  'glanville' => 'g.l.ah.n/v.ih.l / [g^g].[l^l].[a^ah].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'glasgow' => 'g.l.ah/s.k.oh / [g^g].[l^l].[a^ah]/[s^s]. / failed phone:k / failed spelling:go',
  'glaude' => 'g.l.aw.d / [g^g].[l^l].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'glawe' => 'g.l.aw / [g^g].[l^l].[a^aw] / failed phone:aw / failed spelling:aw',
  'glenayre' => 'g.l.eh/n.air / [g^g].[l^l].[e^eh]/[n^n]. / failed phone:air / failed spelling:ay',
  'glenview' => 'g.l.eh.n/v.ye.ue / [g^g].[l^l].[e^eh].[n^n]/[v^v]. / failed phone:ue / failed spelling:ie',
  'glenville' => 'g.l.eh.n/v.ih.l / [g^g].[l^l].[e^eh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'glodowski' => 'g.l.eh/d.aw.f/s.k.ee / [g^g].[l^l].[o^uh]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'gloede' => 'g.l.oh.d / [g^g].[l^l].[o^oh].[ed^d] / failed phone:d / failed spelling:ed',
  'glogowski' => 'g.l.eh/g.aw.f/s.k.ee / [g^g].[l^l].[o^uh]/[g^g].[o^aw]. / failed phone:f / failed spelling:ws',
  'gloucester' => 'g.l.aw/s.t.er / [g^g].[l^l].[ou^aw]/[ce^s]. / failed phone:t / failed spelling:st',
  'glowacki' => 'g.l.ow/aw.t/s.k.ee / [g^g].[l^l].[ow^ow]/[a^aw]. / failed phone:t / failed spelling:ck',
  'glyndebourne' => 'g.l.ih.n.d/b.aw.r.n / [g^g].[l^l].[y^ih].[n^n].[d^d]/ / failed phone:b / failed spelling:eb',
  'gmbh' => 'g.eh.m / [g^g]. / failed phone:eh / failed spelling:mb',
  'gobain' => 'g.oh/b.ih.n / [g^g].[o^oh]/[b^b].[a^ih]. / failed phone:n / failed spelling:in',
  'gobbled' => 'g.aw/b.eh.l.d / [g^g].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'gobbledygook' => 'g.aw/b.eh.l/d.ee/g.oo.k / [g^g].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'gobblers' => 'g.aw/b.eh/l.er.z / [g^g].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'gobbling' => 'g.aw/b.eh/l.ih.ng / [g^g].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:li',
  'goblirsch' => 'g.aw/b.l.er.sh / [g^g].[o^aw]/[b^b].[l^l].[ir^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'gocke' => 'g.aw.k / [g^g].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'goddeau' => 'g.aw/d.oh / [g^g].[o^aw]/[dd^d]. / failed phone:oh / failed spelling:ea',
  'godlewski' => 'g.eh.d/l.eh.f/s.k.ee / [g^g].[o^uh].[d^d]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'godrej' => 'g.aw/d.r.ay / [g^g].[o^aw]/[d^d].[r^r].[e^ay] / failed phone:ay / failed spelling:ej',
  'goecke' => 'g.oh.k / [g^g].[oe^oh].[c^k] / failed phone:k / failed spelling:ec',
  'goedde' => 'g.oh.d / [g^g].[o^oh].[ed^d] / failed phone:d / failed spelling:ed',
  'goede' => 'g.oh.d / [g^g].[o^oh].[ed^d] / failed phone:d / failed spelling:ed',
  'goedecke' => 'g.oh/d.ih.k / [g^g].[o^oh]/[ed^d].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'goehring' => 'g.aw/r.ih.ng / [g^g].[o^aw]/ / failed phone:r / failed spelling:eh',
  'goeke' => 'g.oh.k / [g^g].[oe^oh].[k^k] / failed phone:k / failed spelling:ek',
  'goerke' => 'g.aw.r.k / [g^g].[oe^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'goetsch' => 'g.oh.ch / [g^g].[oe^oh].[t^t]. / failed phone:t / failed spelling:ts',
  'goette' => 'g.eh.t / [g^g].[o^uh]. / failed phone:t / failed spelling:et',
  'goettl' => 'g.oh/t.eh.l / [g^g].[oe^oh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'goettsch' => 'g.oh.t.ch / [g^g].[oe^oh].[t^t].[t^t]. / failed phone:t / failed spelling:ts',
  'goetz' => 'g.eh.t.s / [g^g].[o^uh]. / failed phone:t / failed spelling:et',
  'goggles' => 'g.aw/g.eh.l.z / [g^g].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:le',
  'gogh' => 'g.oh / [g^g].[o^oh] / failed phone:oh / failed spelling:og',
  'gohlke' => 'g.aw.k / [g^g].[o^aw]. / failed phone:k / failed spelling:hl',
  'golaszewski' => 'g.eh/l.eh/sh.eh.f/s.k.ee / [g^g].[o^uh]/[l^l].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'golde' => 'g.oh.l.d / [g^g].[o^oh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'goldschmid' => 'g.oh.l.d/sh.m.ih.d / [g^g].[o^oh].[l^l].[d^d]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'goldschmidt' => 'g.oh.l.d/sh.m.ih.t / [g^g].[o^oh].[l^l].[d^d]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'golembiewski' => 'g.eh/l.ih.m/b.ee/eh.f/s.k.ee / [g^g].[o^uh]/[l^l].[e^ih].[m^m]/[b^b].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'golle' => 'g.aw.l / [g^g].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'gondolier' => 'g.aw.n/d.eh/l.ih.r / [g^g].[o^aw].[n^n]/[d^d].[o^uh]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'gonorrhea' => 'g.aw/n.er/ee/eh / [g^g].[o^aw]/[n^n].[o^oh].[r^r]/ / failed phone:ee / failed spelling:rh',
  'goode' => 'g.oo.d / [g^g].[oo^oo].[d^d] / failed phone:d / failed spelling:od',
  'goodheart' => 'g.oo.d/h.aw.r.t / [g^g].[oo^oo].[d^d]/[h^h]. / failed phone:oh / failed spelling:ea',
  'goracke' => 'g.aw/r.eh.k / [g^g].[o^aw]/[r^r].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'gorczyca' => 'g.er/ch.ih/k.eh / [g^g].[o^oh].[r^r]/ / failed phone:t / failed spelling:cz',
  'gorczynski' => 'g.er/ch.ih.n/s.k.ee / [g^g].[o^oh].[r^r]/ / failed phone:t / failed spelling:cz',
  'gordeyev' => 'g.aw.r/d.igh/eh.v / [g^g].[o^oh].[r^r]/[d^d].[eye^igh]/ / failed phone:eh / failed spelling:v',
  'gorecki' => 'g.er/eh.t/s.k.ee / [g^g].[o^oh].[r^r]/[e^eh]. / failed phone:t / failed spelling:ck',
  'gosch' => 'g.aw.sh / [g^g].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'gosse' => 'g.aw.s / [g^g].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'gotaas' => 'g.aw/t.aw.s / [g^g].[o^aw]/[t^t].[a^aw]. / failed phone:s / failed spelling:as',
  'gothenburg' => 'g.oh/t.eh.n/b.er.g / [g^g].[o^oh]/[t^t]. / failed phone:eh / failed spelling:he',
  'gotsch' => 'g.aw.ch / [g^g].[o^aw].[t^t]. / failed phone:t / failed spelling:ts',
  'gotschal' => 'g.aw/ch.eh.l / [g^g].[o^aw]/[t^t].[sc^sh]. / failed phone:eh / failed spelling:ha',
  'gotschall' => 'g.aw/ch.eh.l / [g^g].[o^aw]/[t^t].[sc^sh]. / failed phone:eh / failed spelling:ha',
  'gotthardt' => 'g.aw/th.aw.r.t / [g^g].[o^aw]/ / failed phone:th / failed spelling:tt',
  'gottsch' => 'g.aw.ch / [g^g].[o^aw].[t^t]. / failed phone:t / failed spelling:tt',
  'gottschalk' => 'g.aw/ch.eh.k / [g^g].[o^aw]/[t^t].[t^sh]. / failed phone:eh / failed spelling:sc',
  'gottschalks' => 'g.aw/ch.eh.k.s / [g^g].[o^aw]/[t^t].[t^sh]. / failed phone:eh / failed spelling:sc',
  'gottschall' => 'g.aw/ch.eh.l / [g^g].[o^aw]/[t^t].[t^sh]. / failed phone:eh / failed spelling:sc',
  'goude' => 'g.ow.d / [g^g].[ou^ow].[d^d] / failed phone:d / failed spelling:de',
  'goudeau' => 'g.ue/d.oh / [g^g].[ou^ue]/[d^d]. / failed phone:oh / failed spelling:ea',
  'gougeon' => 'g.ow/j.ih.n / [g^g].[ou^ow]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'gouin' => 'g.w.ee.n / [g^g]. / failed phone:w / failed spelling:ou',
  'gourmet' => 'g.oo.r/m.ay / [g^g].[ou^oo].[r^r]/[m^m].[e^ay] / failed phone:ay / failed spelling:et',
  'gourmets' => 'g.oo.r/m.ay.z / [g^g].[ou^oo].[r^r]/[m^m].[e^ay]. / failed phone:z / failed spelling:ts',
  'government' => 'g.uh/v.er/m.eh.n.t / [g^g].[o^uh]/[ve^v].[r^er]/ / failed phone:m / failed spelling:nm',
  'governmental' => 'g.uh/v.er/m.eh.n/t.eh.l / [g^g].[o^uh]/[ve^v].[r^er]/ / failed phone:m / failed spelling:nm',
  'governmentally' => 'g.uh/v.er/m.eh.n/t.eh/l.ee / [g^g].[o^uh]/[ve^v].[r^er]/ / failed phone:m / failed spelling:nm',
  'governments' => 'g.uh/v.er/m.eh.n.t.s / [g^g].[o^uh]/[ve^v].[r^er]/ / failed phone:m / failed spelling:nm',
  'govpx' => 'g.uh.v/p.ee/eh.k.s / [g^g].[o^uh].[v^v]/[p^p]. / failed phone:ee / failed spelling:x',
  'grabbe' => 'g.r.ah.b / [g^g].[r^r].[a^ah].[bb^b] / failed phone:b / failed spelling:bb',
  'grabowski' => 'g.r.eh/b.aw.f/s.k.ee / [g^g].[r^r].[a^ah]/[b^b].[o^aw]. / failed phone:f / failed spelling:ws',
  'graci' => 'g.r.aw/ch.ee / [g^g].[r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'gracia' => 'g.r.aw/ch.eh / [g^g].[r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'graciano' => 'g.r.aw/ch.ee/aw/n.oh / [g^g].[r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'grackles' => 'g.r.ah/k.eh.l.z / [g^g].[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'graczyk' => 'g.r.aw/ch.ih.k / [g^g].[r^r].[a^aw]/ / failed phone:t / failed spelling:cz',
  'graduate' => 'g.r.ah/j.eh/w.ay.t / [g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'graduates' => 'g.r.ah/j.eh/w.ay.t.s / [g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'graduating' => 'g.r.ah/j.eh/w.ay/t.ih.ng / [g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'graeber' => 'g.r.eh/b.er / [g^g].[r^r].[a^ah]/ / failed phone:b / failed spelling:eb',
  'graebner' => 'g.r.eh.b/n.er / [g^g].[r^r].[a^ah]. / failed phone:b / failed spelling:eb',
  'graef' => 'g.r.ee.f / [g^g].[r^r]. / failed phone:ee / failed spelling:ae',
  'graefe' => 'g.r.ee.f / [g^g].[r^r]. / failed phone:ee / failed spelling:ae',
  'graeff' => 'g.r.ee.f / [g^g].[r^r]. / failed phone:ee / failed spelling:ae',
  'graeme' => 'g.r.ay.m / [g^g].[r^r].[a^ay]. / failed phone:m / failed spelling:em',
  'graessle' => 'g.r.eh/s.eh.l / [g^g].[r^r].[a^ah]/ / failed phone:s / failed spelling:es',
  'graetz' => 'g.r.ee.t.s / [g^g].[r^r]. / failed phone:ee / failed spelling:ae',
  'graffius' => 'g.r.ah/f.ee/ih.s / [g^g].[r^r].[a^ah]/[ff^f].[i^ee]/ / failed phone:ih / failed spelling:us',
  'graham' => 'g.r.ay/eh.m / [g^g].[r^r].[a^ay]/ / failed phone:eh / failed spelling:ha',
  'grahams' => 'g.r.ah.m.z / [g^g].[r^r].[a^ah]. / failed phone:m / failed spelling:ha',
  'grahl' => 'g.r.aw.l / [g^g].[r^r].[a^aw]. / failed phone:l / failed spelling:hl',
  'grajeda' => 'g.r.igh/ee/d.eh / [g^g].[r^r]. / failed phone:igh / failed spelling:aj',
  'grandchildren' => 'g.r.ah.n/ch.ih.l/d.r.eh.n / [g^g].[r^r].[a^ah].[n^n]/ / failed phone:t / failed spelling:dc',
  'grande' => 'g.r.ah.n.d / [g^g].[r^r].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'grandma' => 'g.r.ah/m.aw / [g^g].[r^r].[a^ah]/ / failed phone:m / failed spelling:nd',
  'grandt' => 'g.r.ah.n.t / [g^g].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'grandview' => 'g.r.ah.n.d/v.ye.ue / [g^g].[r^r].[a^ah].[n^n].[d^d]/[v^v]. / failed phone:ue / failed spelling:ie',
  'granieri' => 'g.r.aw/n.ih/r.ee / [g^g].[r^r].[a^aw]/[n^n].[i^ih]/ / failed phone:r / failed spelling:er',
  'granville' => 'g.r.ah.n/v.ih.l / [g^g].[r^r].[a^ah].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'granz' => 'g.r.ah.n.t.s / [g^g].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:z',
  'grappled' => 'g.r.ah/p.eh.l.d / [g^g].[r^r].[a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'grapples' => 'g.r.ah/p.eh.l.z / [g^g].[r^r].[a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'grasse' => 'g.r.ah.s / [g^g].[r^r].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'grassl' => 'g.r.ah/s.eh.l / [g^g].[r^r].[a^ah]/[ss^s]. / failed phone:eh / failed spelling:l',
  'graue' => 'g.r.ow / [g^g].[r^r].[au^aw] / failed phone:ow / failed spelling:au',
  'graunke' => 'g.r.aw.ng.k / [g^g].[r^r].[au^aw].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'gravelle' => 'g.r.eh/v.eh.l / [g^g].[r^r].[a^ah]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'gravitationally' => 'g.r.ah/v.eh/t.ay/sh.n.eh/l.ee / [g^g].[r^r].[a^ah]/[v^v].[i^ih]/[t^t].[a^ay]/[t^sh]. / failed phone:n / failed spelling:io',
  'gravois' => 'g.r.eh.v/w.aw / [g^g].[r^r].[a^ah].[v^v]/ / failed phone:w / failed spelling:oi',
  'grawe' => 'g.r.aw / [g^g].[r^r].[a^aw] / failed phone:aw / failed spelling:aw',
  'graye' => 'g.r.ay / [g^g].[r^r].[a^ay] / failed phone:ay / failed spelling:ay',
  'graziano' => 'g.r.aw.t/s.ee/aw/n.oh / [g^g].[r^r].[a^aw]. / failed phone:t / failed spelling:zi',
  'greenham' => 'g.r.ee/n.eh.m / [g^g].[r^r].[ee^ee]/[n^n]. / failed phone:eh / failed spelling:ha',
  'greensboro' => 'g.r.ee.n.z/b.er/r.oh / [g^g].[r^r].[ee^ee].[n^n].[s^z]/[b^b].[o^oh].[r^r]/ / failed phone:r / failed spelling:o',
  'greenslade' => 'g.r.ee.n/s.l.eh.d / [g^g].[r^r].[ee^ee].[n^n]/[s^s].[l^l].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'greenville' => 'g.r.ee.n/v.ih.l / [g^g].[r^r].[ee^ee].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'greenwich' => 'g.r.eh/n.ih.ch / [g^g].[re^r].[e^eh]/[n^n]. / failed phone:ih / failed spelling:wi',
  'gregoire' => 'g.r.ih/g.w.aw.r / [g^g].[r^r].[e^ih]/[g^g]. / failed phone:w / failed spelling:oi',
  'greinke' => 'g.r.ay.ng.k / [g^g].[r^r].[ei^ay].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'grelle' => 'g.r.eh.l / [g^g].[r^r].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'grenouille' => 'g.r.eh/n.ue/ee / [g^g].[r^r].[e^eh]/[n^n].[ou^ue]/[i^ee] / failed phone:ee / failed spelling:il',
  'greubel' => 'g.r.oy/b.eh.l / [g^g].[r^r]. / failed phone:oy / failed spelling:eu',
  'greulich' => 'g.r.oy/l.ih.k / [g^g].[r^r]. / failed phone:oy / failed spelling:eu',
  'greunke' => 'g.r.ue.ng.k / [g^g].[r^r].[eu^ue].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'grewe' => 'g.r.ue / [g^g].[r^r].[ew^ue] / failed phone:ue / failed spelling:ew',
  'gribbles' => 'g.r.ih/b.eh.l.z / [g^g].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'grieme' => 'g.r.ee.m / [g^g].[r^r].[ie^ee].[m^m] / failed phone:m / failed spelling:me',
  'grierson' => 'g.r.ih.r/s.eh.n / [g^g].[r^r].[i^ih]. / failed phone:r / failed spelling:er',
  'grijalva' => 'g.r.ee/ye.aw.l/v.eh / [g^g].[r^r].[i^ee]/ / failed phone:ye / failed spelling:ja',
  'grille' => 'g.r.ih.l / [g^g].[r^r].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'grimme' => 'g.r.ih.m / [g^g].[r^r].[i^ih].[m^m] / failed phone:m / failed spelling:mm',
  'grinde' => 'g.r.ih.n.d / [g^g].[r^r].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'grismer' => 'g.er/ih/z.eh/m.er / [g^g].[r^er]/[i^ih]/[s^z]. / failed phone:eh / failed spelling:me',
  'grizzled' => 'g.r.ih/z.eh.l.d / [g^g].[r^r].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:le',
  'grochowski' => 'g.r.eh/h.aw.f/s.k.ee / [g^g].[r^r].[o^uh]/ / failed phone:h / failed spelling:ch',
  'grondahl' => 'g.r.aw.n/d.aw.l / [g^g].[r^r].[o^aw].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'gronowski' => 'g.r.eh/n.aw.f/s.k.ee / [g^g].[r^r].[o^uh]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'groome' => 'g.r.ue.m / [g^g].[r^r].[oo^ue].[m^m] / failed phone:m / failed spelling:me',
  'grosch' => 'g.r.aw.sh / [g^g].[r^r].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'grosjean' => 'g.r.eh.s/zh.ee.n / [g^g].[r^r].[o^uh].[s^s]/ / failed phone:zh / failed spelling:je',
  'grosse' => 'g.r.aw.s / [g^g].[r^r].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'grosshans' => 'g.r.aw/sh.eh.n.z / [g^g].[r^r].[o^aw]/[s^sh]. / failed phone:eh / failed spelling:sh',
  'grosvenor' => 'g.r.oh.v/n.er / [g^g].[r^r].[o^oh]. / failed phone:v / failed spelling:sv',
  'grosz' => 'g.r.oh.s / [g^g].[r^r].[o^oh].[s^s] / failed phone:s / failed spelling:sz',
  'grudges' => 'g.r.uh/j.ih.z / [g^g].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'grudging' => 'g.r.uh/j.ih.ng / [g^g].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'grudgingly' => 'g.r.uh/j.ih.ng/l.ee / [g^g].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'grudzinski' => 'g.r.eh/j.ih.n/s.k.ee / [g^g].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'gruesome' => 'g.r.ue/s.eh.m / [g^g].[r^r].[ue^ue]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'gruhlke' => 'g.r.ue.l.k / [g^g].[r^r].[u^ue]. / failed phone:l / failed spelling:hl',
  'grulke' => 'g.r.uh.l.k / [g^g].[r^r].[u^uh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'grumbled' => 'g.r.uh.m/b.eh.l.d / [g^g].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'grumbles' => 'g.r.uh.m/b.eh.l.z / [g^g].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'grumbling' => 'g.r.uh.m/b.eh/l.ih.ng / [g^g].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'grumblings' => 'g.r.uh.m/b.eh/l.ih.ng.z / [g^g].[r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'gruszka' => 'g.r.uh.sh/k.eh / [g^g].[r^r].[u^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'grzywacz' => 'g.er/z.ih/v.ah.ch / [g^g].[r^er]/[z^z].[y^ih]/ / failed phone:v / failed spelling:wa',
  'gschwind' => 'g.eh/sh.w.igh.n.d / [g^g]. / failed phone:eh / failed spelling:sc',
  'gsell' => 'g.eh/s.eh.l / [g^g]. / failed phone:eh / failed spelling:se',
  'gtech' => 'g.eh/t.eh.k / [g^g]. / failed phone:eh / failed spelling:te',
  'guadalajara' => 'g.w.aw/d.uh/l.eh/h.aw/r.eh / [g^g].[u^w].[a^aw]/[d^d].[a^uh]/[l^l].[a^ah]/ / failed phone:h / failed spelling:ja',
  'guajardo' => 'g.w.aw/ye.aw.r/d.oh / [g^g].[u^w].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'gualtieri' => 'g.aw.l/t.ih/r.ee / [gu^g].[a^aw].[l^l]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'guangzhou' => 'g.w.ah.ng/z.ue / [g^g].[u^w].[a^ah].[ng^ng]/[z^z]. / failed phone:ue / failed spelling:ho',
  'guarnaccia' => 'g.aw.r/n.ah/ch.ee/eh / [gu^g].[a^oh].[r^r]/[n^n].[a^ah]/ / failed phone:t / failed spelling:cc',
  'guarnieri' => 'g.aw.r/n.ih/r.ee / [gu^g].[a^oh].[r^r]/[n^n].[i^ih]/ / failed phone:r / failed spelling:er',
  'guasch' => 'g.w.ah.sh / [g^g].[u^w].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'guayabera' => 'g.w.igh/eh/b.air/eh / [g^g].[u^w]. / failed phone:igh / failed spelling:ay',
  'gubler' => 'g.ye.ue/b.eh/l.er / [g^g].[u^ue]/[b^b]. / failed phone:eh / failed spelling:le',
  'gucci' => 'g.ue/ch.ee / [g^g].[u^ue]/ / failed phone:t / failed spelling:cc',
  'gucciardo' => 'g.ue/ch.aw.r/d.oh / [g^g].[u^ue]/ / failed phone:t / failed spelling:cc',
  'guccio' => 'g.ue/ch.ee/oh / [g^g].[u^ue]/ / failed phone:t / failed spelling:cc',
  'guccione' => 'g.ue.k/ch.oh/n.ee / [g^g].[u^ue].[cc^k]/ / failed phone:t / failed spelling:io',
  'gucwa' => 'g.uh/kw.eh / [g^g].[u^uh]/ / failed phone:kw / failed spelling:cw',
  'gudgel' => 'g.uh/j.eh.l / [g^g].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'guerre' => 'g.air / [gu^g].[er^air] / failed phone:air / failed spelling:rr',
  'guerrieri' => 'g.er/ih/r.ee / [gu^g].[err^er]/[i^ih]/ / failed phone:r / failed spelling:er',
  'guerriero' => 'g.er/ih/r.oh / [gu^g].[err^er]/[i^ih]/ / failed phone:r / failed spelling:er',
  'guettler' => 'g.eh/t.eh/l.er / [gu^g].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'gugliuzza' => 'g.ue/g.l.ee/ue.t/s.eh / [g^g].[u^ue]/[g^g].[l^l].[i^ee]/[u^ue]. / failed phone:t / failed spelling:zz',
  'guhl' => 'g.uh.l / [g^g].[u^uh]. / failed phone:l / failed spelling:hl',
  'guilbault' => 'g.ih.l/b.oh / [gu^g].[i^ih].[l^l]/[b^b].[a^oh] / failed phone:oh / failed spelling:au',
  'guilbeau' => 'g.ih.l/b.oh / [gu^g].[i^ih].[l^l]/[b^b]. / failed phone:oh / failed spelling:ea',
  'guilbeault' => 'g.ih.l/b.oh / [gu^g].[i^ih].[l^l]/[b^b]. / failed phone:oh / failed spelling:ea',
  'guilbeaux' => 'g.ih.l/b.oh / [gu^g].[i^ih].[l^l]/[b^b]. / failed phone:oh / failed spelling:ea',
  'guillaume' => 'g.ih/l.ow.m / [gu^g].[i^ih]/[ll^l].[au^aw].[m^m] / failed phone:m / failed spelling:me',
  'guillermo' => 'g.w.ih/l.ye.air/m.oh / [g^g].[u^w].[i^ih]/[ll^l]. / failed phone:ye / failed spelling:er',
  'guillot' => 'g.ih/l.oh / [gu^g].[i^ih]/[ll^l].[o^oh] / failed phone:oh / failed spelling:ot',
  'guinier' => 'g.w.ih/n.ih.r / [g^g].[u^w].[i^ih]/[n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'guitierrez' => 'g.w.ee/t.ih/r.eh.z / [g^g].[u^w].[i^ee]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'gulbuddin' => 'g.uh/b.ue/d.ih.n / [g^g].[u^uh]/ / failed phone:b / failed spelling:lb',
  'gumaer' => 'g.uh/m.ow/er / [g^g].[u^uh]/[m^m]. / failed phone:ow / failed spelling:ae',
  'gumshoe' => 'g.uh.m/sh.ue / [g^g].[u^uh].[m^m]/[sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'gurganious' => 'g.er/g.eh/n.ee/ih.s / [gu^g].[r^er]/[g^g].[a^ah]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:ou',
  'gurganus' => 'g.er/g.eh/n.ih.s / [gu^g].[r^er]/[g^g].[a^ah]/[n^n]. / failed phone:ih / failed spelling:us',
  'gurgling' => 'g.er/g.eh/l.ih.ng / [gu^g].[r^er]/[g^g]. / failed phone:eh / failed spelling:li',
  'gurtler' => 'g.er/t.eh/l.er / [gu^g].[r^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'gusler' => 'g.uh/s.eh/l.er / [g^g].[u^uh]/[s^s]. / failed phone:eh / failed spelling:le',
  'gustav' => 'g.oo/s.t.aw.f / [g^g].[u^oo]/[s^s].[t^t].[a^aw]. / failed phone:f / failed spelling:v',
  'gutierez' => 'g.ue/t.ih/r.eh.z / [g^g].[u^ue]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'gutierres' => 'g.ue/t.ye.air/eh.z / [g^g].[u^ue]/[t^t]. / failed phone:ye / failed spelling:ie',
  'gutierrez' => 'g.ue/t.ye.air/eh.z / [g^g].[u^ue]/[t^t]. / failed phone:ye / failed spelling:ie',
  'gutkowski' => 'g.eh.t/k.aw.f/s.k.ee / [g^g].[u^uh].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'gutowski' => 'g.eh/t.aw.f/s.k.ee / [g^g].[u^uh]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'guzowski' => 'g.eh/z.aw.f/s.k.ee / [g^g].[u^uh]/[z^z].[o^aw]. / failed phone:f / failed spelling:ws',
  'guzzardo' => 'g.ue.t/s.aw.r/d.oh / [g^g].[u^ue]. / failed phone:t / failed spelling:zz',
  'guzzetta' => 'g.ue.t/s.eh/t.eh / [g^g].[u^ue]. / failed phone:t / failed spelling:zz',
  'guzzi' => 'g.ue.t/s.ee / [g^g].[u^ue]. / failed phone:t / failed spelling:zz',
  'guzzlers' => 'g.uh/z.eh/l.er.z / [g^g].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'guzzling' => 'g.uh/z.eh/l.ih.ng / [g^g].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:li',
  'gvaryahu' => 'g.eh/v.air/ye.aw/h.ue / [g^g]. / failed phone:eh / failed spelling:va',
  'gwynne' => 'g.w.ih.n / [g^g].[w^w].[y^ih].[n^n] / failed phone:n / failed spelling:nn',
  'gyi' => 'g.ee / [g^g].[y^ee] / failed phone:ee / failed spelling:yi',
  'h' => 'ay.ch /  / failed phone:ay / failed spelling:h',
  'haab' => 'h.aw.b / [h^h].[a^aw]. / failed phone:b / failed spelling:ab',
  'haack' => 'h.aw.k / [h^h].[a^aw]. / failed phone:k / failed spelling:ac',
  'haacke' => 'h.aw.k / [h^h].[a^aw]. / failed phone:k / failed spelling:ac',
  'haaf' => 'h.aw.f / [h^h].[a^aw]. / failed phone:f / failed spelling:af',
  'haag' => 'h.aw.g / [h^h].[a^aw]. / failed phone:g / failed spelling:ag',
  'haagen' => 'h.aw/g.eh.n / [h^h].[a^aw]/ / failed phone:g / failed spelling:ag',
  'haagenson' => 'h.aw/g.ih.n/s.eh.n / [h^h].[a^aw]/ / failed phone:g / failed spelling:ag',
  'haak' => 'h.aw.k / [h^h].[a^aw]. / failed phone:k / failed spelling:ak',
  'haake' => 'h.aw.k / [h^h].[a^aw]. / failed phone:k / failed spelling:ak',
  'haakenson' => 'h.aw/k.ih.n/s.eh.n / [h^h].[a^aw]/ / failed phone:k / failed spelling:ak',
  'haan' => 'h.aw.n / [h^h].[a^aw]. / failed phone:n / failed spelling:an',
  'haapala' => 'h.aw/p.aw/l.eh / [h^h].[a^aw]/ / failed phone:p / failed spelling:ap',
  'haar' => 'h.aw.r / [h^h].[a^oh]. / failed phone:r / failed spelling:ar',
  'haas' => 'h.aw.s / [h^h].[a^aw]. / failed phone:s / failed spelling:as',
  'haase' => 'h.aw.s / [h^h].[a^aw]. / failed phone:s / failed spelling:as',
  'haass' => 'h.aw.s / [h^h].[a^aw]. / failed phone:s / failed spelling:as',
  'haavelmo' => 'h.aw/v.eh.l/m.oh / [h^h].[a^aw]/ / failed phone:v / failed spelling:av',
  'habermehl' => 'h.ah/b.er/m.eh.l / [h^h].[a^ah]/[b^b].[er^er]/[m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'habsburg' => 'h.ah.p.s/b.er.g / [h^h].[a^ah]. / failed phone:p / failed spelling:bs',
  'hacke' => 'h.ah.k / [h^h].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'hackl' => 'h.ah/k.eh.l / [h^h].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hackleman' => 'h.ah/k.eh.l/m.eh.n / [h^h].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hackler' => 'h.ah/k.eh/l.er / [h^h].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hackles' => 'h.ah/k.eh.l.z / [h^h].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hackworth' => 'h.ah/kw.er.th / [h^h].[a^ah]/[ck^kw]. / failed phone:er / failed spelling:wo',
  'hadleigh' => 'h.ah.d/l.eh / [h^h].[a^ah].[d^d]/[le^l].[i^ih] / failed phone:eh / failed spelling:ig',
  'hadler' => 'h.ay/d.eh/l.er / [h^h].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'haeberle' => 'h.eh/b.er/eh.l / [h^h].[a^ah]/ / failed phone:b / failed spelling:eb',
  'haecker' => 'h.eh/k.er / [h^h].[a^ah]/ / failed phone:k / failed spelling:ec',
  'haefele' => 'h.eh/f.eh.l / [h^h].[a^ah]/ / failed phone:f / failed spelling:ef',
  'haeffner' => 'h.eh.f/n.er / [h^h].[a^ah]. / failed phone:f / failed spelling:ef',
  'haefner' => 'h.eh.f/n.er / [h^h].[a^ah]. / failed phone:f / failed spelling:ef',
  'haegele' => 'h.eh/g.eh.l / [h^h].[a^ah]/ / failed phone:g / failed spelling:eg',
  'haeger' => 'h.eh/g.er / [h^h].[a^ah]/ / failed phone:g / failed spelling:eg',
  'haen' => 'h.ee.n / [h^h]. / failed phone:ee / failed spelling:ae',
  'haenel' => 'h.eh/n.eh.l / [h^h].[a^ah]/ / failed phone:n / failed spelling:en',
  'haese' => 'h.ee.s / [h^h]. / failed phone:ee / failed spelling:ae',
  'haessly' => 'h.ah/s.l.ee / [h^h].[a^ah]/ / failed phone:s / failed spelling:es',
  'haeussler' => 'h.ow/s.l.er / [h^h]. / failed phone:ow / failed spelling:ae',
  'hagge' => 'h.ah.g / [h^h].[a^ah].[gg^g] / failed phone:g / failed spelling:gg',
  'haggled' => 'h.ah/g.eh.l.d / [h^h].[a^ah]/[gg^g]. / failed phone:eh / failed spelling:le',
  'haggling' => 'h.ah/g.eh/l.ih.ng / [h^h].[a^ah]/[gg^g]. / failed phone:eh / failed spelling:li',
  'hah' => 'h.aw / [h^h].[a^aw] / failed phone:aw / failed spelling:ah',
  'hahl' => 'h.aw.l / [h^h].[a^aw]. / failed phone:l / failed spelling:hl',
  'hahm' => 'h.ah.m / [h^h].[a^ah]. / failed phone:m / failed spelling:hm',
  'hahne' => 'h.ay.n / [h^h].[a^ay].[hn^n] / failed phone:n / failed spelling:hn',
  'hahs' => 'h.aw.s / [h^h].[a^aw]. / failed phone:s / failed spelling:hs',
  'hairr' => 'h.air / [h^h].[air^air] / failed phone:air / failed spelling:ai',
  'hajdu' => 'h.aw.ye/d.ue / [h^h].[a^aw]. / failed phone:ye / failed spelling:jd',
  'hajduk' => 'h.igh/d.eh.k / [h^h]. / failed phone:igh / failed spelling:aj',
  'hajek' => 'h.igh/eh.k / [h^h]. / failed phone:igh / failed spelling:aj',
  'hajj' => 'h.ah.j / [h^h].[a^ah].[j^j] / failed phone:j / failed spelling:jj',
  'hajjar' => 'h.aw/ye.aw.r / [h^h].[a^aw]/ / failed phone:ye / failed spelling:jj',
  'hakko' => 'h.ah/k.oh / [h^h].[a^ah]/[k^k]. / failed phone:oh / failed spelling:ko',
  'halasz' => 'h.aw/l.eh.sh / [h^h].[a^aw]/[l^l].[a^ah].[s^sh] / failed phone:sh / failed spelling:sz',
  'halberstadt' => 'h.ah.l/b.er.sh/t.ah.t / [h^h].[a^ah].[l^l]/[b^b].[er^er].[s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'haldeman' => 'h.ay.l.d/m.eh.n / [h^h].[a^ay].[l^l].[d^d]/ / failed phone:m / failed spelling:em',
  'halfhearted' => 'h.ah.f/h.aw.r/t.ih.d / [h^h].[a^ah].[lf^f]/[h^h]. / failed phone:oh / failed spelling:ea',
  'hallbauer' => 'h.aw.l/b.ow.r / [h^h].[a^aw].[ll^l]/[b^b].[au^aw]. / failed phone:r / failed spelling:er',
  'halle' => 'h.ah.l / [h^h].[a^ah].[ll^l] / failed phone:l / failed spelling:ll',
  'hallelujah' => 'h.ah/l.eh/l.ue/ye.eh / [h^h].[a^ah]/[ll^l].[e^eh]/[l^l].[u^ue]/ / failed phone:ue / failed spelling:ja',
  'halve' => 'h.ah.v / [h^h].[a^ah]. / failed phone:v / failed spelling:lv',
  'halved' => 'h.ah.v.d / [h^h].[a^ah]. / failed phone:v / failed spelling:lv',
  'halves' => 'h.ah.v.z / [h^h].[a^ah]. / failed phone:v / failed spelling:lv',
  'halving' => 'h.ah/v.ih.ng / [h^h].[a^ah]/ / failed phone:v / failed spelling:lv',
  'hamblen' => 'h.ah.m/b.eh/l.eh.n / [h^h].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'hamler' => 'h.ah/m.eh/l.er / [h^h].[a^ah]/[m^m]. / failed phone:eh / failed spelling:le',
  'hamme' => 'h.ah.m / [h^h].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'hammerschmidt' => 'h.ah/m.er/sh.m.ih.t / [h^h].[a^ah]/[mm^m].[er^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'hampshire' => 'h.ah.m.p/sh.er / [h^h].[a^ah].[m^m].[p^p]/[sh^sh].[ir^er] / failed phone:er / failed spelling:hi',
  'hamtramck' => 'h.ah.m/t.r.ah/m.ih.k / [h^h].[a^ah].[m^m]/[t^t].[r^r].[a^ah]/[m^m]. / failed phone:ih / failed spelling:ck',
  'handkerchief' => 'h.ah.ng/k.er/ch.ih.f / [h^h].[a^ah].[n^ng]/ / failed phone:k / failed spelling:dk',
  'handkerchiefs' => 'h.ah.ng/k.er/ch.eh.f.s / [h^h].[a^ah].[n^ng]/ / failed phone:k / failed spelling:dk',
  'handlebars' => 'h.ah.n/d.eh.l/b.aw.r.z / [h^h].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'handled' => 'h.ah.n/d.eh.l.d / [h^h].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'handles' => 'h.ah.n/d.eh.l.z / [h^h].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'handsome' => 'h.ah.n/s.eh.m / [h^h].[a^ah].[n^n]/ / failed phone:s / failed spelling:ds',
  'handsomely' => 'h.ah.n/s.eh.m/l.ee / [h^h].[a^ah].[n^n]/ / failed phone:s / failed spelling:ds',
  'hanisch' => 'h.ah/n.ih.sh / [h^h].[a^ah]/[n^n].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hanke' => 'h.ah.ng.k / [h^h].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'hankes' => 'h.ah.ng.k.s / [h^h].[a^ah].[n^ng].[k^k]. / failed phone:s / failed spelling:es',
  'hanneman' => 'h.ah.n/m.eh.n / [h^h].[a^ah].[n^n]/ / failed phone:m / failed spelling:ne',
  'hannemann' => 'h.ah.n/m.eh.n / [h^h].[a^ah].[n^n]/ / failed phone:m / failed spelling:ne',
  'hansche' => 'h.ah.n/sh.ee / [h^h].[a^ah].[n^n]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'hanukkah' => 'h.aw/n.eh/k.eh / [h^h].[a^aw]/[n^n].[u^uh]/[k^k]. / failed phone:eh / failed spelling:ka',
  'hanukkahs' => 'h.aw/n.eh/k.eh.z / [h^h].[a^aw]/[n^n].[u^uh]/[k^k]. / failed phone:eh / failed spelling:ka',
  'hanus' => 'h.ay/n.ih.s / [h^h].[a^ay]/[n^n]. / failed phone:ih / failed spelling:us',
  'hao' => 'h.ow / [h^h]. / failed phone:ow / failed spelling:ao',
  'haq' => 'h.ah.k / [h^h].[a^ah]. / failed phone:k / failed spelling:q',
  'haraszti' => 'h.er/ah/s.t.ee / [h^h].[ar^er]/[a^ah]/[s^s]. / failed phone:t / failed spelling:zt',
  'harclerode' => 'h.aw.r/k.eh/l.er/oh.d / [h^h].[a^oh].[r^r]/[c^k]. / failed phone:eh / failed spelling:le',
  'hardebeck' => 'h.aw.r.d/b.eh.k / [h^h].[a^oh].[r^r].[d^d]/ / failed phone:b / failed spelling:eb',
  'hardeman' => 'h.aw.r.d/m.eh.n / [h^h].[a^oh].[r^r].[d^d]/ / failed phone:m / failed spelling:em',
  'hardt' => 'h.aw.r.t / [h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'hardtke' => 'h.aw.r.d/k.ee / [h^h].[a^oh].[r^r].[d^d]/ / failed phone:k / failed spelling:tk',
  'hardwicke' => 'h.aw.r/d.w.ih.k / [h^h].[a^oh].[r^r]/[d^d].[w^w].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'harju' => 'h.aw.r/ye.ue / [h^h].[a^oh].[r^r]/ / failed phone:ue / failed spelling:ju',
  'harke' => 'h.aw.r.k / [h^h].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'harleman' => 'h.aw/r.eh.l/m.eh.n / [h^h].[a^aw]/[r^r]. / failed phone:eh / failed spelling:le',
  'harleysville' => 'h.aw.r/l.ee.z/v.ih.l / [h^h].[a^oh].[r^r]/[le^l].[y^ee].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'harnisch' => 'h.aw.r/n.ih.sh / [h^h].[a^oh].[r^r]/[n^n].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'harnischfeger' => 'h.aw.r/n.ih.sh/f.eh/g.er / [h^h].[a^oh].[r^r]/[n^n].[i^ih].[sc^sh]/ / failed phone:f / failed spelling:hf',
  'harnois' => 'h.aw.r.n/w.aw / [h^h].[a^oh].[r^r].[n^n]/ / failed phone:w / failed spelling:oi',
  'harpin' => 'h.aw.r/p.ah.n / [h^h].[a^oh].[r^r]/[p^p]. / failed phone:ah / failed spelling:in',
  'harre' => 'h.ah.r / [h^h].[a^ah].[r^r] / failed phone:r / failed spelling:rr',
  'harsch' => 'h.aw.r.sh / [h^h].[a^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hartkopf' => 'h.aw.r.t/k.aw.f / [h^h].[a^oh].[r^r].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:pf',
  'hartl' => 'h.aw.r/t.eh.l / [h^h].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:l',
  'hartwig' => 'h.aw.r/t.w.ih.k / [h^h].[a^oh].[r^r]/[t^t].[w^w].[i^ih]. / failed phone:k / failed spelling:g',
  'harville' => 'h.aw.r/v.ih.l / [h^h].[a^oh].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'hasch' => 'h.ah.sh / [h^h].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'haschke' => 'h.ah.sh.k / [h^h].[a^ah].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'haske' => 'h.ay.s.k / [h^h].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'hasler' => 'h.ah/s.eh/l.er / [h^h].[a^ah]/[s^s]. / failed phone:eh / failed spelling:le',
  'hasse' => 'h.aw.s / [h^h].[a^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'hassled' => 'h.ah/s.eh.l.d / [h^h].[a^ah]/[ss^s]. / failed phone:eh / failed spelling:le',
  'hassles' => 'h.ah/s.eh.l.z / [h^h].[a^ah]/[ss^s]. / failed phone:eh / failed spelling:le',
  'hasz' => 'h.aw.sh / [h^h].[a^aw].[s^sh] / failed phone:sh / failed spelling:sz',
  'hatler' => 'h.ay/t.eh/l.er / [h^h].[a^ay]/[t^t]. / failed phone:eh / failed spelling:le',
  'haueter' => 'h.ow/t.er / [h^h].[au^aw]/ / failed phone:t / failed spelling:et',
  'haughey' => 'h.aw/k.ee / [h^h].[a^aw]/ / failed phone:k / failed spelling:ug',
  'hauke' => 'h.aw.k / [h^h].[au^aw].[k^k] / failed phone:k / failed spelling:uk',
  'hauptfuhrer' => 'h.ow.p.t/f.ye.oo/r.er / [h^h].[au^aw].[p^p].[t^t]/[f^f].[u^ue]/ / failed phone:r / failed spelling:hr',
  'hausch' => 'h.ow.sh / [h^h].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hauschildt' => 'h.ow/sh.ih.l.t / [h^h].[au^aw]/[sc^sh]. / failed phone:ih / failed spelling:hi',
  'hausler' => 'h.ow/s.eh/l.er / [h^h].[au^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'haussler' => 'h.ow/s.eh/l.er / [h^h].[au^aw]/[ss^s]. / failed phone:eh / failed spelling:le',
  'havlicek' => 'h.aw/v.l.ih/ch.eh.k / [h^h].[a^aw]/[v^v].[l^l].[i^ih]/ / failed phone:t / failed spelling:ce',
  'hawe' => 'h.aw / [h^h].[a^aw] / failed phone:aw / failed spelling:aw',
  'hawke' => 'h.aw.k / [h^h].[aw^aw].[k^k] / failed phone:k / failed spelling:wk',
  'hawkes' => 'h.aw.k.s / [h^h].[aw^aw].[k^k]. / failed phone:x / failed spelling:wk',
  'hawkiness' => 'h.aw.k/n.eh.s / [h^h].[aw^aw].[k^k]/ / failed phone:n / failed spelling:in',
  'haydn' => 'h.igh/d.eh.n / [h^h]. / failed phone:igh / failed spelling:ay',
  'haye' => 'h.ay / [h^h].[a^ay] / failed phone:ay / failed spelling:ay',
  'hazleton' => 'h.ay/z.eh.l/t.eh.n / [h^h].[a^ay]/[z^z]. / failed phone:eh / failed spelling:le',
  'hazlewood' => 'h.ay/z.eh.l/w.oo.d / [h^h].[a^ay]/[z^z]. / failed phone:eh / failed spelling:le',
  'hbox' => 'ay.ch/b.aw.k.s /  / failed phone:ay / failed spelling:hb',
  'hces' => 'ay.ch/s.ee/ee/eh.s /  / failed phone:ay / failed spelling:hc',
  'hearron' => 'h.aw/r.eh.n / [h^h]. / failed phone:aw / failed spelling:ea',
  'heart' => 'h.aw.r.t / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartache' => 'h.aw.r/t.ay.k / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartbeat' => 'h.aw.r.t/b.ee.t / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartbeats' => 'h.aw.r.t/b.ee.t.s / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartbreak' => 'h.aw.r.t/b.r.ay.k / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartbreaking' => 'h.aw.r.t/b.r.ay/k.ih.ng / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartbroken' => 'h.aw.r.t/b.r.oh/k.eh.n / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartburn' => 'h.aw.r.t/b.er.n / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearted' => 'h.aw.r/t.eh.d / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartedly' => 'h.aw.r/t.ih.d/l.ee / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearten' => 'h.aw.r/t.eh.n / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartened' => 'h.aw.r/t.eh.n.d / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartening' => 'h.aw.r/t.eh/n.ih.ng / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartfelt' => 'h.aw.r.t/f.eh.l.t / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearth' => 'h.aw.r.th / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearths' => 'h.aw.r.th.s / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartily' => 'h.aw.r/t.eh/l.ee / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartland' => 'h.aw.r.t/l.ah.n.d / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartless' => 'h.aw.r.t/l.eh.s / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearts' => 'h.aw.r.t.s / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartthrob' => 'h.aw.r.t/th.r.aw.b / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartwarming' => 'h.aw.r/t.w.aw.r/m.ih.ng / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartwise' => 'h.aw.r/t.w.igh.z / [h^h]. / failed phone:oh / failed spelling:ea',
  'heartwood' => 'h.aw.r/t.w.oo.d / [h^h]. / failed phone:oh / failed spelling:ea',
  'hearty' => 'h.aw.r/t.ee / [h^h]. / failed phone:oh / failed spelling:ea',
  'heckled' => 'h.eh/k.eh.l.d / [h^h].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hedgepeth' => 'h.eh/j.ih/p.eh.th / [h^h].[e^eh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'hedges' => 'h.eh/j.ih.z / [h^h].[e^eh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'hedging' => 'h.eh/j.ih.ng / [h^h].[e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'hedglin' => 'h.eh.j/l.ih.n / [h^h].[e^eh].[d^j]/ / failed phone:l / failed spelling:gl',
  'hedgpeth' => 'h.eh.j/p.ih.th / [h^h].[e^eh].[d^j]/ / failed phone:p / failed spelling:gp',
  'hedtke' => 'h.eh.d/k.ee / [h^h].[e^eh].[d^d]/ / failed phone:k / failed spelling:tk',
  'heeke' => 'h.ee.k / [h^h].[ee^ee].[k^k] / failed phone:k / failed spelling:ek',
  'heesch' => 'h.ee.sh / [h^h].[ee^ee].[sc^sh] / failed phone:sh / failed spelling:es',
  'hegedus' => 'h.eh/g.ih/d.ih.s / [h^h].[e^eh]/[g^g].[e^ih]/[d^d]. / failed phone:ih / failed spelling:us',
  'hegge' => 'h.eh.g / [h^h].[e^eh].[gg^g] / failed phone:g / failed spelling:gg',
  'heh' => 'h.eh / [h^h].[e^eh] / failed phone:eh / failed spelling:eh',
  'hehl' => 'h.eh.l / [h^h].[e^eh]. / failed phone:l / failed spelling:hl',
  'hehman' => 'h.eh/m.eh.n / [h^h].[e^eh]/ / failed phone:m / failed spelling:hm',
  'hehmeyer' => 'h.eh/m.igh.r / [h^h].[e^eh]/ / failed phone:m / failed spelling:hm',
  'heide' => 'h.igh.d / [h^h].[ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'heideman' => 'h.igh.d/m.eh.n / [h^h].[ei^igh].[d^d]/ / failed phone:m / failed spelling:em',
  'heidemann' => 'h.igh.d/m.eh.n / [h^h].[ei^igh].[d^d]/ / failed phone:m / failed spelling:em',
  'heidler' => 'h.igh/d.eh/l.er / [h^h].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'heifers' => 'h.eh/f.er.z / [h^h].[e^eh]/ / failed phone:f / failed spelling:if',
  'heigl' => 'h.igh/g.eh.l / [h^h].[ei^igh]/[g^g]. / failed phone:eh / failed spelling:l',
  'heikkila' => 'h.igh/k.ih/l.eh / [h^h].[ei^igh]/[k^k]. / failed phone:ih / failed spelling:ki',
  'heikkinen' => 'h.igh/k.ih/n.eh.n / [h^h].[ei^igh]/[k^k]. / failed phone:ih / failed spelling:ki',
  'heinbaugh' => 'h.igh.n/b.ow / [h^h].[ei^igh].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'heindl' => 'h.igh.n/d.eh.l / [h^h].[ei^igh].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'heinecke' => 'h.igh/n.ih.k / [h^h].[ei^igh]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'heinicke' => 'h.igh/n.ih.k / [h^h].[ei^igh]/[n^n].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'heinisch' => 'h.igh/n.ih.sh / [h^h].[ei^igh]/[n^n].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'heinke' => 'h.igh.ng.k / [h^h].[ei^igh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'heinl' => 'h.igh/n.eh.l / [h^h].[ei^igh]/[n^n]. / failed phone:eh / failed spelling:l',
  'heinlen' => 'h.igh/n.eh/l.eh.n / [h^h].[ei^igh]/[n^n]. / failed phone:eh / failed spelling:le',
  'heintze' => 'h.igh.n.t.s / [h^h].[ei^igh].[n^n].[t^t].[z^s] / failed phone:s / failed spelling:ze',
  'heir' => 'air /  / failed phone:air / failed spelling:he',
  'heiress' => 'air/eh.s /  / failed phone:air / failed spelling:he',
  'heirloom' => 'air/l.ue.m /  / failed phone:air / failed spelling:he',
  'heirlooms' => 'air/l.ue.m.z /  / failed phone:air / failed spelling:he',
  'heironimus' => 'air/aw/n.ih/m.ue.s /  / failed phone:air / failed spelling:he',
  'heirs' => 'air.z /  / failed phone:air / failed spelling:he',
  'heisler' => 'h.igh/s.eh/l.er / [h^h].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'hekker' => 'h.eh/k.er / [h^h].[e^eh]/[k^k]. / failed phone:er / failed spelling:ke',
  'helbling' => 'h.eh.l/b.eh/l.ih.ng / [h^h].[e^eh].[l^l]/[b^b]. / failed phone:eh / failed spelling:li',
  'heldt' => 'h.eh.l.t / [h^h].[e^eh].[l^l]. / failed phone:t / failed spelling:dt',
  'helke' => 'h.eh.l.k / [h^h].[e^eh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'hellbusch' => 'h.eh.l/b.eh.sh / [h^h].[e^eh].[ll^l]/[b^b].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'helle' => 'h.eh.l / [h^h].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'helme' => 'h.eh.l.m / [h^h].[e^eh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'helmke' => 'h.eh.l.m.k / [h^h].[e^eh].[l^l].[m^m].[k^k] / failed phone:k / failed spelling:ke',
  'hemme' => 'h.eh.m / [h^h].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'hemorrhage' => 'h.eh/m.er/ih.j / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:ih / failed spelling:rh',
  'hemorrhaged' => 'h.eh/m.er/ih.j.d / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:ih / failed spelling:rh',
  'hemorrhagic' => 'h.eh/m.er/ah/g.ih.k / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:ah / failed spelling:rh',
  'hemorrhaging' => 'h.eh/m.er/ih/j.ih.ng / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:ih / failed spelling:rh',
  'hemorrhoid' => 'h.eh/m.er/oy.d / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:oy / failed spelling:rh',
  'hemorrhoids' => 'h.eh/m.er/oy.d.z / [h^h].[e^eh]/[m^m].[o^oh].[r^r]/ / failed phone:oy / failed spelling:rh',
  'hempfling' => 'h.eh.m.p/f.eh/l.ih.ng / [h^h].[e^eh].[m^m].[p^p]/[f^f]. / failed phone:eh / failed spelling:li',
  'henao' => 'h.ay/n.ow / [h^h].[e^ay]/[n^n]. / failed phone:ow / failed spelling:ao',
  'henke' => 'h.eh.ng.k / [h^h].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'henkes' => 'h.eh.ng.k.s / [h^h].[e^eh].[n^ng].[k^k]. / failed phone:s / failed spelling:es',
  'henne' => 'h.eh.n / [h^h].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'henneberger' => 'h.eh.n/b.er/g.er / [h^h].[e^eh].[n^n]/ / failed phone:b / failed spelling:ne',
  'henneberry' => 'h.eh.n/b.air/ee / [h^h].[e^eh].[n^n]/ / failed phone:b / failed spelling:ne',
  'henneke' => 'h.eh/n.ih.k / [h^h].[e^eh]/[nn^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'henneman' => 'h.eh.n/m.eh.n / [h^h].[e^eh].[n^n]/ / failed phone:m / failed spelling:ne',
  'henrique' => 'aw.n/r.ee.k /  / failed phone:aw / failed spelling:he',
  'hensch' => 'h.eh.n.sh / [h^h].[e^eh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'henschel' => 'h.eh.n/sh.eh.l / [h^h].[e^eh].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'henschen' => 'h.eh.n/sh.eh.n / [h^h].[e^eh].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'hensler' => 'h.eh.n/s.eh/l.er / [h^h].[e^eh].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'hentschel' => 'h.eh.n/ch.eh.l / [h^h].[e^eh].[n^n]/[t^t].[sc^sh]. / failed phone:eh / failed spelling:he',
  'herb' => 'er.b /  / failed phone:er / failed spelling:he',
  'herbaceous' => 'er/b.ay/sh.eh.s /  / failed phone:er / failed spelling:he',
  'herbal' => 'er/b.eh.l /  / failed phone:er / failed spelling:he',
  'herbalist' => 'er/b.eh/l.eh.s.t /  / failed phone:er / failed spelling:he',
  'herbalists' => 'er/b.eh/l.eh.s.t.s /  / failed phone:er / failed spelling:he',
  'herbicides' => 'er/b.eh/s.igh.d.z /  / failed phone:er / failed spelling:he',
  'herbs' => 'er.b.z /  / failed phone:er / failed spelling:he',
  'hercegovina' => 'h.air.t/s.eh/g.oh/v.ee/n.eh / [h^h].[er^air]. / failed phone:t / failed spelling:ce',
  'herczeg' => 'h.er/ch.ih.g / [h^h].[er^er]/ / failed phone:t / failed spelling:cz',
  'herdt' => 'h.er.t / [h^h].[er^er]. / failed phone:t / failed spelling:dt',
  'heroux' => 'h.er/ue / [h^h].[er^er]/[ou^ue] / failed phone:ue / failed spelling:ou',
  'herre' => 'h.air / [h^h].[er^air] / failed phone:air / failed spelling:er',
  'hersch' => 'h.er.sh / [h^h].[er^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'herschel' => 'h.er/sh.eh.l / [h^h].[er^er]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'herschell' => 'h.er/sh.eh.l / [h^h].[er^er]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'hertzenleben' => 'h.er/t.eh.n/l.ay/b.eh.n / [h^h].[er^er]/[t^t]. / failed phone:eh / failed spelling:ze',
  'hertzler' => 'h.er.t/z.eh/l.er / [h^h].[er^er].[t^t]/[z^z]. / failed phone:eh / failed spelling:le',
  'herzegovina' => 'h.air.t/s.eh/g.oh/v.ee/n.eh / [h^h].[er^air]. / failed phone:t / failed spelling:ze',
  'hesch' => 'h.eh.sh / [h^h].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hesler' => 'h.eh/s.eh/l.er / [h^h].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'hesse' => 'h.eh.s / [h^h].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'hession' => 'h.eh/sh.ih.n / [h^h].[e^eh]/[ss^sh].[i^ih]. / failed phone:n / failed spelling:on',
  'hessling' => 'h.eh/s.eh/l.ih.ng / [h^h].[e^eh]/[ss^s]. / failed phone:eh / failed spelling:li',
  'heterosexual' => 'h.eh/t.er/oh/s.eh.k/sh.eh/w.eh.l / [h^h].[e^eh]/[te^t].[r^er]/[o^oh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'heterosexuals' => 'h.eh/t.er/oh/s.eh.k/sh.eh/w.eh.l.z / [h^h].[e^eh]/[te^t].[r^er]/[o^oh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'heuberger' => 'h.oy/b.er/g.er / [h^h]. / failed phone:oy / failed spelling:eu',
  'heuerman' => 'h.oy/er/m.eh.n / [h^h]. / failed phone:oy / failed spelling:eu',
  'heuermann' => 'h.oy/er/m.eh.n / [h^h]. / failed phone:oy / failed spelling:eu',
  'heupel' => 'h.oy/p.eh.l / [h^h]. / failed phone:oy / failed spelling:eu',
  'heuring' => 'h.er/ih.ng / [h^h]. / failed phone:er / failed spelling:eu',
  'heuser' => 'h.oy/s.er / [h^h]. / failed phone:oy / failed spelling:eu',
  'hewe' => 'h.ye.ue / [h^h].[ew^ue] / failed phone:ue / failed spelling:ew',
  'heyde' => 'h.ay.d / [h^h].[ey^ay].[d^d] / failed phone:d / failed spelling:yd',
  'hfdf' => 'ay/ch.eh.f/d.ee/eh.f /  / failed phone:ay / failed spelling:hf',
  'hgh' => 'ay.ch/j.ee/ay.ch /  / failed phone:ay / failed spelling:hg',
  'hibler' => 'h.aw/b.eh/l.er / [h^h]. / failed phone:aw / failed spelling:ib',
  'hickcox' => 'h.ih/k.aw.k.s / [h^h].[i^ih]/[c^k]. / failed phone:aw / failed spelling:kc',
  'hicksville' => 'h.ih.k/s.v.ih.l / [h^h].[i^ih].[ck^k]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'hilde' => 'h.ih.l.d / [h^h].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'hildebrandt' => 'h.ih.l/d.ih/b.r.eh.n.t / [h^h].[i^ih].[l^l]/[d^d].[e^ih]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'hildegarde' => 'h.ih.l/d.ih/g.aw.r.d / [h^h].[i^ih].[l^l]/[d^d].[e^ih]/[g^g].[a^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'hilderbrandt' => 'h.ih.l/d.er/b.r.eh.n.t / [h^h].[i^ih].[l^l]/[d^d].[er^er]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'hille' => 'h.ih.l / [h^h].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'hilliard' => 'h.ih/l.ye.aw.r.d / [h^h].[i^ih]/[ll^l]. / failed phone:ye / failed spelling:ia',
  'hilscher' => 'h.ih.l/sh.er / [h^h].[i^ih].[l^l]/[sc^sh]. / failed phone:er / failed spelling:he',
  'himalayas' => 'h.ih/m.eh/l.igh/eh.s / [h^h].[i^ih]/[m^m].[a^ah]/[l^l]. / failed phone:igh / failed spelling:ay',
  'hinchcliffe' => 'h.ih.n.ch/k.l.ih.f / [h^h].[i^ih].[n^n].[ch^ch]/[c^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'hinchliffe' => 'h.ih.n/k.l.ih.f / [h^h].[i^ih].[n^n]/[ch^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'hinde' => 'h.ih.n.d / [h^h].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'hingham' => 'h.ih.ng/eh.m / [h^h].[i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'hinojos' => 'h.ee/n.oh/ye.oh.z / [h^h].[i^ee]/[n^n].[o^oh]/ / failed phone:ye / failed spelling:jo',
  'hinsch' => 'h.ih.n.sh / [h^h].[i^ih].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hipolito' => 'ee/p.oh/l.ee/t.oh /  / failed phone:ee / failed spelling:hi',
  'hirons' => 'h.aw/r.eh.n.z / [h^h]. / failed phone:aw / failed spelling:ir',
  'hirsch' => 'h.er.sh / [h^h].[ir^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hirschberg' => 'h.er.sh/b.er.g / [h^h].[ir^er].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'hirschfeld' => 'h.er.sh/f.eh.l.d / [h^h].[ir^er].[sc^sh]/ / failed phone:f / failed spelling:hf',
  'hirschhorn' => 'h.er.sh/h.er.n / [h^h].[ir^er].[sc^sh]/[h^h]. / failed phone:r / failed spelling:ho',
  'hirschman' => 'h.er/sh.m.eh.n / [h^h].[ir^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'hirschmann' => 'h.er/sh.m.eh.n / [h^h].[ir^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'hirschy' => 'h.er/sh.ee / [h^h].[ir^er]/[sc^sh]. / failed phone:ee / failed spelling:hy',
  'hisle' => 'h.igh/eh.l / [h^h].[i^igh]/ / failed phone:eh / failed spelling:sl',
  'hitschler' => 'h.ih.t/s.l.er / [h^h].[i^ih].[t^t]/[sc^s]. / failed phone:l / failed spelling:hl',
  'hitzeman' => 'h.ih.t/s.m.eh.n / [h^h].[i^ih].[t^t]/[z^s]. / failed phone:m / failed spelling:em',
  'hiv' => 'ay/ch.igh/v.ee /  / failed phone:ay / failed spelling:hi',
  'hixenbaugh' => 'h.ih.g/z.eh.n/b.aw / [h^h].[i^ih]. / failed phone:g / failed spelling:xe',
  'hjelm' => 'h.eh/j.eh.l.m / [h^h]. / failed phone:eh / failed spelling:je',
  'hjerpe' => 'h.eh/j.er.p / [h^h]. / failed phone:eh / failed spelling:je',
  'hjort' => 'h.eh/j.aw.r.t / [h^h]. / failed phone:eh / failed spelling:jo',
  'hlavacek' => 'h.l.aw/v.eh/ch.eh.k / [h^h].[l^l].[a^aw]/[v^v].[a^ah]/ / failed phone:t / failed spelling:ce',
  'hmmm' => 'h.m / [h^h].[m^m] / failed phone:m / failed spelling:mm',
  'hmong' => 'm.aw.ng /  / failed phone:m / failed spelling:hm',
  'hobbled' => 'h.aw/b.eh.l.d / [h^h].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'hobbles' => 'h.aw/b.eh.l.z / [h^h].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'hobbling' => 'h.aw/b.eh/l.ih.ng / [h^h].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:li',
  'hochstedler' => 'h.aw.k/s.t.ih/d.eh/l.er / [h^h].[o^aw].[ch^k]/[s^s].[t^t].[e^ih]/[d^d]. / failed phone:eh / failed spelling:le',
  'hochstetler' => 'h.aw.k/s.t.ih/t.eh/l.er / [h^h].[o^aw].[ch^k]/[s^s].[t^t].[e^ih]/[t^t]. / failed phone:eh / failed spelling:le',
  'hodde' => 'h.aw.d / [h^h].[o^aw].[dd^d] / failed phone:d / failed spelling:dd',
  'hodgdon' => 'h.aw.j/d.eh.n / [h^h].[o^aw].[d^j]/ / failed phone:d / failed spelling:gd',
  'hodgen' => 'h.aw/j.eh.n / [h^h].[o^aw]/[d^j]. / failed phone:eh / failed spelling:ge',
  'hodgens' => 'h.aw/j.eh.n.z / [h^h].[o^aw]/[d^j]. / failed phone:eh / failed spelling:ge',
  'hodges' => 'h.aw/j.ih.z / [h^h].[o^aw]/[d^j]. / failed phone:ih / failed spelling:ge',
  'hodgin' => 'h.aw/j.ih.n / [h^h].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'hodgins' => 'h.aw/j.ih.n.z / [h^h].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'hodgkin' => 'h.aw.j/k.ih.n / [h^h].[o^aw].[d^j]/ / failed phone:k / failed spelling:gk',
  'hodgkins' => 'h.aw.j/k.ih.n.z / [h^h].[o^aw].[d^j]/ / failed phone:k / failed spelling:gk',
  'hodgkinson' => 'h.aw.j/k.ih.n/s.eh.n / [h^h].[o^aw].[d^j]/ / failed phone:k / failed spelling:gk',
  'hodgkiss' => 'h.aw.j/k.ih.s / [h^h].[o^aw].[d^j]/ / failed phone:k / failed spelling:gk',
  'hodgman' => 'h.aw.j/m.eh.n / [h^h].[o^aw].[d^j]/ / failed phone:m / failed spelling:gm',
  'hodgson' => 'h.aw.j/s.eh.n / [h^h].[o^aw].[d^j]/ / failed phone:s / failed spelling:gs',
  'hoefler' => 'h.oh/f.eh/l.er / [h^h].[oe^oh]/[f^f]. / failed phone:eh / failed spelling:le',
  'hoefling' => 'h.oh/f.eh/l.ih.ng / [h^h].[oe^oh]/[f^f]. / failed phone:eh / failed spelling:li',
  'hoehne' => 'h.oh.n / [h^h].[oe^oh].[hn^n] / failed phone:n / failed spelling:eh',
  'hoelle' => 'h.oh.l / [h^h].[o^oh].[el^l] / failed phone:l / failed spelling:el',
  'hoelscher' => 'h.oh.l/sh.er / [h^h].[o^oh].[el^l]/[sc^sh]. / failed phone:er / failed spelling:he',
  'hoerig' => 'h.aw/r.ih.g / [h^h].[o^aw]/ / failed phone:r / failed spelling:er',
  'hoesch' => 'h.oh.sh / [h^h].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'hoeschen' => 'h.oh/sh.eh.n / [h^h].[oe^oh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'hoffler' => 'h.aw/f.eh/l.er / [h^h].[o^aw]/[ff^f]. / failed phone:eh / failed spelling:le',
  'hogge' => 'h.aw.g / [h^h].[o^aw].[gg^g] / failed phone:g / failed spelling:gg',
  'hogrefe' => 'h.aw/g.r.ih.f / [h^h].[o^aw]/[g^g].[r^r].[e^ih].[f^f] / failed phone:f / failed spelling:fe',
  'hojnacki' => 'h.eh.ye/n.aw.t/s.k.ee / [h^h].[o^uh]. / failed phone:ye / failed spelling:jn',
  'hokkaido' => 'h.oh/k.igh/d.oh / [h^h].[o^oh]/[k^k]. / failed phone:igh / failed spelling:ka',
  'holbrooke' => 'h.oh.l/b.r.oo.k / [h^h].[o^oh].[l^l]/[b^b].[r^r].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'holcombe' => 'h.oh.l/k.eh.m / [h^h].[o^oh].[l^l]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:mb',
  'holde' => 'h.oh.l.d / [h^h].[o^oh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'holdeman' => 'h.oh.l.d/m.eh.n / [h^h].[o^oh].[l^l].[d^d]/ / failed phone:m / failed spelling:em',
  'holdfast' => 'h.oh.l/f.ah.s.t / [h^h].[o^oh].[l^l]/ / failed phone:f / failed spelling:df',
  'holecek' => 'h.aw/l.ih/ch.eh.k / [h^h].[o^aw]/[l^l].[e^ih]/ / failed phone:t / failed spelling:ce',
  'holle' => 'h.aw.l / [h^h].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'holleman' => 'h.oh.l/m.eh.n / [h^h].[o^oh].[ll^l]/ / failed phone:m / failed spelling:em',
  'holme' => 'h.oh.l.m / [h^h].[o^oh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'holscher' => 'h.oh.l/sh.er / [h^h].[o^oh].[l^l]/[sc^sh]. / failed phone:er / failed spelling:he',
  'holzschuh' => 'h.oh.l/sh.ue / [h^h].[o^oh].[l^l]/ / failed phone:sh / failed spelling:zs',
  'holzstoff' => 'h.oh.l/s.t.aw.f / [h^h].[o^oh].[l^l]/[z^s]. / failed phone:t / failed spelling:st',
  'homme' => 'h.aw.m / [h^h].[o^aw].[m^m] / failed phone:m / failed spelling:mm',
  'homosexual' => 'h.oh/m.oh/s.eh.k/sh.eh/w.eh.l / [h^h].[o^oh]/[m^m].[o^oh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'homosexuality' => 'h.oh/m.oh/s.eh.k/sh.eh/w.ah/l.eh/t.ee / [h^h].[o^oh]/[m^m].[o^oh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'homosexuals' => 'h.oh/m.oh/s.eh.k/sh.eh/w.eh.l.z / [h^h].[o^oh]/[m^m].[o^oh]/[s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'honeysuckles' => 'h.uh/n.ee/s.uh/k.eh.l.z / [h^h].[o^uh]/[ne^n].[y^ee]/[s^s].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'hooke' => 'h.oo.k / [h^h].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'hookworm' => 'h.oo/kw.er.m / [h^h].[o^oo]/ / failed phone:kw / failed spelling:ok',
  'hoopoe' => 'h.ue/p.ue / [h^h].[oo^ue]/[p^p].[o^ue] / failed phone:ue / failed spelling:oe',
  'hopke' => 'h.oh.p.k / [h^h].[o^oh].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'horacek' => 'h.aw/r.eh/ch.eh.k / [h^h].[o^aw]/[r^r].[a^ah]/ / failed phone:t / failed spelling:ce',
  'horatio' => 'h.er/ay/sh.oh / [h^h].[o^oh].[r^r]/[a^ay]/[t^sh]. / failed phone:oh / failed spelling:io',
  'horatius' => 'h.aw/r.ay/sh.eh.s / [h^h].[o^aw]/[r^r].[a^ay]/[t^sh].[i^ih]. / failed phone:s / failed spelling:us',
  'horde' => 'h.aw.r.d / [h^h].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'horejsi' => 'h.aw/r.ay.ye/s.ee / [h^h].[o^aw]/[r^r].[e^ay]. / failed phone:ye / failed spelling:js',
  'hornblende' => 'h.aw.r.n/b.l.eh.n.d / [h^h].[o^oh].[r^r].[n^n]/[b^b].[l^l].[e^eh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'horsch' => 'h.aw.r.sh / [h^h].[o^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'horseshoe' => 'h.aw.r.s/sh.ue / [h^h].[o^oh].[r^r].[se^s]/[sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'hosch' => 'h.aw.sh / [h^h].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'hosler' => 'h.aw/s.eh/l.er / [h^h].[o^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'hossler' => 'h.aw/s.eh/l.er / [h^h].[o^aw]/[ss^s]. / failed phone:eh / failed spelling:le',
  'hostetler' => 'h.aw/s.t.ih/t.eh/l.er / [h^h].[o^aw]/[s^s].[t^t].[e^ih]/[t^t]. / failed phone:eh / failed spelling:le',
  'hostettler' => 'h.aw/s.t.ih/t.eh/l.er / [h^h].[o^aw]/[s^s].[t^t].[e^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'hostutler' => 'h.aw/s.t.ue/t.eh/l.er / [h^h].[o^aw]/[s^s].[t^t].[u^ue]/[t^t]. / failed phone:eh / failed spelling:le',
  'houdaille' => 'h.ue/d.ay.l / [h^h].[ou^ue]/[d^d].[a^ay].[il^l] / failed phone:l / failed spelling:il',
  'houde' => 'h.ow.d / [h^h].[ou^ow].[d^d] / failed phone:d / failed spelling:de',
  'hour' => 'ow/er /  / failed phone:ow / failed spelling:ho',
  'hourglass' => 'ow/er/g.l.ah.s /  / failed phone:ow / failed spelling:ho',
  'hourigan' => 'ow/r.ih/g.ah.n /  / failed phone:ow / failed spelling:ho',
  'hourihan' => 'ow/r.ee/h.aw.n /  / failed phone:ow / failed spelling:ho',
  'hourlong' => 'ow.r/l.aw.ng /  / failed phone:ow / failed spelling:ho',
  'hourly' => 'ow.r/l.ee /  / failed phone:ow / failed spelling:ho',
  'hours' => 'ow/er.z /  / failed phone:ow / failed spelling:ho',
  'houx' => 'h.ue / [h^h].[ou^ue] / failed phone:ue / failed spelling:ou',
  'hovde' => 'h.oh.v.d / [h^h].[o^oh].[v^v].[d^d] / failed phone:d / failed spelling:de',
  'howe' => 'h.ow / [h^h].[ow^ow] / failed phone:ow / failed spelling:ow',
  'howsare' => 'h.ow/s.er / [h^h].[ow^ow]/[s^s].[ar^er] / failed phone:er / failed spelling:ar',
  'hoye' => 'h.oy / [h^h].[oy^oy] / failed phone:oy / failed spelling:oy',
  'hrawi' => 'h.er/w.aw/w.ee / [h^h].[r^er]/ / failed phone:w / failed spelling:aw',
  'hrncir' => 'h.er.n/ch.er / [h^h].[r^er].[n^n]/ / failed phone:t / failed spelling:ci',
  'hrubik' => 'h.ih/r.ue/b.ih.k / [h^h]. / failed phone:ih / failed spelling:ru',
  'hsia' => 'sh.aw /  / failed phone:sh / failed spelling:hs',
  'hsiao' => 'sh.ow /  / failed phone:sh / failed spelling:hs',
  'hsieh' => 'sh.ee/eh /  / failed phone:sh / failed spelling:hs',
  'hsiung' => 'sh.ee/uh.ng /  / failed phone:sh / failed spelling:hs',
  'hsu' => 'sh.ue /  / failed phone:sh / failed spelling:hs',
  'hua' => 'w.aw /  / failed phone:w / failed spelling:hu',
  'hubler' => 'h.ye.ue/b.eh/l.er / [h^h].[u^ue]/[b^b]. / failed phone:eh / failed spelling:le',
  'hucke' => 'h.uh.k / [h^h].[u^uh].[c^k] / failed phone:k / failed spelling:ck',
  'huckleberry' => 'h.uh/k.eh.l/b.air/ee / [h^h].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'huddled' => 'h.uh/d.eh.l.d / [h^h].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'huddles' => 'h.uh/d.eh.l.z / [h^h].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'huddleston' => 'h.uh/d.eh.l/s.t.eh.n / [h^h].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'huddling' => 'h.uh/d.eh/l.ih.ng / [h^h].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:li',
  'hudecek' => 'h.uh/d.ih/ch.eh.k / [h^h].[u^uh]/[d^d].[e^ih]/ / failed phone:t / failed spelling:ce',
  'hudgens' => 'h.uh/j.eh.n.z / [h^h].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'hudgins' => 'h.uh/j.ih.n.z / [h^h].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'hudler' => 'h.ue/d.eh/l.er / [h^h].[u^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'huebsch' => 'h.oo.b.sh / [h^h].[ue^oo].[b^b].[sc^sh] / failed phone:sh / failed spelling:sc',
  'huerter' => 'h.er/t.er / [h^h]. / failed phone:er / failed spelling:ue',
  'huettl' => 'h.oo/t.eh.l / [h^h].[ue^oo]/[t^t]. / failed phone:eh / failed spelling:tl',
  'huffstetler' => 'h.uh.f/s.t.ih/t.eh/l.er / [h^h].[u^uh].[ff^f]/[s^s].[t^t].[e^ih]/[t^t]. / failed phone:eh / failed spelling:le',
  'huffstutler' => 'h.uh.f/s.t.ue/t.eh/l.er / [h^h].[u^uh].[ff^f]/[s^s].[t^t].[u^ue]/[t^t]. / failed phone:eh / failed spelling:le',
  'hufstedler' => 'h.uh.f/s.t.ih/d.eh/l.er / [h^h].[u^uh].[f^f]/[s^s].[t^t].[e^ih]/[d^d]. / failed phone:eh / failed spelling:le',
  'hufstetler' => 'h.uh.f/s.t.ih/t.eh/l.er / [h^h].[u^uh].[f^f]/[s^s].[t^t].[e^ih]/[t^t]. / failed phone:eh / failed spelling:le',
  'hugette' => 'h.eh/zh.eh.t / [h^h].[u^uh]/ / failed phone:zh / failed spelling:ge',
  'hugh' => 'h.ye.ue / [h^h].[u^ue] / failed phone:ue / failed spelling:ug',
  'hughbanks' => 'h.uh/b.eh.ng.k.s / [h^h].[u^uh]/ / failed phone:b / failed spelling:gh',
  'hughen' => 'h.ye.ue/eh.n / [h^h].[u^ue]/ / failed phone:eh / failed spelling:gh',
  'hughes' => 'h.ye.ue.z / [h^h].[u^ue]. / failed phone:z / failed spelling:gh',
  'hughett' => 'h.ye.ue/ih.t / [h^h].[u^ue]/ / failed phone:ih / failed spelling:gh',
  'hughette' => 'h.ye.ue/eh.t / [h^h].[u^ue]/ / failed phone:eh / failed spelling:gh',
  'hughie' => 'h.ye.ue/ee / [h^h].[u^ue]/ / failed phone:ee / failed spelling:gh',
  'hughlett' => 'h.ye.ue/l.ih.t / [h^h].[u^ue]/ / failed phone:l / failed spelling:gh',
  'hughs' => 'ye.ue.z /  / failed phone:ue / failed spelling:hu',
  'hughy' => 'h.ye.ue/ee / [h^h].[u^ue]/ / failed phone:ee / failed spelling:gh',
  'huh' => 'h.uh / [h^h].[u^uh] / failed phone:uh / failed spelling:uh',
  'huhta' => 'h.ue/t.eh / [h^h].[u^ue]/ / failed phone:t / failed spelling:ht',
  'huibregtse' => 'h.ue/b.r.eh.k.t.s / [h^h].[ui^ue]/[b^b].[r^r].[e^eh]. / failed phone:k / failed spelling:gt',
  'huldie' => 'h.uh/d.ee / [h^h].[u^uh]/ / failed phone:d / failed spelling:ld',
  'hulme' => 'h.uh.l.m / [h^h].[u^uh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'hulsebus' => 'h.uh.l/s.ih/b.ih.s / [h^h].[u^uh].[l^l]/[s^s].[e^ih]/[b^b]. / failed phone:ih / failed spelling:us',
  'humbled' => 'h.uh.m/b.eh.l.d / [h^h].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'humbler' => 'h.uh.m/b.eh/l.er / [h^h].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'humbles' => 'h.uh.m/b.eh.l.z / [h^h].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'humblest' => 'h.uh.m/b.eh/l.eh.s.t / [h^h].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'humbling' => 'h.uh.m/b.eh/l.ih.ng / [h^h].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'humboldt' => 'h.uh.m/b.oh.l.t / [h^h].[u^uh].[m^m]/[b^b].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'huml' => 'h.uh/m.eh.l / [h^h].[u^uh]/[m^m]. / failed phone:eh / failed spelling:l',
  'hundt' => 'h.uh.n.t / [h^h].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'huneke' => 'h.uh/n.ih.k / [h^h].[u^uh]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'hunke' => 'h.uh.ng.k / [h^h].[u^uh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'huntingdon' => 'h.uh.n/t.ih.ng/d.ih.n / [h^h].[u^uh].[n^n]/[t^t].[i^ih].[ng^ng]/[d^d]. / failed phone:ih / failed spelling:on',
  'huntsville' => 'h.uh.n.t/s.v.ih.l / [h^h].[u^uh].[n^n].[t^t]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'hurdler' => 'h.er/d.eh/l.er / [h^h].[ur^er]/[d^d]. / failed phone:eh / failed spelling:le',
  'hurdles' => 'h.er/d.eh.l.z / [h^h].[ur^er]/[d^d]. / failed phone:eh / failed spelling:le',
  'hurdling' => 'h.er/d.eh/l.ih.ng / [h^h].[ur^er]/[d^d]. / failed phone:eh / failed spelling:li',
  'hurrah' => 'h.oo/r.aw / [h^h].[u^oo]/[rr^r].[a^aw] / failed phone:aw / failed spelling:ra',
  'hurrell' => 'h.aw/r.eh.l / [h^h]. / failed phone:aw / failed spelling:ur',
  'huschka' => 'h.uh.sh/k.eh / [h^h].[u^uh].[s^sh]/[ch^k]. / failed phone:eh / failed spelling:ka',
  'hustled' => 'h.uh/s.eh.l.d / [h^h].[u^uh]/[st^s]. / failed phone:eh / failed spelling:le',
  'hustler' => 'h.uh/s.eh/l.er / [h^h].[u^uh]/[st^s]. / failed phone:eh / failed spelling:le',
  'hustlers' => 'h.uh/s.eh/l.er.z / [h^h].[u^uh]/[st^s]. / failed phone:eh / failed spelling:le',
  'hustles' => 'h.uh/s.eh.l.z / [h^h].[u^uh]/[st^s]. / failed phone:eh / failed spelling:le',
  'hustling' => 'h.uh/s.eh/l.ih.ng / [h^h].[u^uh]/[st^s]. / failed phone:eh / failed spelling:li',
  'huxtables' => 'h.uh.k/s.t.eh/b.eh.l.z / [h^h].[u^uh].[x^x]/[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'huynh' => 'h.igh.n / [h^h].[uy^igh].[n^n] / failed phone:n / failed spelling:nh',
  'hybl' => 'h.ih/b.eh.l / [h^h].[y^ih]/[b^b]. / failed phone:eh / failed spelling:l',
  'hyche' => 'h.igh.ch / [h^h].[y^igh].[ch^ch] / failed phone:t / failed spelling:ch',
  'hyde' => 'h.igh.d / [h^h].[y^igh].[d^d] / failed phone:d / failed spelling:de',
  'hydropower' => 'h.igh/d.r.oh/p.ow.r / [h^h].[y^igh]/[d^d].[r^r].[o^oh]/[p^p].[ow^ow]. / failed phone:r / failed spelling:er',
  'hykes' => 'h.igh.k.s / [h^h].[y^igh].[k^k]. / failed phone:s / failed spelling:es',
  'hyphae' => 'h.igh/f.ee / [h^h].[y^igh]/[ph^f]. / failed phone:ee / failed spelling:ae',
  'iacobucci' => 'ee/aw/k.oh/b.ue/ch.ee / [i^ee]/[a^aw]/[c^k].[o^oh]/[b^b].[u^ue]/ / failed phone:t / failed spelling:cc',
  'iannucci' => 'ee/eh/n.ue/ch.ee / [i^ee]/[a^ah]/[nn^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'iannuzzi' => 'ee/eh/n.ue.t/s.ee / [i^ee]/[a^ah]/[nn^n].[u^ue]. / failed phone:t / failed spelling:zz',
  'ibn' => 'ih/b.eh.n / [i^ih]/[b^b]. / failed phone:eh / failed spelling:n',
  'icenhour' => 'ih/s.eh/n.ow.r / [i^ih]/[c^s].[e^eh]/[n^n]. / failed phone:ow / failed spelling:ho',
  'icicles' => 'igh/s.ih/k.eh.l.z / [i^igh]/[c^s].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'ickes' => 'ih.k.s / [i^ih].[c^k]. / failed phone:s / failed spelling:ke',
  'idalia' => 'ih/d.aw/l.ye.eh / [i^ih]/[d^d].[a^aw]/[l^l]. / failed phone:ue / failed spelling:ia',
  'idled' => 'igh/d.eh.l.d / [i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'idleman' => 'igh/d.eh.l/m.eh.n / [i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'idleness' => 'igh/d.eh.l/n.eh.s / [i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'idler' => 'igh/d.eh/l.er / [i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'idles' => 'igh/d.eh.l.z / [i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'idling' => 'igh/d.eh/l.ih.ng / [i^igh]/[d^d]. / failed phone:eh / failed spelling:li',
  'ierne' => 'ih.r.n / [i^ih]. / failed phone:r / failed spelling:er',
  'iezzi' => 'ee/eh.t/s.ee / [i^ee]/[e^eh]. / failed phone:t / failed spelling:zz',
  'iglehart' => 'igh/g.eh.l/h.aw.r.t / [i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'ignatius' => 'ih.g/n.ay/sh.eh.s / [i^ih].[g^g]/[n^n].[a^ay]/[t^sh].[i^ih]. / failed phone:s / failed spelling:us',
  'ignatowski' => 'ih.g/n.eh/t.aw.f/s.k.ee / [i^ih].[g^g]/[n^n].[a^ah]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'ihasz' => 'igh/h.ah.s / [i^igh]/[h^h].[a^ah].[s^s] / failed phone:s / failed spelling:sz',
  'ihde' => 'ih.d / [i^ih]. / failed phone:d / failed spelling:hd',
  'ihlenfeldt' => 'ih/l.ih.n/f.ih.l.t / [i^ih]/ / failed phone:l / failed spelling:hl',
  'ihrig' => 'ih/r.ih.g / [i^ih]/ / failed phone:r / failed spelling:hr',
  'ihrke' => 'ih.r.k / [i^ih]. / failed phone:r / failed spelling:hr',
  'iida' => 'ee/d.eh / [i^ee]/ / failed phone:d / failed spelling:id',
  'ijames' => 'ih/ye.aw/m.eh.s / [i^ih]/ / failed phone:ye / failed spelling:ja',
  'ilhae' => 'ih.l/h.ay / [i^ih].[l^l]/[h^h].[a^ay] / failed phone:ay / failed spelling:ae',
  'illinois' => 'ih/l.eh/n.oy / [i^ih]/[ll^l].[i^ih]/[n^n].[oi^oy] / failed phone:oy / failed spelling:oi',
  'imbroglio' => 'ih.m/b.r.oh/l.ye.oh / [i^ih].[m^m]/[b^b].[r^r].[o^oh]/ / failed phone:l / failed spelling:gl',
  'imm' => 'igh/eh/m.eh.m / [i^igh]/ / failed phone:eh / failed spelling:mm',
  'impasse' => 'ih.m/p.ah.s / [i^ih].[m^m]/[p^p].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'imponderables' => 'ih.m/p.aw.n/d.er/eh/b.eh.l.z / [i^ih].[m^m]/[p^p].[o^aw].[n^n]/[d^d].[er^er]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'inalienable' => 'ih/n.ay/l.ye.eh/n.eh/b.eh.l / [i^ih]/[n^n].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ie',
  'inauspicious' => 'ih/n.ow/s.p.ih/sh.ih.s / [i^ih]/[n^n].[au^aw]/[s^s].[p^p].[i^ih]/[c^sh].[i^ih]. / failed phone:s / failed spelling:ou',
  'inconspicuous' => 'ih.ng/k.aw.n/s.p.ih/kw.eh.s / [i^ih].[n^ng]/[c^k].[o^aw].[n^n]/[s^s].[p^p].[i^ih]/ / failed phone:kw / failed spelling:cu',
  'inconvenience' => 'ih.n/k.eh.n/v.ee/n.ye.eh.n.s / [i^ih].[n^n]/[c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'inconvenienced' => 'ih.n/k.eh.n/v.ee/n.ye.eh.n.s.t / [i^ih].[n^n]/[c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'inconveniences' => 'ih.n/k.eh.n/v.ee/n.ye.eh.n/s.ih.z / [i^ih].[n^n]/[c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'inconvenient' => 'ih.n/k.eh.n/v.ee/n.ye.eh.n.t / [i^ih].[n^n]/[c^k].[o^uh].[n^n]/[v^v].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'incorrect' => 'ih.n/k.er/eh.k.t / [i^ih].[n^n]/[c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'incorrectly' => 'ih.n/k.er/eh.k.t/l.ee / [i^ih].[n^n]/[c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'incorruptible' => 'ih.n/k.er/uh.p/t.eh/b.eh.l / [i^ih].[n^n]/[c^k].[o^oh].[r^r]/ / failed phone:uh / failed spelling:ru',
  'incorvaia' => 'ih.n/k.aw.r/v.aw/ye.eh / [i^ih].[n^n]/[c^k].[o^oh].[r^r]/[v^v].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'indict' => 'ih.n/d.igh.t / [i^ih].[n^n]/[d^d].[i^igh]. / failed phone:t / failed spelling:ct',
  'indicted' => 'ih.n/d.igh/t.eh.d / [i^ih].[n^n]/[d^d].[i^igh]/ / failed phone:t / failed spelling:ct',
  'indicting' => 'ih.n/d.igh/t.ih.ng / [i^ih].[n^n]/[d^d].[i^igh]/ / failed phone:t / failed spelling:ct',
  'indictment' => 'ih.n/d.igh.t/m.eh.n.t / [i^ih].[n^n]/[d^d].[i^igh]. / failed phone:t / failed spelling:ct',
  'indictments' => 'ih.n/d.igh.t/m.eh.n.t.s / [i^ih].[n^n]/[d^d].[i^igh]. / failed phone:t / failed spelling:ct',
  'indifferent' => 'ih.n/d.ih/f.r.eh.n.t / [i^ih].[n^n]/[d^d].[i^ih]/[ff^f]. / failed phone:r / failed spelling:er',
  'industrielle' => 'ih.n/d.uh/s.t.r.ee/eh.l / [i^ih].[n^n]/[d^d].[u^uh]/[s^s].[t^t].[r^r].[i^ee]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'inexact' => 'ih/n.ih.g/z.ah.k.t / [i^ih]/[n^n].[e^ih]. / failed phone:g / failed spelling:xa',
  'inexhaustible' => 'ih/n.ih.g/z.aw/s.t.eh/b.eh.l / [i^ih]/[n^n].[e^ih]. / failed phone:g / failed spelling:xh',
  'ingenious' => 'ih.n/j.ee/n.ye.eh.s / [i^ih].[n^n]/[g^j].[e^ee]/[n^n].[io^ue]. / failed phone:s / failed spelling:us',
  'ingeniously' => 'ih.n/j.ee/n.ye.eh/s.l.ee / [i^ih].[n^n]/[g^j].[e^ee]/[n^n].[io^ue]/ / failed phone:s / failed spelling:us',
  'ingham' => 'ih.ng/eh.m / [i^ih].[n^ng]/ / failed phone:eh / failed spelling:gh',
  'inglenook' => 'ih.ng/g.eh.l/n.oo.k / [i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'ingles' => 'ih.ng/g.eh.l.z / [i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'inglewood' => 'ih.ng/g.eh.l/w.oo.d / [i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'inglish' => 'ih.ng/g.eh/l.ih.sh / [i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'ingrao' => 'ee.ng/g.r.ow / [i^ee].[n^ng]/[g^g].[r^r]. / failed phone:ow / failed spelling:ao',
  'inhalation' => 'ih/n.eh/l.ay/sh.eh.n / [i^ih]/[n^n]. / failed phone:eh / failed spelling:ha',
  'innocenti' => 'ih/n.oh/ch.eh.n/t.ee / [i^ih]/[nn^n].[o^oh]/ / failed phone:t / failed spelling:ce',
  'inocencio' => 'ih/n.oh/ch.eh.n/ch.ee/oh / [i^ih]/[n^n].[o^oh]/ / failed phone:t / failed spelling:ce',
  'inouye' => 'ih/n.ue/ay / [i^ih]/[n^n].[ou^ue]/ / failed phone:ay / failed spelling:ye',
  'inscho' => 'ih.n/sh.oh / [i^ih].[n^n]/[sc^sh]. / failed phone:oh / failed spelling:ho',
  'insert' => 'ih.n/s.er.r.t / [i^ih].[n^n]/[se^s].[r^er]. / failed phone:r / failed spelling:t',
  'insignificance' => 'ih.n/s.ih.g/n.ye.ih/f.ih/k.eh.n.s / [i^ih].[n^n]/[s^s].[i^ih].[g^g]/[n^n]. / failed phone:ye / failed spelling:if',
  'insignificant' => 'ih.n/s.ih.g/n.ye.ih/f.ih/k.eh.n.t / [i^ih].[n^n]/[s^s].[i^ih].[g^g]/[n^n]. / failed phone:ye / failed spelling:if',
  'intaglio' => 'ih.n/t.ah/l.ye.oh / [i^ih].[n^n]/[t^t].[a^ah]/ / failed phone:l / failed spelling:gl',
  'intangibles' => 'ih.n/t.ah.n/j.eh/b.eh.l.z / [i^ih].[n^n]/[t^t].[a^ah].[n^n]/[g^j].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'intefadeh' => 'ih.n/t.eh/f.aw/d.eh / [i^ih].[n^n]/[t^t].[e^eh]/[f^f].[a^aw]/[d^d].[e^eh] / failed phone:eh / failed spelling:eh',
  'intermarriage' => 'ih.n/t.er/m.air/ih.j / [i^ih].[n^n]/[te^t].[r^er]/[m^m].[arr^air]/[i^ih]. / failed phone:j / failed spelling:ag',
  'intermingled' => 'ih.n/t.er/m.ih.ng/g.eh.l.d / [i^ih].[n^n]/[te^t].[r^er]/[m^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'intermingling' => 'ih.n/t.er/m.ih.ng/g.eh/l.ih.ng / [i^ih].[n^n]/[te^t].[r^er]/[m^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'intermountain' => 'ih.n/t.er/m.ow.n/t.ih.n / [i^ih].[n^n]/[te^t].[r^er]/[m^m].[ou^ow].[n^n]/[t^t].[a^ih]. / failed phone:n / failed spelling:in',
  'interpolated' => 'ih/t.er/p.eh/l.ay/t.ih.d / [i^ih]/ / failed phone:t / failed spelling:nt',
  'interview' => 'ih.n/t.er/v.ye.ue / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewed' => 'ih.n/t.er/v.ye.ue.d / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewee' => 'ih.n/t.er/v.ye.ue/ee / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewees' => 'ih.n/t.er/v.ye.ue/ee.z / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewer' => 'ih.n/t.er/v.ye.ue/er / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewers' => 'ih.n/t.er/v.ye.ue/er.z / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviewing' => 'ih.n/t.er/v.ye.ue/ih.ng / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'interviews' => 'ih.n/t.er/v.ye.ue.z / [i^ih].[n^n]/[te^t].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'intifadeh' => 'ih.n/t.eh/f.aw/d.ay / [i^ih].[n^n]/[t^t].[i^ih]/[f^f].[a^aw]/[d^d].[e^ay] / failed phone:ay / failed spelling:eh',
  'intrieri' => 'ih.n/t.r.ih/r.ee / [i^ih].[n^n]/[t^t].[r^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'invaluable' => 'ih.n/v.ah/l.ye.eh/b.eh.l / [i^ih].[n^n]/[v^v].[a^ah]/[l^l].[u^ue]/ / failed phone:b / failed spelling:ab',
  'investissements' => 'ih.n/v.eh/s.t.ee/z.ih/m.aw.n.t.s / [i^ih].[n^n]/[v^v].[e^eh]/[s^s].[t^t].[i^ee]/[s^z]. / failed phone:ih / failed spelling:se',
  'invisibles' => 'ih.n/v.ih/z.eh/b.eh.l.z / [i^ih].[n^n]/[v^v].[i^ih]/[s^z].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'iqbal' => 'ih.k/b.eh.l / [i^ih]. / failed phone:k / failed spelling:qb',
  'iraq' => 'ih/r.aw.k / [i^ih]/[r^r].[a^aw]. / failed phone:k / failed spelling:q',
  'iraqi' => 'ih/r.ah/k.ee / [i^ih]/[r^r].[a^ah]/ / failed phone:k / failed spelling:qi',
  'iraqis' => 'ih/r.ah/k.ee.z / [i^ih]/[r^r].[a^ah]/ / failed phone:k / failed spelling:qi',
  'irksome' => 'er.k/s.eh.m / [ir^er].[k^k]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'ironton' => 'igh.r.n/t.eh.n / [i^igh].[r^r]. / failed phone:n / failed spelling:on',
  'iroquois' => 'ih/r.eh/kw.oy / [i^ih]/[r^r].[o^uh]/[qu^kw].[oi^oy] / failed phone:oy / failed spelling:oi',
  'isaac' => 'igh/z.eh.k / [i^igh]/[s^z].[a^ah]. / failed phone:k / failed spelling:ac',
  'isaacks' => 'ih/s.aw.k.s / [i^ih]/[s^s].[a^aw]. / failed phone:x / failed spelling:ac',
  'isaacs' => 'igh/z.ih.k.s / [i^igh]/[s^z].[a^ih]. / failed phone:x / failed spelling:ac',
  'isaacson' => 'igh/z.ih.k/s.eh.n / [i^igh]/[s^z].[a^ih]. / failed phone:x / failed spelling:ac',
  'isaak' => 'ih/s.aw.k / [i^ih]/[s^s].[a^aw]. / failed phone:k / failed spelling:ak',
  'isabelle' => 'ih/z.eh/b.eh.l / [i^ih]/[s^z].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'isch' => 'ih.sh / [i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'isenhour' => 'ih/s.ih/n.ow.r / [i^ih]/[s^s].[e^ih]/[n^n]. / failed phone:ow / failed spelling:ho',
  'ishaq' => 'ih/sh.ah.k / [i^ih]/[sh^sh].[a^ah]. / failed phone:k / failed spelling:q',
  'ishmael' => 'ih/sh.m.ee.l / [i^ih]/[sh^sh].[m^m]. / failed phone:ee / failed spelling:ae',
  'island' => 'igh/l.eh.n.d / [i^igh]/ / failed phone:l / failed spelling:sl',
  'islander' => 'igh/l.eh.n/d.er / [i^igh]/ / failed phone:l / failed spelling:sl',
  'islanders' => 'igh/l.eh.n/d.er.z / [i^igh]/ / failed phone:l / failed spelling:sl',
  'islandia' => 'igh/l.ah.n/d.ee/eh / [i^igh]/ / failed phone:l / failed spelling:sl',
  'islands' => 'igh/l.eh.n.d.z / [i^igh]/ / failed phone:l / failed spelling:sl',
  'islas' => 'igh/l.eh.z / [i^igh]/ / failed phone:l / failed spelling:sl',
  'isle' => 'igh.l / [i^igh]. / failed phone:l / failed spelling:sl',
  'isleen' => 'igh/l.ee.n / [i^igh]/ / failed phone:l / failed spelling:sl',
  'isler' => 'igh/l.er / [i^igh]/ / failed phone:l / failed spelling:sl',
  'isles' => 'igh.l.z / [i^igh]. / failed phone:l / failed spelling:sl',
  'islets' => 'igh/l.eh.t.s / [i^igh]/ / failed phone:l / failed spelling:sl',
  'isley' => 'igh/l.ee / [i^igh]/ / failed phone:l / failed spelling:sl',
  'israel' => 'ih.z/r.ee/eh.l / [i^ih].[s^z]/[r^r]. / failed phone:ee / failed spelling:ae',
  'isthmus' => 'ih/s.m.eh.s / [i^ih]/[st^s]. / failed phone:m / failed spelling:hm',
  'italian' => 'ih/t.ah/l.ye.eh.n / [i^ih]/[t^t].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'italianate' => 'ih/t.ah/l.ye.eh/n.ay.t / [i^ih]/[t^t].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'italians' => 'ih/t.ah/l.ye.eh.n.z / [i^ih]/[t^t].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'itll' => 'ih/t.eh.l / [i^ih]/[t^t]. / failed phone:eh / failed spelling:ll',
  'itzhak' => 'ih.t/s.aw.k / [i^ih].[t^t]/[z^s]. / failed phone:aw / failed spelling:ha',
  'iwanicki' => 'ih/v.eh/n.ih.t/s.k.ee / [i^ih]/ / failed phone:v / failed spelling:wa',
  'iwanski' => 'ih/v.ah.n/s.k.ee / [i^ih]/ / failed phone:v / failed spelling:wa',
  'iwinski' => 'ih/v.ih.n/s.k.ee / [i^ih]/ / failed phone:v / failed spelling:wi',
  'izetbegovic' => 'ih/z.eh.t/b.eh/g.oh/v.ih.ch / [i^ih]/[z^z].[e^eh].[t^t]/[b^b].[e^eh]/[g^g].[o^oh]/[v^v].[i^ih]. / failed phone:t / failed spelling:c',
  'izquierdo' => 'ih.z/kw.ih.r/d.oh / [i^ih].[z^z]/[qu^kw].[i^ih]. / failed phone:r / failed spelling:er',
  'j' => 'j.ay / [j^j]. / failed phone:ay / failed spelling:',
  'ja' => 'ye.aw /  / failed phone:ye / failed spelling:ja',
  'jabbour' => 'zh.eh/b.oo.r /  / failed phone:zh / failed spelling:ja',
  'jablonowski' => 'ye.eh/b.l.eh/n.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jablonski' => 'ye.eh/b.l.aw.n/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jablonsky' => 'ye.eh/b.l.aw.n/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jacek' => 'j.aw/ch.eh.k / [j^j].[a^aw]/ / failed phone:t / failed spelling:ce',
  'jackowski' => 'ye.eh/s.k.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jacksonville' => 'j.ah.k/s.eh.n/v.ih.l / [j^j].[a^ah].[ck^k]/[s^s].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'jaco' => 'ye.aw/k.oh /  / failed phone:ye / failed spelling:ja',
  'jacoba' => 'ye.aw/k.oh/b.eh /  / failed phone:ye / failed spelling:ja',
  'jacobe' => 'j.ah/k.eh.b / [j^j].[a^ah]/[c^k].[o^uh].[b^b] / failed phone:b / failed spelling:be',
  'jacobi' => 'ye.aw/k.oh/b.ee /  / failed phone:ye / failed spelling:ja',
  'jacobina' => 'ye.eh/k.eh/b.igh/n.eh /  / failed phone:ue / failed spelling:ja',
  'jacobo' => 'ye.aw/k.oh/b.oh /  / failed phone:ye / failed spelling:ja',
  'jacobowitz' => 'ye.eh/k.aw/b.eh/w.ih.t.s /  / failed phone:ue / failed spelling:ja',
  'jacque' => 'zh.ay.k /  / failed phone:zh / failed spelling:ja',
  'jacques' => 'zh.aw.k /  / failed phone:zh / failed spelling:ja',
  'jacquet' => 'ye.aw/k.ay.t /  / failed phone:ye / failed spelling:ja',
  'jacquetta' => 'j.aw/k.eh/t.eh / [j^j].[a^aw]/[c^k]. / failed phone:eh / failed spelling:qu',
  'jacquez' => 'ye.aw/kw.eh.z /  / failed phone:ye / failed spelling:ja',
  'jacquot' => 'zh.eh/kw.oh /  / failed phone:zh / failed spelling:ja',
  'jae' => 'j.ay / [j^j].[a^ay] / failed phone:ay / failed spelling:ae',
  'jaeckel' => 'ye.eh/k.eh.l /  / failed phone:ue / failed spelling:ja',
  'jaeger' => 'ye.eh/g.er /  / failed phone:ue / failed spelling:ja',
  'jaegers' => 'ye.eh/g.er.z /  / failed phone:ue / failed spelling:ja',
  'jaekel' => 'ye.eh/k.eh.l /  / failed phone:ue / failed spelling:ja',
  'jaenicke' => 'ye.eh/n.ih.k /  / failed phone:ue / failed spelling:ja',
  'jagielski' => 'ye.eh/g.ee.l/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jago' => 'ye.aw/g.oh /  / failed phone:ye / failed spelling:ja',
  'jagodzinski' => 'ye.eh/g.eh/j.ih.n/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jagow' => 'ye.aw/g.oh /  / failed phone:ye / failed spelling:ja',
  'jagt' => 'j.ah.t / [j^j].[a^ah]. / failed phone:t / failed spelling:gt',
  'jahnke' => 'j.ah.ng.k / [j^j].[a^ah]. / failed phone:ng / failed spelling:hn',
  'jahr' => 'j.aw.r / [j^j].[a^oh]. / failed phone:r / failed spelling:hr',
  'jaime' => 'h.igh/m.ee /  / failed phone:h / failed spelling:ja',
  'jaimes' => 'h.igh/m.ee.z /  / failed phone:h / failed spelling:ja',
  'jakeway' => 'j.ay/kw.ay / [j^j].[a^ay]/ / failed phone:kw / failed spelling:ke',
  'jakubek' => 'ye.eh/k.ue/b.eh.k /  / failed phone:ue / failed spelling:ja',
  'jakubiak' => 'ye.eh/k.uh/b.ee/ah.k /  / failed phone:ue / failed spelling:ja',
  'jakubik' => 'ye.eh/k.ue/b.ih.k /  / failed phone:ue / failed spelling:ja',
  'jakubowicz' => 'ye.eh/k.uh/b.eh/v.ih.ch /  / failed phone:ue / failed spelling:ja',
  'jakubowski' => 'ye.eh/k.eh/b.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jamar' => 'ye.aw/m.aw.r /  / failed phone:ye / failed spelling:ja',
  'jambor' => 'ye.aw.m/b.aw.r /  / failed phone:ye / failed spelling:ja',
  'jamieson' => 'j.ay/m.ih/s.eh.n / [j^j].[a^ay]/[m^m].[i^ih]/ / failed phone:s / failed spelling:es',
  'jamroz' => 'ye.aw/m.r.oh.z /  / failed phone:ye / failed spelling:ja',
  'janacek' => 'ye.ah/n.eh/ch.eh.k /  / failed phone:ye / failed spelling:ja',
  'janak' => 'ye.ah/n.eh.k /  / failed phone:ye / failed spelling:ja',
  'janardhan' => 'j.eh/n.aw.r/d.eh.n / [j^j].[a^ah]/[n^n].[a^oh].[r^r]/[d^d]. / failed phone:eh / failed spelling:ha',
  'janczak' => 'ye.ah.n/ch.ah.k /  / failed phone:ye / failed spelling:ja',
  'jandreau' => 'zh.eh.n/d.r.oh /  / failed phone:zh / failed spelling:ja',
  'jandt' => 'j.ah.n.t / [j^j].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'janecek' => 'ye.ah/n.ih/ch.eh.k /  / failed phone:ye / failed spelling:ja',
  'janeczko' => 'ye.eh/n.eh.ch/k.oh /  / failed phone:ue / failed spelling:ja',
  'janeiro' => 'j.eh/n.air/oh / [j^j].[a^ah]/[ne^n]. / failed phone:air / failed spelling:ir',
  'janek' => 'ye.ah/n.eh.k /  / failed phone:ye / failed spelling:ja',
  'janelle' => 'zh.eh/n.eh.l /  / failed phone:zh / failed spelling:ja',
  'janesville' => 'j.ay.n.z/v.ih.l / [j^j].[a^ay].[ne^n].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'jangled' => 'j.ah.ng/g.eh.l.d / [j^j].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'jani' => 'ye.aw/n.ee /  / failed phone:ye / failed spelling:ja',
  'janiak' => 'ye.ah/n.ee/ah.k /  / failed phone:ye / failed spelling:ja',
  'janicek' => 'ye.ah/n.ih/ch.eh.k /  / failed phone:ye / failed spelling:ja',
  'janicke' => 'j.ah/n.ih.k / [j^j].[a^ah]/[n^n].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'janik' => 'ye.ah/n.ih.k /  / failed phone:ye / failed spelling:ja',
  'janikowski' => 'ye.eh/n.ih/k.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'janisch' => 'j.ah/n.ih.sh / [j^j].[a^ah]/[n^n].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'janish' => 'ye.ah/n.ih.sh /  / failed phone:ye / failed spelling:ja',
  'janiszewski' => 'ye.eh/n.ih/sh.eh.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'janke' => 'j.ah.ng.k / [j^j].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'jankiewicz' => 'ye.ah.n/k.eh/v.ih.ch /  / failed phone:ye / failed spelling:ja',
  'jankowiak' => 'ye.eh.ng/k.ow/ee/ah.k /  / failed phone:ue / failed spelling:ja',
  'jankowski' => 'ye.eh.ng/k.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'janosik' => 'ye.eh/n.oh/s.ih.k /  / failed phone:ue / failed spelling:ja',
  'janoski' => 'ye.eh/n.ow/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'janosko' => 'ye.eh/n.oh/s.k.oh /  / failed phone:ue / failed spelling:ja',
  'janosky' => 'ye.eh/n.oh/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'janota' => 'ye.eh/n.oh/t.eh /  / failed phone:ue / failed spelling:ja',
  'janousek' => 'ye.eh/n.ue/s.eh.k /  / failed phone:ue / failed spelling:ja',
  'janow' => 'ye.ah/n.oh /  / failed phone:ye / failed spelling:ja',
  'janowiak' => 'ye.eh/n.ow/ee/ah.k /  / failed phone:ue / failed spelling:ja',
  'janowicz' => 'ye.ah/n.eh/v.ih.ch /  / failed phone:ye / failed spelling:ja',
  'janowitz' => 'ye.ah/n.eh/w.ih.t.s /  / failed phone:ye / failed spelling:ja',
  'janowski' => 'ye.eh/n.aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jansky' => 'ye.ah.n/s.k.ee /  / failed phone:ye / failed spelling:ja',
  'jansma' => 'ye.ah.n/s.m.eh /  / failed phone:ye / failed spelling:ja',
  'janthina' => 'ye.aw.n/th.ee/n.eh /  / failed phone:ye / failed spelling:ja',
  'janusz' => 'ye.aw/n.oo.sh /  / failed phone:ye / failed spelling:ja',
  'januszewski' => 'ye.eh/n.eh/sh.eh.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jaqua' => 'ye.ah/kw.eh /  / failed phone:ye / failed spelling:ja',
  'jaquay' => 'zh.eh/k.ay /  / failed phone:zh / failed spelling:ja',
  'jaquess' => 'ye.aw/kw.ih.s /  / failed phone:ye / failed spelling:ja',
  'jaquez' => 'ye.aw/kw.eh.z /  / failed phone:ye / failed spelling:ja',
  'jarecki' => 'ye.er/eh.t/s.k.ee /  / failed phone:er / failed spelling:ja',
  'jarema' => 'ye.er/ee/m.eh /  / failed phone:er / failed spelling:ja',
  'jares' => 'zh.air.z /  / failed phone:zh / failed spelling:ja',
  'jarmon' => 'ye.aw.r/m.aw.n /  / failed phone:ye / failed spelling:ja',
  'jaros' => 'ye.aw/r.oh.z /  / failed phone:ye / failed spelling:ja',
  'jarosz' => 'ye.aw/r.eh.sh /  / failed phone:ye / failed spelling:ja',
  'jaroszewski' => 'ye.er/eh/sh.eh.f/s.k.ee /  / failed phone:er / failed spelling:ja',
  'jaroszynski' => 'j.air/eh/z.ih.n/s.k.ee / [j^j].[ar^air]/[o^uh]/[s^z]. / failed phone:ih / failed spelling:zy',
  'jarrard' => 'zh.er/aw.r.d /  / failed phone:zh / failed spelling:ja',
  'jarreau' => 'zh.er/oh /  / failed phone:zh / failed spelling:ja',
  'jarrell' => 'ye.aw/r.ay.l /  / failed phone:ye / failed spelling:ja',
  'jarriel' => 'zh.er/ee.l /  / failed phone:zh / failed spelling:ja',
  'jarzombek' => 'ye.er/z.aw.m/b.eh.k /  / failed phone:er / failed spelling:ja',
  'jas' => 'j.ay.m.z / [j^j].[a^ay]. / failed phone:m / failed spelling:s',
  'jasek' => 'ye.aw/s.eh.k /  / failed phone:ye / failed spelling:ja',
  'jasinski' => 'ye.eh/s.ih.n/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jaskiewicz' => 'ye.aw/s.k.eh/v.ih.ch /  / failed phone:ye / failed spelling:ja',
  'jasko' => 'ye.aw/s.k.oh /  / failed phone:ye / failed spelling:ja',
  'jaskolski' => 'ye.eh/s.k.oh.l/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jaskot' => 'ye.aw/s.k.eh.t /  / failed phone:ye / failed spelling:ja',
  'jaskowiak' => 'ye.eh/s.k.ow/ee/ah.k /  / failed phone:ue / failed spelling:ja',
  'jaskulski' => 'ye.eh/s.k.uh.l/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jasmer' => 'j.ah/s.eh/m.er / [j^j].[a^ah]/[s^s]. / failed phone:eh / failed spelling:me',
  'jasmina' => 'ye.eh/s.m.igh/n.eh /  / failed phone:ue / failed spelling:ja',
  'jaso' => 'ye.aw/s.oh /  / failed phone:ye / failed spelling:ja',
  'jaudon' => 'ye.ow/d.aw.n /  / failed phone:ye / failed spelling:ja',
  'jauregui' => 'ye.ow/r.ay/g.w.ee /  / failed phone:ye / failed spelling:ja',
  'jaurequi' => 'ye.ow/r.ay/kw.ee /  / failed phone:ye / failed spelling:ja',
  'javier' => 'h.aw/v.ee/air /  / failed phone:h / failed spelling:ja',
  'javorsky' => 'ye.eh/v.aw.r/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jaworowski' => 'ye.eh/w.er/aw.f/s.k.ee /  / failed phone:ue / failed spelling:ja',
  'jaya' => 'j.igh/eh / [j^j]. / failed phone:igh / failed spelling:ay',
  'jayashankar' => 'j.igh/eh/sh.aw.ng/k.aw.r / [j^j]. / failed phone:igh / failed spelling:ay',
  'jaye' => 'j.ay / [j^j].[a^ay] / failed phone:ay / failed spelling:ay',
  'jayewardene' => 'j.ay/w.aw.r/d.ee.n / [j^j].[a^ay]/ / failed phone:w / failed spelling:ye',
  'jeanbaptiste' => 'zh.eh.n/b.eh.p/t.ih.s.t /  / failed phone:zh / failed spelling:je',
  'jeanlouis' => 'zh.aw.n/l.ue/ee.z /  / failed phone:zh / failed spelling:je',
  'jeanmichele' => 'zh.aw.n/m.eh/sh.eh.l /  / failed phone:zh / failed spelling:je',
  'jeanne' => 'j.ee.n / [j^j].[ea^ee].[n^n] / failed phone:n / failed spelling:an',
  'jeanpierre' => 'zh.aw.n/p.ee/air /  / failed phone:zh / failed spelling:je',
  'jeansonne' => 'j.eh.n/s.eh.n / [j^j].[ea^eh].[n^n]/[s^s].[o^uh].[n^n] / failed phone:n / failed spelling:nn',
  'jedlicka' => 'ye.ih.d/l.ih/s.k.eh /  / failed phone:ye / failed spelling:je',
  'jefferies' => 'j.eh/f.r.ee.z / [j^j].[e^eh]/[ff^f]. / failed phone:r / failed spelling:er',
  'jelinski' => 'ye.ih/l.ih.n/s.k.ee /  / failed phone:ye / failed spelling:je',
  'jenne' => 'j.eh.n / [j^j].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'jennette' => 'zh.ih/n.eh.t /  / failed phone:zh / failed spelling:je',
  'jentsch' => 'j.eh.n.ch / [j^j].[e^eh].[n^n].[t^t]. / failed phone:t / failed spelling:ts',
  'jeong' => 'j.eh.ng / [j^j].[e^eh]. / failed phone:ng / failed spelling:on',
  'jeopardize' => 'j.eh/p.er/d.igh.z / [j^j].[e^eh]/ / failed phone:p / failed spelling:op',
  'jeopardized' => 'j.eh/p.er/d.igh.z.d / [j^j].[e^eh]/ / failed phone:p / failed spelling:op',
  'jeopardizes' => 'j.eh/p.er/d.igh/z.ih.z / [j^j].[e^eh]/ / failed phone:p / failed spelling:op',
  'jeopardizing' => 'j.eh/p.er/d.igh/z.ih.ng / [j^j].[e^eh]/ / failed phone:p / failed spelling:op',
  'jeopardy' => 'j.eh/p.er/d.ee / [j^j].[e^eh]/ / failed phone:p / failed spelling:op',
  'jerde' => 'j.er.d / [j^j].[er^er].[d^d] / failed phone:d / failed spelling:de',
  'jeremia' => 'ye.air/ee/m.ee/eh /  / failed phone:ye / failed spelling:je',
  'jerez' => 'ye.air/eh.z /  / failed phone:ye / failed spelling:je',
  'jerrell' => 'ye.air/ay.l /  / failed phone:ye / failed spelling:je',
  'jerrome' => 'ye.air/oh/m.ay /  / failed phone:ye / failed spelling:je',
  'jersusalem' => 'j.er/ue/s.eh/l.eh.m / [j^j].[er^er]/ / failed phone:ue / failed spelling:su',
  'jerzak' => 'ye.er/z.eh.k /  / failed phone:er / failed spelling:je',
  'jeschke' => 'j.eh.sh.k / [j^j].[e^eh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'jeske' => 'j.eh.s.k / [j^j].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'jesmer' => 'j.eh/s.eh/m.er / [j^j].[e^eh]/[s^s]. / failed phone:eh / failed spelling:me',
  'jessye' => 'j.eh/s.ee / [j^j].[e^eh]/[ss^s].[y^ee] / failed phone:ee / failed spelling:ye',
  'jewkes' => 'j.ue.k.s / [j^j].[ew^ue].[k^k]. / failed phone:s / failed spelling:es',
  'jezek' => 'ye.eh/z.eh.k /  / failed phone:ue / failed spelling:je',
  'jezewski' => 'ye.ih/z.eh.f/s.k.ee /  / failed phone:ye / failed spelling:je',
  'jezierski' => 'ye.ih/z.ih.r/s.k.ee /  / failed phone:ye / failed spelling:je',
  'jeziorski' => 'ye.ih/z.ee/aw.r/s.k.ee /  / failed phone:ye / failed spelling:je',
  'jha' => 'j.aw / [j^j]. / failed phone:aw / failed spelling:ha',
  'jhirmack' => 'j.er/m.ah.k / [j^j]. / failed phone:er / failed spelling:hi',
  'jiang' => 'j.aw.ng / [j^j]. / failed phone:aw / failed spelling:ia',
  'jiangsu' => 'j/ye.aw.ng/s.ue / [j^j]/ / failed phone:ye / failed spelling:ia',
  'jiawen' => 'j.ee/w.eh.n / [j^j].[i^ee]/ / failed phone:w / failed spelling:aw',
  'jiggling' => 'j.ih/g.eh/l.ih.ng / [j^j].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:li',
  'jimenez' => 'h.ih/m.eh/n.eh.z /  / failed phone:h / failed spelling:ji',
  'jiminez' => 'h.ih/m.eh/n.eh.z /  / failed phone:h / failed spelling:ji',
  'jingles' => 'j.ih.ng/g.eh.l.z / [j^j].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'jirak' => 'j.aw/r.eh.k / [j^j]. / failed phone:aw / failed spelling:ir',
  'jirik' => 'j.aw/r.ih.k / [j^j]. / failed phone:aw / failed spelling:ir',
  'jiron' => 'ye.ih/r.aw.n /  / failed phone:ye / failed spelling:ji',
  'jirsa' => 'ye.ih.r/s.eh /  / failed phone:ye / failed spelling:ji',
  'jividen' => 'ye.ee/v.igh/d.eh.n /  / failed phone:ye / failed spelling:ji',
  'joachim' => 'ye.oh/aw/k.ih.m /  / failed phone:ye / failed spelling:jo',
  'joachims' => 'ye.oh/aw/k.ih.m.z /  / failed phone:ye / failed spelling:jo',
  'joanne' => 'j.oh/ah.n / [j^j].[o^oh]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'joaquim' => 'w.aw/k.ee.m /  / failed phone:w / failed spelling:jo',
  'joaquin' => 'w.aw/k.ee.n /  / failed phone:w / failed spelling:jo',
  'jobina' => 'ye.oh/b.ee/n.eh /  / failed phone:ye / failed spelling:jo',
  'jobyna' => 'ye.eh/b.ee/n.eh /  / failed phone:ue / failed spelling:jo',
  'jocosa' => 'ye.oh/k.oh/s.eh /  / failed phone:ye / failed spelling:jo',
  'jocylan' => 'j.aw/s.l.eh.n / [j^j].[o^aw]/[c^s]. / failed phone:l / failed spelling:yl',
  'jodoin' => 'zh.eh/d.oy.n /  / failed phone:zh / failed spelling:jo',
  'joedicke' => 'j.oh/d.ih.k / [j^j].[o^oh]/[ed^d].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'joerger' => 'ye.er/g.er /  / failed phone:er / failed spelling:jo',
  'joette' => 'zh.oh/eh.t /  / failed phone:zh / failed spelling:jo',
  'joffe' => 'j.aw.f / [j^j].[o^aw].[ff^f] / failed phone:f / failed spelling:ff',
  'joffrion' => 'ye.oh/f.r.ee/aw.n /  / failed phone:ye / failed spelling:jo',
  'johan' => 'ye.oh/h.aw.n /  / failed phone:ye / failed spelling:jo',
  'johann' => 'ye.oh/h.aw.n /  / failed phone:ye / failed spelling:jo',
  'johanning' => 'ye.oh/h.ah/n.ih.ng /  / failed phone:ye / failed spelling:jo',
  'johanns' => 'ye.oh/h.aw.n.z /  / failed phone:ye / failed spelling:jo',
  'johansson' => 'ye.oh/h.aw.n/s.eh.n /  / failed phone:ye / failed spelling:jo',
  'johnnie' => 'j.aw/n.ee / [j^j].[o^aw]/[hn^n]. / failed phone:ee / failed spelling:ni',
  'johnny' => 'j.aw/n.ee / [j^j].[o^aw]/[hn^n]. / failed phone:ee / failed spelling:ny',
  'johson' => 'j.aw/s.eh.n / [j^j].[o^aw]/ / failed phone:s / failed spelling:hs',
  'joie' => 'zh/w.aw /  / failed phone:zh / failed spelling:jo',
  'jojola' => 'ye.oh/ye.oh/l.eh /  / failed phone:ye / failed spelling:jo',
  'jolicoeur' => 'zh.aw/l.ih/k.er /  / failed phone:zh / failed spelling:jo',
  'jolivette' => 'zh.aw/l.ih/v.eh.t /  / failed phone:zh / failed spelling:jo',
  'jolla' => 'h.oy/ye.eh /  / failed phone:h / failed spelling:jo',
  'jolliffe' => 'j.aw/l.ih.f / [j^j].[o^aw]/[ll^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'joosten' => 'ye.ue/s.eh.n /  / failed phone:ue / failed spelling:jo',
  'jopling' => 'j.oh/p.eh/l.ih.ng / [j^j].[o^oh]/[p^p]. / failed phone:eh / failed spelling:li',
  'jordahl' => 'j.aw.r/d.aw.l / [j^j].[o^oh].[r^r]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'jordana' => 'ye.aw.r/d.ah/n.eh /  / failed phone:ye / failed spelling:jo',
  'jorde' => 'j.aw.r.d / [j^j].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'jorge' => 'h.aw.r/h.ay /  / failed phone:h / failed spelling:jo',
  'jose' => 'h.oh/z.ay /  / failed phone:h / failed spelling:jo',
  'josette' => 'zh.eh/s.eh.t /  / failed phone:zh / failed spelling:jo',
  'jostled' => 'j.aw/s.eh.l.d / [j^j].[o^aw]/[st^s]. / failed phone:eh / failed spelling:le',
  'jostling' => 'j.aw/s.eh/l.ih.ng / [j^j].[o^aw]/[st^s]. / failed phone:eh / failed spelling:li',
  'joubert' => 'ye.ow/b.er.t /  / failed phone:ye / failed spelling:jo',
  'jourdan' => 'zh.oo.r/d.ah.n /  / failed phone:zh / failed spelling:jo',
  'jouret' => 'zh/w.aw/r.ay /  / failed phone:zh / failed spelling:jo',
  'jovanovic' => 'ye.eh/v.eh/n.aw/v.ih.k /  / failed phone:ue / failed spelling:jo',
  'jovita' => 'ye.eh/v.igh/t.eh /  / failed phone:ue / failed spelling:jo',
  'joye' => 'j.oy / [j^j].[oy^oy] / failed phone:oy / failed spelling:oy',
  'jozwiak' => 'ye.aw.z/v.ee/ah.k /  / failed phone:ye / failed spelling:jo',
  'jr' => 'j.ue/n.ye.er / [j^j]. / failed phone:ue / failed spelling:r',
  'juan' => 'w.aw.n /  / failed phone:w / failed spelling:ju',
  'juana' => 'w.aw/n.eh /  / failed phone:w / failed spelling:ju',
  'juanita' => 'w.aw/n.ee/t.eh /  / failed phone:w / failed spelling:ju',
  'juarez' => 'w.aw/r.eh.z /  / failed phone:w / failed spelling:ju',
  'judges' => 'j.uh/j.ih.z / [j^j].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'judging' => 'j.uh/j.ih.ng / [j^j].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'judgment' => 'j.uh.j/m.eh.n.t / [j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'judgmental' => 'j.eh.j/m.eh.n/t.eh.l / [j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'judgments' => 'j.uh.j/m.eh.n.t.s / [j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'judiciously' => 'j.ue/d.ih/sh.ih/s.l.ee / [j^j].[u^ue]/[d^d].[i^ih]/[c^sh].[i^ih]/ / failed phone:s / failed spelling:ou',
  'judishe' => 'j.ue/d.ee.sh / [j^j].[u^ue]/[d^d].[i^ee].[s^sh] / failed phone:sh / failed spelling:sh',
  'juenemann' => 'ye.ue.n/m.eh.n /  / failed phone:ue / failed spelling:ju',
  'juenger' => 'ye.ue.ng/g.er /  / failed phone:ue / failed spelling:ju',
  'juergen' => 'ye.er/g.eh.n /  / failed phone:er / failed spelling:ju',
  'juergens' => 'ye.er/g.eh.n.z /  / failed phone:er / failed spelling:ju',
  'juggled' => 'j.uh/g.eh.l.d / [j^j].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'juggler' => 'j.uh/g.eh/l.er / [j^j].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'jugglers' => 'j.uh/g.eh/l.er.z / [j^j].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'juggles' => 'j.uh/g.eh.l.z / [j^j].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'juggling' => 'j.uh/g.eh/l.ih.ng / [j^j].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:li',
  'juhas' => 'j.ue/eh.z / [j^j].[u^ue]/ / failed phone:eh / failed spelling:ha',
  'juhasz' => 'ye.uh/h.eh.sh /  / failed phone:ye / failed spelling:ju',
  'juhl' => 'j.uh.l / [j^j].[u^uh]. / failed phone:l / failed spelling:hl',
  'juhlin' => 'j.ue/l.ih.n / [j^j].[u^ue]/ / failed phone:l / failed spelling:hl',
  'juhnke' => 'j.uh.ng.k / [j^j].[u^uh]. / failed phone:ng / failed spelling:hn',
  'julia' => 'j.ue/l.ye.eh / [j^j].[u^ue]/[l^l]. / failed phone:ue / failed spelling:ia',
  'julianne' => 'j.ue/l.ee/eh.n / [j^j].[u^ue]/[l^l].[i^ee]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'julieta' => 'ye.ue/l.ee/t.eh /  / failed phone:ue / failed spelling:ju',
  'julina' => 'ye.ue/l.ee/n.eh /  / failed phone:ue / failed spelling:ju',
  'julius' => 'j.ue/l.ye.eh.s / [j^j].[u^ue]/[l^l]. / failed phone:ue / failed spelling:iu',
  'juliusz' => 'j.ue/l.ee/ue.s / [j^j].[u^ue]/[l^l].[i^ee]/[u^ue].[s^s] / failed phone:s / failed spelling:sz',
  'jumbled' => 'j.uh.m/b.eh.l.d / [j^j].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'jumonville' => 'zh.uh/m.eh.n/v.ih.l /  / failed phone:zh / failed spelling:ju',
  'jundt' => 'j.uh.n.t / [j^j].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'junejo' => 'j.ue/n.ay/h.oh / [j^j].[u^ue]/[n^n].[e^ay]/ / failed phone:h / failed spelling:jo',
  'jung' => 'ye.oo.ng /  / failed phone:ue / failed spelling:ju',
  'jungles' => 'j.uh.ng/g.eh.l.z / [j^j].[u^uh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'junia' => 'ye.ue/n.ee/eh /  / failed phone:ue / failed spelling:ju',
  'juniata' => 'ye.ue/n.ee/aw/t.eh /  / failed phone:ue / failed spelling:ju',
  'junior' => 'j.ue/n.ye.er / [j^j].[u^ue]/[n^n]. / failed phone:er / failed spelling:io',
  'juniors' => 'j.ue/n.ye.er.z / [j^j].[u^ue]/[n^n]. / failed phone:er / failed spelling:io',
  'junius' => 'j.ue/n.ee/ih.s / [j^j].[u^ue]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'junta' => 'h.oo.n/t.eh /  / failed phone:h / failed spelling:ju',
  'jurado' => 'ye.oo/r.aw/d.oh /  / failed phone:ue / failed spelling:ju',
  'juran' => 'ye.oo/r.aw.n /  / failed phone:ue / failed spelling:ju',
  'jurczak' => 'ye.er/ch.ah.k /  / failed phone:er / failed spelling:ju',
  'jurczyk' => 'ye.er/ch.ih.k /  / failed phone:er / failed spelling:ju',
  'jurewicz' => 'j.oo/r.eh/v.ih.ch / [j^j].[u^oo]/[r^r].[e^eh]/ / failed phone:v / failed spelling:wi',
  'jurkiewicz' => 'ye.er/k.eh/v.ih.ch /  / failed phone:er / failed spelling:ju',
  'jurkovich' => 'ye.er/k.eh/v.ih.ch /  / failed phone:er / failed spelling:ju',
  'jurkowski' => 'ye.er/k.aw.f/s.k.ee /  / failed phone:er / failed spelling:ju',
  'jusino' => 'ye.ue/s.ee/n.oh /  / failed phone:ue / failed spelling:ju',
  'justina' => 'ye.ue/s.t.ee/n.eh /  / failed phone:ue / failed spelling:ju',
  'justis' => 'ye.ue/s.t.ih.s /  / failed phone:ue / failed spelling:ju',
  'justiss' => 'ye.ue/s.t.ee.s /  / failed phone:ue / failed spelling:ju',
  'jutras' => 'ye.ue/t.r.aw.z /  / failed phone:ue / failed spelling:ju',
  'jyishane' => 'j.ee/sh.ay.n / [j^j].[y^ee]/ / failed phone:sh / failed spelling:is',
  'k' => 'k.ay / [k^k]. / failed phone:ay / failed spelling:',
  'kaas' => 'k.aw.z / [k^k].[a^aw]. / failed phone:z / failed spelling:as',
  'kaatz' => 'k.aw.t.s / [k^k].[a^aw]. / failed phone:t / failed spelling:at',
  'kabler' => 'k.ay/b.eh/l.er / [k^k].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'kaczmarczyk' => 'k.aw.ch/m.er/ch.ih.k / [k^k].[a^aw]. / failed phone:t / failed spelling:cz',
  'kaczmarek' => 'k.eh.ch/m.aw/r.eh.k / [k^k].[a^ah]. / failed phone:t / failed spelling:cz',
  'kaczmarski' => 'k.eh.ch/m.aw.r/s.k.ee / [k^k].[a^ah]. / failed phone:t / failed spelling:cz',
  'kaczor' => 'k.aw/ch.er / [k^k].[a^aw]/ / failed phone:t / failed spelling:cz',
  'kaczorowski' => 'k.eh/ch.er/aw.f/s.k.ee / [k^k].[a^ah]/ / failed phone:t / failed spelling:cz',
  'kaczynski' => 'k.eh/ch.ih.n/s.k.ee / [k^k].[a^ah]/ / failed phone:t / failed spelling:cz',
  'kaehler' => 'k.eh/l.er / [k^k].[a^ah]/ / failed phone:l / failed spelling:eh',
  'kaestner' => 'k.eh.s.t/n.er / [k^k].[a^ah]. / failed phone:s / failed spelling:es',
  'kaetzel' => 'k.eh.t/z.eh.l / [k^k].[a^ah]. / failed phone:t / failed spelling:et',
  'kahl' => 'k.aw.l / [k^k].[a^aw]. / failed phone:l / failed spelling:hl',
  'kahle' => 'k.aw.l / [k^k].[a^aw]. / failed phone:l / failed spelling:hl',
  'kahler' => 'k.aw/l.er / [k^k].[a^aw]/ / failed phone:l / failed spelling:hl',
  'kahley' => 'k.aw/l.ee / [k^k].[a^aw]/ / failed phone:l / failed spelling:hl',
  'kahng' => 'k.aw.ng / [k^k].[a^aw]. / failed phone:ng / failed spelling:hn',
  'kahr' => 'k.aw.r / [k^k].[a^oh]. / failed phone:r / failed spelling:hr',
  'kahre' => 'k.air / [k^k]. / failed phone:air / failed spelling:ah',
  'kahrs' => 'k.aw.r.z / [k^k].[a^oh]. / failed phone:r / failed spelling:hr',
  'kalbfleisch' => 'k.ah.l.b/f.l.igh.sh / [k^k].[a^ah].[l^l].[b^b]/[f^f].[le^l].[i^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kalinowski' => 'k.eh/l.ih/n.aw.f/s.k.ee / [k^k].[a^ah]/[l^l].[i^ih]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'kalisz' => 'k.aw/l.ih.sh / [k^k].[a^aw]/[l^l].[i^ih].[s^sh] / failed phone:sh / failed spelling:sz',
  'kaliszewski' => 'k.eh/l.ih/sh.eh.f/s.k.ee / [k^k].[a^ah]/[l^l].[i^ih]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'kalmus' => 'k.ah.l/m.ih.s / [k^k].[a^ah].[l^l]/[m^m]. / failed phone:ih / failed spelling:us',
  'kalthoff' => 'k.ah.l.th / [k^k].[a^ah].[l^l].[th^th] / failed phone:th / failed spelling:th',
  'kamehameha' => 'k.eh/m.ay/eh/m.ay/eh / [k^k].[a^ah]/[m^m].[e^ay]/ / failed phone:eh / failed spelling:ha',
  'kamentsev' => 'k.eh/m.eh.n.t/s.aw.v / [k^k].[a^ah]/[m^m].[e^eh].[n^n].[t^t]/[se^s]. / failed phone:aw / failed spelling:v',
  'kamler' => 'k.ah/m.eh/l.er / [k^k].[a^ah]/[m^m]. / failed phone:eh / failed spelling:le',
  'kampschulte' => 'k.ah.m.p/sh.oo.l/t.ee / [k^k].[a^ah].[m^m].[p^p]/[sc^sh]. / failed phone:oo / failed spelling:hu',
  'kamradt' => 'k.ah/m.r.eh.t / [k^k].[a^ah]/[m^m].[r^r].[a^ah]. / failed phone:t / failed spelling:dt',
  'kandt' => 'k.ah.n.t / [k^k].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'kaniewski' => 'k.aw/n.ee/eh.f/s.k.ee / [k^k].[a^aw]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'kanne' => 'k.ah.n / [k^k].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'kao' => 'k.ow / [k^k]. / failed phone:ow / failed spelling:ao',
  'kaolin' => 'k.ow/l.ih.n / [k^k]. / failed phone:ow / failed spelling:ao',
  'kaori' => 'k.aw/r.ee / [k^k].[a^aw]/ / failed phone:r / failed spelling:or',
  'kapler' => 'k.ay/p.eh/l.er / [k^k].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'kapuscinski' => 'k.eh/p.eh.s/ch.ih.n/s.k.ee / [k^k].[a^ah]/[p^p].[u^uh].[sc^s]/ / failed phone:t / failed spelling:in',
  'karabakh' => 'k.air/eh/b.ah.k / [k^k].[ar^air]/[a^ah]/[b^b].[a^ah].[k^k] / failed phone:k / failed spelling:kh',
  'karadzic' => 'k.aw/r.aw/j.ih.k / [k^k].[a^aw]/[r^r].[a^aw]/[d^j]. / failed phone:ih / failed spelling:zi',
  'karaoke' => 'k.air/ee/oh/k.ee / [k^k].[ar^air]/ / failed phone:ee / failed spelling:ao',
  'karbowski' => 'k.er/b.aw.f/s.k.ee / [k^k].[ar^er]/[b^b].[o^aw]. / failed phone:f / failed spelling:ws',
  'karcz' => 'k.aw.r.ch / [k^k].[a^oh].[r^r]. / failed phone:t / failed spelling:cz',
  'karczewski' => 'k.er/ch.eh.f/s.k.ee / [k^k].[ar^er]/ / failed phone:t / failed spelling:cz',
  'kardashian' => 'k.aw/d.eh/sh.ay.n / [k^k].[a^aw]/ / failed phone:d / failed spelling:rd',
  'karlsruhe' => 'k.aw.r.l.z/r.ue / [k^k].[a^oh].[r^r].[l^l].[s^z]/[r^r].[u^ue] / failed phone:ue / failed spelling:uh',
  'karpowicz' => 'k.aw.r/p.eh/v.ih.ch / [k^k].[a^oh].[r^r]/[p^p].[o^uh]/ / failed phone:v / failed spelling:wi',
  'karstadt' => 'k.aw.r/s.t.ah.t / [k^k].[a^oh].[r^r]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'karwoski' => 'k.er/v.ow/s.k.ee / [k^k].[ar^er]/ / failed phone:v / failed spelling:wo',
  'karwowski' => 'k.er/v.aw.f/s.k.ee / [k^k].[ar^er]/ / failed phone:v / failed spelling:wo',
  'kasch' => 'k.ah.sh / [k^k].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kaschak' => 'k.ah/sh.eh.k / [k^k].[a^ah]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'kashoggi' => 'k.eh/sh.aw/j.ee / [k^k].[a^ah]/[s^sh].[ho^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'kasler' => 'k.ah/s.eh/l.er / [k^k].[a^ah]/[s^s]. / failed phone:eh / failed spelling:le',
  'kasmer' => 'k.ah/s.eh/m.er / [k^k].[a^ah]/[s^s]. / failed phone:eh / failed spelling:me',
  'kasprowicz' => 'k.aw/s.p.r.eh/v.ih.ch / [k^k].[a^aw]/[s^s].[p^p].[r^r].[o^uh]/ / failed phone:v / failed spelling:wi',
  'kastenmeier' => 'k.ah/s.t.eh.n/m.igh.r / [k^k].[a^ah]/[s^s].[t^t].[e^eh].[n^n]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'kastl' => 'k.ah/s.t.eh.l / [k^k].[a^ah]/[s^s].[t^t]. / failed phone:eh / failed spelling:l',
  'kasza' => 'k.aw/sh.eh / [k^k].[a^aw]/[s^sh]. / failed phone:eh / failed spelling:za',
  'kaszuba' => 'k.eh/sh.ue/b.eh / [k^k].[a^ah]/[s^sh]. / failed phone:ue / failed spelling:zu',
  'katharine' => 'k.ah/th.r.ih.n / [k^k].[a^ah]/[th^th].[a^ih]. / failed phone:n / failed spelling:ri',
  'katragadda' => 'k.aw/t.eh/g.aw/d.eh / [k^k].[a^aw]/[t^t]. / failed phone:eh / failed spelling:ra',
  'kausch' => 'k.ow.sh / [k^k].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kavanagh' => 'k.ah/v.eh/n.aw / [k^k].[a^ah]/[v^v].[a^ah]/[n^n].[a^aw] / failed phone:aw / failed spelling:ag',
  'kawecki' => 'k.aw/v.eh.t/s.k.ee / [k^k].[a^aw]/ / failed phone:v / failed spelling:we',
  'kaweske' => 'k.aw/v.eh/s.k.ee / [k^k].[a^aw]/ / failed phone:v / failed spelling:we',
  'kayak' => 'k.igh/ah.k / [k^k]. / failed phone:igh / failed spelling:ay',
  'kayaking' => 'k.igh/ah/k.ih.ng / [k^k]. / failed phone:igh / failed spelling:ay',
  'kayaks' => 'k.igh/ah.k.s / [k^k]. / failed phone:igh / failed spelling:ay',
  'kaye' => 'k.ay / [k^k].[a^ay] / failed phone:ay / failed spelling:ay',
  'kaysersberg' => 'k.igh/z.er.z/b.er.g / [k^k]. / failed phone:igh / failed spelling:ay',
  'kazakh' => 'k.ah/z.ah.k / [k^k].[a^ah]/[z^z].[a^ah].[k^k] / failed phone:k / failed spelling:kh',
  'kazakhs' => 'k.ah/z.ah.k.s / [k^k].[a^ah]/[z^z].[a^ah].[k^k]. / failed phone:s / failed spelling:hs',
  'kazakhstan' => 'k.aw/z.aw.k/s.t.aw.n / [k^k].[a^aw]/[z^z].[a^aw].[k^k]/ / failed phone:s / failed spelling:hs',
  'kazikaev' => 'k.ah/z.ih/k.ay.v / [k^k].[a^ah]/[z^z].[i^ih]/[k^k].[a^ay]. / failed phone:v / failed spelling:ev',
  'kazmierczak' => 'k.aw.z/m.ih.r/ch.ah.k / [k^k].[a^aw].[z^z]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'kazmierski' => 'k.eh.z/m.ih.r/s.k.ee / [k^k].[a^ah].[z^z]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'kedrowski' => 'k.ih/d.r.aw.f/s.k.ee / [k^k].[e^ih]/[d^d].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'kedzierski' => 'k.ih/j.ih.r/s.k.ee / [k^k].[e^ih]/[d^j]. / failed phone:ih / failed spelling:zi',
  'keefe' => 'k.ee.f / [k^k].[ee^ee].[f^f] / failed phone:f / failed spelling:ef',
  'keeffe' => 'k.ee.f / [k^k].[ee^ee].[ff^f] / failed phone:f / failed spelling:ef',
  'keehan' => 'k.ee/eh.n / [k^k].[e^ee]/[e^eh]. / failed phone:n / failed spelling:ha',
  'kehl' => 'k.eh.l / [k^k].[e^eh]. / failed phone:l / failed spelling:hl',
  'kehler' => 'k.eh/l.er / [k^k].[e^eh]/ / failed phone:l / failed spelling:hl',
  'kehm' => 'k.eh.m / [k^k].[e^eh]. / failed phone:m / failed spelling:hm',
  'kehne' => 'k.eh.n / [k^k].[e^eh].[hn^n] / failed phone:n / failed spelling:hn',
  'keiretsu' => 'k.ih/r.eh.t/s.ue / [k^k].[e^ih]/ / failed phone:r / failed spelling:ir',
  'keirn' => 'k.ih.r.n / [k^k].[e^ih]. / failed phone:r / failed spelling:ir',
  'keirsey' => 'k.ih.r/s.ee / [k^k].[e^ih]. / failed phone:r / failed spelling:ir',
  'keisler' => 'k.igh/s.eh/l.er / [k^k].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'keisling' => 'k.igh/s.eh/l.ih.ng / [k^k].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:li',
  'kelsch' => 'k.eh.l.sh / [k^k].[e^eh].[l^l].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kempke' => 'k.eh.m.p.k / [k^k].[e^eh].[m^m].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'kendzierski' => 'k.ih.n/j.ih.r/s.k.ee / [k^k].[e^ih].[n^n]/[d^j]. / failed phone:ih / failed spelling:zi',
  'kendzior' => 'k.ih.n/j.ee/er / [k^k].[e^ih].[n^n]/[d^j]. / failed phone:ee / failed spelling:zi',
  'kennebeck' => 'k.eh.n/b.eh.k / [k^k].[e^eh].[n^n]/ / failed phone:b / failed spelling:ne',
  'kennemore' => 'k.eh.n/m.aw.r / [k^k].[e^eh].[n^n]/ / failed phone:m / failed spelling:ne',
  'kensler' => 'k.eh.n/s.eh/l.er / [k^k].[e^eh].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'keogh' => 'k.ee/oh / [k^k].[e^ee]/[o^oh] / failed phone:oh / failed spelling:gh',
  'keplinger' => 'k.eh/p.eh/l.ih.ng/er / [k^k].[e^eh]/[p^p]. / failed phone:eh / failed spelling:li',
  'kerekes' => 'k.air/ih.k.s / [k^k].[er^air]/[e^ih].[k^k]. / failed phone:s / failed spelling:es',
  'keresztes' => 'k.air/eh/s.t.ee.z / [k^k].[er^air]/[e^eh]/[s^s]. / failed phone:t / failed spelling:zt',
  'kerrville' => 'k.er/v.ih.l / [k^k].[err^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'kersch' => 'k.er.sh / [k^k].[er^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kerscher' => 'k.er/sh.er / [k^k].[er^er]/[sc^sh]. / failed phone:er / failed spelling:he',
  'kertesz' => 'k.er/t.ih.sh / [k^k].[er^er]/[t^t].[e^ih].[s^sh] / failed phone:sh / failed spelling:sz',
  'keske' => 'k.eh.s.k / [k^k].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'kesler' => 'k.eh/s.eh/l.er / [k^k].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'kesling' => 'k.eh/s.eh/l.ih.ng / [k^k].[e^eh]/[s^s]. / failed phone:eh / failed spelling:li',
  'kettler' => 'k.eh/t.eh/l.er / [k^k].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'kettles' => 'k.eh/t.eh.l.z / [k^k].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'kettlewell' => 'k.eh/t.eh.l/w.eh.l / [k^k].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'keville' => 'k.ee/v.ih.l / [k^k].[e^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'keyser' => 'k.igh/z.er / [k^k]. / failed phone:igh / failed spelling:ey',
  'kganakga' => 'k.eh/g.eh/n.ah/g.eh / [k^k]. / failed phone:eh / failed spelling:ga',
  'kgori' => 'k.eh/g.aw/r.ee / [k^k]. / failed phone:eh / failed spelling:go',
  'khabarovsk' => 'k.ah/b.er/aw.f.s.k / [k^k]. / failed phone:ah / failed spelling:ha',
  'khad' => 'k.ah.d / [k^k]. / failed phone:ah / failed spelling:ha',
  'khaki' => 'k.aw/k.ee / [k^k]. / failed phone:aw / failed spelling:ha',
  'khakis' => 'k.ah/k.ee.z / [k^k]. / failed phone:ah / failed spelling:ha',
  'khalaf' => 'k.ah/l.eh.f / [k^k]. / failed phone:ah / failed spelling:ha',
  'khaled' => 'k.aw/l.eh.d / [k^k]. / failed phone:aw / failed spelling:ha',
  'khalid' => 'k.aw/l.ih.d / [k^k]. / failed phone:aw / failed spelling:ha',
  'khalifa' => 'k.eh/l.ee/f.eh / [k^k]. / failed phone:eh / failed spelling:ha',
  'khalil' => 'k.ah/l.eh.l / [k^k]. / failed phone:ah / failed spelling:ha',
  'khalsa' => 'k.aw.l/s.eh / [k^k]. / failed phone:aw / failed spelling:ha',
  'khamenei' => 'k.eh/m.ay/n.ee / [k^k]. / failed phone:eh / failed spelling:ha',
  'khan' => 'k.aw.n / [k^k]. / failed phone:aw / failed spelling:ha',
  'khanate' => 'k.aw/n.ay.t / [k^k]. / failed phone:aw / failed spelling:ha',
  'khanna' => 'k.ah/n.eh / [k^k]. / failed phone:ah / failed spelling:ha',
  'kharg' => 'k.aw.r.g / [k^k]. / failed phone:oh / failed spelling:ha',
  'khartoum' => 'k.aw.r/t.ue.m / [k^k]. / failed phone:oh / failed spelling:ha',
  'khasbulatov' => 'k.aw.s/b.eh/l.aw/t.aw.f / [k^k]. / failed phone:aw / failed spelling:ha',
  'khashoggi' => 'k.eh/sh.aw/j.ee / [k^k]. / failed phone:eh / failed spelling:ha',
  'kheel' => 'k.ee.l / [k^k]. / failed phone:ee / failed spelling:he',
  'khem' => 'k.eh.m / [k^k]. / failed phone:eh / failed spelling:he',
  'khmer' => 'k/m.air / [k^k]/ / failed phone:m / failed spelling:hm',
  'khomeini' => 'k.oh/m.ay/n.ee / [k^k]. / failed phone:oh / failed spelling:ho',
  'khoo' => 'k.ue / [k^k]. / failed phone:ue / failed spelling:ho',
  'khost' => 'k.oh.s.t / [k^k]. / failed phone:oh / failed spelling:ho',
  'khouri' => 'k.ow/r.ee / [k^k]. / failed phone:ow / failed spelling:ho',
  'khoury' => 'k.ow/r.ee / [k^k]. / failed phone:ow / failed spelling:ho',
  'khrushchev' => 'k.r.ue.s/ch.eh.v / [k^k]. / failed phone:r / failed spelling:hr',
  'khumalo' => 'k.ye.ue/m.aw/l.oh / [k^k]. / failed phone:ue / failed spelling:hu',
  'khuu' => 'k.ue / [k^k]. / failed phone:ue / failed spelling:hu',
  'kia' => 'k.ee/er / [k^k].[i^ee]/ / failed phone:er / failed spelling:a',
  'kibbe' => 'k.ih.b / [k^k].[i^ih].[bb^b] / failed phone:b / failed spelling:bb',
  'kibler' => 'k.aw/b.eh/l.er / [k^k]. / failed phone:aw / failed spelling:ib',
  'kibodeaux' => 'k.ih/b.eh/d.oh / [k^k].[i^ih]/[b^b].[o^uh]/[d^d]. / failed phone:oh / failed spelling:ea',
  'kidde' => 'k.ih.d / [k^k].[i^ih].[dd^d] / failed phone:d / failed spelling:dd',
  'kiedrowski' => 'k.ee/d.r.aw.f/s.k.ee / [k^k].[ie^ee]/[d^d].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'kiehl' => 'k.ee.l / [k^k].[ie^ee]. / failed phone:l / failed spelling:hl',
  'kiehne' => 'k.ee.n / [k^k].[ie^ee].[hn^n] / failed phone:n / failed spelling:hn',
  'kier' => 'k.ih.r / [k^k].[i^ih]. / failed phone:r / failed spelling:er',
  'kiernan' => 'k.ih.r/n.eh.n / [k^k].[i^ih]. / failed phone:r / failed spelling:er',
  'kierscht' => 'k.ih.r.sh.t / [k^k].[i^ih]. / failed phone:r / failed spelling:er',
  'kierstead' => 'k.ih.r/s.t.eh.d / [k^k].[i^ih]. / failed phone:r / failed spelling:er',
  'kightlinger' => 'k.igh/t.eh/l.ih.ng/er / [k^k].[igh^igh]/[t^t]. / failed phone:eh / failed spelling:li',
  'kijowski' => 'k.ih/ye.aw.f/s.k.ee / [k^k].[i^ih]/ / failed phone:ye / failed spelling:jo',
  'kikkoman' => 'k.ee/k.oh/m.aw.n / [k^k].[i^ee]/[k^k]. / failed phone:oh / failed spelling:ko',
  'kille' => 'k.ih.l / [k^k].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'killian' => 'k.ih/l.ye.eh.n / [k^k].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'kimler' => 'k.ih/m.eh/l.er / [k^k].[i^ih]/[m^m]. / failed phone:eh / failed spelling:le',
  'kindleberger' => 'k.ih.n/d.eh.l/b.er/g.er / [k^k].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'kindled' => 'k.ih.n/d.eh.l.d / [k^k].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'kindler' => 'k.ih.n/d.eh/l.er / [k^k].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'kindt' => 'k.ih.n.t / [k^k].[i^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'kingsville' => 'k.ih.ng.z/v.ih.l / [k^k].[i^ih].[ng^ng].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'kinkade' => 'k.ih.ng/k.eh.d / [k^k].[i^ih].[n^ng]/[k^k].[a^ah].[d^d] / failed phone:d / failed spelling:de',
  'kinnaird' => 'k.ih/n.er.d / [k^k].[i^ih]/[n^n]. / failed phone:er / failed spelling:na',
  'kinne' => 'k.ih.n / [k^k].[i^ih].[n^n] / failed phone:n / failed spelling:nn',
  'kinsler' => 'k.ih.n/s.eh/l.er / [k^k].[i^ih].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'kinzlmaier' => 'k.ih.n/z.eh.l/m.igh/er / [k^k].[i^ih].[n^n]/[z^z]. / failed phone:eh / failed spelling:lm',
  'kiplinger' => 'k.igh/p.eh/l.ih.ng/er / [k^k].[i^igh]/[p^p]. / failed phone:eh / failed spelling:li',
  'kirghizia' => 'k.air/g.ih.t/s.ee/eh / [k^k]. / failed phone:air / failed spelling:ir',
  'kirkwood' => 'k.er/kw.oo.d / [k^k].[ir^er]/ / failed phone:kw / failed spelling:kw',
  'kirsch' => 'k.er.sh / [k^k].[ir^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kirschbaum' => 'k.er.sh/b.ow.m / [k^k].[ir^er].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'kirschenbaum' => 'k.er/sh.eh.n/b.ow.m / [k^k].[ir^er]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'kirschenmann' => 'k.er/sh.eh.n/m.eh.n / [k^k].[ir^er]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'kirschman' => 'k.er/sh.m.eh.n / [k^k].[ir^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'kisch' => 'k.ih.sh / [k^k].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kishbaugh' => 'k.ih.sh/b.ow / [k^k].[i^ih].[sh^sh]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'kisler' => 'k.ih/s.eh/l.er / [k^k].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'kisling' => 'k.ih/s.eh/l.ih.ng / [k^k].[i^ih]/[s^s]. / failed phone:eh / failed spelling:li',
  'kiszczak' => 'k.ih/z.ah.k / [k^k].[i^ih]/[s^z]. / failed phone:ah / failed spelling:zc',
  'kitowski' => 'k.ih/t.aw.f/s.k.ee / [k^k].[i^ih]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'kitsch' => 'k.ih.ch / [k^k].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'kittaneh' => 'k.ih/t.aw/n.eh / [k^k].[i^ih]/[tt^t].[a^aw]/[n^n].[e^eh] / failed phone:eh / failed spelling:h',
  'kittler' => 'k.ih/t.eh/l.er / [k^k].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'kittles' => 'k.ih/t.eh.l.z / [k^k].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'kiyotaka' => 'k.ee/oh/t.aw/k.eh / [k^k].[i^ee]/ / failed phone:oh / failed spelling:yo',
  'kjar' => 'k.eh/j.aw.r / [k^k]. / failed phone:eh / failed spelling:ja',
  'kjell' => 'k.ye.eh.l / [k^k]. / failed phone:ue / failed spelling:je',
  'kjellberg' => 'j.eh.l/b.er.g /  / failed phone:j / failed spelling:kj',
  'kjenstad' => 'k.ye.eh.n/s.t.ah.d / [k^k]. / failed phone:ue / failed spelling:je',
  'kjos' => 'k.eh/j.aw.s / [k^k]. / failed phone:eh / failed spelling:jo',
  'klaas' => 'k.l.aw.s / [k^k].[l^l].[a^aw]. / failed phone:s / failed spelling:as',
  'klaassen' => 'k.l.aw/s.eh.n / [k^k].[l^l].[a^aw]/ / failed phone:s / failed spelling:as',
  'klabunde' => 'k.l.ah/b.eh.n.d / [k^k].[l^l].[a^ah]/[b^b].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'klahr' => 'k.l.ah.r / [k^k].[l^l].[a^ah]. / failed phone:r / failed spelling:hr',
  'kleinschmidt' => 'k.l.igh.n/sh.m.ih.t / [k^k].[le^l].[i^igh].[n^n]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'klejna' => 'k.l.ay/n.er / [k^k].[l^l].[e^ay]/ / failed phone:n / failed spelling:jn',
  'klemme' => 'k.l.eh.m / [k^k].[l^l].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'klenke' => 'k.l.eh.ng.k / [k^k].[l^l].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'klesch' => 'k.l.eh.sh / [k^k].[l^l].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'klimaszewski' => 'k.l.ih/m.eh/sh.eh.f/s.k.ee / [k^k].[l^l].[i^ih]/[m^m].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'klimczak' => 'k.l.ih.m/ch.ah.k / [k^k].[l^l].[i^ih].[m^m]/ / failed phone:t / failed spelling:cz',
  'klimowicz' => 'k.l.ih/m.eh/v.ih.ch / [k^k].[l^l].[i^ih]/[m^m].[o^uh]/ / failed phone:v / failed spelling:wi',
  'klindt' => 'k.l.ih.n.t / [k^k].[l^l].[i^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'klingler' => 'k.l.ih.ng/g.eh/l.er / [k^k].[l^l].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'klinke' => 'k.l.ih.ng.k / [k^k].[l^l].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'klitzke' => 'k.l.ih.t.z.k / [k^k].[l^l].[i^ih].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'klocke' => 'k.l.aw.k / [k^k].[l^l].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'klonowski' => 'k.l.eh/n.aw.f/s.k.ee / [k^k].[l^l].[o^uh]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'klosowski' => 'k.l.eh/s.aw.f/s.k.ee / [k^k].[l^l].[o^uh]/[s^s].[o^aw]. / failed phone:f / failed spelling:ws',
  'klugh' => 'k.l.uh / [k^k].[l^l].[u^uh] / failed phone:uh / failed spelling:ug',
  'klugt' => 'k.l.uh.t / [k^k].[l^l].[u^uh]. / failed phone:t / failed spelling:gt',
  'klundt' => 'k.l.uh.n.t / [k^k].[l^l].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'kmart' => 'k.ay/m.aw.r.t / [k^k]. / failed phone:ay / failed spelling:ma',
  'kmetz' => 'k.eh/m.eh.t.s / [k^k]. / failed phone:eh / failed spelling:me',
  'kmiec' => 'k.eh/m.ee.k / [k^k]. / failed phone:eh / failed spelling:mi',
  'kmiecik' => 'k.eh/m.ee/ch.ih.k / [k^k]. / failed phone:eh / failed spelling:mi',
  'knaack' => 'n.aw.k / [kn^n].[a^aw]. / failed phone:k / failed spelling:ac',
  'knaak' => 'n.aw.k / [kn^n].[a^aw]. / failed phone:k / failed spelling:ak',
  'knackstedt' => 'n.ah.k/s.t.ih.t / [kn^n].[a^ah].[ck^k]/[s^s].[t^t].[e^ih]. / failed phone:t / failed spelling:dt',
  'knapke' => 'n.ay.p.k / [kn^n].[a^ay].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'knierim' => 'n.ih/r.ih.m / [kn^n].[i^ih]/ / failed phone:r / failed spelling:er',
  'knievel' => 'k.eh/n.ee/v.eh.l / [k^k]. / failed phone:eh / failed spelling:ni',
  'knigge' => 'n.ih.g / [kn^n].[i^ih].[gg^g] / failed phone:g / failed spelling:gg',
  'knobbe' => 'n.aw.b / [kn^n].[o^aw].[bb^b] / failed phone:b / failed spelling:bb',
  'knoche' => 'n.aw.ch / [kn^n].[o^aw].[ch^ch] / failed phone:t / failed spelling:ch',
  'knoedler' => 'n.oh/d.eh/l.er / [kn^n].[o^oh]/[ed^d]. / failed phone:eh / failed spelling:le',
  'knowledge' => 'n.aw/l.eh.j / [kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'knowledgeable' => 'n.aw/l.eh/j.eh/b.eh.l / [kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'knowledgeably' => 'n.aw/l.ih/j.eh/b.l.ee / [kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'knowledgeware' => 'n.aw/l.ih.j/w.air / [kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'knoxville' => 'n.aw.k/s.v.ih.l / [kn^n].[o^aw].[x^x]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'knuckles' => 'n.uh/k.eh.l.z / [kn^n].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'knudtson' => 'n.ue.t/s.eh.n / [kn^n].[u^ue]. / failed phone:t / failed spelling:dt',
  'knute' => 'k.eh/n.ue.t / [k^k]. / failed phone:eh / failed spelling:nu',
  'kobler' => 'k.oh/b.eh/l.er / [k^k].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'kochanowski' => 'k.eh/h.eh/n.aw.f/s.k.ee / [k^k].[o^uh]/ / failed phone:h / failed spelling:ch',
  'kochanski' => 'k.eh/h.ah.n/s.k.ee / [k^k].[o^uh]/ / failed phone:h / failed spelling:ch',
  'kochevar' => 'k.eh/h.eh/v.er / [k^k].[o^uh]/ / failed phone:h / failed spelling:ch',
  'kocinski' => 'k.eh/ch.ih.n/s.k.ee / [k^k].[o^uh]/ / failed phone:t / failed spelling:ci',
  'koegler' => 'k.oh/g.eh/l.er / [k^k].[oe^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'koehl' => 'k.oh.l / [k^k].[o^oh]. / failed phone:l / failed spelling:eh',
  'koehler' => 'k.oh/l.er / [k^k].[o^oh]/ / failed phone:l / failed spelling:eh',
  'koehne' => 'k.oh.n / [k^k].[oe^oh].[hn^n] / failed phone:n / failed spelling:eh',
  'koelle' => 'k.oh.l / [k^k].[o^oh].[el^l] / failed phone:l / failed spelling:el',
  'koelsch' => 'k.oh.l.sh / [k^k].[o^oh].[el^l].[sc^sh] / failed phone:sh / failed spelling:sc',
  'koenig' => 'k.er/n.ih.g / [k^k]. / failed phone:r / failed spelling:oe',
  'koenigs' => 'k.er/n.ih.g.z / [k^k]. / failed phone:r / failed spelling:oe',
  'koepke' => 'k.oh.p.k / [k^k].[oe^oh].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'koestler' => 'k.oh/s.eh/l.er / [k^k].[oe^oh]/[st^s]. / failed phone:eh / failed spelling:le',
  'koetje' => 'k.oh.t.j / [k^k].[oe^oh].[t^t].[j^j] / failed phone:j / failed spelling:je',
  'koffler' => 'k.aw/f.eh/l.er / [k^k].[o^aw]/[ff^f]. / failed phone:eh / failed spelling:le',
  'kofler' => 'k.oh/f.eh/l.er / [k^k].[o^oh]/[f^f]. / failed phone:eh / failed spelling:le',
  'kogler' => 'k.oh/g.eh/l.er / [k^k].[o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'kohles' => 'k.oh/h.eh.l.z / [k^k].[o^oh]/[h^h]. / failed phone:eh / failed spelling:le',
  'kohnke' => 'k.aw.ng.k / [k^k].[o^aw]. / failed phone:ng / failed spelling:hn',
  'kohring' => 'k.aw/r.ih.ng / [k^k].[o^aw]/ / failed phone:r / failed spelling:hr',
  'koike' => 'k.oy.k / [k^k].[oi^oy].[k^k] / failed phone:k / failed spelling:ke',
  'kojima' => 'k.eh/ye.igh/m.eh / [k^k].[o^uh]/ / failed phone:ye / failed spelling:ji',
  'kokoschka' => 'k.eh/k.aw.sh/k.eh / [k^k].[o^uh]/[k^k].[o^aw].[s^sh]/[ch^k]. / failed phone:eh / failed spelling:ka',
  'kokoszka' => 'k.eh/k.aw.sh/k.eh / [k^k].[o^uh]/[k^k].[o^aw].[s^sh]/ / failed phone:k / failed spelling:zk',
  'kolakowski' => 'k.eh/l.eh/k.aw.f/s.k.ee / [k^k].[o^uh]/[l^l].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kolbe' => 'k.oh.l.b / [k^k].[o^oh].[l^l].[b^b] / failed phone:b / failed spelling:be',
  'kolich' => 'k.aw/l.ih.h / [k^k].[o^aw]/[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'kollasch' => 'k.aw/l.eh.sh / [k^k].[o^aw]/[ll^l].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kolle' => 'k.aw.l / [k^k].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'kolodziejski' => 'k.eh/l.aw/j.ee/ay/s.k.ee / [k^k].[o^uh]/[l^l].[o^aw]/[d^j]. / failed phone:ee / failed spelling:zi',
  'kolojejchick' => 'k.oh/l.oh/j.ay/ch.ih.k / [k^k].[o^oh]/[l^l].[o^oh]/[j^j].[e^ay]/ / failed phone:t / failed spelling:jc',
  'komercni' => 'k.oh/m.er.ch/n.ee / [k^k].[o^oh]/[m^m].[er^er]. / failed phone:t / failed spelling:cn',
  'komorowski' => 'k.eh/m.er/aw.f/s.k.ee / [k^k].[o^uh]/[m^m].[o^oh].[r^r]/[o^aw]. / failed phone:f / failed spelling:ws',
  'komsomolskaya' => 'k.eh.m/s.aw/m.eh.l/s.k.igh/eh / [k^k].[o^uh].[m^m]/[s^s].[o^aw]/[m^m].[o^uh].[l^l]/[s^s].[k^k]. / failed phone:igh / failed spelling:ay',
  'konczal' => 'k.aw.n/ch.eh.l / [k^k].[o^aw].[n^n]/ / failed phone:t / failed spelling:cz',
  'kondracki' => 'k.eh.n/d.r.aw.t/s.k.ee / [k^k].[o^uh].[n^n]/[d^d].[r^r].[a^aw]. / failed phone:t / failed spelling:ck',
  'konicek' => 'k.aw/n.ih/ch.eh.k / [k^k].[o^aw]/[n^n].[i^ih]/ / failed phone:t / failed spelling:ce',
  'konicki' => 'k.eh/n.ih.t/s.k.ee / [k^k].[o^uh]/[n^n].[i^ih]. / failed phone:t / failed spelling:ck',
  'konieczka' => 'k.eh/n.ee.ch/k.eh / [k^k].[o^uh]/[n^n].[ie^ee]. / failed phone:t / failed spelling:cz',
  'konieczny' => 'k.eh/n.ee.ch/n.ee / [k^k].[o^uh]/[n^n].[ie^ee]. / failed phone:t / failed spelling:cz',
  'koninklijke' => 'k.aw/n.ih.ng/k.l.ee/k.ee / [k^k].[o^aw]/[n^n].[i^ih].[n^ng]/[k^k].[l^l].[i^ee]/ / failed phone:k / failed spelling:jk',
  'konwinski' => 'k.eh.n/v.ih.n/s.k.ee / [k^k].[o^uh].[n^n]/ / failed phone:v / failed spelling:wi',
  'kopacz' => 'k.aw/p.eh.ch / [k^k].[o^aw]/[p^p].[a^ah]. / failed phone:t / failed spelling:cz',
  'kopczynski' => 'k.eh.p/ch.ih.n/s.k.ee / [k^k].[o^uh].[p^p]/ / failed phone:t / failed spelling:cz',
  'kopecky' => 'k.eh/p.eh.t/s.k.ee / [k^k].[o^uh]/[p^p].[e^eh]. / failed phone:t / failed spelling:ck',
  'kopischke' => 'k.eh/p.ih.sh/k.ee / [k^k].[o^uh]/[p^p].[i^ih].[s^sh]/[ch^k]. / failed phone:ee / failed spelling:ke',
  'kopke' => 'k.oh.p.k / [k^k].[o^oh].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'koprowski' => 'k.eh/p.r.aw.f/s.k.ee / [k^k].[o^uh]/[p^p].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'korczak' => 'k.aw.r/ch.ah.k / [k^k].[o^oh].[r^r]/ / failed phone:t / failed spelling:cz',
  'kornacki' => 'k.er/n.aw.t/s.k.ee / [k^k].[o^oh].[r^r]/[n^n].[a^aw]. / failed phone:t / failed spelling:ck',
  'korns' => 'k.aw.n.z / [k^k].[o^aw]. / failed phone:n / failed spelling:rn',
  'korzeniewski' => 'k.er/z.ih/n.ee/eh.f/s.k.ee / [k^k].[o^oh].[r^r]/[z^z].[e^ih]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'kosakowski' => 'k.eh/s.eh/k.aw.f/s.k.ee / [k^k].[o^uh]/[s^s].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kosanke' => 'k.aw/s.eh.ng.k / [k^k].[o^aw]/[s^s].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'kosch' => 'k.aw.sh / [k^k].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'koscielniak' => 'k.eh.s/ch.ee.l/n.ee/ah.k / [k^k].[o^uh].[sc^s]/ / failed phone:t / failed spelling:ie',
  'koscinski' => 'k.eh.s/ch.ih.n/s.k.ee / [k^k].[o^uh].[sc^s]/ / failed phone:t / failed spelling:in',
  'koslowski' => 'k.eh/s.l.aw.f/s.k.ee / [k^k].[o^uh]/[s^s].[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'kosmicki' => 'k.eh/s.m.ih.t/s.k.ee / [k^k].[o^uh]/[s^s].[m^m].[i^ih]. / failed phone:t / failed spelling:ck',
  'kosnovsky' => 'k.aw.z/n.aw.f/s.k.ee / [k^k].[o^aw].[s^z]/[n^n].[o^aw]. / failed phone:f / failed spelling:vs',
  'kosowski' => 'k.eh/s.aw.f/s.k.ee / [k^k].[o^uh]/[s^s].[o^aw]. / failed phone:f / failed spelling:ws',
  'kostecki' => 'k.eh/s.t.eh.t/s.k.ee / [k^k].[o^uh]/[s^s].[t^t].[e^eh]. / failed phone:t / failed spelling:ck',
  'kostelecky' => 'k.eh/s.t.eh/l.eh.t/s.k.ee / [k^k].[o^uh]/[s^s].[t^t].[e^eh]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'kostrzewski' => 'k.aw/s.t.er/z.eh.f/s.k.ee / [k^k].[o^aw]/[s^s].[t^t].[r^er]/[z^z].[e^eh]. / failed phone:f / failed spelling:ws',
  'kotecki' => 'k.eh/t.eh.t/s.k.ee / [k^k].[o^uh]/[t^t].[e^eh]. / failed phone:t / failed spelling:ck',
  'kotler' => 'k.oh/t.eh/l.er / [k^k].[o^oh]/[t^t]. / failed phone:eh / failed spelling:le',
  'kotowski' => 'k.eh/t.aw.f/s.k.ee / [k^k].[o^uh]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'kotsonis' => 'k.ah.t/s.oh/n.eh.s / [k^k]. / failed phone:ah / failed spelling:ot',
  'kovacevic' => 'k.eh/v.eh/ch.eh/v.ih.k / [k^k].[o^uh]/[v^v].[a^ah]/ / failed phone:t / failed spelling:ce',
  'kovacevich' => 'k.eh/v.aw/ch.ih/v.ih.ch / [k^k].[o^uh]/[v^v].[a^aw]/ / failed phone:t / failed spelling:ce',
  'kovacich' => 'k.eh/v.aw/ch.ih.h / [k^k].[o^uh]/[v^v].[a^aw]/ / failed phone:t / failed spelling:ci',
  'kovacik' => 'k.aw/v.eh/ch.ih.k / [k^k].[o^aw]/[v^v].[a^ah]/ / failed phone:t / failed spelling:ci',
  'kovalchik' => 'k.eh/v.aw.l/h.ih.k / [k^k].[o^uh]/[v^v].[a^aw].[l^l]/ / failed phone:h / failed spelling:ch',
  'kovalcik' => 'k.aw/v.eh.l/ch.ih.k / [k^k].[o^aw]/[v^v].[a^ah].[l^l]/ / failed phone:t / failed spelling:ci',
  'koversada' => 'k.uh/v.er/s.aw/t.eh / [k^k].[o^uh]/[ve^v].[r^er]/[s^s].[a^aw]/ / failed phone:t / failed spelling:da',
  'kowalchuk' => 'k.ow/aw.l/h.eh.k / [k^k].[ow^ow]/[a^aw].[l^l]/ / failed phone:h / failed spelling:ch',
  'kowalczyk' => 'k.ow/eh.l/ch.ih.k / [k^k].[ow^ow]/[a^ah].[l^l]/ / failed phone:t / failed spelling:cz',
  'kowalewski' => 'k.ow/eh/l.eh.f/s.k.ee / [k^k].[ow^ow]/[a^ah]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'kowalke' => 'k.aw/w.aw.k / [k^k].[o^aw]/[w^w].[a^aw].[lk^k] / failed phone:k / failed spelling:lk',
  'kowalkowski' => 'k.aw/w.aw/k.aw.f/s.k.ee / [k^k].[o^aw]/[w^w].[a^aw]/[lk^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kozakiewicz' => 'k.eh/z.aw/k.eh/v.ih.ch / [k^k].[o^uh]/[z^z].[a^aw]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'kozicki' => 'k.eh/z.ih.t/s.k.ee / [k^k].[o^uh]/[z^z].[i^ih]. / failed phone:t / failed spelling:ck',
  'kozikowski' => 'k.eh/z.ih/k.aw.f/s.k.ee / [k^k].[o^uh]/[z^z].[i^ih]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kozlowski' => 'k.eh/z.l.aw.f/s.k.ee / [k^k].[o^uh]/[z^z].[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'koznovsky' => 'k.aw.z/n.aw.f/s.k.ee / [k^k].[o^aw].[z^z]/[n^n].[o^aw]. / failed phone:f / failed spelling:vs',
  'kozuch' => 'k.aw/z.eh.h / [k^k].[o^aw]/[z^z].[u^uh]. / failed phone:h / failed spelling:ch',
  'kraai' => 'k.r.aw/ee / [k^k].[r^r].[a^aw]/ / failed phone:ee / failed spelling:ai',
  'kraatz' => 'k.r.aw.t.s / [k^k].[r^r].[a^aw]. / failed phone:t / failed spelling:at',
  'krabbe' => 'k.r.ah.b / [k^k].[r^r].[a^ah].[bb^b] / failed phone:b / failed spelling:bb',
  'kracke' => 'k.r.ah.k / [k^k].[r^r].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'kraeger' => 'k.r.eh/g.er / [k^k].[r^r].[a^ah]/ / failed phone:g / failed spelling:eg',
  'kraemer' => 'k.r.eh/m.er / [k^k].[r^r].[a^ah]/ / failed phone:m / failed spelling:em',
  'kraeutler' => 'k.r.ow.t/l.er / [k^k].[r^r]. / failed phone:ow / failed spelling:ae',
  'krah' => 'k.r.aw / [k^k].[r^r].[a^aw] / failed phone:aw / failed spelling:ah',
  'krahenbuhl' => 'k.r.aw/ih.n/b.eh.l / [k^k].[r^r].[a^aw]/ / failed phone:ih / failed spelling:he',
  'krahl' => 'k.r.aw.l / [k^k].[r^r].[a^aw]. / failed phone:l / failed spelling:hl',
  'krajewski' => 'k.r.igh/eh.f/s.k.ee / [k^k].[r^r]. / failed phone:igh / failed spelling:aj',
  'krajicek' => 'k.r.igh/ih/ch.eh.k / [k^k].[r^r]. / failed phone:igh / failed spelling:aj',
  'krajina' => 'k.r.igh/n.eh / [k^k].[r^r]. / failed phone:igh / failed spelling:aj',
  'krakowski' => 'k.r.eh/k.aw.f/s.k.ee / [k^k].[r^r].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kralicek' => 'k.r.aw/l.ih/ch.eh.k / [k^k].[r^r].[a^aw]/[l^l].[i^ih]/ / failed phone:t / failed spelling:ce',
  'kramme' => 'k.r.ah.m / [k^k].[r^r].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'krasowski' => 'k.r.eh/s.aw.f/s.k.ee / [k^k].[r^r].[a^ah]/[s^s].[o^aw]. / failed phone:f / failed spelling:ws',
  'kraszewski' => 'k.r.eh/sh.eh.f/s.k.ee / [k^k].[r^r].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'kratzke' => 'k.r.ah.t.z.k / [k^k].[r^r].[a^ah].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'krauer' => 'k.r.ow.r / [k^k].[r^r].[au^aw]. / failed phone:r / failed spelling:er',
  'kraushaar' => 'k.r.ow/sh.aw.r / [k^k].[r^r].[au^aw]/[sh^sh].[a^oh]. / failed phone:r / failed spelling:ar',
  'krauskopf' => 'k.r.ow/s.k.aw.f / [k^k].[r^r].[au^aw]/[s^s].[k^k].[o^aw]. / failed phone:f / failed spelling:pf',
  'krausse' => 'k.r.aw.s / [k^k].[r^r].[au^aw].[ss^s] / failed phone:s / failed spelling:us',
  'krausz' => 'k.r.ow.sh / [k^k].[r^r].[au^aw].[s^sh] / failed phone:sh / failed spelling:sz',
  'krawccykiewi' => 'k.r.ow/ch.ih/k.ue/ee / [k^k].[r^r].[aw^aw]/ / failed phone:t / failed spelling:cc',
  'krawczak' => 'k.r.aw.v/ch.ah.k / [k^k].[r^r].[a^aw]. / failed phone:v / failed spelling:wc',
  'krawczyk' => 'k.r.aw.v/ch.ih.k / [k^k].[r^r].[a^aw]. / failed phone:v / failed spelling:wc',
  'krawiec' => 'k.r.aw/v.ee.k / [k^k].[r^r].[a^aw]/ / failed phone:v / failed spelling:wi',
  'kredit' => 'k.r.eh/t.ih.t / [k^k].[r^r].[e^eh]/ / failed phone:t / failed spelling:di',
  'kreh' => 'k.r.eh / [k^k].[r^r].[e^eh] / failed phone:eh / failed spelling:eh',
  'krehbiel' => 'k.r.eh/b.ee.l / [k^k].[r^r].[e^eh]/ / failed phone:b / failed spelling:hb',
  'kreher' => 'k.r.air / [k^k].[r^r]. / failed phone:air / failed spelling:eh',
  'kreidler' => 'k.r.igh/d.eh/l.er / [k^k].[r^r].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'kreischer' => 'k.r.igh/sh.er / [k^k].[r^r].[ei^igh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'krenke' => 'k.r.eh.ng.k / [k^k].[r^r].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'kresa' => 'k.r.ee/s.er / [k^k].[r^r].[e^ee]/[s^s]. / failed phone:er / failed spelling:a',
  'kresse' => 'k.r.eh.s / [k^k].[r^r].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'kretsch' => 'k.r.eh.ch / [k^k].[r^r].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'kretschmar' => 'k.r.eh.ch/m.er / [k^k].[r^r].[e^eh].[t^t].[sc^sh]/ / failed phone:m / failed spelling:hm',
  'kretschmer' => 'k.r.eh.ch/m.er / [k^k].[r^r].[e^eh].[t^t].[sc^sh]/ / failed phone:m / failed spelling:hm',
  'kretzschmar' => 'k.r.eh.ch/m.er / [k^k].[r^r].[e^eh].[t^t]. / failed phone:sh / failed spelling:zs',
  'kreuger' => 'k.r.oy/g.er / [k^k].[r^r]. / failed phone:oy / failed spelling:eu',
  'kreuser' => 'k.r.oy/s.er / [k^k].[r^r]. / failed phone:oy / failed spelling:eu',
  'kreuter' => 'k.r.oy/t.er / [k^k].[r^r]. / failed phone:oy / failed spelling:eu',
  'krienke' => 'k.r.ee.ng.k / [k^k].[r^r].[ie^ee].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'krinke' => 'k.r.ih.ng.k / [k^k].[r^r].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'krisch' => 'k.r.ih.sh / [k^k].[r^r].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'krischer' => 'k.r.ih/sh.er / [k^k].[r^r].[i^ih]/[sc^sh]. / failed phone:er / failed spelling:he',
  'kristoffe' => 'k.r.ih/s.aw.f / [k^k].[r^r].[i^ih]/[st^s].[o^aw].[ff^f] / failed phone:f / failed spelling:ff',
  'kroenke' => 'k.r.oh.ng.k / [k^k].[r^r].[oe^oh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'krogh' => 'k.r.oh / [k^k].[r^r].[o^oh] / failed phone:oh / failed spelling:og',
  'krolczyk' => 'k.r.oh.l/ch.ih.k / [k^k].[r^r].[o^oh].[l^l]/ / failed phone:t / failed spelling:cz',
  'krolikowski' => 'k.r.eh/l.ih/k.aw.f/s.k.ee / [k^k].[r^r].[o^uh]/[l^l].[i^ih]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kruckeberg' => 'k.r.uh.k/b.er.g / [k^k].[r^r].[u^uh].[c^k]/ / failed phone:b / failed spelling:ke',
  'kruczek' => 'k.r.uh/ch.eh.k / [k^k].[r^r].[u^uh]/ / failed phone:t / failed spelling:cz',
  'krugh' => 'k.r.uh / [k^k].[r^r].[u^uh] / failed phone:uh / failed spelling:ug',
  'krukowski' => 'k.r.eh/k.aw.f/s.k.ee / [k^k].[r^r].[u^uh]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'krumme' => 'k.r.uh.m / [k^k].[r^r].[u^uh].[m^m] / failed phone:m / failed spelling:mm',
  'krumwiede' => 'k.r.uh.m/w.ee.d / [k^k].[r^r].[u^uh].[m^m]/[w^w].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'kruschke' => 'k.r.uh.sh.k / [k^k].[r^r].[u^uh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'kruszewski' => 'k.r.eh/sh.eh.f/s.k.ee / [k^k].[r^r].[u^uh]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'kruszka' => 'k.r.uh.sh/k.eh / [k^k].[r^r].[u^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'kruszynski' => 'k.r.eh/sh.ih.n/s.k.ee / [k^k].[r^r].[u^uh]/[s^sh]. / failed phone:ih / failed spelling:zy',
  'kryuchkov' => 'k.r.ue.ch/k.eh.v / [k^k].[r^r]. / failed phone:ue / failed spelling:yu',
  'krzeminski' => 'k.r.ih/m.ih.n/s.k.ee / [k^k].[r^r]. / failed phone:ih / failed spelling:ze',
  'krzysztof' => 'k.r.igh/s.t.aw.f / [k^k].[r^r]. / failed phone:igh / failed spelling:zy',
  'krzywicki' => 'k.r.ih/v.ih.t/s.k.ee / [k^k].[r^r]. / failed phone:ih / failed spelling:zy',
  'krzyzanowski' => 'k.r.ih/z.eh/n.aw.f/s.k.ee / [k^k].[r^r]. / failed phone:ih / failed spelling:zy',
  'ksiazek' => 'k.eh/s.ee/aw/z.eh.k / [k^k]. / failed phone:eh / failed spelling:si',
  'kuala' => 'kw.aw/l.eh /  / failed phone:kw / failed spelling:ku',
  'kuan' => 'kw.aw.n /  / failed phone:kw / failed spelling:ku',
  'kubacki' => 'k.eh/b.aw.t/s.k.ee / [k^k].[u^uh]/[b^b].[a^aw]. / failed phone:t / failed spelling:ck',
  'kubicek' => 'k.uh/b.ih/ch.eh.k / [k^k].[u^uh]/[b^b].[i^ih]/ / failed phone:t / failed spelling:ce',
  'kubicki' => 'k.eh/b.ih.t/s.k.ee / [k^k].[u^uh]/[b^b].[i^ih]. / failed phone:t / failed spelling:ck',
  'kubler' => 'k.ye.ue/b.eh/l.er / [k^k].[u^ue]/[b^b]. / failed phone:eh / failed spelling:le',
  'kucera' => 'k.eh/ch.ih/r.eh / [k^k].[u^uh]/ / failed phone:t / failed spelling:ce',
  'kucewicz' => 'k.ye.ue/s.ih/w.ih.t.s / [k^k].[u^ue]/[c^s].[e^ih]/[w^w].[i^ih]. / failed phone:t / failed spelling:cz',
  'kuchler' => 'k.uh/k.eh/l.er / [k^k].[u^uh]/[ch^k]. / failed phone:eh / failed spelling:le',
  'kucinski' => 'k.eh/ch.ih.n/s.k.ee / [k^k].[u^uh]/ / failed phone:t / failed spelling:ci',
  'kuczek' => 'k.uh/ch.eh.k / [k^k].[u^uh]/ / failed phone:t / failed spelling:cz',
  'kuczynski' => 'k.eh/ch.ih.n/s.k.ee / [k^k].[u^uh]/ / failed phone:t / failed spelling:cz',
  'kuebler' => 'k.oo/b.eh/l.er / [k^k].[ue^oo]/[b^b]. / failed phone:eh / failed spelling:le',
  'kuechler' => 'k.oo/k.eh/l.er / [k^k].[ue^oo]/[ch^k]. / failed phone:eh / failed spelling:le',
  'kuehl' => 'k.oo.l / [k^k].[u^oo]. / failed phone:l / failed spelling:eh',
  'kuehler' => 'k.oo/l.er / [k^k].[u^oo]/ / failed phone:l / failed spelling:eh',
  'kuehne' => 'k.ue.n / [k^k].[ue^ue].[hn^n] / failed phone:n / failed spelling:eh',
  'kuenstler' => 'k.oo.n/s.eh/l.er / [k^k].[ue^oo].[n^n]/[st^s]. / failed phone:eh / failed spelling:le',
  'kufahl' => 'k.uh/f.aw.l / [k^k].[u^uh]/[f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'kugler' => 'k.ue/g.eh/l.er / [k^k].[u^ue]/[g^g]. / failed phone:eh / failed spelling:le',
  'kuhar' => 'k.ue/er / [k^k].[u^ue]/ / failed phone:er / failed spelling:ha',
  'kuhl' => 'k.uh.l / [k^k].[u^uh]. / failed phone:l / failed spelling:hl',
  'kuhle' => 'k.ue/eh.l / [k^k].[u^ue]/ / failed phone:eh / failed spelling:hl',
  'kuhlenschmidt' => 'k.ye.ue/l.eh.n/sh.m.ih.t / [k^k].[u^ue]/ / failed phone:l / failed spelling:hl',
  'kuhlman' => 'k.ue.l/m.eh.n / [k^k].[u^ue]. / failed phone:l / failed spelling:hl',
  'kuhlmann' => 'k.ue.l/m.eh.n / [k^k].[u^ue]. / failed phone:l / failed spelling:hl',
  'kuhne' => 'k.uh.n / [k^k].[u^uh].[hn^n] / failed phone:n / failed spelling:hn',
  'kuhnke' => 'k.uh.ng.k / [k^k].[u^uh]. / failed phone:ng / failed spelling:hn',
  'kuhr' => 'k.er / [k^k]. / failed phone:er / failed spelling:uh',
  'kuhrt' => 'k.er.t / [k^k]. / failed phone:er / failed spelling:uh',
  'kujala' => 'k.igh/aw/l.eh / [k^k]. / failed phone:igh / failed spelling:uj',
  'kujawski' => 'k.eh/ye.aw.f/s.k.ee / [k^k].[u^uh]/ / failed phone:ye / failed spelling:ja',
  'kukje' => 'k.ue/k.ye.ih / [k^k].[u^ue]/[k^k]. / failed phone:ye / failed spelling:je',
  'kukowski' => 'k.eh/k.aw.f/s.k.ee / [k^k].[u^uh]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kulakowski' => 'k.ye.ue/l.eh/k.aw.f/s.k.ee / [k^k].[u^ue]/[l^l].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kulesza' => 'k.ye.ue/l.eh/sh.eh / [k^k].[u^ue]/[l^l].[e^eh]/[s^sh]. / failed phone:eh / failed spelling:za',
  'kuligowski' => 'k.ye.ue/l.ih/g.aw.f/s.k.ee / [k^k].[u^ue]/[l^l].[i^ih]/[g^g].[o^aw]. / failed phone:f / failed spelling:ws',
  'kulikowski' => 'k.ye.ue/l.ih/k.aw.f/s.k.ee / [k^k].[u^ue]/[l^l].[i^ih]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kulwicki' => 'k.eh.l/v.ih.t/s.k.ee / [k^k].[u^uh].[l^l]/ / failed phone:v / failed spelling:wi',
  'kunaev' => 'k.ye.ue/n.ay.v / [k^k].[u^ue]/[n^n].[a^ay]. / failed phone:v / failed spelling:ev',
  'kunde' => 'k.uh.n.d / [k^k].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'kuomintang' => 'kw.oh/m.ih.n/t.ah.ng /  / failed phone:kw / failed spelling:ku',
  'kurkowski' => 'k.er/k.aw.f/s.k.ee / [k^k].[ur^er]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'kurowski' => 'k.er/aw.f/s.k.ee / [k^k].[ur^er]/[o^aw]. / failed phone:f / failed spelling:ws',
  'kusch' => 'k.uh.sh / [k^k].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'kuschel' => 'k.uh/sh.eh.l / [k^k].[u^uh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'kuske' => 'k.uh.s.k / [k^k].[u^uh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'kusler' => 'k.uh/s.eh/l.er / [k^k].[u^uh]/[s^s]. / failed phone:eh / failed spelling:le',
  'kutsch' => 'k.uh.ch / [k^k].[u^uh].[t^t]. / failed phone:t / failed spelling:ts',
  'kutscher' => 'k.uh/ch.er / [k^k].[u^uh]/[t^t].[sc^sh]. / failed phone:er / failed spelling:he',
  'kuzniar' => 'k.uh.z/n.ye.er / [k^k].[u^uh].[z^z]/[n^n]. / failed phone:er / failed spelling:ia',
  'kuznicki' => 'k.eh.z/n.ih.t/s.k.ee / [k^k].[u^uh].[z^z]/[n^n].[i^ih]. / failed phone:t / failed spelling:ck',
  'kvale' => 'k.eh/v.ay.l / [k^k]. / failed phone:eh / failed spelling:va',
  'kvam' => 'k.eh/v.ah.m / [k^k]. / failed phone:eh / failed spelling:va',
  'kvamme' => 'k.eh/v.ah.m / [k^k]. / failed phone:eh / failed spelling:va',
  'kvasnicka' => 'k.eh/v.eh/s.n.ih/s.k.eh / [k^k]. / failed phone:eh / failed spelling:va',
  'kvetch' => 'k.eh/v.eh.ch / [k^k]. / failed phone:eh / failed spelling:ve',
  'kveton' => 'k.eh/v.eh/t.eh.n / [k^k]. / failed phone:eh / failed spelling:ve',
  'kvistad' => 'k.eh/v.ih/s.t.ah.d / [k^k]. / failed phone:eh / failed spelling:vi',
  'kvitsinsky' => 'k.eh/v.ih.t/s.ih.n/s.k.ee / [k^k]. / failed phone:eh / failed spelling:vi',
  'kwak' => 'kw.ah.k /  / failed phone:kw / failed spelling:kw',
  'kwan' => 'kw.aw.n /  / failed phone:kw / failed spelling:kw',
  'kwang' => 'kw.aw.ng /  / failed phone:kw / failed spelling:kw',
  'kwangju' => 'kw.aw.ng/j.ue /  / failed phone:kw / failed spelling:kw',
  'kwanza' => 'kw.aw.n/z.eh /  / failed phone:kw / failed spelling:kw',
  'kwasniewski' => 'kw.eh.z/n.eh.f/s.k.ee /  / failed phone:kw / failed spelling:kw',
  'kwasnik' => 'kw.aw.z/n.ih.k /  / failed phone:kw / failed spelling:kw',
  'kwasny' => 'kw.aw.z/n.ee /  / failed phone:kw / failed spelling:kw',
  'kwazulu' => 'kw.aw/z.ue/l.ue /  / failed phone:kw / failed spelling:kw',
  'kweisi' => 'kw.igh/z.ee /  / failed phone:kw / failed spelling:kw',
  'kwh' => 'k.ay/d.uh/b.eh/l.ye.ue/ay.ch / [k^k]. / failed phone:ay / failed spelling:wh',
  'kwiatek' => 'kw.ee/aw/t.eh.k /  / failed phone:kw / failed spelling:kw',
  'kwiatkowski' => 'kw.ee/eh.t/k.aw.f/s.k.ee /  / failed phone:kw / failed spelling:kw',
  'kwiecien' => 'kw.ee/s.ee.n /  / failed phone:kw / failed spelling:kw',
  'kwiecinski' => 'kw.ee/ch.ih.n/s.k.ee /  / failed phone:kw / failed spelling:kw',
  'kwik' => 'kw.ih.k /  / failed phone:kw / failed spelling:kw',
  'kwitny' => 'kw.ih.t/n.ee /  / failed phone:kw / failed spelling:kw',
  'kwok' => 'kw.aw.k /  / failed phone:kw / failed spelling:kw',
  'kwolek' => 'kw.oh/l.eh.k /  / failed phone:kw / failed spelling:kw',
  'kwon' => 'kw.aw.n /  / failed phone:kw / failed spelling:kw',
  'kwong' => 'kw.aw.ng /  / failed phone:kw / failed spelling:kw',
  'kyi' => 'k.ee / [k^k].[y^ee] / failed phone:ee / failed spelling:yi',
  'kyrgyzstan' => 'k.ih.r/g.ih/s.t.ah.n / [k^k].[y^ih].[r^r]/[g^g].[y^ih]/[z^s]. / failed phone:t / failed spelling:st',
  'l' => 'eh.l /  / failed phone:eh / failed spelling:l',
  'laabs' => 'l.aw.b.z / [l^l].[a^aw]. / failed phone:b / failed spelling:ab',
  'laack' => 'l.aw.k / [l^l].[a^aw]. / failed phone:k / failed spelling:ac',
  'laaco' => 'l.aw/k.oh / [l^l].[a^aw]/ / failed phone:k / failed spelling:ac',
  'laake' => 'l.aw.k / [l^l].[a^aw]. / failed phone:k / failed spelling:ak',
  'laakso' => 'l.aw.k/s.oh / [l^l].[a^aw]. / failed phone:x / failed spelling:ak',
  'laas' => 'l.aw.z / [l^l].[a^aw]. / failed phone:z / failed spelling:as',
  'laatsch' => 'l.aw.ch / [l^l].[a^aw]. / failed phone:t / failed spelling:at',
  'labbe' => 'l.ah.b / [l^l].[a^ah].[bb^b] / failed phone:b / failed spelling:bb',
  'labeau' => 'l.eh/b.oh / [l^l].[a^ah]/[b^b]. / failed phone:oh / failed spelling:ea',
  'labelle' => 'l.eh/b.eh.l / [l^l].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'laboratoires' => 'l.eh/b.aw/r.eh/t.w.aw.z / [l^l].[a^ah]/[b^b].[o^aw]/[r^r].[a^ah]/[t^t]. / failed phone:w / failed spelling:oi',
  'laboratories' => 'l.ah/b.r.eh/t.aw/r.ee.z / [l^l].[a^ah]/[b^b]. / failed phone:r / failed spelling:or',
  'laboratory' => 'l.ah/b.r.eh/t.aw/r.ee / [l^l].[a^ah]/[b^b]. / failed phone:r / failed spelling:or',
  'laborde' => 'l.eh/b.aw.r.d / [l^l].[a^ah]/[b^b].[o^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'labouisse' => 'l.aw/b.ue.s / [l^l].[a^aw]/[b^b].[ou^ue]. / failed phone:s / failed spelling:is',
  'labrake' => 'l.ah/b.r.eh.k / [l^l].[a^ah]/[b^b].[r^r].[a^ah].[k^k] / failed phone:k / failed spelling:ke',
  'labrecque' => 'l.eh/b.r.eh.k / [l^l].[a^ah]/[b^b].[r^r].[e^eh].[c^k] / failed phone:k / failed spelling:cq',
  'labus' => 'l.ah/b.ih.s / [l^l].[a^ah]/[b^b]. / failed phone:ih / failed spelling:us',
  'lacerte' => 'l.aw/ch.air/t.ee / [l^l].[a^aw]/ / failed phone:t / failed spelling:ce',
  'lachapelle' => 'l.ah/sh.eh/p.eh.l / [l^l].[a^ah]/[ch^sh].[a^ah]/[p^p].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'lache' => 'l.ah.ch / [l^l].[a^ah].[ch^ch] / failed phone:t / failed spelling:ch',
  'lachowicz' => 'l.aw/h.eh/v.ih.ch / [l^l].[a^aw]/ / failed phone:h / failed spelling:ch',
  'lacina' => 'l.aw/ch.ee/n.eh / [l^l].[a^aw]/ / failed phone:t / failed spelling:ci',
  'lacivita' => 'l.aw/ch.ee/v.ee/t.eh / [l^l].[a^aw]/ / failed phone:t / failed spelling:ci',
  'laclair' => 'l.ah/k.l.er / [l^l].[a^ah]/[c^k].[l^l]. / failed phone:er / failed spelling:ai',
  'lacquer' => 'l.ah/k.er / [l^l].[a^ah]/[c^k]. / failed phone:er / failed spelling:qu',
  'lacquered' => 'l.ah/k.er.d / [l^l].[a^ah]/[c^k]. / failed phone:er / failed spelling:qu',
  'lacroix' => 'l.eh/k.r.oy / [l^l].[a^ah]/[c^k].[r^r].[oi^oy] / failed phone:oy / failed spelling:oi',
  'lacrosse' => 'l.eh/k.r.aw.s / [l^l].[a^ah]/[c^k].[r^r].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'ladled' => 'l.ay/d.eh.l.d / [l^l].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'ladles' => 'l.ay/d.eh.l.z / [l^l].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'laenderbank' => 'l.ah.n/d.er/b.ah.ng.k / [l^l].[a^ah]. / failed phone:n / failed spelling:en',
  'laevo' => 'l.ay/v.oh / [l^l].[a^ay]/ / failed phone:v / failed spelling:ev',
  'lafauci' => 'l.aw/f.aw/ch.ee / [l^l].[a^aw]/[f^f].[a^aw]/ / failed phone:t / failed spelling:uc',
  'lafayette' => 'l.aw/f.ee/eh.t / [l^l].[a^aw]/[f^f]. / failed phone:ee / failed spelling:ay',
  'laflamme' => 'l.ah/f.l.ih.m / [l^l].[a^ah]/[f^f].[l^l].[a^ih].[m^m] / failed phone:m / failed spelling:mm',
  'lafler' => 'l.ay/f.eh/l.er / [l^l].[a^ay]/[f^f]. / failed phone:eh / failed spelling:le',
  'lafosse' => 'l.eh/f.aw.s / [l^l].[a^ah]/[f^f].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'laframboise' => 'l.uh/f.r.ah.m/b.w.aw / [l^l].[a^uh]/[f^f].[r^r].[a^ah].[m^m]/[b^b]. / failed phone:w / failed spelling:oi',
  'lagace' => 'l.aw/g.aw/ch.ee / [l^l].[a^aw]/[g^g].[a^aw]/ / failed phone:t / failed spelling:ce',
  'lagesse' => 'l.ah/g.eh.s / [l^l].[a^ah]/[g^g].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'lahaie' => 'l.ah/h.ee / [l^l].[a^ah]/[h^h]. / failed phone:ee / failed spelling:ai',
  'lahaye' => 'l.ah/h.ay / [l^l].[a^ah]/[h^h].[a^ay] / failed phone:ay / failed spelling:ay',
  'lahm' => 'l.ah.m / [l^l].[a^ah]. / failed phone:m / failed spelling:hm',
  'lahman' => 'l.aw/m.eh.n / [l^l].[a^aw]/ / failed phone:m / failed spelling:hm',
  'lahmann' => 'l.aw/m.eh.n / [l^l].[a^aw]/ / failed phone:m / failed spelling:hm',
  'lahr' => 'l.aw.r / [l^l].[a^oh]. / failed phone:r / failed spelling:hr',
  'lahti' => 'l.aw/t.ee / [l^l].[a^aw]/ / failed phone:t / failed spelling:ht',
  'laiche' => 'l.ay.ch / [l^l].[ai^ay].[ch^ch] / failed phone:t / failed spelling:ch',
  'laissez' => 'l.ay/z.ay / [l^l].[ai^ay]/[s^z]. / failed phone:ay / failed spelling:se',
  'lait' => 'l.ay / [l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'lajeunesse' => 'l.ah/ye.oy/n.eh.s / [l^l].[a^ah]/ / failed phone:ye / failed spelling:je',
  'lajoie' => 'l.ah.j/w.aw / [l^l].[a^ah].[j^j]/ / failed phone:aw / failed spelling:i',
  'lajous' => 'l.eh/zh.ue.s / [l^l].[a^ah]/ / failed phone:zh / failed spelling:jo',
  'lakeview' => 'l.ay.k/v.ye.ue / [l^l].[a_e^ay].[k^k]/[v^v]. / failed phone:ue / failed spelling:ie',
  'lakewood' => 'l.ay/kw.oo.d / [l^l].[a^ay]/ / failed phone:kw / failed spelling:ke',
  'lamacchia' => 'l.aw/m.aw/k.ee/eh / [l^l].[a^aw]/[m^m].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'lamaist' => 'l.aw/m.igh/ih.s.t / [l^l].[a^aw]/[m^m].[ai^igh]/ / failed phone:ih / failed spelling:st',
  'lamastus' => 'l.ah/m.eh/s.t.ih.s / [l^l].[a^ah]/[m^m].[a^ah]/[s^s].[t^t]. / failed phone:ih / failed spelling:us',
  'lambe' => 'l.ah.m / [l^l].[a^ah].[m^m] / failed phone:m / failed spelling:mb',
  'lamme' => 'l.ah.m / [l^l].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'lamontagne' => 'l.aw/m.aw.n/t.ay.n / [l^l].[a^aw]/[m^m].[o^aw].[n^n]/[t^t].[a^ay].[gn^n] / failed phone:n / failed spelling:gn',
  'lamoreaux' => 'l.ah/m.er/oh / [l^l].[a^ah]/[m^m].[ore^er]/[a^oh] / failed phone:oh / failed spelling:au',
  'lamoreux' => 'l.ah/m.er/oh / [l^l].[a^ah]/[m^m].[ore^er]/ / failed phone:oh / failed spelling:ux',
  'lamoureaux' => 'l.ah/m.oo/r.oh / [l^l].[a^ah]/[m^m].[ou^oo]/[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'lamoureux' => 'l.ah/m.oo/r.oh / [l^l].[a^ah]/[m^m].[ou^oo]/[r^r]. / failed phone:oh / failed spelling:eu',
  'lamphere' => 'l.ah.m/f.er / [l^l].[a^ah].[m^m]/[ph^f].[er^er] / failed phone:er / failed spelling:er',
  'lampl' => 'l.ah.m/p.eh.l / [l^l].[a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:l',
  'lancia' => 'l.aw.n/ch.eh / [l^l].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'lancome' => 'l.ah.n/k.eh.m / [l^l].[a^ah].[n^n]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'lancz' => 'l.ah.n.ch / [l^l].[a^ah].[n^n]. / failed phone:t / failed spelling:cz',
  'lande' => 'l.ah.n.d / [l^l].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'landgraf' => 'l.ah.n.j/r.eh.f / [l^l].[a^ah].[n^n].[d^j]/ / failed phone:r / failed spelling:gr',
  'landgrebe' => 'l.ah.n.j/r.ih.b / [l^l].[a^ah].[n^n].[d^j]/ / failed phone:r / failed spelling:gr',
  'landowski' => 'l.eh.n/d.aw.f/s.k.ee / [l^l].[a^ah].[n^n]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'landt' => 'l.ah.n.t / [l^l].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'landwehr' => 'l.ah.n/d.w.ih.r / [l^l].[a^ah].[n^n]/[d^d].[w^w].[e^ih]. / failed phone:r / failed spelling:hr',
  'lange' => 'l.ah.ng / [l^l].[a^ah].[n^ng] / failed phone:ng / failed spelling:ng',
  'langella' => 'l.ah.n/j.eh/l.er / [l^l].[a^ah].[n^n]/[g^j].[e^eh]/[ll^l]. / failed phone:er / failed spelling:a',
  'langfeldt' => 'l.ah.ng/f.eh.l.t / [l^l].[a^ah].[ng^ng]/[f^f].[e^eh].[l^l]. / failed phone:t / failed spelling:dt',
  'langlais' => 'l.eh.ng/g.l.ay / [l^l].[a^ah].[n^ng]/[g^g].[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'langlinais' => 'l.ah.ng/g.l.ih/n.ay / [l^l].[a^ah].[n^ng]/[g^g].[l^l].[i^ih]/[n^n].[a^ay] / failed phone:ay / failed spelling:ai',
  'langlois' => 'l.eh.ng.l/w.aw / [l^l].[a^ah].[ng^ng].[l^l]/ / failed phone:w / failed spelling:oi',
  'langowski' => 'l.eh.ng/g.aw.f/s.k.ee / [l^l].[a^ah].[n^ng]/[g^g].[o^aw]. / failed phone:f / failed spelling:ws',
  'langrehr' => 'l.ah.ng/g.r.ih.r / [l^l].[a^ah].[n^ng]/[g^g].[r^r].[e^ih]. / failed phone:r / failed spelling:hr',
  'languorous' => 'l.ah.ng/aw/r.eh.s / [l^l].[a^ah].[n^ng]/ / failed phone:aw / failed spelling:gu',
  'lanham' => 'l.ah/n.eh.m / [l^l].[a^ah]/[n^n]. / failed phone:eh / failed spelling:ha',
  'lanier' => 'l.eh/n.ih.r / [l^l].[a^ah]/[n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'lanius' => 'l.ay/n.ee/ih.s / [l^l].[a^ay]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'lanphier' => 'l.ah.n/f.ih.r / [l^l].[a^ah].[n^n]/[ph^f].[i^ih]. / failed phone:r / failed spelling:er',
  'lao' => 'l.ow / [l^l]. / failed phone:ow / failed spelling:ao',
  'lapidus' => 'l.ah/p.ih/d.ih.s / [l^l].[a^ah]/[p^p].[i^ih]/[d^d]. / failed phone:ih / failed spelling:us',
  'lapierre' => 'l.ah/p.ee/air / [l^l].[a^ah]/[p^p].[i^ee]/[er^air] / failed phone:air / failed spelling:rr',
  'lappin' => 'l.eh/p.ah.n / [l^l].[a^ah]/[p^p]. / failed phone:ah / failed spelling:pi',
  'laraia' => 'l.aw/r.aw/ye.eh / [l^l].[a^aw]/[r^r].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'lareau' => 'l.er/oh / [l^l].[ar^er]/ / failed phone:oh / failed spelling:ea',
  'largesse' => 'l.aw.r/g.eh.s / [l^l].[a^oh].[r^r]/[g^g].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'lariccia' => 'l.aw/r.ee/ch.eh / [l^l].[a^aw]/[r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'larke' => 'l.aw.r.k / [l^l].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'larochelle' => 'l.ah/r.eh/sh.eh.l / [l^l].[a^ah]/[r^r].[o^uh]/[ch^sh].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'larocque' => 'l.er/oh.k / [l^l].[ar^er]/[o^oh].[c^k] / failed phone:k / failed spelling:cq',
  'larosiere' => 'l.aw/r.oh.s/ye.air / [l^l].[a^aw]/[r^r].[o^oh].[s^s]/ / failed phone:ye / failed spelling:ie',
  'laroux' => 'l.er/ue / [l^l].[ar^er]/[ou^ue] / failed phone:ue / failed spelling:ou',
  'larowe' => 'l.ah/r.ow / [l^l].[a^ah]/[r^r].[ow^ow] / failed phone:ow / failed spelling:ow',
  'larvae' => 'l.aw.r/v.ee / [l^l].[a^oh].[r^r]/[v^v]. / failed phone:ee / failed spelling:ae',
  'lasagna' => 'l.aw/s.aw/n.ye.eh / [l^l].[a^aw]/[s^s].[a^aw]/[gn^n]. / failed phone:ue / failed spelling:a',
  'lasalle' => 'l.eh/s.ah.l / [l^l].[a^ah]/[s^s].[a^ah].[ll^l] / failed phone:l / failed spelling:ll',
  'lasch' => 'l.ah.sh / [l^l].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'lasecki' => 'l.eh/s.eh.t/s.k.ee / [l^l].[a^ah]/[s^s].[e^eh]. / failed phone:t / failed spelling:ck',
  'laske' => 'l.ay.s.k / [l^l].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'laskowski' => 'l.eh/s.k.aw.f/s.k.ee / [l^l].[a^ah]/[s^s].[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'lasseigne' => 'l.eh/s.ay.n.ye / [l^l].[a^ah]/[ss^s].[ei^ay].[gn^n]. / failed phone:ye / failed spelling:e',
  'laszlo' => 'l.ah/z.l.oh / [l^l].[a^ah]/[s^z]. / failed phone:l / failed spelling:zl',
  'latendresse' => 'l.ah/t.ih.n/d.r.eh.s / [l^l].[a^ah]/[t^t].[e^ih].[n^n]/[d^d].[r^r].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'laterriere' => 'l.aw/t.air/ye.air / [l^l].[a^aw]/[t^t].[er^air]/ / failed phone:ye / failed spelling:ri',
  'latiolais' => 'l.ah/t.ee/eh/l.ay / [l^l].[a^ah]/[t^t].[i^ee]/[o^uh]/[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'latsch' => 'l.ah.ch / [l^l].[a^ah].[t^t]. / failed phone:t / failed spelling:ts',
  'laube' => 'l.aw.b / [l^l].[au^aw].[b^b] / failed phone:b / failed spelling:ub',
  'laubscher' => 'l.ow.b/sh.er / [l^l].[au^aw].[b^b]/[sc^sh]. / failed phone:er / failed spelling:he',
  'laude' => 'l.aw.d / [l^l].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'laudicina' => 'l.aw/d.ee/ch.ee/n.eh / [l^l].[au^aw]/[d^d].[i^ee]/ / failed phone:t / failed spelling:ci',
  'laugh' => 'l.ah.f / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'laughable' => 'l.ah/f.eh/b.eh.l / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughed' => 'l.ah.f.t / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'laughery' => 'l.ah/f.er/ee / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughing' => 'l.ah/f.ih.ng / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughinghouse' => 'l.ah/f.ih.ng/h.ow.s / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughingly' => 'l.ah/f.ih.ng/l.ee / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughingstock' => 'l.ah/f.ih.ng/s.t.aw.k / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughlin' => 'l.aw/k.l.ih.n / [l^l].[a^aw]/ / failed phone:k / failed spelling:ug',
  'laughman' => 'l.ah.f/m.eh.n / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'laughner' => 'l.ah.f/n.er / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'laughrey' => 'l.ah/f.r.ee / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughridge' => 'l.ah/f.r.ih.j / [l^l].[a^ah]/ / failed phone:f / failed spelling:ug',
  'laughs' => 'l.ah.f.s / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'laughter' => 'l.ah.f/t.er / [l^l].[a^ah]. / failed phone:f / failed spelling:ug',
  'launius' => 'l.ow/n.ee/ih.s / [l^l].[au^aw]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'laurentiis' => 'l.aw/r.eh.n/t.ee.z / [l^l].[au^aw]/[r^r].[e^eh].[n^n]/[t^t].[i^ee]. / failed phone:z / failed spelling:is',
  'lauretta' => 'l.er/eh/t.eh / [l^l]. / failed phone:er / failed spelling:au',
  'lausanne' => 'l.aw/s.ah.n / [l^l].[au^aw]/[s^s].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'lausch' => 'l.ow.sh / [l^l].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'lautenschlager' => 'l.ow/t.ih.n/sh.l.ay/g.er / [l^l].[au^aw]/[t^t].[e^ih].[n^n]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'lavecchia' => 'l.aw/v.eh/k.ee/eh / [l^l].[a^aw]/[v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'lavelle' => 'l.eh/v.eh.l / [l^l].[a^ah]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'laverdiere' => 'l.aw/v.er/d.ih/r.ee / [l^l].[a^aw]/[ve^v].[r^er]/[d^d].[i^ih]/ / failed phone:r / failed spelling:er',
  'lavergne' => 'l.eh/v.er.n.ye / [l^l].[a^ah]/[ve^v].[r^er].[gn^n]. / failed phone:ye / failed spelling:e',
  'lavigne' => 'l.eh/v.ih.n.ye / [l^l].[a^ah]/[v^v].[i^ih].[gn^n]. / failed phone:ye / failed spelling:e',
  'lavinia' => 'l.eh/v.ih/n.ye.eh / [l^l].[a^ah]/[v^v].[i^ih]/[n^n]. / failed phone:ue / failed spelling:ia',
  'lavoie' => 'l.eh.v/w.aw / [l^l].[a^ah].[v^v]/ / failed phone:aw / failed spelling:i',
  'lawniczak' => 'l.aw.v/n.ih/ch.ah.k / [l^l].[a^aw]. / failed phone:v / failed spelling:wn',
  'lawrenceville' => 'l.aw/r.eh.n/s.v.ih.l / [l^l].[a^aw]/[wr^r].[e^eh].[n^n]/[ce^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'lawrenz' => 'l.aw/v.r.ih.n.z / [l^l].[a^aw]/ / failed phone:v / failed spelling:wr',
  'lawshe' => 'l.aw.sh / [l^l].[aw^aw].[s^sh] / failed phone:sh / failed spelling:ws',
  'laye' => 'l.ay / [l^l].[a^ay] / failed phone:ay / failed spelling:ay',
  'lazzara' => 'l.aw.t/s.aw/r.eh / [l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'lazzari' => 'l.aw.t/s.aw/r.ee / [l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'lazzarini' => 'l.aw.t/s.aw/r.ee/n.ee / [l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'lazzaro' => 'l.aw.t/s.aw/r.oh / [l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'lcs' => 'eh.l/s.ee/eh.s /  / failed phone:eh / failed spelling:lc',
  'ldbrinkman' => 'l.eh.d/b.r.ih.ng.k/m.eh.n / [l^l]. / failed phone:eh / failed spelling:db',
  'leadville' => 'l.eh.d/v.ih.l / [le^l].[a^ah].[d^d]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'leake' => 'l.ee.k / [l^l].[ea^ee].[k^k] / failed phone:k / failed spelling:ak',
  'leavelle' => 'l.eh/v.eh.l / [le^l].[a^ah]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'lebeau' => 'l.ih/b.oh / [l^l].[e^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'leboeuf' => 'l.eh/b.uh.f / [l^l].[e^eh]/[b^b].[o^uh]. / failed phone:f / failed spelling:eu',
  'lebouef' => 'l.eh/b.uh.f / [l^l].[e^eh]/[b^b].[o^uh]. / failed phone:f / failed spelling:ue',
  'leccese' => 'l.eh/ch.ay/z.ee / [l^l].[e^eh]/ / failed phone:t / failed spelling:cc',
  'leclair' => 'l.eh/k.l.er / [l^l].[e^eh]/[c^k].[l^l]. / failed phone:er / failed spelling:ai',
  'leclercq' => 'l.eh/k.l.er.k / [l^l].[e^eh]/[c^k].[le^l].[r^er].[c^k] / failed phone:k / failed spelling:cq',
  'lecocq' => 'l.eh/k.eh.k / [l^l].[e^eh]/[c^k].[o^uh].[c^k] / failed phone:k / failed spelling:cq',
  'ledbetter' => 'l.eh.d/b.er/t.er / [l^l].[e^eh].[d^d]/[b^b]. / failed phone:er / failed spelling:et',
  'ledges' => 'l.eh/j.ih.z / [l^l].[e^eh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'ledonne' => 'l.eh/d.eh.n / [l^l].[e^eh]/[d^d].[o^uh].[n^n] / failed phone:n / failed spelling:nn',
  'ledoux' => 'l.ih/d.ue / [l^l].[e^ih]/[d^d].[ou^ue] / failed phone:ue / failed spelling:ou',
  'leeuwen' => 'l.ue/eh.n / [le^l].[eu^ue]/ / failed phone:eh / failed spelling:we',
  'lefebvre' => 'l.eh/f.ay/b.er / [l^l].[e^eh]/[f^f].[e^ay]/[b^b]. / failed phone:er / failed spelling:vr',
  'lefrancois' => 'l.eh/f.r.eh.n/kw.aw / [l^l].[e^eh]/[f^f].[r^r].[a^ah].[n^n]/ / failed phone:kw / failed spelling:co',
  'legault' => 'l.ih/g.oh / [l^l].[e^ih]/[g^g].[a^oh] / failed phone:oh / failed spelling:au',
  'legette' => 'l.ih/zh.eh.t / [l^l].[e^ih]/ / failed phone:zh / failed spelling:ge',
  'legge' => 'l.eh.g / [l^l].[e^eh].[gg^g] / failed phone:g / failed spelling:gg',
  'leggio' => 'l.eh/j.ee/oh / [l^l].[e^eh]/[g^j]. / failed phone:ee / failed spelling:gi',
  'legrande' => 'l.eh/g.r.ah.n.d / [l^l].[e^eh]/[g^g].[r^r].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'leh' => 'l.eh / [l^l].[e^eh] / failed phone:eh / failed spelling:h',
  'lehder' => 'l.eh/d.er / [l^l].[e^eh]/ / failed phone:d / failed spelling:hd',
  'lehenbauer' => 'l.ay/eh.n/b.ow/er / [l^l].[e^ay]/ / failed phone:eh / failed spelling:he',
  'lehl' => 'l.eh.l / [l^l].[e^eh]. / failed phone:l / failed spelling:hl',
  'lehman' => 'l.ee/m.eh.n / [l^l].[e^ee]/ / failed phone:m / failed spelling:hm',
  'lehmann' => 'l.ay/m.eh.n / [l^l].[e^ay]/ / failed phone:m / failed spelling:hm',
  'lehmer' => 'l.eh/m.er / [l^l].[e^eh]/ / failed phone:m / failed spelling:hm',
  'lehmkuhl' => 'l.eh.m/k.eh.l / [l^l].[e^eh]. / failed phone:m / failed spelling:hm',
  'lehne' => 'l.eh.n / [l^l].[e^eh].[hn^n] / failed phone:n / failed spelling:hn',
  'lehrke' => 'l.air.k / [l^l].[ehr^air].[k^k] / failed phone:k / failed spelling:ke',
  'lehtinen' => 'l.eh/t.ih/n.eh.n / [l^l].[e^eh]/ / failed phone:t / failed spelling:ht',
  'lehtonen' => 'l.ih/t.aw/n.eh.n / [l^l].[e^ih]/ / failed phone:t / failed spelling:ht',
  'leicester' => 'l.eh/s.t.er / [le^l].[i^ih]/[ce^s]. / failed phone:t / failed spelling:st',
  'leigh' => 'l.ee / [le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'leija' => 'l.ee/ye.eh / [le^l].[i^ee]/ / failed phone:ue / failed spelling:ja',
  'leitzke' => 'l.igh.t.z.k / [le^l].[i^igh].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'leja' => 'l.ay/ye.eh / [l^l].[e^ay]/ / failed phone:ue / failed spelling:ja',
  'lejeune' => 'l.eh/ye.oy.n / [l^l].[e^eh]/ / failed phone:ye / failed spelling:je',
  'leleux' => 'l.ih/l.oh / [l^l].[e^ih]/[le^l]. / failed phone:oh / failed spelling:ux',
  'lelia' => 'l.ee/l.ye.eh / [l^l].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'lembcke' => 'l.eh.m.b.k / [l^l].[e^eh].[m^m].[b^b].[c^k] / failed phone:k / failed spelling:ck',
  'lembke' => 'l.eh.m.b.k / [l^l].[e^eh].[m^m].[b^b].[k^k] / failed phone:k / failed spelling:ke',
  'lemcke' => 'l.eh.m.k / [l^l].[e^eh].[m^m].[c^k] / failed phone:k / failed spelling:ck',
  'lemelle' => 'l.ih/m.eh.l / [l^l].[e^ih]/[m^m].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'lemere' => 'l.eh/m.er / [l^l].[e^eh]/[m^m].[er^er] / failed phone:er / failed spelling:er',
  'lemieux' => 'l.eh/m.ye.ue / [l^l].[e^eh]/[m^m]. / failed phone:ue / failed spelling:ie',
  'lempke' => 'l.eh.m.p.k / [l^l].[e^eh].[m^m].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'lencioni' => 'l.eh.n/ch.oh/n.ee / [l^l].[e^eh].[n^n]/ / failed phone:t / failed spelling:ci',
  'lendl' => 'l.eh.n/d.eh.l / [l^l].[e^eh].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'lenhard' => 'l.eh/n.er.d / [l^l].[e^eh]/[n^n]. / failed phone:er / failed spelling:ha',
  'lenhardt' => 'l.eh.n/h.aw.r.t / [l^l].[e^eh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'leniency' => 'l.ee/n.ye.eh.n/s.ee / [l^l].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'leniently' => 'l.ee/n.ye.eh.n.t/l.ee / [l^l].[e^ee]/[n^n]. / failed phone:ue / failed spelling:ie',
  'lenius' => 'l.ee/n.ee/ih.s / [l^l].[e^ee]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'lenke' => 'l.eh.ng.k / [l^l].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'lentsch' => 'l.eh.n.ch / [l^l].[e^eh].[n^n].[t^t]. / failed phone:t / failed spelling:ts',
  'lentzsch' => 'l.eh.n.t.s / [l^l].[e^eh].[n^n].[t^t].[z^s] / failed phone:s / failed spelling:zs',
  'leonelle' => 'l.eh/n.eh.l / [le^l].[o^uh]/[n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'leonhard' => 'l.ee/eh.n/h.aw.r.t / [l^l].[e^ee]/[o^uh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:d',
  'leonhardt' => 'l.eh.n/h.aw.r.t / [le^l].[o^uh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'leora' => 'l.air/eh / [le^l]. / failed phone:air / failed spelling:or',
  'lepkowski' => 'l.ih.p/k.aw.f/s.k.ee / [l^l].[e^ih].[p^p]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'lerche' => 'l.er.ch / [le^l].[r^er].[ch^ch] / failed phone:t / failed spelling:ch',
  'leroux' => 'l.er/ue / [le^l].[r^er]/[ou^ue] / failed phone:ue / failed spelling:ou',
  'lersch' => 'l.er.sh / [le^l].[r^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'lesch' => 'l.eh.sh / [l^l].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'leschly' => 'l.eh/sh.l.ee / [l^l].[e^eh]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'lesesne' => 'l.eh/s.ih.n / [l^l].[e^eh]/[s^s].[e^ih]. / failed phone:n / failed spelling:sn',
  'leske' => 'l.eh.s.k / [l^l].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'lesniewski' => 'l.eh/s.n.eh.f/s.k.ee / [l^l].[e^eh]/[s^s].[n^n].[ie^eh]. / failed phone:f / failed spelling:ws',
  'lespinasse' => 'l.eh/s.p.ih/n.ah.s / [l^l].[e^eh]/[s^s].[p^p].[i^ih]/[n^n].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'leszczynski' => 'l.eh/sh.ih.n/s.k.ee / [l^l].[e^eh]/[s^sh]. / failed phone:ih / failed spelling:zc',
  'leszek' => 'l.eh/s.eh.k / [l^l].[e^eh]/[s^s]. / failed phone:eh / failed spelling:ze',
  'letendre' => 'l.eh/t.aw.n/d.r.eh / [l^l].[e^eh]/[te^t]. / failed phone:aw / failed spelling:nd',
  'letsch' => 'l.eh.ch / [l^l].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'lettieri' => 'l.eh/t.ih/r.ee / [l^l].[e^eh]/[tt^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'leugers' => 'l.oy/g.er.z / [le^l]. / failed phone:oy / failed spelling:ug',
  'leupold' => 'l.oy/p.oh.l.d / [le^l]. / failed phone:oy / failed spelling:up',
  'leuschner' => 'l.oy/sh.n.er / [le^l]. / failed phone:oy / failed spelling:us',
  'leuthold' => 'l.oy/th.oh.l.d / [le^l]. / failed phone:oy / failed spelling:ut',
  'levandowski' => 'l.ih/v.eh.n/d.aw.f/s.k.ee / [l^l].[e^ih]/[v^v].[a^ah].[n^n]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'levasseur' => 'l.eh/v.eh/s.er / [l^l].[e^eh]/[v^v].[a^ah]/[ss^s]. / failed phone:er / failed spelling:eu',
  'leveille' => 'l.eh/v.igh.l / [l^l].[e^eh]/[ve^v].[i^igh].[ll^l] / failed phone:l / failed spelling:ll',
  'lewandowski' => 'l.ue/eh.n/d.aw.f/s.k.ee / [l^l].[ew^ue]/[a^ah].[n^n]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'lewicki' => 'l.ue/ih.t/s.k.ee / [l^l].[ew^ue]/[i^ih]. / failed phone:t / failed spelling:ck',
  'lewkowicz' => 'l.ue/k.eh/v.ih.ch / [l^l].[ew^ue]/[k^k].[o^uh]/ / failed phone:v / failed spelling:wi',
  'leyh' => 'l.ay / [l^l].[e^ay] / failed phone:ay / failed spelling:yh',
  'lhasa' => 'l.aw/s.eh / [l^l]. / failed phone:aw / failed spelling:ha',
  'lheureux' => 'l.er/oh / [l^l]. / failed phone:er / failed spelling:he',
  'lhommedieu' => 'l.oh/m.eh/d.ye.ue / [l^l]. / failed phone:oh / failed spelling:ho',
  'lian' => 'l.ye.aw.n / [l^l]. / failed phone:ye / failed spelling:ia',
  'liang' => 'l.ye.ah.ng / [l^l]. / failed phone:ye / failed spelling:ia',
  'lianne' => 'l.ee/ah.n / [l^l].[i^ee]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'liao' => 'l.ee/ow / [l^l].[i^ee]/ / failed phone:ow / failed spelling:ao',
  'liasson' => 'l.ay/z.aw.n / [l^l]. / failed phone:ay / failed spelling:ia',
  'liberalization' => 'l.ih/b.r.eh/l.ih/z.ay/sh.eh.n / [l^l].[i^ih]/[b^b]. / failed phone:r / failed spelling:er',
  'librizzi' => 'l.ee/b.r.ee.t/s.ee / [l^l].[i^ee]/[b^b].[r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'licciardi' => 'l.ee/ch.aw.r/d.ee / [l^l].[i^ee]/ / failed phone:t / failed spelling:cc',
  'licensure' => 'l.igh/s.eh.n/ch.er / [l^l].[i^igh]/[c^s].[e^eh].[n^n]/ / failed phone:t / failed spelling:su',
  'licitra' => 'l.ee/ch.ee/t.r.eh / [l^l].[i^ee]/ / failed phone:t / failed spelling:ci',
  'licorice' => 'l.ih/k.er/ih.sh / [l^l].[i^ih]/[c^k].[o^oh].[r^r]/[i^ih].[c^sh] / failed phone:sh / failed spelling:ce',
  'liebe' => 'l.ee.b / [l^l].[ie^ee].[b^b] / failed phone:b / failed spelling:be',
  'liebl' => 'l.ee/b.eh.l / [l^l].[ie^ee]/[b^b]. / failed phone:eh / failed spelling:l',
  'liebling' => 'l.ee/b.eh/l.ih.ng / [l^l].[ie^ee]/[b^b]. / failed phone:eh / failed spelling:li',
  'liechtenstein' => 'l.ih.k/t.eh.n/s.t.igh.n / [l^l].[i^ih]. / failed phone:k / failed spelling:ec',
  'liedtke' => 'l.ee.t/k.ee / [l^l].[i^ee].[ed^t]/ / failed phone:k / failed spelling:tk',
  'liemandt' => 'l.ee/m.ah.n.t / [l^l].[ie^ee]/[m^m].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'lierman' => 'l.ih.r/m.eh.n / [l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'liermann' => 'l.ih.r/m.eh.n / [l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'liesch' => 'l.ee.sh / [l^l].[ie^ee].[sc^sh] / failed phone:sh / failed spelling:sc',
  'lieu' => 'l.ue / [l^l]. / failed phone:ue / failed spelling:ie',
  'lieurance' => 'l.ue/r.eh.n.s / [l^l]. / failed phone:ue / failed spelling:ie',
  'lieut' => 'l.ue/t.eh/n.eh.n.t / [l^l]. / failed phone:ue / failed spelling:ie',
  'lieutenant' => 'l.ue/t.eh/n.eh.n.t / [l^l]. / failed phone:ue / failed spelling:ie',
  'lieutenants' => 'l.ue/t.eh/n.eh.n.t.s / [l^l]. / failed phone:ue / failed spelling:ie',
  'liffe' => 'l.ih.f / [l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'liggio' => 'l.ee/j.ee/oh / [l^l].[i^ee]/[g^j]. / failed phone:ee / failed spelling:gi',
  'lighthearted' => 'l.igh.t/h.aw.r/t.ih.d / [l^l].[igh^igh].[t^t]/[h^h]. / failed phone:oh / failed spelling:ea',
  'lijewski' => 'l.ih/ye.eh.f/s.k.ee / [l^l].[i^ih]/ / failed phone:ue / failed spelling:je',
  'likewise' => 'l.igh/kw.igh.z / [l^l].[i^igh]/ / failed phone:kw / failed spelling:ke',
  'likhachov' => 'l.ih/k.eh/ch.aw.v / [l^l].[i^ih]/[k^k]. / failed phone:eh / failed spelling:ha',
  'likhyani' => 'l.ih/k.ye.aw/n.ee / [l^l].[i^ih]/[k^k]. / failed phone:ye / failed spelling:hy',
  'lilja' => 'l.ee/l.ye.eh / [l^l].[i^ee]/[l^l]. / failed phone:ue / failed spelling:ja',
  'liljedahl' => 'l.ih.l/j.ih/d.aw.l / [l^l].[i^ih].[l^l]/[j^j].[e^ih]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'lille' => 'l.ih.l / [l^l].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'lincoln' => 'l.ih.ng/k.eh.n / [l^l].[i^ih].[n^ng]/[c^k].[o^uh]. / failed phone:n / failed spelling:ln',
  'lincolns' => 'l.ih.ng/k.eh.n.z / [l^l].[i^ih].[n^ng]/[c^k].[o^uh]. / failed phone:n / failed spelling:ln',
  'lincolnshire' => 'l.ih.ng/k.eh.n/sh.ih.r / [l^l].[i^ih].[n^ng]/[c^k].[o^uh]. / failed phone:n / failed spelling:ln',
  'lindahl' => 'l.ih.n/d.aw.l / [l^l].[i^ih].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'linde' => 'l.ih.n.d / [l^l].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'lindeman' => 'l.ih.n.d/m.eh.n / [l^l].[i^ih].[n^n].[d^d]/ / failed phone:m / failed spelling:em',
  'lindh' => 'l.ih.n.d / [l^l].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:dh',
  'lindsay' => 'l.ih.n.d/z.ee / [l^l].[i^ih].[n^n].[d^d]/[s^z]. / failed phone:ee / failed spelling:ay',
  'lindstedt' => 'l.ih.n.d/s.t.ih.t / [l^l].[i^ih].[n^n].[d^d]/[s^s].[t^t].[e^ih]. / failed phone:t / failed spelling:dt',
  'lingerie' => 'l.aw.n/zh.er/ay / [l^l]. / failed phone:aw / failed spelling:in',
  'linh' => 'l.ih.n / [l^l].[i^ih].[n^n] / failed phone:n / failed spelling:nh',
  'linhardt' => 'l.ih.n/h.aw.r.t / [l^l].[i^ih].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'linke' => 'l.ih.ng.k / [l^l].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'linne' => 'l.ih.n / [l^l].[i^ih].[n^n] / failed phone:n / failed spelling:nn',
  'linneman' => 'l.ih.n/m.eh.n / [l^l].[i^ih].[n^n]/ / failed phone:m / failed spelling:ne',
  'linnemann' => 'l.ih.n/m.eh.n / [l^l].[i^ih].[n^n]/ / failed phone:m / failed spelling:ne',
  'linville' => 'l.ee.n/v.ih.l / [l^l].[i^ee].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'lionheart' => 'l.igh/eh.n/h.aw.r.t / [l^l].[i^igh]/[o^uh].[n^n]/[h^h]. / failed phone:oh / failed spelling:ea',
  'liotier' => 'l.ee/oh/t.ee/ay / [l^l].[i^ee]/[o^oh]/[t^t].[i^ee]/[e^ay] / failed phone:ay / failed spelling:r',
  'lipke' => 'l.ih.p.k / [l^l].[i^ih].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'lipschitz' => 'l.ih.p/sh.ih.t.s / [l^l].[i^ih].[p^p]/[sc^sh]. / failed phone:ih / failed spelling:hi',
  'lipschultz' => 'l.ih.p/sh.eh.l.t.s / [l^l].[i^ih].[p^p]/[sc^sh]. / failed phone:eh / failed spelling:hu',
  'lipschutz' => 'l.ih.p/sh.eh.t.s / [l^l].[i^ih].[p^p]/[sc^sh]. / failed phone:eh / failed spelling:hu',
  'liqun' => 'l.ih/k.ue.n / [l^l].[i^ih]/[qu^k]. / failed phone:ue / failed spelling:n',
  'lisiecki' => 'l.ih/s.ee.t/s.k.ee / [l^l].[i^ih]/[s^s].[ie^ee]. / failed phone:t / failed spelling:ck',
  'liske' => 'l.ih.s.k / [l^l].[i^ih].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'lisle' => 'l.igh/eh.l / [l^l].[i^igh]/ / failed phone:eh / failed spelling:sl',
  'lisowski' => 'l.ih/s.aw.f/s.k.ee / [l^l].[i^ih]/[s^s].[o^aw]. / failed phone:f / failed spelling:ws',
  'liszewski' => 'l.ih/sh.eh.f/s.k.ee / [l^l].[i^ih]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'liszka' => 'l.ih.sh/k.eh / [l^l].[i^ih].[s^sh]/ / failed phone:k / failed spelling:zk',
  'liszt' => 'l.ih.s.t / [l^l].[i^ih].[s^s]. / failed phone:t / failed spelling:zt',
  'literaturnaya' => 'l.ih/t.air/eh/t.er/n.igh/eh / [l^l].[i^ih]/[t^t].[er^air]/[a^ah]/[t^t].[ur^er]/[n^n]. / failed phone:igh / failed spelling:ay',
  'lithuania' => 'l.ih/th.eh/w.ay/n.ee/eh / [l^l].[i^ih]/[th^th].[u^uh]/ / failed phone:w / failed spelling:an',
  'lithuanian' => 'l.ih/th.eh/w.ay/n.ee/eh.n / [l^l].[i^ih]/[th^th].[u^uh]/ / failed phone:w / failed spelling:an',
  'lithuanians' => 'l.ih/th.eh/w.ay/n.ee/eh.n.z / [l^l].[i^ih]/[th^th].[u^uh]/ / failed phone:w / failed spelling:an',
  'littleboy' => 'l.ih/t.eh.l/b.oy / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlechild' => 'l.ih/t.eh.l/ch.igh.l.d / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlefield' => 'l.ih/t.eh.l/f.ee.l.d / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlejohn' => 'l.ih/t.eh.l/j.aw.n / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlepage' => 'l.ih/t.eh.l/p.ay.j / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littler' => 'l.ih/t.eh/l.er / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littles' => 'l.ih/t.eh.l.z / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlest' => 'l.ih/t.eh/l.eh.s.t / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littleton' => 'l.ih/t.eh.l/t.eh.n / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'littlewood' => 'l.ih/t.eh.l/w.oo.d / [l^l].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'liu' => 'l.ye.ue / [l^l]. / failed phone:ue / failed spelling:iu',
  'liuzza' => 'l.ee/ue.t/s.eh / [l^l].[i^ee]/[u^ue]. / failed phone:t / failed spelling:zz',
  'liuzzi' => 'l.ee/ue.t/s.ee / [l^l].[i^ee]/[u^ue]. / failed phone:t / failed spelling:zz',
  'livernois' => 'l.ih/v.er.n/w.aw / [l^l].[i^ih]/[ve^v].[r^er].[n^n]/ / failed phone:w / failed spelling:oi',
  'livonia' => 'l.ih/v.oh/n.ye.eh / [l^l].[i^ih]/[v^v].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'livvie' => 'l.ih/v.ee / [l^l].[i^ih]/[v^v]. / failed phone:ee / failed spelling:vi',
  'lizhi' => 'l.ih/z.ee / [l^l].[i^ih]/[z^z]. / failed phone:ee / failed spelling:hi',
  'ljubljana' => 'l.oo.b/l.ye.ah/n.ah / [l^l]. / failed phone:oo / failed spelling:ju',
  'ljubomir' => 'l.ye.ue/b.oh/m.ih.r / [l^l]. / failed phone:ue / failed spelling:ju',
  'llorens' => 'l.aw/r.ay/eh.n.z / [ll^l].[o^aw]/[r^r].[e^ay]/ / failed phone:eh / failed spelling:ns',
  'loathsome' => 'l.oh.dh/s.eh.m / [l^l].[oa^oh].[th^dh]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'locicero' => 'l.oh/ch.ee/ch.air/oh / [l^l].[o^oh]/ / failed phone:t / failed spelling:ci',
  'locke' => 'l.aw.k / [l^l].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'locklair' => 'l.aw/k.l.er / [l^l].[o^aw]/[ck^k].[l^l]. / failed phone:er / failed spelling:ai',
  'lockwood' => 'l.aw/kw.oo.d / [l^l].[o^aw]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'lodges' => 'l.aw/j.eh.z / [l^l].[o^aw]/[d^j]. / failed phone:eh / failed spelling:ge',
  'lodging' => 'l.aw/j.ih.ng / [l^l].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'lodgings' => 'l.aw/j.ih.ng.z / [l^l].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'loehr' => 'l.aw.r / [l^l].[o^oh]. / failed phone:r / failed spelling:eh',
  'loera' => 'l.aw/r.eh / [l^l].[o^aw]/ / failed phone:r / failed spelling:er',
  'loesch' => 'l.oh.sh / [l^l].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'loesche' => 'l.oh.sh / [l^l].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'loescher' => 'l.oh/sh.er / [l^l].[oe^oh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'loewe' => 'l.aw/ue / [l^l].[o^aw]/[ew^ue] / failed phone:ue / failed spelling:ew',
  'loews' => 'l.oh.z / [l^l].[o^oh]. / failed phone:z / failed spelling:ew',
  'loewy' => 'l.oh/ee / [l^l].[o^oh]/[e^ee] / failed phone:ee / failed spelling:ew',
  'lofthus' => 'l.aw.f/th.ih.s / [l^l].[o^aw].[f^f]/[th^th]. / failed phone:ih / failed spelling:us',
  'logarithm' => 'l.aw/g.er/ih/dh.eh.m / [l^l].[o^aw]/[g^g].[ar^er]/[i^ih]/[th^dh]. / failed phone:eh / failed spelling:m',
  'logarithms' => 'l.aw/g.er/ih/dh.eh.m.z / [l^l].[o^aw]/[g^g].[ar^er]/[i^ih]/[th^dh]. / failed phone:eh / failed spelling:ms',
  'logiudice' => 'l.oh/j.ue/d.eh.s / [l^l].[o^oh]/[g^j]. / failed phone:ue / failed spelling:iu',
  'lohrenz' => 'l.aw/r.ih.n.s / [l^l].[o^aw]/ / failed phone:r / failed spelling:hr',
  'lohrey' => 'l.aw/r.ee / [l^l].[o^aw]/ / failed phone:r / failed spelling:hr',
  'loiacano' => 'l.oh/ye.eh/k.aw/n.oh / [l^l].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'loiacono' => 'l.oh/ye.eh/k.oh/n.oh / [l^l].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'loibl' => 'l.oy/b.eh.l / [l^l].[oi^oy]/[b^b]. / failed phone:eh / failed spelling:l',
  'loiselle' => 'l.oy/z.eh.l / [l^l].[oi^oy]/[s^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'lokken' => 'l.aw/k.eh.n / [l^l].[o^aw]/[k^k]. / failed phone:eh / failed spelling:ke',
  'lonesome' => 'l.oh.n/s.eh.m / [l^l].[o^oh].[ne^n]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'longview' => 'l.aw.ng/v.ye.ue / [l^l].[o^aw].[ng^ng]/[v^v]. / failed phone:ue / failed spelling:ie',
  'lorenz' => 'l.er/eh.n.t.s / [l^l].[o^oh].[r^r]/[e^eh].[n^n]. / failed phone:t / failed spelling:z',
  'lorincz' => 'l.aw/r.ih.n.ch / [l^l].[o^aw]/[r^r].[i^ih].[n^n]. / failed phone:t / failed spelling:cz',
  'lorraine' => 'l.er/ay.n / [l^l].[o^oh].[r^r]/ / failed phone:ay / failed spelling:ra',
  'losch' => 'l.aw.sh / [l^l].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'loseke' => 'l.aw/s.ih.k / [l^l].[o^aw]/[s^s].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'loudin' => 'l.ue/d.ah.n / [l^l].[ou^ue]/[d^d]. / failed phone:ah / failed spelling:in',
  'louisette' => 'l/w.ee/z.eh.t / [l^l]/ / failed phone:w / failed spelling:ou',
  'louisville' => 'l.ue/ee/v.ih.l / [l^l].[ou^ue]/[i^ee]/ / failed phone:v / failed spelling:sv',
  'loureiro' => 'l.oo/r.air/oh / [l^l].[ou^oo]/[r^r]. / failed phone:air / failed spelling:ei',
  'louw' => 'l.ue / [l^l].[ou^ue] / failed phone:ue / failed spelling:ou',
  'loux' => 'l.ue / [l^l].[ou^ue] / failed phone:ue / failed spelling:ou',
  'lovaas' => 'l.aw/v.aw.z / [l^l].[o^aw]/[v^v].[a^aw]. / failed phone:z / failed spelling:as',
  'lovecchio' => 'l.eh/v.eh/k.ee/oh / [l^l].[o^uh]/[v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'lovvorn' => 'l.aw/v.er.n / [l^l].[o^aw]/[v^v]. / failed phone:r / failed spelling:vo',
  'loye' => 'l.oy / [l^l].[oy^oy] / failed phone:oy / failed spelling:oy',
  'lp' => 'eh.l/p.ee /  / failed phone:eh / failed spelling:lp',
  'lpn' => 'eh.l/p.ee/eh.n /  / failed phone:eh / failed spelling:lp',
  'ls' => 'eh/l.eh.s /  / failed phone:eh / failed spelling:ls',
  'lsd' => 'eh/l.eh.s/d.ee /  / failed phone:eh / failed spelling:ls',
  'ltd' => 'l.ih/m.ih/t.ih.d / [l^l]. / failed phone:ih / failed spelling:td',
  'lubke' => 'l.uh.b.k / [l^l].[u^uh].[b^b].[k^k] / failed phone:k / failed spelling:ke',
  'lucchese' => 'l.ue/k.ay/z.ee / [l^l].[u^ue]/[cc^k]. / failed phone:ay / failed spelling:he',
  'lucchesi' => 'l.ue/k.eh/s.ee / [l^l].[u^ue]/[cc^k]. / failed phone:eh / failed spelling:he',
  'lucchetti' => 'l.ue/k.eh/t.ee / [l^l].[u^ue]/[cc^k]. / failed phone:eh / failed spelling:he',
  'lucci' => 'l.ue/ch.ee / [l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'lucente' => 'l.ue/ch.eh.n/t.ee / [l^l].[u^ue]/ / failed phone:t / failed spelling:ce',
  'lucero' => 'l.ue/ch.air/oh / [l^l].[u^ue]/ / failed phone:t / failed spelling:ce',
  'luciani' => 'l.ue/ch.eh/n.ee / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'lucianna' => 'l.ue/ch.eh/n.eh / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'luciano' => 'l.ue/ch.ee/aw/n.oh / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'lucich' => 'l.uh/ch.ih.h / [l^l].[u^uh]/ / failed phone:t / failed spelling:ci',
  'lucida' => 'l.ue/ch.ee/d.eh / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'lucido' => 'l.ue/ch.ee/d.oh / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'lucienne' => 'l.ue/ch.ee/eh.n / [l^l].[u^ue]/ / failed phone:t / failed spelling:ci',
  'lucille' => 'l.ue/s.ee.l / [l^l].[u^ue]/[c^s].[i^ee].[ll^l] / failed phone:l / failed spelling:ll',
  'lucius' => 'l.ue/sh.eh.s / [l^l].[u^ue]/[c^sh].[i^ih]. / failed phone:s / failed spelling:us',
  'luciw' => 'l.ue/s.ih / [l^l].[u^ue]/[c^s].[i^ih] / failed phone:ih / failed spelling:iw',
  'lucke' => 'l.uh.k / [l^l].[u^uh].[c^k] / failed phone:k / failed spelling:ck',
  'luckhardt' => 'l.uh.k/h.aw.r.t / [l^l].[u^uh].[ck^k]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'luczak' => 'l.uh/ch.ah.k / [l^l].[u^uh]/ / failed phone:t / failed spelling:cz',
  'ludeke' => 'l.uh/d.ih.k / [l^l].[u^uh]/[d^d].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'ludtke' => 'l.uh.d/k.ee / [l^l].[u^uh].[d^d]/ / failed phone:k / failed spelling:tk',
  'ludwiga' => 'l.eh.d/v.igh/g.eh / [l^l].[u^uh].[d^d]/ / failed phone:v / failed spelling:wi',
  'luebbe' => 'l.ue.b / [l^l].[ue^ue].[bb^b] / failed phone:b / failed spelling:eb',
  'luebke' => 'l.ue.b.k / [l^l].[ue^ue].[b^b].[k^k] / failed phone:k / failed spelling:ke',
  'luecke' => 'l.ue.k / [l^l].[ue^ue].[c^k] / failed phone:k / failed spelling:ec',
  'luedecke' => 'l.oo/d.ih.k / [l^l].[u^oo]/[ed^d].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'luedtke' => 'l.oo.d/k.ee / [l^l].[u^oo].[ed^d]/ / failed phone:k / failed spelling:tk',
  'lueh' => 'l/w.eh / [l^l]/[u^w].[e^eh] / failed phone:eh / failed spelling:eh',
  'luehring' => 'l.oo/r.ih.ng / [l^l].[u^oo]/ / failed phone:r / failed spelling:eh',
  'luehrs' => 'l.oo.r.z / [l^l].[u^oo]. / failed phone:r / failed spelling:eh',
  'luelle' => 'l.ue.l / [l^l].[u^ue].[el^l] / failed phone:l / failed spelling:el',
  'lufthansa' => 'l.eh.f/t.ah.n/z.eh / [l^l].[u^uh].[f^f]/[t^t]. / failed phone:ah / failed spelling:ha',
  'luginbuhl' => 'l.uh/g.ih.n/b.eh.l / [l^l].[u^uh]/[g^g].[i^ih].[n^n]/[b^b].[u^uh]. / failed phone:l / failed spelling:hl',
  'luhman' => 'l.uh/m.eh.n / [l^l].[u^uh]/ / failed phone:m / failed spelling:hm',
  'luhmann' => 'l.uh/m.eh.n / [l^l].[u^uh]/ / failed phone:m / failed spelling:hm',
  'luhr' => 'l.er / [l^l]. / failed phone:er / failed spelling:uh',
  'luhring' => 'l.oo/r.ih.ng / [l^l].[u^oo]/ / failed phone:r / failed spelling:hr',
  'luhrs' => 'l.oo.r.z / [l^l].[u^oo]. / failed phone:r / failed spelling:hr',
  'lujan' => 'l.ue/ye.aw.n / [l^l].[u^ue]/ / failed phone:ye / failed spelling:ja',
  'lukasiewicz' => 'l.eh/k.aw/s.eh/v.ih.ch / [l^l].[u^uh]/[k^k].[a^aw]/[s^s].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'lukaszewski' => 'l.eh/k.eh/sh.eh.f/s.k.ee / [l^l].[u^uh]/[k^k].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'lukewarm' => 'l.ue/kw.aw.r.m / [l^l].[u^ue]/ / failed phone:kw / failed spelling:ke',
  'lukowski' => 'l.eh/k.aw.f/s.k.ee / [l^l].[u^uh]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'luncheon' => 'l.uh.n/ch.eh.n / [l^l].[u^uh].[n^n]/[ch^ch].[e^eh]. / failed phone:n / failed spelling:on',
  'luncheonette' => 'l.uh.n/ch.ih/n.eh.t / [l^l].[u^uh].[n^n]/[ch^ch].[e^ih]/ / failed phone:n / failed spelling:on',
  'luncheons' => 'l.uh.n/ch.eh.n.z / [l^l].[u^uh].[n^n]/[ch^ch].[e^eh]. / failed phone:n / failed spelling:on',
  'lundahl' => 'l.uh.n/d.aw.l / [l^l].[u^uh].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'lunde' => 'l.uh.n.d / [l^l].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'lundstedt' => 'l.uh.n.d/s.t.ih.t / [l^l].[u^uh].[n^n].[d^d]/[s^s].[t^t].[e^ih]. / failed phone:t / failed spelling:dt',
  'lundt' => 'l.uh.n.t / [l^l].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'lupinacci' => 'l.ue/p.ee/n.aw/ch.ee / [l^l].[u^ue]/[p^p].[i^ee]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'lusch' => 'l.uh.sh / [l^l].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'luscher' => 'l.uh/sh.er / [l^l].[u^uh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'lutzke' => 'l.uh.t.z.k / [l^l].[u^uh].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'luxuriant' => 'l.eh.g/zh.er/ee/eh.n.t / [l^l].[u^uh]. / failed phone:g / failed spelling:xu',
  'luxuries' => 'l.uh.g/zh.er/ee.z / [l^l].[u^uh]. / failed phone:g / failed spelling:xu',
  'luxurious' => 'l.eh.g/zh.er/ee/eh.s / [l^l].[u^uh]. / failed phone:g / failed spelling:xu',
  'luxury' => 'l.uh.g/zh.er/ee / [l^l].[u^uh]. / failed phone:g / failed spelling:xu',
  'luzhkov' => 'l.ue.zh/k.aw.v / [l^l].[u^ue].[z^zh]/ / failed phone:k / failed spelling:hk',
  'luzzi' => 'l.ue.t/s.ee / [l^l].[u^ue]. / failed phone:t / failed spelling:zz',
  'lyde' => 'l.igh.d / [l^l].[y^igh].[d^d] / failed phone:d / failed spelling:de',
  'lyke' => 'l.igh.k / [l^l].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'lykes' => 'l.igh.k.s / [l^l].[y^igh].[k^k]. / failed phone:s / failed spelling:es',
  'lyme' => 'l.igh.m / [l^l].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'lynde' => 'l.ih.n.d / [l^l].[y^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'lynne' => 'l.ih.n / [l^l].[y^ih].[n^n] / failed phone:n / failed spelling:nn',
  'lyonnais' => 'l.ee/eh/n.ay / [l^l].[y^ee]/[o^uh]/[nn^n].[a^ay] / failed phone:ay / failed spelling:na',
  'lysaght' => 'l.igh/s.aw.t / [l^l].[y^igh]/[s^s].[a^aw]. / failed phone:t / failed spelling:gh',
  'lysne' => 'l.igh.n / [l^l].[y^igh]. / failed phone:n / failed spelling:sn',
  'm' => 'eh.m /  / failed phone:eh / failed spelling:m',
  'maack' => 'm.aw.k / [m^m].[a^aw]. / failed phone:k / failed spelling:ac',
  'maaco' => 'm.ay/k.oh / [m^m].[a^ay]/ / failed phone:k / failed spelling:ac',
  'maag' => 'm.aw.g / [m^m].[a^aw]. / failed phone:g / failed spelling:ag',
  'maahs' => 'm.aw.z / [m^m].[a^aw]. / failed phone:z / failed spelling:ah',
  'maas' => 'm.aw.z / [m^m].[a^aw]. / failed phone:z / failed spelling:as',
  'maass' => 'm.aw.s / [m^m].[a^aw]. / failed phone:s / failed spelling:as',
  'maassen' => 'm.aw/s.eh.n / [m^m].[a^aw]/ / failed phone:s / failed spelling:as',
  'maastricht' => 'm.aw/s.t.r.ih.k.t / [m^m].[a^aw]/ / failed phone:s / failed spelling:as',
  'mabelle' => 'm.eh/b.eh.l / [m^m].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mabus' => 'm.ah/b.ih.s / [m^m].[a^ah]/[b^b]. / failed phone:ih / failed spelling:us',
  'macao' => 'm.eh/k.ow / [m^m].[a^ah]/[c^k]. / failed phone:ow / failed spelling:ao',
  'macaulay' => 'm.eh/k.aw/l.ee / [m^m].[a^ah]/[c^k].[au^aw]/[l^l]. / failed phone:ee / failed spelling:ay',
  'macchi' => 'm.ah/k.ee / [m^m].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'macchia' => 'm.ah/k.ee/eh / [m^m].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'macchio' => 'm.ah/k.ee/oh / [m^m].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'macdiarmid' => 'm.eh.k/d.ih.r/m.ih.d / [m^m].[a^ah].[c^k]/[d^d].[i^ih]. / failed phone:r / failed spelling:ar',
  'macewan' => 'm.eh/ch.ue/eh.n / [m^m].[a^ah]/ / failed phone:t / failed spelling:ce',
  'macgowan' => 'm.eh/g.ow/eh.n / [m^m].[a^ah]/ / failed phone:g / failed spelling:cg',
  'macgregor' => 'm.eh/g.r.eh/g.er / [m^m].[a^ah]/ / failed phone:g / failed spelling:cg',
  'macgyver' => 'm.eh/g.igh/v.er / [m^m].[a^ah]/ / failed phone:g / failed spelling:cg',
  'mache' => 'm.ah.ch / [m^m].[a^ah].[ch^ch] / failed phone:t / failed spelling:ch',
  'machold' => 'm.eh/h.oh.l.d / [m^m].[a^ah]/ / failed phone:h / failed spelling:ch',
  'machowski' => 'm.eh/ch.aw.f/s.k.ee / [m^m].[a^ah]/[ch^ch].[o^aw]. / failed phone:f / failed spelling:ws',
  'machtley' => 'm.ah.t.ch/l.ee / [m^m].[a^ah]. / failed phone:t / failed spelling:ch',
  'maciag' => 'm.eh/k.ay.g / [m^m].[a^ah]/[c^k]. / failed phone:ay / failed spelling:ia',
  'maciejewski' => 'm.eh/ch.eh.f/s.k.ee / [m^m].[a^ah]/ / failed phone:t / failed spelling:ci',
  'macik' => 'm.aw/ch.ih.k / [m^m].[a^aw]/ / failed phone:t / failed spelling:ci',
  'macioce' => 'm.aw/ch.oh/ch.ee / [m^m].[a^aw]/ / failed phone:t / failed spelling:ci',
  'maciolek' => 'm.eh/ch.ee/oh/l.eh.k / [m^m].[a^ah]/ / failed phone:t / failed spelling:ci',
  'macisaac' => 'm.eh/ch.ih/s.ah.k / [m^m].[a^ah]/ / failed phone:t / failed spelling:ci',
  'maciver' => 'm.ee/k.ih/v.er / [m^m]. / failed phone:ee / failed spelling:ac',
  'macke' => 'm.ah.k / [m^m].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'mackiewicz' => 'm.ah/k.ee/eh/w.ih.t.s / [m^m].[a^ah]/[ck^k].[i^ee]/[e^eh]/[w^w].[i^ih]. / failed phone:t / failed spelling:cz',
  'mackowski' => 'm.eh/s.k.aw.f/s.k.ee / [m^m].[a^ah]/[c^s].[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'maclaughlin' => 'm.eh/k.l.aw/k.l.ih.n / [m^m].[a^ah]/[c^k].[l^l].[a^aw]/ / failed phone:k / failed spelling:ug',
  'macmahon' => 'm.eh.k/m.ah.n / [m^m].[a^ah].[c^k]/[m^m].[a^ah]. / failed phone:n / failed spelling:ho',
  'macmurray' => 'm.eh.k/m.er/ee / [m^m].[a^ah].[c^k]/[m^m].[urr^er]/ / failed phone:ee / failed spelling:ay',
  'macquarrie' => 'm.eh/k.air/ee / [m^m].[a^ah]/[c^k]. / failed phone:air / failed spelling:qu',
  'macrae' => 'm.eh/k.r.ay / [m^m].[a^ah]/[c^k].[r^r].[a^ay] / failed phone:ay / failed spelling:ae',
  'macwilliams' => 'm.eh/kw.ih/l.ye.eh.m.z / [m^m].[a^ah]/ / failed phone:kw / failed spelling:cw',
  'macworld' => 'm.ah/kw.er.l.d / [m^m].[a^ah]/ / failed phone:kw / failed spelling:cw',
  'maczko' => 'm.aw.ch/k.oh / [m^m].[a^aw]. / failed phone:t / failed spelling:cz',
  'madame' => 'm.ah/d.eh.m / [m^m].[a^ah]/[d^d].[a^ah].[m^m] / failed phone:m / failed spelling:me',
  'madeira' => 'm.eh/d.ih/r.eh / [m^m].[a^ah]/[d^d].[e^ih]/ / failed phone:r / failed spelling:ir',
  'madelle' => 'm.eh/d.eh.l / [m^m].[a^ah]/[d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mademoiselle' => 'm.ah/d.eh/m.eh/z.eh.l / [m^m].[a^ah]/[d^d].[e^eh]/[m^m].[o^uh]/ / failed phone:z / failed spelling:is',
  'madere' => 'm.ah/d.er / [m^m].[a^ah]/[d^d].[er^er] / failed phone:er / failed spelling:er',
  'madl' => 'm.ah/d.eh.l / [m^m].[a^ah]/[d^d]. / failed phone:eh / failed spelling:l',
  'madlen' => 'm.ah/d.eh/l.eh.n / [m^m].[a^ah]/[d^d]. / failed phone:eh / failed spelling:le',
  'mae' => 'm.ay / [m^m].[a^ay] / failed phone:ay / failed spelling:ae',
  'maeda' => 'm.igh/d.eh / [m^m]. / failed phone:igh / failed spelling:ae',
  'maese' => 'm.ee.s / [m^m]. / failed phone:ee / failed spelling:ae',
  'maestas' => 'm.eh/s.t.eh.z / [m^m].[a^ah]/ / failed phone:s / failed spelling:es',
  'maestro' => 'm.igh/s.t.r.oh / [m^m]. / failed phone:igh / failed spelling:ae',
  'maez' => 'm.igh/eh.z / [m^m]. / failed phone:igh / failed spelling:ae',
  'maffucci' => 'm.aw/f.ue/ch.ee / [m^m].[a^aw]/[ff^f].[u^ue]/ / failed phone:t / failed spelling:cc',
  'maggi' => 'm.ah/j.ee / [m^m].[a^ah]/[g^j]. / failed phone:ee / failed spelling:gi',
  'maggio' => 'm.aw/j.ee/oh / [m^m].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'magiera' => 'm.aw/j.ih/r.eh / [m^m].[a^aw]/[g^j].[i^ih]/ / failed phone:r / failed spelling:er',
  'maginot' => 'm.ah/j.ih/n.aw / [m^m].[a^ah]/[g^j].[i^ih]/[n^n].[o^aw] / failed phone:aw / failed spelling:ot',
  'maglaj' => 'm.aw/g.l.igh / [m^m].[a^aw]/[g^g].[l^l]. / failed phone:igh / failed spelling:aj',
  'magnolia' => 'm.ah.g/n.oh/l.ye.eh / [m^m].[a^ah].[g^g]/[n^n].[o^oh]/[l^l]. / failed phone:ue / failed spelling:ia',
  'magnolias' => 'm.ah.g/n.oh/l.ye.eh.z / [m^m].[a^ah].[g^g]/[n^n].[o^oh]/[l^l]. / failed phone:ue / failed spelling:ia',
  'magouirk' => 'm.eh/g.w.er.k / [m^m].[a^ah]/[g^g]. / failed phone:w / failed spelling:ou',
  'mah' => 'm.aw / [m^m].[a^aw] / failed phone:aw / failed spelling:ah',
  'mahabharata' => 'm.aw/h.aw/b.er/aw/t.eh / [m^m].[a^aw]/[h^h].[a^aw]/[b^b]. / failed phone:er / failed spelling:ha',
  'mahan' => 'm.ay/eh.n / [m^m].[a^ay]/ / failed phone:eh / failed spelling:ha',
  'maharaja' => 'm.aw/h.er/aw/zh.uh / [m^m].[a^aw]/[h^h].[ar^er]/[a^aw]/ / failed phone:zh / failed spelling:ja',
  'mahdi' => 'm.aw/d.ee / [m^m].[a^aw]/ / failed phone:d / failed spelling:hd',
  'maher' => 'm.aw.r / [m^m].[a^oh]. / failed phone:r / failed spelling:he',
  'mahfouz' => 'm.aw/f.ue.z / [m^m].[a^aw]/ / failed phone:f / failed spelling:hf',
  'mahl' => 'm.aw.l / [m^m].[a^aw]. / failed phone:l / failed spelling:hl',
  'mahler' => 'm.aw/l.er / [m^m].[a^aw]/ / failed phone:l / failed spelling:hl',
  'mahlman' => 'm.aw.l/m.eh.n / [m^m].[a^aw]. / failed phone:l / failed spelling:hl',
  'mahlmann' => 'm.aw.l/m.eh.n / [m^m].[a^aw]. / failed phone:l / failed spelling:hl',
  'mahlstedt' => 'm.aw.l/s.t.ih.t / [m^m].[a^aw]. / failed phone:l / failed spelling:hl',
  'mahlum' => 'm.aw/l.eh.m / [m^m].[a^aw]/ / failed phone:l / failed spelling:hl',
  'mahmood' => 'm.ah/m.ue.d / [m^m].[a^ah]/ / failed phone:m / failed spelling:hm',
  'mahmud' => 'm.ah/m.ue.d / [m^m].[a^ah]/ / failed phone:m / failed spelling:hm',
  'mahnke' => 'm.ah.ng.k / [m^m].[a^ah]. / failed phone:ng / failed spelling:hn',
  'mahnken' => 'm.aw.ng/k.eh.n / [m^m].[a^aw]. / failed phone:ng / failed spelling:hn',
  'mahon' => 'm.ay/eh.n / [m^m].[a^ay]/ / failed phone:eh / failed spelling:ho',
  'mahr' => 'm.aw.r / [m^m].[a^oh]. / failed phone:r / failed spelling:hr',
  'mahrt' => 'm.aw.r.t / [m^m].[a^oh]. / failed phone:r / failed spelling:hr',
  'mahtar' => 'm.aw/t.er / [m^m].[a^aw]/ / failed phone:t / failed spelling:ht',
  'mahwah' => 'm.aw/w.eh / [m^m].[a^aw]/ / failed phone:w / failed spelling:hw',
  'maille' => 'm.ay.l / [m^m].[a^ay].[il^l] / failed phone:l / failed spelling:il',
  'mailloux' => 'm.eh/l.ue / [m^m].[ai^eh]/[ll^l].[ou^ue] / failed phone:ue / failed spelling:lo',
  'mainville' => 'm.ay.n/v.ih.l / [m^m].[ai^ay].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'maisch' => 'm.igh.sh / [m^m].[ai^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'maiziere' => 'm.ay/z.ih.r / [m^m].[ai^ay]/[z^z].[i^ih]. / failed phone:r / failed spelling:er',
  'majchrzak' => 'm.igh.r/z.eh.k / [m^m]. / failed phone:igh / failed spelling:aj',
  'majerus' => 'm.ah/j.er/ih.s / [m^m].[a^ah]/[j^j].[er^er]/ / failed phone:ih / failed spelling:us',
  'majeske' => 'm.igh/eh/s.k.ee / [m^m]. / failed phone:igh / failed spelling:aj',
  'majeski' => 'm.igh/eh/s.k.ee / [m^m]. / failed phone:igh / failed spelling:aj',
  'majesta' => 'm.aw/ye.ay/s.t.eh / [m^m].[a^aw]/ / failed phone:ye / failed spelling:je',
  'majette' => 'm.eh/zh.eh.t / [m^m].[a^ah]/ / failed phone:zh / failed spelling:je',
  'majewski' => 'm.igh/eh.f/s.k.ee / [m^m]. / failed phone:igh / failed spelling:aj',
  'majka' => 'm.igh/k.eh / [m^m]. / failed phone:igh / failed spelling:aj',
  'majkowski' => 'm.igh/k.aw.f/s.k.ee / [m^m]. / failed phone:igh / failed spelling:aj',
  'majoros' => 'm.aw/ye.aw/r.oh.z / [m^m].[a^aw]/ / failed phone:ye / failed spelling:jo',
  'majrooh' => 'm.ah.j/r.ue / [m^m].[a^ah].[j^j]/[r^r].[oo^ue] / failed phone:ue / failed spelling:oo',
  'majure' => 'm.aw/ye.oo/r.ay / [m^m].[a^aw]/ / failed phone:ue / failed spelling:ju',
  'makarewicz' => 'm.eh/k.aw/r.ih/v.ih.ch / [m^m].[a^ah]/[k^k].[a^aw]/[r^r].[e^ih]/ / failed phone:v / failed spelling:wi',
  'makhoul' => 'm.eh/k.ue.l / [m^m].[a^ah]/[k^k]. / failed phone:ue / failed spelling:ho',
  'makowski' => 'm.eh/k.aw.f/s.k.ee / [m^m].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'malachowski' => 'm.eh/l.eh/h.aw.f/s.k.ee / [m^m].[a^ah]/[l^l].[a^ah]/ / failed phone:h / failed spelling:ch',
  'malanowski' => 'm.eh/l.eh/n.aw.f/s.k.ee / [m^m].[a^ah]/[l^l].[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'malchow' => 'm.aw.l/h.ow / [m^m].[a^aw].[l^l]/ / failed phone:h / failed spelling:ch',
  'malczewski' => 'm.eh.l/ch.eh.f/s.k.ee / [m^m].[a^ah].[l^l]/ / failed phone:t / failed spelling:cz',
  'maliciously' => 'm.eh/l.ih/sh.ih/s.l.ee / [m^m].[a^ah]/[l^l].[i^ih]/[c^sh].[i^ih]/ / failed phone:s / failed spelling:ou',
  'malinde' => 'm.ah/l.ih.n.d / [m^m].[a^ah]/[l^l].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'malinowski' => 'm.eh/l.ih/n.aw.f/s.k.ee / [m^m].[a^ah]/[l^l].[i^ih]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'maliszewski' => 'm.eh/l.ih/sh.eh.f/s.k.ee / [m^m].[a^ah]/[l^l].[i^ih]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'malkiewicz' => 'm.aw.l/k.eh/v.ih.ch / [m^m].[a^aw].[l^l]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'malkowski' => 'm.eh.l/k.aw.f/s.k.ee / [m^m].[a^ah].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'malle' => 'm.ah.l / [m^m].[a^ah].[ll^l] / failed phone:l / failed spelling:ll',
  'mallinckrodt' => 'm.ah/l.ih.ng/k.r.aw.t / [m^m].[a^ah]/[ll^l].[i^ih].[n^ng]/[ck^k].[r^r].[o^aw]. / failed phone:t / failed spelling:dt',
  'maltais' => 'm.eh.l/t.ay / [m^m].[a^ah].[l^l]/[t^t].[a^ay] / failed phone:ay / failed spelling:ai',
  'malveaux' => 'm.ah.l/v.oh / [m^m].[a^ah].[l^l]/[ve^v].[a^oh] / failed phone:oh / failed spelling:au',
  'mancebo' => 'm.aw.n/ch.eh/b.oh / [m^m].[a^aw].[n^n]/ / failed phone:t / failed spelling:ce',
  'mancinelli' => 'm.aw.n/ch.ee/n.eh/l.ee / [m^m].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'mancini' => 'm.aw.n/ch.ee/n.ee / [m^m].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'mancino' => 'm.aw.n/ch.ee/n.oh / [m^m].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'manderscheid' => 'm.ah.n/d.er/sh.igh.d / [m^m].[a^ah].[n^n]/[d^d].[er^er]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'mandeville' => 'm.ah.n/d.eh/v.ih.l / [m^m].[a^ah].[n^n]/[d^d].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'mandl' => 'm.ah.n/d.eh.l / [m^m].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'mandracchia' => 'm.ah.n/d.r.ah/k.ee/eh / [m^m].[a^ah].[n^n]/[d^d].[r^r].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'mandt' => 'm.ah.n.t / [m^m].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'mandujano' => 'm.aw.n/d.ue/ye.aw/n.oh / [m^m].[a^aw].[n^n]/[d^d].[u^ue]/ / failed phone:ye / failed spelling:ja',
  'manet' => 'm.ah/n.ay / [m^m].[a^ah]/[n^n].[e^ay] / failed phone:ay / failed spelling:t',
  'mangiaracina' => 'm.aw.n/j.er/aw/ch.ee/n.eh / [m^m].[a^aw].[n^n]/[g^j]. / failed phone:er / failed spelling:ia',
  'mangieri' => 'm.aw.ng/g.ih/r.ee / [m^m].[a^aw].[n^ng]/[g^g].[i^ih]/ / failed phone:r / failed spelling:er',
  'mangione' => 'm.aw.n/j.oh/n.ee / [m^m].[a^aw].[n^n]/[g^j]. / failed phone:oh / failed spelling:io',
  'mangled' => 'm.ah.ng/g.eh.l.d / [m^m].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'mangling' => 'm.ah.ng/g.eh/l.ih.ng / [m^m].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'mangus' => 'm.ah.ng/g.ih.s / [m^m].[a^ah].[n^ng]/[gu^g]. / failed phone:ih / failed spelling:s',
  'manhandled' => 'm.ah.n/h.ah.n/d.eh.l.d / [m^m].[a^ah].[n^n]/[h^h].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'maniaci' => 'm.aw/n.ee/aw/ch.ee / [m^m].[a^aw]/[n^n].[i^ee]/[a^aw]/ / failed phone:t / failed spelling:ci',
  'manichaean' => 'm.ah/n.eh/k.ee/eh.n / [m^m].[a^ah]/[n^n].[i^ih]/[ch^k]. / failed phone:ee / failed spelling:ae',
  'manion' => 'm.aw/n.ye.aw.n / [m^m].[a^aw]/[n^n]. / failed phone:ye / failed spelling:io',
  'maniples' => 'm.ah/n.eh/p.eh.l.z / [m^m].[a^ah]/[n^n].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'manischewitz' => 'm.ah/n.ih/sh.eh/v.ih.t.s / [m^m].[a^ah]/[n^n].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'manjarrez' => 'm.aw/n.ye.aw/r.eh.z / [m^m].[a^aw]/[n^n]. / failed phone:ye / failed spelling:ja',
  'manke' => 'm.ah.ng.k / [m^m].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'mankiewicz' => 'm.ah.ng/k.ih/w.ih.t.s / [m^m].[a^ah].[n^ng]/[k^k].[i^ih]/ / failed phone:w / failed spelling:ew',
  'mankowski' => 'm.eh.ng/k.aw.f/s.k.ee / [m^m].[a^ah].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'manne' => 'm.ah.n / [m^m].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'manocchio' => 'm.aw/n.oh/k.ee/oh / [m^m].[a^aw]/[n^n].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'mansions' => 'm.ah.n/ch.eh.n.z / [m^m].[a^ah].[n^n]/ / failed phone:t / failed spelling:si',
  'manske' => 'm.ah.n.s.k / [m^m].[a^ah].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'manteufel' => 'm.ah.n/t.oy/f.eh.l / [m^m].[a^ah].[n^n]/[te^t]. / failed phone:oy / failed spelling:uf',
  'mantles' => 'm.ah.n/t.eh.l.z / [m^m].[a^ah].[n^n]/[t^t]. / failed phone:eh / failed spelling:le',
  'manus' => 'm.ay/n.ih.s / [m^m].[a^ay]/[n^n]. / failed phone:ih / failed spelling:us',
  'manville' => 'm.ah.n/v.ih.l / [m^m].[a^ah].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'mao' => 'm.ow / [m^m]. / failed phone:ow / failed spelling:ao',
  'maoist' => 'm.ow/ih.s.t / [m^m]. / failed phone:ow / failed spelling:ao',
  'maoists' => 'm.ow/ih.s.t.s / [m^m]. / failed phone:ow / failed spelling:ao',
  'maori' => 'm.ow/r.ee / [m^m]. / failed phone:ow / failed spelling:ao',
  'maples' => 'm.ay/p.eh.l.z / [m^m].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'maplewood' => 'm.ay/p.eh.l/w.oo.d / [m^m].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'maquiladoras' => 'm.ah/k.ee/ye.eh/d.aw/r.eh.s / [m^m].[a^ah]/[qu^k].[i^ee]/ / failed phone:ue / failed spelling:la',
  'marais' => 'm.air/ay / [m^m].[ar^air]/[a^ay] / failed phone:ay / failed spelling:ai',
  'maranville' => 'm.aw/r.aw.n/v.ih.l / [m^m].[a^aw]/[r^r].[a^aw].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'marbled' => 'm.aw.r/b.eh.l.d / [m^m].[a^oh].[r^r]/[b^b]. / failed phone:eh / failed spelling:le',
  'marblehead' => 'm.aw.r/b.eh.l/h.eh.d / [m^m].[a^oh].[r^r]/[b^b]. / failed phone:eh / failed spelling:le',
  'marbles' => 'm.aw.r/b.eh.l.z / [m^m].[a^oh].[r^r]/[b^b]. / failed phone:eh / failed spelling:le',
  'marceaux' => 'm.aw.r/s.oh / [m^m].[a^oh].[r^r]/[ce^s].[a^oh] / failed phone:oh / failed spelling:au',
  'marcela' => 'm.aw.r/ch.eh/l.eh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcelia' => 'm.aw.r/ch.eh/l.ee/eh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcelino' => 'm.aw.r/ch.eh/l.ee/n.oh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcelle' => 'm.aw.r/s.eh.l / [m^m].[a^oh].[r^r]/[c^s].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'marcelli' => 'm.aw.r/ch.eh/l.ee / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcellina' => 'm.aw.r/ch.eh/l.ee/n.eh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcelline' => 'm.aw.r/ch.eh/l.ee/n.ee / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcellino' => 'm.aw.r/ch.eh/l.ee/n.oh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcelo' => 'm.aw.r/ch.eh/l.oh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'marcheschi' => 'm.aw.r/ch.eh/sh.ee / [m^m].[a^oh].[r^r]/[ch^ch].[e^eh]/[sc^sh]. / failed phone:ee / failed spelling:hi',
  'marchessault' => 'm.aw.r/sh.ih/s.oh / [m^m].[a^oh].[r^r]/[ch^sh].[e^ih]/[ss^s].[a^oh] / failed phone:oh / failed spelling:au',
  'marciano' => 'm.aw.r/ch.ee/aw/n.oh / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'marciante' => 'm.aw.r/ch.eh.n/t.ee / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'marcile' => 'm.aw.r/ch.eh.l / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'marcille' => 'm.aw.r/s.ih.l / [m^m].[a^oh].[r^r]/[c^s].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'marcinek' => 'm.er/ch.ih/n.eh.k / [m^m].[ar^er]/ / failed phone:t / failed spelling:ci',
  'marciniak' => 'm.er/ch.ih/n.ee/ah.k / [m^m].[ar^er]/ / failed phone:t / failed spelling:ci',
  'marcinkowski' => 'm.er/ch.ih.ng/k.aw.f/s.k.ee / [m^m].[ar^er]/ / failed phone:t / failed spelling:ci',
  'marcoux' => 'm.aw.r/k.ue / [m^m].[a^oh].[r^r]/[c^k].[ou^ue] / failed phone:ue / failed spelling:ou',
  'marcucci' => 'm.aw.r/k.ue/ch.ee / [m^m].[a^oh].[r^r]/[c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'marczak' => 'm.aw.r/ch.ah.k / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:cz',
  'mardi' => 'm.aw.r/t.ee / [m^m].[a^oh].[r^r]/ / failed phone:t / failed spelling:di',
  'margaux' => 'm.aw.r/g.oh / [m^m].[a^oh].[r^r]/[g^g].[a^oh] / failed phone:oh / failed spelling:au',
  'margette' => 'm.aw.r/zh.eh.t / [m^m].[a^oh].[r^r]/ / failed phone:zh / failed spelling:ge',
  'margiotta' => 'm.aw.r/j.oh/t.eh / [m^m].[a^oh].[r^r]/[g^j]. / failed phone:oh / failed spelling:io',
  'margot' => 'm.aw.r/g.oh / [m^m].[a^oh].[r^r]/[g^g].[o^oh] / failed phone:oh / failed spelling:ot',
  'margret' => 'm.aw/g.r.eh.t / [m^m].[a^aw]/ / failed phone:g / failed spelling:rg',
  'marianne' => 'm.air/ee/ah.n / [m^m].[ar^air]/[i^ee]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'marijuana' => 'm.air/eh/w.aw/n.eh / [m^m].[ar^air]/[i^ih]/ / failed phone:w / failed spelling:ju',
  'marinaccio' => 'm.aw/r.ih/n.aw/ch.ee/oh / [m^m].[a^aw]/[r^r].[i^ih]/[n^n].[a^aw]/ / failed phone:t / failed spelling:cc',
  'marinucci' => 'm.aw/r.ee/n.ue/ch.ee / [m^m].[a^aw]/[r^r].[i^ee]/[n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'mariucci' => 'm.air/ee/ue/ch.ee / [m^m].[ar^air]/[i^ee]/[u^ue]/ / failed phone:t / failed spelling:cc',
  'marje' => 'm.aw.r.j / [m^m].[a^oh].[r^r].[j^j] / failed phone:j / failed spelling:je',
  'marke' => 'm.aw.r.k / [m^m].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'markham' => 'm.aw.r/k.eh.m / [m^m].[a^oh].[r^r]/[k^k]. / failed phone:eh / failed spelling:ha',
  'markiewicz' => 'm.aw.r/k.eh/v.ih.ch / [m^m].[a^oh].[r^r]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'markka' => 'm.aw.r/k.eh / [m^m].[a^oh].[r^r]/[k^k]. / failed phone:eh / failed spelling:ka',
  'markkaa' => 'm.aw.r/k.aw / [m^m].[a^oh].[r^r]/[k^k]. / failed phone:aw / failed spelling:ka',
  'markkas' => 'm.aw.r/k.eh.s / [m^m].[a^oh].[r^r]/[k^k]. / failed phone:eh / failed spelling:ka',
  'markowicz' => 'm.aw.r/k.eh/v.ih.ch / [m^m].[a^oh].[r^r]/[k^k].[o^uh]/ / failed phone:v / failed spelling:wi',
  'markowski' => 'm.er/k.aw.f/s.k.ee / [m^m].[ar^er]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'markwardt' => 'm.aw.r/kw.aw.r.t / [m^m].[a^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'markwell' => 'm.aw.r/kw.eh.l / [m^m].[a^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'markwood' => 'm.aw.r/kw.oo.d / [m^m].[a^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'marlboros' => 'm.aw.r.l/b.er/r.oh.z / [m^m].[a^oh].[r^r].[l^l]/[b^b].[o^oh].[r^r]/ / failed phone:r / failed spelling:os',
  'marmolejo' => 'm.aw.r/m.oh/l.ay/ye.oh / [m^m].[a^oh].[r^r]/[m^m].[o^oh]/[l^l].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'marois' => 'm.er/w.aw / [m^m].[ar^er]/ / failed phone:w / failed spelling:oi',
  'marquardt' => 'm.aw.r/kw.aw.r.t / [m^m].[a^oh].[r^r]/[qu^kw].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'marquis' => 'm.aw.r/k.ee / [m^m].[a^oh].[r^r]/[qu^k].[i^ee] / failed phone:ee / failed spelling:is',
  'marriage' => 'm.air/ih.j / [m^m].[arr^air]/[i^ih]. / failed phone:j / failed spelling:ag',
  'marriages' => 'm.air/ih/j.ih.z / [m^m].[arr^air]/[i^ih]/ / failed phone:j / failed spelling:ag',
  'marrujo' => 'm.aw/r.ue/ye.oh / [m^m].[a^aw]/[rr^r].[u^ue]/ / failed phone:ye / failed spelling:jo',
  'marsch' => 'm.aw.r.sh / [m^m].[a^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'marschalk' => 'm.aw.r/sh.aw.k / [m^m].[a^oh].[r^r]/[sc^sh]. / failed phone:aw / failed spelling:ha',
  'marschall' => 'm.aw.r/sh.eh.l / [m^m].[a^oh].[r^r]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'marschke' => 'm.aw.r.sh.k / [m^m].[a^oh].[r^r].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'marseille' => 'm.aw.r/s.igh.l / [m^m].[a^oh].[r^r]/[se^s].[i^igh].[ll^l] / failed phone:l / failed spelling:ll',
  'marszalek' => 'm.er/sh.aw/l.eh.k / [m^m].[ar^er]/[s^sh]. / failed phone:aw / failed spelling:za',
  'martelle' => 'm.aw.r/t.eh.l / [m^m].[a^oh].[r^r]/[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'martocci' => 'm.aw.r/t.oh/ch.ee / [m^m].[a^oh].[r^r]/[t^t].[o^oh]/ / failed phone:t / failed spelling:cc',
  'martucci' => 'm.aw.r/t.ue/ch.ee / [m^m].[a^oh].[r^r]/[t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'marucci' => 'm.aw/r.ue/ch.ee / [m^m].[a^aw]/[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'marvelle' => 'm.aw.r/v.eh.l / [m^m].[a^oh].[r^r]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'maryanne' => 'm.air/ee/ah.n / [m^m].[ar^air]/[y^ee]/[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'marysville' => 'm.air/ee.z/v.ih.l / [m^m].[ar^air]/[y^ee].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'maryville' => 'm.air/ee/v.ih.l / [m^m].[ar^air]/[y^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'masch' => 'm.ah.sh / [m^m].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'maschke' => 'm.ah.sh.k / [m^m].[a^ah].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'mascia' => 'm.aw.s/ch.eh / [m^m].[a^aw].[sc^s]/ / failed phone:t / failed spelling:ia',
  'masciarelli' => 'm.aw.s/ch.er/eh/l.ee / [m^m].[a^aw].[sc^s]/ / failed phone:t / failed spelling:ia',
  'mascioli' => 'm.aw.s/ch.oh/l.ee / [m^m].[a^aw].[sc^s]/ / failed phone:t / failed spelling:io',
  'maske' => 'm.ay.s.k / [m^m].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'maslen' => 'm.ah/s.eh/l.eh.n / [m^m].[a^ah]/[s^s]. / failed phone:eh / failed spelling:le',
  'maslowski' => 'm.eh/s.l.aw.f/s.k.ee / [m^m].[a^ah]/[s^s].[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'massager' => 'm.eh/s.aw/zh.er / [m^m].[a^ah]/[ss^s].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'massages' => 'm.eh/s.aw/zh.ih.z / [m^m].[a^ah]/[ss^s].[a^aw]/ / failed phone:zh / failed spelling:ge',
  'massaging' => 'm.eh/s.aw/zh.ih.ng / [m^m].[a^ah]/[ss^s].[a^aw]/ / failed phone:zh / failed spelling:gi',
  'masse' => 'm.ah.s / [m^m].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'massucci' => 'm.aw/s.ue/ch.ee / [m^m].[a^aw]/[ss^s].[u^ue]/ / failed phone:t / failed spelling:cc',
  'mastrogiovanni' => 'm.ah/s.t.r.oh/j.oh/v.aw/n.ee / [m^m].[a^ah]/[s^s].[t^t].[r^r].[o^oh]/[g^j]. / failed phone:oh / failed spelling:io',
  'mastroianni' => 'm.ah/s.t.r.oh/ye.aw/n.ee / [m^m].[a^ah]/[s^s].[t^t].[r^r].[o^oh]/ / failed phone:ye / failed spelling:ia',
  'masucci' => 'm.aw/s.ue/ch.ee / [m^m].[a^aw]/[s^s].[u^ue]/ / failed phone:t / failed spelling:cc',
  'mateja' => 'm.aw/t.ay/ye.eh / [m^m].[a^aw]/[t^t].[e^ay]/ / failed phone:ue / failed spelling:ja',
  'matejka' => 'm.eh/t.ay/k.eh / [m^m].[a^ah]/[t^t].[e^ay]/ / failed phone:k / failed spelling:jk',
  'matheus' => 'm.ah/dh.oy.z / [m^m].[a^ah]/[the^dh]. / failed phone:oy / failed spelling:us',
  'mathieu' => 'm.ah.th/ye.ue / [m^m].[a^ah].[th^th]/ / failed phone:ue / failed spelling:ie',
  'mathilda' => 'm.eh/t.ih.l/d.eh / [m^m].[a^ah]/[t^t]. / failed phone:ih / failed spelling:hi',
  'mathilde' => 'm.ah/th.ih.l.d / [m^m].[a^ah]/[th^th].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'matisse' => 'm.ah/t.ih.s / [m^m].[a^ah]/[t^t].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'mattea' => 'm.ah/sh.eh / [m^m].[a^ah]/[t^sh]. / failed phone:eh / failed spelling:te',
  'matteucci' => 'm.aw/t.ue/ch.ee / [m^m].[a^aw]/[tte^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'matthew' => 'm.ah.th/ye.ue / [m^m].[a^ah]. / failed phone:th / failed spelling:tt',
  'matthews' => 'm.ah.th/ye.ue.z / [m^m].[a^ah]. / failed phone:th / failed spelling:tt',
  'matthewson' => 'm.ah.th/ye.ue/s.eh.n / [m^m].[a^ah]. / failed phone:th / failed spelling:tt',
  'matthias' => 'm.eh/th.igh/eh.s / [m^m].[a^ah]/ / failed phone:th / failed spelling:tt',
  'matthies' => 'm.ah/th.ee.z / [m^m].[a^ah]/ / failed phone:th / failed spelling:tt',
  'matthiesen' => 'm.ah/th.ee/s.eh.n / [m^m].[a^ah]/ / failed phone:th / failed spelling:tt',
  'matthis' => 'm.ah/th.ih.s / [m^m].[a^ah]/ / failed phone:th / failed spelling:tt',
  'matthys' => 'm.ah/th.ee.z / [m^m].[a^ah]/ / failed phone:th / failed spelling:tt',
  'mattias' => 'm.ah/sh.eh.z / [m^m].[a^ah]/[t^sh]. / failed phone:eh / failed spelling:ti',
  'mattucci' => 'm.aw/t.ue/ch.ee / [m^m].[a^aw]/[tt^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'matulich' => 'm.eh/t.ye.ue/l.ih.h / [m^m].[a^ah]/[t^t].[u^ue]/[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'matus' => 'm.ah/t.ih.s / [m^m].[a^ah]/[t^t]. / failed phone:ih / failed spelling:us',
  'matuschka' => 'm.eh/t.uh.sh/k.eh / [m^m].[a^ah]/[t^t].[u^uh].[s^sh]/[ch^k]. / failed phone:eh / failed spelling:ka',
  'matuszak' => 'm.eh/t.uh/sh.eh.k / [m^m].[a^ah]/[t^t].[u^uh]/[s^sh]. / failed phone:eh / failed spelling:za',
  'matuszewski' => 'm.eh/t.eh/sh.eh.f/s.k.ee / [m^m].[a^ah]/[t^t].[u^uh]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'matzke' => 'm.ah.t.z.k / [m^m].[a^ah].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'mauceri' => 'm.aw/ch.air/ee / [m^m].[a^aw]/ / failed phone:t / failed spelling:uc',
  'maude' => 'm.aw.d / [m^m].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'maultasch' => 'm.aw.l/t.ah.sh / [m^m].[au^aw].[l^l]/[t^t].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'maupin' => 'm.oh/p.ah.n / [m^m].[au^oh]/[p^p]. / failed phone:ah / failed spelling:in',
  'maxham' => 'm.ah.k/s.eh.m / [m^m].[a^ah].[x^x]/ / failed phone:eh / failed spelling:ha',
  'maxx' => 'm.ah.k.s / [m^m].[a^ah].[x^x] / failed phone:s / failed spelling:x',
  'maxxam' => 'm.ah.k/s.eh.m / [m^m].[a^ah].[x^x]/ / failed phone:eh / failed spelling:xa',
  'maxxim' => 'm.ah.k/s.ih.m / [m^m].[a^ah].[x^x]/ / failed phone:ih / failed spelling:xi',
  'maxzide' => 'm.ah.k/s.ee/t.eh / [m^m].[a^ah].[x^k]/[z^s].[i^ee]/ / failed phone:t / failed spelling:d',
  'maya' => 'm.igh/eh / [m^m]. / failed phone:igh / failed spelling:ay',
  'mayan' => 'm.igh/eh.n / [m^m]. / failed phone:igh / failed spelling:ay',
  'maybelle' => 'm.ay/b.eh.l / [m^m].[ay^ay]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mayde' => 'm.ay.d / [m^m].[ay^ay].[d^d] / failed phone:d / failed spelling:yd',
  'maye' => 'm.ay / [m^m].[a^ay] / failed phone:ay / failed spelling:ay',
  'mayeaux' => 'm.ay/oh / [m^m].[a^ay]/ / failed phone:oh / failed spelling:ye',
  'mayeda' => 'm.igh/ee/d.eh / [m^m]. / failed phone:igh / failed spelling:ay',
  'mayeux' => 'm.ay/oh / [m^m].[a^ay]/ / failed phone:oh / failed spelling:ye',
  'mayhan' => 'm.ay/eh.n / [m^m].[a^ay]/[y^eh]. / failed phone:n / failed spelling:ha',
  'mayher' => 'm.ay/er / [m^m].[a^ay]/ / failed phone:er / failed spelling:yh',
  'mayhugh' => 'm.ay/h.eh / [m^m].[ay^ay]/[h^h].[u^uh] / failed phone:eh / failed spelling:ug',
  'mayme' => 'm.ay.m / [m^m].[ay^ay].[m^m] / failed phone:m / failed spelling:ym',
  'mayville' => 'm.ay/v.ih.l / [m^m].[ay^ay]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'mazeltov' => 'm.aw/z.eh.l/t.aw.f / [m^m].[a^aw]/[z^z].[e^eh].[l^l]/[t^t].[o^aw]. / failed phone:f / failed spelling:v',
  'mazurkiewicz' => 'm.eh/z.er/k.eh/v.ih.ch / [m^m].[a^ah]/[z^z].[ur^er]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'mazurowski' => 'm.eh/z.er/aw.f/s.k.ee / [m^m].[a^ah]/[z^z].[ur^er]/[o^aw]. / failed phone:f / failed spelling:ws',
  'mazzanti' => 'm.aw.t/s.aw.n/t.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzara' => 'm.aw.t/s.aw/r.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzarella' => 'm.aw.t/s.aw/r.eh/l.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzei' => 'm.aw.t/s.ay/ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzella' => 'm.aw.t/s.eh/l.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzetti' => 'm.aw.t/s.eh/t.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazziotti' => 'm.aw.t/s.ee/oh/t.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzocchi' => 'm.aw.t/s.oh/k.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzocco' => 'm.aw.t/s.oh/k.oh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzola' => 'm.aw.t/s.oh/l.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzone' => 'm.aw.t/s.oh/n.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzoni' => 'm.aw.t/s.oh/n.ee / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzotta' => 'm.aw.t/s.oh/t.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzuca' => 'm.aw.t/s.ue/k.eh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mazzucco' => 'm.aw.t/s.ue/k.oh / [m^m].[a^aw]. / failed phone:t / failed spelling:zz',
  'mbank' => 'eh.m/b.ah.ng.k /  / failed phone:eh / failed spelling:mb',
  'mc' => 'm.ih.k / [m^m]. / failed phone:ih / failed spelling:c',
  'mcabee' => 'm.eh/k.ah/b.ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcadam' => 'm.eh/k.ah/d.eh.m / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcadams' => 'm.eh/k.ah/d.eh.m.z / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcadoo' => 'm.ah/k.eh/d.ue / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcadory' => 'm.eh/k.ah/d.er/ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcadow' => 'm.eh/k.ah/d.oh / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcafee' => 'm.ah/k.eh/f.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcaffee' => 'm.ah/k.eh/f.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcaleer' => 'm.ah/k.eh/l.ih.r / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcaleese' => 'm.ah/k.eh/l.ee.z / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcalexander' => 'm.eh/k.ah/l.ih.g/z.ah.n/d.er / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcalinden' => 'm.eh/k.l.ih.n/d.eh.n / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcalister' => 'm.eh/k.ah/l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcallen' => 'm.eh/k.aw/l.eh.n / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcallister' => 'm.eh/k.ah/l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcaloon' => 'm.ah/k.eh/l.ue.n / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcalpin' => 'm.eh/k.ah.l/p.eh.n / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcalpine' => 'm.eh/k.ah.l/p.igh.n / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcamis' => 'm.eh/k.ah/m.eh.s / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcan' => 'm.eh/k.ah.n / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcanally' => 'm.ah/k.eh/n.ah/l.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcanany' => 'm.eh/k.ah/n.eh/n.ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcandrew' => 'm.eh/k.ah.n/d.r.ue / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcandrews' => 'm.eh/k.ah.n/d.r.ue.z / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcanelly' => 'm.ah/k.eh/n.ah/l.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcaninch' => 'm.eh/k.ah/n.ih.n.ch / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcannally' => 'm.ah/k.eh/n.ah/l.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcanulty' => 'm.ah/k.eh/n.eh.l/t.ee / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcardle' => 'm.eh/k.aw.r/d.eh.l / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcarthur' => 'm.eh/k.aw.r/th.er / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcartor' => 'm.eh/k.aw.r/t.er / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcatee' => 'm.eh/k.ah/t.ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcateer' => 'm.ah/k.eh/t.ih.r / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcaulay' => 'm.eh/k.aw/l.ay / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcauley' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcauliff' => 'm.eh/k.aw/l.eh.f / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcauliffe' => 'm.eh/k.aw/l.eh.f / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcavity' => 'm.eh/k.ah/v.eh/t.ee / [m^m]. / failed phone:eh / failed spelling:ca',
  'mcavoy' => 'm.ah/k.eh/v.oy / [m^m]. / failed phone:ah / failed spelling:ca',
  'mcbain' => 'm.eh.k/b.ay.n / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbane' => 'm.eh.k/b.ay.n / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbay' => 'm.eh.k/b.ay / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbean' => 'm.eh.k/b.ee.n / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbeath' => 'm.eh.k/b.eh.th / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbee' => 'm.eh.k/b.ee / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbeth' => 'm.eh.k/b.eh.th / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbirney' => 'm.eh.k/b.er/n.ee / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbrayer' => 'm.eh.k/b.r.ay/er / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbrearty' => 'm.eh.k/b.r.ih.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbreen' => 'm.eh.k/b.r.ee.n / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbride' => 'm.eh.k/b.r.igh.d / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbridge' => 'm.eh.k/b.r.ih.j / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbrien' => 'm.eh.k/b.r.igh/eh.n / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbroom' => 'm.eh.k/b.r.ue.m / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbryar' => 'm.eh.k/b.r.igh/er / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcbryde' => 'm.eh.k/b.r.igh.d / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcburnett' => 'm.eh.k/b.er/n.eh.t / [m^m]. / failed phone:eh / failed spelling:cb',
  'mcburney' => 'm.eh.k/b.er/n.ee / [m^m]. / failed phone:eh / failed spelling:cb',
  'mccaa' => 'm.eh/k.aw / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccabe' => 'm.eh/k.ay.b / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccadden' => 'm.eh/k.ah/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccafferty' => 'm.eh/k.ah/f.er/t.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaffery' => 'm.eh/k.ah/f.r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaffrey' => 'm.eh/k.ah/f.r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaghren' => 'm.eh/k.ah/g.r.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccague' => 'm.eh/k.ay.g / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccahan' => 'm.eh/k.ah.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccahill' => 'm.eh/k.aw/h.ih.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaig' => 'm.eh/k.ay.g / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccain' => 'm.eh/k.ay.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaleb' => 'm.eh/k.ay/l.eh.b / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccalip' => 'm.eh/k.ah/l.ih.p / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccalister' => 'm.eh/k.ah/l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccall' => 'm.eh/k.aw.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccalla' => 'm.eh/k.ah/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallen' => 'm.eh/k.aw/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccalley' => 'm.eh/k.ah/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallie' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallion' => 'm.eh/k.ah/l.ye.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallister' => 'm.eh/k.ah/l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallon' => 'm.eh/k.ah/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccallum' => 'm.eh/k.ah/l.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccalmont' => 'm.eh/k.ah.l/m.eh.n.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccamant' => 'm.eh/k.ah/m.eh.n.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccambridge' => 'm.eh/k.ah.m/b.r.ih.j / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccamey' => 'm.eh/k.ah/m.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccamish' => 'm.eh/k.ah/m.ih.sh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccammon' => 'm.eh/k.ah/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccampbell' => 'm.eh/k.ah.m.p/b.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccamy' => 'm.eh/k.ay/m.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccan' => 'm.eh/k.ah.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccance' => 'm.eh/k.ah.n.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccandless' => 'm.eh/k.ah.n.d/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccandlish' => 'm.eh/k.ah.n.d/l.ih.sh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccane' => 'm.eh/k.ay.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccanless' => 'm.eh/k.ah.n/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccann' => 'm.eh/k.ah.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccanna' => 'm.eh/k.ah/n.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccannon' => 'm.eh/k.ah/n.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccants' => 'm.eh/k.ah.n.t.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccard' => 'm.eh/k.aw.r.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccardell' => 'm.eh/k.aw.r/d.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccardle' => 'm.eh/k.aw.r/d.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarey' => 'm.eh/k.ah/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccargar' => 'm.eh/k.aw.r/g.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccargo' => 'm.eh/k.aw.r/g.oh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarl' => 'm.eh/k.aw.r.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarley' => 'm.eh/k.aw.r/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarn' => 'm.eh/k.aw.r.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarney' => 'm.eh/k.aw.r/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarran' => 'm.eh/k.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarrell' => 'm.eh/k.ah/r.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarren' => 'm.eh/k.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarrick' => 'm.eh/k.ah/r.ih.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarroll' => 'm.eh/k.ah/r.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarron' => 'm.eh/k.ah/r.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarry' => 'm.eh/k.ah/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarson' => 'm.eh/k.aw.r/s.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccart' => 'm.eh/k.aw.r.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccartan' => 'm.eh/k.aw.r/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarten' => 'm.eh/k.aw.r/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarter' => 'm.eh/k.aw.r/t.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccartha' => 'm.eh/k.aw.r/th.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarthy' => 'm.eh/k.aw.r/th.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarthyism' => 'm.eh/k.aw.r/th.ee/ih/z.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccartin' => 'm.eh/k.aw.r/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccartney' => 'm.eh/k.aw.r.t/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccartt' => 'm.eh/k.aw.r.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarty' => 'm.eh/k.aw.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarver' => 'm.eh/k.aw.r/v.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccarville' => 'm.eh/k.aw.r/v.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccary' => 'm.ee/k.air/ee / [m^m]. / failed phone:ee / failed spelling:cc',
  'mccaskey' => 'm.eh/k.ah/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaskill' => 'm.eh/k.ah/s.k.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccasland' => 'm.eh/k.ah/z.l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaslin' => 'm.eh/k.ah/z.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaughan' => 'm.eh/k.aw.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaughey' => 'm.eh/k.aw/ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaul' => 'm.eh/k.aw.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccauley' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaulley' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccausland' => 'm.eh/k.aw/z.l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccauslin' => 'm.eh/k.aw/z.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccaw' => 'm.eh/k.aw / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccawley' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccay' => 'm.eh/k.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcchesney' => 'm.eh.k/ch.eh.z/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcchristian' => 'm.eh/k.r.ih.s/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclafferty' => 'm.eh/k.l.ah/f.er/t.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclaflin' => 'm.eh/k.l.ah/f.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclain' => 'm.eh/k.l.ay.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclaine' => 'm.eh/k.l.ay.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclam' => 'm.eh/k.l.ah.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclanahan' => 'm.eh/k.l.ah/n.eh/h.ah.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclane' => 'm.eh/k.l.ay.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclaran' => 'm.eh/k.l.ah/r.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclard' => 'm.ee/k.l.er.d / [m^m]. / failed phone:ee / failed spelling:cc',
  'mcclaren' => 'm.eh/k.l.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclarnon' => 'm.eh/k.l.aw.r/n.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclarty' => 'm.eh/k.l.aw.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclary' => 'm.eh/k.l.air/ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclaskey' => 'm.eh/k.l.ah/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclatchey' => 'm.eh/k.l.ah/ch.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclatchy' => 'm.eh/k.l.ah/ch.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclaugherty' => 'm.eh/k.l.ah/f.er/t.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclave' => 'm.eh/k.l.ay.v / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclay' => 'm.eh/k.l.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleaf' => 'm.eh/k.l.ee.f / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclean' => 'm.eh/k.l.ee.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleary' => 'm.eh/k.l.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleave' => 'm.eh/k.l.ee.v / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleery' => 'm.eh/k.l.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclees' => 'm.eh/k.l.ee.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleese' => 'm.eh/k.l.ee.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclellan' => 'm.eh/k.l.eh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclelland' => 'm.eh/k.l.eh/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclellen' => 'm.eh/k.l.eh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclements' => 'm.eh/k.l.eh/m.eh.n.t.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclenaghan' => 'm.eh/k.l.eh/n.eh/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclenahan' => 'm.eh/k.l.eh/n.eh/h.ah.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclenathan' => 'm.eh/k.l.eh/n.eh/th.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclendon' => 'm.eh/k.l.ay.n/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclenny' => 'm.eh/k.l.eh/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccleskey' => 'm.eh/k.l.eh/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclimans' => 'm.eh/k.l.igh/m.eh.n.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclintic' => 'm.eh/k.l.ih.n/t.ih.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclintick' => 'm.eh/k.l.ih.n/t.ih.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclintock' => 'm.eh/g.l.ih.n/t.aw.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclinton' => 'm.eh/k.l.ih.n/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclish' => 'm.eh/k.l.ih.sh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclory' => 'm.eh/k.l.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccloskey' => 'm.eh/k.l.aw/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclosky' => 'm.eh/k.l.aw/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccloud' => 'm.eh/k.l.ow.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccloy' => 'm.eh/k.l.oy / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccluer' => 'm.eh/k.l.ue.r / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclune' => 'm.eh/k.l.ue.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccluney' => 'm.eh/k.l.ue/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclung' => 'm.eh/k.l.uh.ng / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclure' => 'm.eh/k.l.ue.r / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclurg' => 'm.eh/k.l.er.g / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcclurkin' => 'm.eh/k.l.er/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccluskey' => 'm.eh/k.l.uh/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoig' => 'm.eh/k.oy.g / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoin' => 'm.eh/k.oy.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccole' => 'm.eh/k.oh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccolgan' => 'm.eh/k.oh.l/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoll' => 'm.eh/k.oh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccollam' => 'm.eh/k.aw/l.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccolley' => 'm.eh/k.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccollister' => 'm.eh/k.aw/l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccolloch' => 'm.eh/k.aw/l.eh.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccollom' => 'm.eh/k.aw/l.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccollough' => 'm.eh/k.aw/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccollum' => 'm.eh/k.aw/l.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccolm' => 'm.eh/k.oh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccomas' => 'm.eh/k.oh/m.eh.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccomb' => 'm.eh/k.oh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccomber' => 'm.eh/k.oh.m/b.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccombie' => 'm.eh/k.oh.m/b.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccombs' => 'm.eh/k.aw.m.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccommon' => 'm.eh/k.aw/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccommons' => 'm.eh/k.aw/m.eh.n.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccomsey' => 'm.eh/k.aw.m/s.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconaghy' => 'm.eh/k.aw/n.eh/g.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconaha' => 'm.eh/k.aw/n.eh/h.aw / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconahay' => 'm.eh/k.aw/n.eh/h.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconahy' => 'm.eh/k.aw/n.eh/h.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconathy' => 'm.eh/k.aw/n.eh/th.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconaughey' => 'm.eh/k.aw/n.eh/g.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconaughy' => 'm.eh/k.aw/n.eh/g.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccone' => 'm.eh/k.oh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconico' => 'm.eh/k.aw/n.eh/k.oh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconkey' => 'm.eh/k.aw.ng/k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconn' => 'm.eh/k.aw.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconnaughey' => 'm.eh/k.aw/n.eh/g.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconnel' => 'm.eh/k.aw/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconnell' => 'm.eh/k.aw/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconnon' => 'm.eh/k.aw/n.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcconville' => 'm.eh/k.aw.n/v.ih.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccooey' => 'm.eh/k.ue/ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccook' => 'm.eh/k.oo.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccool' => 'm.eh/k.ue.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccord' => 'm.eh/k.aw.r.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorkel' => 'm.eh/k.aw.r/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorkell' => 'm.eh/k.aw.r/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorkindale' => 'm.eh/k.aw.r/k.eh.n/d.ay.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorkle' => 'm.eh/k.aw.r/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccormac' => 'm.eh/k.aw.r/m.eh.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccormack' => 'm.eh/k.aw.r/m.eh.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccormick' => 'm.eh/k.aw.r/m.ih.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorquodale' => 'm.eh/k.aw.r/k.eh/d.ay.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorry' => 'm.eh/k.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccort' => 'm.eh/k.aw.r.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccorvey' => 'm.eh/k.aw.r/v.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccosh' => 'm.eh/k.aw.sh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoskey' => 'm.eh/k.aw/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccotter' => 'm.eh/k.aw/t.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoun' => 'm.eh/k.ow.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccourt' => 'm.eh/k.aw.r.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccowan' => 'm.eh/k.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccowen' => 'm.eh/k.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccowin' => 'm.eh/k.ow/ih.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccown' => 'm.eh/k.ow.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoy' => 'm.eh/k.oy / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccoys' => 'm.eh/k.oy.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccracken' => 'm.eh/k.r.ah/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrackin' => 'm.eh/k.r.ah/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrady' => 'm.eh/k.r.ay/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrae' => 'm.eh/k.r.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccraney' => 'm.eh/k.r.ah/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccranie' => 'm.eh/k.r.ay/n.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrary' => 'm.eh/k.r.air/ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccravy' => 'm.eh/k.r.ay/v.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccraw' => 'm.eh/k.r.aw / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccray' => 'm.eh/k.r.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrea' => 'm.eh/k.r.ay / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreadie' => 'm.eh/k.r.ee/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccready' => 'm.eh/k.r.ee/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreary' => 'm.eh/k.r.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccredie' => 'm.eh/k.r.ee/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccree' => 'm.eh/k.r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreedy' => 'm.eh/k.r.ee/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreery' => 'm.eh/k.r.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreight' => 'm.eh/k.r.ay.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccreless' => 'm.eh/k.r.ee/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrickard' => 'm.eh/k.r.ih/k.er.d / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccright' => 'm.eh/k.r.igh.t / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrillis' => 'm.eh/k.r.ih/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrimmon' => 'm.eh/k.r.ih/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrocklin' => 'm.eh/k.r.aw/k.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrone' => 'm.eh/k.r.oh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrorey' => 'm.eh/k.r.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrory' => 'm.eh/k.r.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccroskey' => 'm.eh/k.r.aw/s.k.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrossen' => 'm.eh/k.r.aw/s.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrudden' => 'm.eh/k.r.uh/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrum' => 'm.eh/k.r.uh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrumb' => 'm.eh/k.r.uh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccrystal' => 'm.eh/k.r.ih/s.t.eh.l / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccuan' => 'm.eh/k.ue/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccubbin' => 'm.eh/k.uh/b.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccubbins' => 'm.eh/k.uh/b.eh.n.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccue' => 'm.eh/k.ye.ue / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccuen' => 'm.eh/k.ye.ue.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccuin' => 'm.eh/k.ue/eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccuistion' => 'm.eh/kw.ih/sh.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccuiston' => 'm.eh/kw.ih/s.t.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcculla' => 'm.eh/k.uh/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullagh' => 'm.eh/k.uh/l.eh.g / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullah' => 'm.eh/k.uh/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullar' => 'm.eh/k.uh/l.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullars' => 'm.eh/k.uh/l.er.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullen' => 'm.eh/k.uh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcculler' => 'm.eh/k.uh/l.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullers' => 'm.eh/k.uh/l.er.z / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcculley' => 'm.eh/k.uh/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcculloch' => 'm.eh/k.uh/l.eh.k / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcculloh' => 'm.eh/k.uh/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullough' => 'm.eh/k.uh/l.eh / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccullum' => 'm.eh/k.uh/l.eh.m / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccully' => 'm.eh/k.uh/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccumber' => 'm.eh/k.uh.m/b.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccune' => 'm.eh/k.ye.ue.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccurdy' => 'm.eh/k.er/d.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccurley' => 'm.eh/k.er/l.ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccurry' => 'm.eh/k.er/ee / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccusker' => 'm.eh/k.uh/s.k.er / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccutchan' => 'm.eh/k.uh/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccutchen' => 'm.eh/k.uh/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mccutcheon' => 'm.eh/k.uh/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:cc',
  'mcdade' => 'm.eh.k/d.ay.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdaid' => 'm.eh.k/d.ay.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdanel' => 'm.eh.k/d.ah/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdaniel' => 'm.eh.k/d.ah/n.ye.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdaniels' => 'm.eh.k/d.ah/n.ye.eh.l.z / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdannel' => 'm.eh.k/d.ah/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdaris' => 'm.eh.k/d.ah/r.eh.s / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdavid' => 'm.eh.k/d.ay/v.eh.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdavitt' => 'm.eh.k/d.ah/v.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdeal' => 'm.eh.k/d.ee.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdearmon' => 'm.eh.k/d.er/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdermid' => 'm.eh.k/d.er/m.eh.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdermitt' => 'm.eh.k/d.er/m.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdermott' => 'm.eh.k/d.er/m.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdevitt' => 'm.eh.k/d.eh/v.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdiarmid' => 'm.eh.k/d.air/m.eh.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdill' => 'm.eh.k/d.ih.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdivett' => 'm.eh/d.ih/v.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdivitt' => 'm.eh.k/d.ih/v.eh.t / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdole' => 'm.eh.k/d.oh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonagh' => 'm.eh.k/d.uh/n.eh / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonald' => 'm.eh.k/d.aw/n.eh.l.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonalds' => 'm.eh.k/d.aw/n.eh.l.d.z / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonell' => 'm.eh.k/d.aw/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonnell' => 'm.eh.k/d.aw/n.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdonough' => 'm.eh.k/d.uh/n.eh / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdorman' => 'm.eh.k/d.aw.r/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdougal' => 'm.eh.k/d.ue/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdougald' => 'm.eh.k/d.ue/g.eh.l.d / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdougall' => 'm.eh.k/d.ue/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdougals' => 'm.eh.k/d.ue/g.eh.l.z / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdougle' => 'm.eh.k/d.ue/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdow' => 'm.eh.k/d.ow / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdowall' => 'm.eh.k/d.ow/eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcdowell' => 'm.eh.k/d.ow/eh.l / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcduff' => 'm.eh.k/d.uh.f / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcduffee' => 'm.eh.k/d.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcduffie' => 'm.eh.k/d.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cd',
  'mcduffy' => 'm.eh.k/d.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cd',
  'mceachern' => 'm.eh/k.ee/ch.er.n / [m^m]. / failed phone:eh / failed spelling:ce',
  'mceachin' => 'm.eh/k.ee/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcelderry' => 'm.ah/k.eh.l/d.ih/r.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mceldowney' => 'm.ah/k.eh.l/d.ow/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelfresh' => 'm.ah/k.eh.l/f.r.eh.sh / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhaney' => 'm.ah/k.eh.l/h.ay/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhannon' => 'm.ah/k.eh.l/h.ah/n.eh.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhany' => 'm.ah/k.eh.l/h.ay/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelheney' => 'm.ah/k.eh.l/h.ay/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelheny' => 'm.ah/k.eh.l/h.ee/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhiney' => 'm.ah/k.eh.l/h.ih/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhinney' => 'm.ah/k.eh.l/h.ih/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhinny' => 'm.ah/k.eh.l/h.ih/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelhone' => 'm.ah/k.eh.l/h.oh.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelligott' => 'm.eh/k.eh/l.eh/g.eh.t / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcelmurray' => 'm.ah/k.eh.l/m.er/ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelmurry' => 'm.ah/k.eh.l/m.er/r.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelrath' => 'm.ah/k.eh.l/r.ah.th / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelravy' => 'm.ah/k.eh.l/r.ay/v.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelreath' => 'm.ah/k.eh.l/r.ah.th / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelroy' => 'm.ah/k.eh.l/r.oy / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelvain' => 'm.ah/k.eh.l/v.ay.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelvaine' => 'm.ah/k.eh.l/v.ay.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelveen' => 'm.ah/k.eh.l/v.ee.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelwain' => 'm.ah/k.eh.l/w.ay.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelwaine' => 'm.ah/k.eh.l/w.ay.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelwee' => 'm.ah/k.eh.l/w.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcelyea' => 'm.ah/k.eh/l.ye.ay / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcenaney' => 'm.ah/k.eh/n.ay/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcenany' => 'm.ah/k.eh/n.ay/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcendree' => 'm.eh/k.eh.n/d.r.ee / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcenerney' => 'm.ah/k.eh/n.er/n.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcenery' => 'm.eh/k.eh/n.er/ee / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcenroe' => 'm.ah/k.eh.n/r.oh / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcentee' => 'm.ah/k.eh.n/t.ee / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcentire' => 'm.ah/k.eh.n/t.igh.r / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcentyre' => 'm.ah/k.eh.n/t.igh.r / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcerlean' => 'm.eh/k.er/l.ee.n / [m^m]. / failed phone:eh / failed spelling:ce',
  'mceuen' => 'm.eh/k.ye.ue/eh.n / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcever' => 'm.eh/k.eh/v.er / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcevers' => 'm.eh/k.eh/v.er.z / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcevilly' => 'm.eh/k.eh/v.eh/l.ee / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcevoy' => 'm.ah/k.eh/v.oy / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcewan' => 'm.ah/k.ue/ah.n / [m^m]. / failed phone:ah / failed spelling:ce',
  'mcewen' => 'm.eh/k.ye.ue/eh.n / [m^m]. / failed phone:eh / failed spelling:ce',
  'mcfadden' => 'm.eh.k/f.ah/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfaddin' => 'm.eh.k/f.ah/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfadin' => 'm.eh.k/f.ah/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfadyen' => 'm.eh.k/f.ah/d.ee/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfall' => 'm.eh.k/f.aw.l / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfalls' => 'm.eh.k/f.aw.l.z / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfann' => 'm.eh.k/f.ah.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarlan' => 'm.eh.k/f.aw.r/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarland' => 'm.eh.k/f.aw.r/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarlane' => 'm.eh.k/f.aw.r/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarlin' => 'm.eh.k/f.aw.r/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarling' => 'm.eh.k/f.aw.r/l.ih.ng / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfarren' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfate' => 'm.eh.k/f.ay.t / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfatridge' => 'm.eh.k/f.ah/t.r.ih.j / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfatter' => 'm.eh.k/f.ah/t.er / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfaul' => 'm.eh.k/f.aw.l / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfayden' => 'm.eh.k/f.ay/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfee' => 'm.eh.k/f.ee / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfeely' => 'm.eh.k/f.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfeeters' => 'm.eh.k/f.ee/t.er.z / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcferran' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcferren' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcferrin' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcferron' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcfetridge' => 'm.eh.k/f.eh/t.r.ih.j / [m^m]. / failed phone:eh / failed spelling:cf',
  'mcgaffey' => 'm.eh/g.ah/f.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgagh' => 'm.eh/g.aw / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgaha' => 'm.eh/g.aw/h.eh / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgahan' => 'm.eh/g.ah/h.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgahee' => 'm.eh/g.ah/h.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgahey' => 'm.eh/g.ah/h.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgalliard' => 'm.eh/g.ah/l.ee/aw.r.d / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgann' => 'm.eh/g.ah.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgannon' => 'm.eh/g.ah/n.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarity' => 'm.eh/g.ah/r.eh/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarr' => 'm.eh/g.aw.r / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarrah' => 'm.eh/g.ah/r.eh / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarrigle' => 'm.eh/g.ah/r.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarrity' => 'm.eh/g.ah/r.eh/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarry' => 'm.eh/g.air/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgarvey' => 'm.eh/g.aw.r/v.ay / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgary' => 'm.eh/g.air/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgath' => 'm.eh/g.ah.th / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgaugh' => 'm.eh/g.aw / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgaughey' => 'm.eh/g.aw/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgaughy' => 'm.eh/g.aw/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgauley' => 'm.eh/g.aw/l.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgavin' => 'm.eh/g.ah/v.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgavock' => 'm.eh/g.ah/v.eh.k / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgaw' => 'm.eh/g.aw / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeachy' => 'm.eh/g.ee/ch.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeary' => 'm.eh/g.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgee' => 'm.eh/g.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeehan' => 'm.eh/g.ee/h.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeever' => 'm.eh/g.ee/v.er / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgegan' => 'm.eh/g.eh/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeorge' => 'm.eh.k/j.aw.r.j / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgeough' => 'm.eh/g.uh.f / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgettigan' => 'm.eh/g.eh/t.eh/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcghee' => 'm.eh/g.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcghie' => 'm.eh/g.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgibbon' => 'm.eh/g.ih/b.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgill' => 'm.eh/g.ih.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgillen' => 'm.eh/g.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgillicuddy' => 'm.eh/g.ih/l.eh/k.eh/d.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgillis' => 'm.eh/g.ih/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgillivray' => 'm.eh/g.ih/l.eh/v.r.ay / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgilton' => 'm.eh/g.ih.l/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgilvery' => 'm.eh/g.ih.l/v.er/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgilvray' => 'm.eh/g.ih.l/v.r.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginley' => 'm.eh/g.ih.n/l.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginn' => 'm.eh/g.ih.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginnes' => 'm.eh/g.ih.n.z / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginness' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginnis' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginniss' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginnity' => 'm.eh/g.ih/n.eh/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcginty' => 'm.eh/g.ih.n/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgirr' => 'm.eh/g.er / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgirt' => 'm.eh/g.er.t / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgivern' => 'm.eh/g.ih/v.er.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgivney' => 'm.eh/g.ih.v/n.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglade' => 'm.eh/g.l.ay.d / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglamery' => 'm.eh/g.l.ah/m.er/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglashan' => 'm.eh/g.l.ah/sh.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglasson' => 'm.eh/g.l.ah/s.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglaughlin' => 'm.eh/g.l.aw/f.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglaun' => 'm.eh/g.l.aw.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglinchey' => 'm.eh/g.l.ih.n/ch.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglinn' => 'm.eh/g.l.ih.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglocklin' => 'm.eh/g.l.aw/k.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgloin' => 'm.eh/g.l.oy.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglone' => 'm.eh/g.l.oh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglory' => 'm.eh/g.l.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglothen' => 'm.eh/g.l.aw/th.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglothin' => 'm.eh/g.l.aw/th.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglothlin' => 'm.eh/g.l.aw.th/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcglynn' => 'm.eh/g.l.ih.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgoey' => 'm.eh/g.aw/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgoff' => 'm.eh/g.aw.f / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgoldrick' => 'm.eh/g.oh.l/d.r.eh.k / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgols' => 'm.eh.k/g.aw.l.z / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgonagle' => 'm.eh/g.aw/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgonigal' => 'm.eh/g.aw/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgonigle' => 'm.eh/g.aw/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgough' => 'm.eh/g.ow / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgourty' => 'm.eh/g.oo.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgovern' => 'm.eh/g.uh/v.er.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgowan' => 'm.eh/g.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgowen' => 'm.eh/g.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgowin' => 'm.eh.k/g.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgown' => 'm.eh/g.ow.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrady' => 'm.eh/g.r.ay/d.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrail' => 'm.eh/g.r.ay.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrain' => 'm.eh/g.r.ay.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgranahan' => 'm.eh/g.r.ah/n.eh/h.ah.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrane' => 'm.eh/g.r.ay.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrath' => 'm.eh/g.r.ah.th / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgraw' => 'm.eh/g.r.aw / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgray' => 'm.eh/g.r.ay / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgreal' => 'm.eh/g.r.ee.l / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgreevey' => 'm.eh/g.r.ee/v.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgreevy' => 'm.eh/g.r.ee/v.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgregor' => 'm.eh/g.r.eh/g.er / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgregory' => 'm.eh/g.r.eh/g.er/ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrevin' => 'm.eh/g.r.eh/v.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrew' => 'm.eh/g.r.ue / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgriff' => 'm.eh/g.r.ih.f / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgroarty' => 'm.eh/g.r.aw.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrogan' => 'm.eh/g.r.oh/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgrory' => 'm.eh/g.r.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgruder' => 'm.eh/g.r.ue/d.er / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguane' => 'm.eh/g.w.ay.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguckin' => 'm.eh/g.uh/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgue' => 'm.eh/g.ye.ue / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguffee' => 'm.eh/g.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguffey' => 'm.eh/g.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguffie' => 'm.eh/g.uh/f.ee / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguffin' => 'm.eh/g.uh/f.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguigan' => 'm.eh/g.ih/g.eh.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguiness' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguinn' => 'm.eh/g.ih.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguinness' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguire' => 'm.eh/g.w.igh.r / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguirk' => 'm.eh/g.er.k / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguirt' => 'm.eh/g.er.t / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgurk' => 'm.eh/g.er.k / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgurn' => 'm.eh/g.er.n / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcguyer' => 'm.eh/g.igh/er / [m^m]. / failed phone:eh / failed spelling:cg',
  'mcgwire' => 'm.eh/g.w.igh.r / [m^m]. / failed phone:eh / failed spelling:cg',
  'mchaffie' => 'm.eh/k.ah/f.ee / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchale' => 'm.eh/k.ay.l / [m^m]. / failed phone:eh / failed spelling:ch',
  'mcham' => 'm.eh/k.ah.m / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchan' => 'm.eh/k.ah.n / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchaney' => 'm.eh/k.ah/n.ee / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchargue' => 'm.eh/k.aw.r.g / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchatton' => 'm.eh/k.ah/t.eh.n / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchenry' => 'm.eh/k.eh.n/r.ee / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchone' => 'm.eh/k.oh.n / [m^m]. / failed phone:eh / failed spelling:ch',
  'mchugh' => 'm.eh/k.ye.ue / [m^m]. / failed phone:eh / failed spelling:ch',
  'mcilhenny' => 'm.ah/k.ih.l/h.eh/n.ee / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilrath' => 'm.ah/k.eh.l/r.ah.th / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilroy' => 'm.ah/k.eh.l/r.oy / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilvain' => 'm.ah/k.ih.l/v.ay.n / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilvaine' => 'm.ah/k.ih.l/v.ay.n / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilveen' => 'm.ah/k.ih.l/v.ee.n / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcilwain' => 'm.ah/k.ih.l/w.ay.n / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinerney' => 'm.ah/k.eh/n.er/n.ee / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinerny' => 'm.ah/k.eh/n.er/n.ee / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcingvale' => 'm.ah/k.ih.ng/v.ay.l / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinnes' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:ci',
  'mcinnis' => 'm.eh/g.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:ci',
  'mcinroy' => 'm.ah/k.ih.n/r.oy / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcintee' => 'm.ah/k.ih.n/t.ee / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcintire' => 'm.ah/k.ih.n/t.igh.r / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcintosh' => 'm.ah/k.eh.n/t.aw.sh / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinturf' => 'm.ah/k.ih.n/t.er.f / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinturff' => 'm.ah/k.ih.n/t.er.f / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcintyre' => 'm.ah/k.ih.n/t.igh.r / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcinvale' => 'm.ah/k.ih.n/v.ay.l / [m^m]. / failed phone:ah / failed spelling:ci',
  'mcisaac' => 'm.eh/k.igh/z.eh.k / [m^m]. / failed phone:eh / failed spelling:ci',
  'mciver' => 'm.eh/k.ih/v.er / [m^m]. / failed phone:eh / failed spelling:ci',
  'mcivor' => 'm.eh/k.ih/v.er / [m^m]. / failed phone:eh / failed spelling:ci',
  'mcjunkin' => 'm.eh.k/j.uh.ng/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cj',
  'mcjunkins' => 'm.eh.k/j.uh.ng/k.eh.n.z / [m^m]. / failed phone:eh / failed spelling:cj',
  'mckaig' => 'm.eh/k.ay.g / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckain' => 'm.eh/k.ay.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckamey' => 'm.eh/k.ah/m.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckane' => 'm.eh/k.ay.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckanna' => 'm.eh/k.ah/n.eh / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckay' => 'm.eh/k.ay / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeag' => 'm.eh/k.ee.g / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeague' => 'm.eh/k.ee.g / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckean' => 'm.eh/k.ee.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeand' => 'm.eh/k.ee.n.d / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckechnie' => 'm.eh/k.eh.k/n.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckee' => 'm.eh/k.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeegan' => 'm.eh/k.ee/g.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeehan' => 'm.eh/k.ee/h.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeel' => 'm.eh/k.ee.l / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeeman' => 'm.eh/k.ee/m.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeen' => 'm.eh/k.ee.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeesport' => 'm.eh/k.ee/s.p.aw.r.t / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeever' => 'm.eh/k.ee/v.er / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeithan' => 'm.eh/k.ee/th.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeithen' => 'm.eh/k.ee/th.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckell' => 'm.eh/k.eh.l / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckellar' => 'm.eh/k.eh/l.er / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeller' => 'm.eh/k.eh/l.er / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckellips' => 'm.eh/k.eh/l.ih.p.s / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckelvey' => 'm.ah/k.eh.l/v.ay / [m^m]. / failed phone:ah / failed spelling:ck',
  'mckelvie' => 'm.ah/k.eh.l/v.ee / [m^m]. / failed phone:ah / failed spelling:ck',
  'mckelvy' => 'm.ah/k.eh.l/v.ee / [m^m]. / failed phone:ah / failed spelling:ck',
  'mckemie' => 'm.eh/k.eh/m.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckendree' => 'm.eh/k.eh.n/d.r.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckendrick' => 'm.eh/k.eh.n/d.r.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckendry' => 'm.eh/k.eh.n/d.r.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckenna' => 'm.eh/k.eh/n.eh / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckenney' => 'm.eh/k.eh/n.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckennon' => 'm.eh/k.eh/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckenny' => 'm.eh/k.eh/n.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckenrick' => 'm.eh/k.eh.n/r.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckenzie' => 'm.eh/k.eh.n/z.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeon' => 'm.eh/k.ee/eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeone' => 'm.eh/k.ee/eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeough' => 'm.eh/k.ee/oh / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckeown' => 'm.eh/k.ye.ue/eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckercher' => 'm.eh/k.er/ch.er / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckern' => 'm.eh/k.er.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckernan' => 'm.eh/k.er/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckesson' => 'm.eh/k.eh/s.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckethan' => 'm.eh/k.eh/th.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckevitt' => 'm.eh/k.eh/v.eh.t / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckey' => 'm.eh/k.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckibben' => 'm.eh/k.ih/b.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckibbin' => 'm.eh/k.ih/b.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckibbon' => 'm.eh/k.ih/b.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckids' => 'm.eh/k.ih.d.z / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckie' => 'm.eh/k.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckiernan' => 'm.eh/k.ih.r/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckillip' => 'm.eh/k.ih/l.eh.p / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckillop' => 'm.eh/k.ih/l.eh.p / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckim' => 'm.eh/k.ih.m / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckimmey' => 'm.eh/k.ih/m.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckimmy' => 'm.eh/k.ih/m.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinlay' => 'm.eh/k.ih.n/l.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinley' => 'm.eh/k.ih.n/l.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinney' => 'm.eh/k.ih/n.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinnie' => 'm.eh/k.ih/n.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinnis' => 'm.eh/k.ih/n.eh.s / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinnon' => 'm.eh/k.ih/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinsey' => 'm.eh/k.ih.n/z.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinstry' => 'm.eh/k.ih.n/s.t.r.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckinzie' => 'm.eh/k.ih.n/z.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckissack' => 'm.eh/k.ih/s.eh.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckissic' => 'm.eh/k.ih/s.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckissick' => 'm.eh/k.ih/s.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckitrick' => 'm.eh/k.ih/t.r.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckittrick' => 'm.eh/k.ih/t.r.ih.k / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckneely' => 'm.eh.k/n.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:ck',
  'mcknew' => 'm.eh.k/n.ue / [m^m]. / failed phone:eh / failed spelling:ck',
  'mcknight' => 'm.eh.k/n.igh.t / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckone' => 'm.eh/k.oh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckowen' => 'm.eh/k.ow/eh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckown' => 'm.eh/k.oh.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckoy' => 'm.eh/k.oy / [m^m]. / failed phone:eh / failed spelling:ck',
  'mckune' => 'm.eh/k.ye.ue.n / [m^m]. / failed phone:eh / failed spelling:ck',
  'mclachlan' => 'm.eh/k.l.aw/k.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclafferty' => 'm.eh/k.l.ah/f.er/t.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclain' => 'm.eh/k.l.ay.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclamb' => 'm.eh/k.l.ah.m / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclanahan' => 'm.eh/k.l.ah/n.eh/h.ah.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclane' => 'm.eh/k.l.ay.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclaren' => 'm.eh/k.l.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclarney' => 'm.eh/k.l.aw.r/n.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclarty' => 'm.eh/k.l.aw.r/t.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclauchlin' => 'm.eh/k.l.aw/k.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclaughlin' => 'm.eh/g.l.aw/k.l.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclaurin' => 'm.eh/k.l.aw/r.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclaury' => 'm.eh/k.l.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclawhorn' => 'm.eh/k.l.ah/w.er.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclay' => 'm.eh/k.l.ay / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclean' => 'm.eh/k.l.ee.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclear' => 'm.eh/k.l.ih.r / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcleary' => 'm.eh/k.l.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclees' => 'm.eh/k.l.ee.z / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcleish' => 'm.eh/k.l.ee.sh / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcleland' => 'm.eh/k.l.eh/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclellan' => 'm.eh/k.l.eh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclelland' => 'm.eh/k.l.eh/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclendon' => 'm.eh/k.l.eh.n/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclennan' => 'm.eh/k.l.eh/n.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcleod' => 'm.eh/k.l.ow.d / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcleroy' => 'm.eh/k.l.ee/r.oy / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclerran' => 'm.eh/k.l.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclester' => 'm.eh/k.l.eh/s.t.er / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclin' => 'm.eh/k.l.ih.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclinden' => 'm.eh/k.l.ih.n/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclinn' => 'm.eh/k.l.ih.n / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclish' => 'm.eh/k.l.ih.sh / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcloud' => 'm.eh/k.l.ow.d / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclouth' => 'm.eh/k.l.ow.th / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclucas' => 'm.eh/k.l.ue/k.eh.z / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcluckie' => 'm.eh/k.l.uh/k.ee / [m^m]. / failed phone:eh / failed spelling:cl',
  'mclure' => 'm.eh/k.l.ue.r / [m^m]. / failed phone:eh / failed spelling:cl',
  'mcmackin' => 'm.eh.k/m.ah/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmahan' => 'm.eh.k/m.ay/h.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmahen' => 'm.eh.k/m.ay/h.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmahill' => 'm.eh.k/m.ay/h.ih.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmahon' => 'm.eh.k/m.ay/eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmains' => 'm.eh.k/m.ay.n.z / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmaken' => 'm.eh.k/m.ay/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmakin' => 'm.eh.k/m.ah/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanama' => 'm.eh.k/m.ah/n.eh/m.eh / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanaman' => 'm.eh.k/m.ah/n.eh/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanamon' => 'm.eh.k/m.ah/n.eh/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanaway' => 'm.eh.k/m.ah/n.eh/w.ay / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanigal' => 'm.eh.k/m.ah/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanis' => 'm.eh.k/m.ah/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmann' => 'm.eh.k/m.ah.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmannis' => 'm.eh.k/m.ah/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmanus' => 'm.eh.k/m.ah/n.eh.s / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmartin' => 'm.eh.k/m.aw.r/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmaster' => 'm.eh.k/m.ah/s.t.er / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmasters' => 'm.eh.k/m.ah/s.t.er.z / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmath' => 'm.eh.k/m.ah.th / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmeans' => 'm.eh.k/m.ee.n.z / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmeekin' => 'm.eh.k/m.ee/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmeen' => 'm.eh.k/m.ee.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmenamin' => 'm.eh.k/m.eh/n.eh/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmenamy' => 'm.eh.k/m.eh/n.eh/m.ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmenemy' => 'm.eh.k/m.eh/n.eh/m.ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmennamin' => 'm.eh.k/m.eh/n.eh/m.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmichael' => 'm.eh.k/m.igh/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmichen' => 'm.eh.k/m.ih/ch.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmickle' => 'm.eh.k/m.ih/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillan' => 'm.eh.k/m.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillen' => 'm.eh.k/m.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmiller' => 'm.eh.k/m.ih/l.er / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillian' => 'm.eh.k/m.ih/l.ye.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillin' => 'm.eh.k/m.ih/l.ih.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillion' => 'm.eh.k/m.ih/l.ye.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmillon' => 'm.eh.k/m.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcminn' => 'm.eh.k/m.ih.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmonagle' => 'm.eh.k/m.aw/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmonigle' => 'm.eh.k/m.aw/n.eh/g.eh.l / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmoran' => 'm.eh.k/m.aw/r.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmorran' => 'm.eh.k/m.aw/r.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmorris' => 'm.eh.k/m.aw/r.eh.s / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmorrow' => 'm.eh.k/m.aw/r.oh / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmuffin' => 'm.eh.k/m.uh/f.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmullan' => 'm.eh.k/m.uh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmullen' => 'm.eh/k.uh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmullin' => 'm.eh.k/m.uh/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmunn' => 'm.eh.k/m.uh.n / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurdo' => 'm.eh.k/m.er/d.oh / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurphy' => 'm.eh.k/m.er/f.ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurray' => 'm.eh.k/m.er/ay / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurrey' => 'm.eh.k/m.er/ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurry' => 'm.eh.k/m.er/ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurtrey' => 'm.eh.k/m.er/t.r.ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurtrie' => 'm.eh.k/m.er/t.er/ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcmurtry' => 'm.eh.k/m.er/t.r.ee / [m^m]. / failed phone:eh / failed spelling:cm',
  'mcnab' => 'm.eh.k/n.ah.b / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnabb' => 'm.eh.k/n.ah.b / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnair' => 'm.eh.k/n.air / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnairy' => 'm.eh.k/n.air/ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnall' => 'm.eh.k/n.aw.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnalley' => 'm.eh.k/n.ah/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnally' => 'm.eh.k/n.ah/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnamara' => 'm.ah.k/n.eh/m.air/eh / [m^m]. / failed phone:ah / failed spelling:cn',
  'mcnamee' => 'm.ah.k/n.eh/m.ee / [m^m]. / failed phone:ah / failed spelling:cn',
  'mcnamer' => 'm.eh.k/n.ay/m.er / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnaney' => 'm.eh.k/n.ah/n.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnary' => 'm.eh.k/n.air/ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnatt' => 'm.eh.k/n.ah.t / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnaught' => 'm.eh.k/n.aw.t / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnaughton' => 'm.eh.k/n.aw/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnay' => 'm.eh.k/n.ay / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneal' => 'm.eh.k/n.ee.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnealy' => 'm.eh.k/n.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnear' => 'm.eh.k/n.ih.r / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneary' => 'm.eh.k/n.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnease' => 'm.eh.k/n.ee.z / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnee' => 'm.eh.k/n.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneece' => 'm.eh.k/n.ee.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneel' => 'm.eh.k/n.ee.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneeley' => 'm.eh.k/n.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneely' => 'm.eh.k/n.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneer' => 'm.eh.k/n.ih.r / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnees' => 'm.eh.k/n.ee.z / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneese' => 'm.eh.k/n.ee.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneff' => 'm.eh.k/n.eh.f / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneice' => 'm.eh.k/n.ee.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneil' => 'm.eh.k/n.ee.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneill' => 'm.eh.k/n.ee.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneilly' => 'm.eh.k/n.ee/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcneish' => 'm.eh.k/n.ee.sh / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnelis' => 'm.eh.k/n.eh/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnellis' => 'm.eh.k/n.eh/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnelly' => 'm.eh.k/n.eh/l.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnemar' => 'm.ah.k/n.eh/m.aw.r / [m^m]. / failed phone:ah / failed spelling:cn',
  'mcnerney' => 'm.eh.k/n.er/n.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnett' => 'm.eh.k/n.eh.t / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnevin' => 'm.eh.k/n.eh/v.eh.n / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnew' => 'm.eh.k/n.ue / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnichol' => 'm.eh.k/n.ih/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnicholas' => 'm.eh.k/n.ih/l.eh/l.eh.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnichols' => 'm.eh.k/n.ih/k.eh.l.z / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnickle' => 'm.eh.k/n.ih/k.eh.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnicol' => 'm.eh.k/n.ih/k.aw.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcniel' => 'm.eh.k/n.ee.l / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcniff' => 'm.eh.k/n.ih.f / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcninch' => 'm.eh.k/n.ih.n.ch / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnish' => 'm.eh.k/n.ih.sh / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnitt' => 'm.eh.k/n.ih.t / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnorton' => 'm.eh.k/n.aw.r/t.eh.n / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnuggets' => 'm.eh.k/n.uh/g.eh.t.s / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnulty' => 'm.eh.k/n.uh.l/t.ee / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcnutt' => 'm.eh.k/n.uh.t / [m^m]. / failed phone:eh / failed spelling:cn',
  'mcomber' => 'm.eh/k.aw.m/b.er / [m^m]. / failed phone:eh / failed spelling:co',
  'mcorp' => 'eh.m/k.aw.r.p /  / failed phone:eh / failed spelling:mc',
  'mcpaper' => 'm.eh.k/p.ay/p.er / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcparland' => 'm.eh.k/p.aw.r/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpartland' => 'm.eh.k/p.aw.r.t/l.eh.n.d / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpartlin' => 'm.eh.k/p.aw.r.t/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpeak' => 'm.eh.k/p.ee.k / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpeake' => 'm.eh.k/p.ee.k / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpeck' => 'm.eh.k/p.eh.k / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpeek' => 'm.eh.k/p.ee.k / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpeters' => 'm.eh.k/p.ee/t.er.z / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphail' => 'm.eh.k/f.ay.l / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphatter' => 'm.eh.k/f.ah/t.er / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphaul' => 'm.eh.k/f.aw.l / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphearson' => 'm.eh.k/f.er/s.eh.n / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphee' => 'm.eh.k/f.ee / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpheeters' => 'm.eh.k/f.ee/t.er.z / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpheron' => 'm.eh.k/f.air/eh.n / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpherson' => 'm.eh.k/f.er/s.eh.n / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphie' => 'm.eh.k/f.ee / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcphillips' => 'm.eh.k/f.ih/l.eh.p.s / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcpike' => 'm.eh.k/p.igh.k / [m^m]. / failed phone:eh / failed spelling:cp',
  'mcquade' => 'm.eh/kw.ay.d / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquaid' => 'm.eh/kw.ay.d / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquaide' => 'm.eh/kw.ay.d / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquaig' => 'm.eh/kw.ay.g / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquain' => 'm.eh/kw.ay.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquarrie' => 'm.eh/kw.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquary' => 'm.ee/kw.air/ee / [m^m]. / failed phone:ee / failed spelling:cq',
  'mcquay' => 'm.eh/k.ay / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcqueary' => 'm.eh/kw.ih/r.ee / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcqueen' => 'm.eh/kw.ee.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcqueeney' => 'm.eh/kw.ee/n.ee / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquerry' => 'm.eh/kw.air/ee / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquigg' => 'm.eh/kw.ih.g / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquilkin' => 'm.eh/kw.ih.l/k.eh.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquillan' => 'm.eh/kw.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquillen' => 'm.eh/kw.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquillin' => 'm.eh/kw.ih/l.eh.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquinn' => 'm.eh/kw.ih.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquire' => 'm.eh/kw.igh.r / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquiston' => 'm.eh/kw.ih/s.t.eh.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquitty' => 'm.eh/kw.ih/t.ee / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcquown' => 'm.eh/kw.ow.n / [m^m]. / failed phone:eh / failed spelling:cq',
  'mcrae' => 'm.eh/k.r.ay / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcraney' => 'm.eh/k.r.ah/n.ee / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcray' => 'm.eh/k.r.ay / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcree' => 'm.eh/k.r.ee / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcreynolds' => 'm.eh/k.r.ay/n.eh.l.d.z / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcright' => 'm.eh/k.r.igh.t / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcroberts' => 'm.eh/k.r.aw/b.er.t.s / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcrorie' => 'm.eh/k.r.aw/r.ee / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcroy' => 'm.eh/k.r.oy / [m^m]. / failed phone:eh / failed spelling:cr',
  'mcshan' => 'm.eh.k/sh.ah.n / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcshane' => 'm.eh.k/sh.ay.n / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcshea' => 'm.eh.k/sh.ay / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcsherry' => 'm.eh.k/sh.air/ee / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcsleep' => 'm.eh.k/s.l.ee.p / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcsorley' => 'm.eh.k/s.aw.r/l.ee / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcspadden' => 'm.eh.k/s.p.ah/d.eh.n / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcstay' => 'm.eh.k/s.t.ay / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcswain' => 'm.eh.k/s.w.ay.n / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcsween' => 'm.eh.k/s.w.ee.n / [m^m]. / failed phone:eh / failed spelling:cs',
  'mcsweeney' => 'm.eh.k/s.w.ee/n.ee / [m^m]. / failed phone:eh / failed spelling:cs',
  'mctaggart' => 'm.eh.k/t.ah/g.er.t / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctague' => 'm.eh.k/t.ay.g / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctavish' => 'm.eh.k/t.ay/v.ih.sh / [m^m]. / failed phone:eh / failed spelling:ct',
  'mcteer' => 'm.eh.k/t.ih.r / [m^m]. / failed phone:eh / failed spelling:ct',
  'mcternan' => 'm.eh.k/t.er/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctier' => 'm.eh.k/t.igh/er / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctiernan' => 'm.eh.k/t.igh.r/n.eh.n / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctighe' => 'm.eh.k/t.igh.g / [m^m]. / failed phone:eh / failed spelling:ct',
  'mctigue' => 'm.eh.k/t.ee.g / [m^m]. / failed phone:eh / failed spelling:ct',
  'mcvay' => 'm.eh.k/v.ay / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcvea' => 'm.eh.k/v.ee / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcveigh' => 'm.eh.k/v.ay / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcvey' => 'm.eh.k/v.ay / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcvicar' => 'm.eh.k/v.ih/k.er / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcvicker' => 'm.eh.k/v.ih/k.er / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcvoy' => 'm.eh.k/v.oy / [m^m]. / failed phone:eh / failed spelling:cv',
  'mcwain' => 'm.eh/kw.ay.n / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwaters' => 'm.eh/kw.aw/t.er.z / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwatters' => 'm.eh/kw.aw/t.er.z / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcweeney' => 'm.eh/kw.ee/n.ee / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwethy' => 'm.eh/kw.eh/th.ee / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwherter' => 'm.eh/kw.er/t.er / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwhinney' => 'm.eh/kw.ih/n.ee / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwhirt' => 'm.eh/kw.er.t / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwhirter' => 'm.eh/kw.er/t.er / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwhite' => 'm.eh/kw.igh.t / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwhorter' => 'm.eh/kw.aw.r/t.er / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwilliam' => 'm.eh/kw.ih/l.ye.eh.m / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwilliams' => 'm.eh/kw.ih/l.ye.eh.m.z / [m^m]. / failed phone:eh / failed spelling:cw',
  'mcwright' => 'm.eh/k.r.igh.t / [m^m]. / failed phone:eh / failed spelling:cw',
  'mczeal' => 'm.eh.k/z.ee.l / [m^m]. / failed phone:eh / failed spelling:cz',
  'meade' => 'm.ee.d / [m^m].[ea^ee].[d^d] / failed phone:d / failed spelling:ad',
  'meagher' => 'm.aw.r / [m^m]. / failed phone:oh / failed spelling:ea',
  'measles' => 'm.ee/z.eh.l.z / [m^m].[ea^ee]/[s^z]. / failed phone:eh / failed spelling:le',
  'meaux' => 'm.oh / [m^m]. / failed phone:oh / failed spelling:ea',
  'meche' => 'm.eh.ch / [m^m].[e^eh].[ch^ch] / failed phone:t / failed spelling:ch',
  'meckes' => 'm.eh.k.s / [m^m].[e^eh].[c^k]. / failed phone:s / failed spelling:ke',
  'meddlesome' => 'm.eh/d.eh.l/s.eh.m / [m^m].[e^eh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'meddling' => 'm.eh/d.eh/l.ih.ng / [m^m].[e^eh]/[dd^d]. / failed phone:eh / failed spelling:li',
  'medecins' => 'm.eh/d.eh/s.ah.n.z / [m^m].[e^eh]/[d^d].[e^eh]/[c^s]. / failed phone:ah / failed spelling:in',
  'medeiros' => 'm.ay/d.ih/r.oh.z / [m^m].[e^ay]/[d^d].[e^ih]/ / failed phone:r / failed spelling:ir',
  'medianews' => 'm.ee/d.ee/eh/ye.ue.z / [m^m].[e^ee]/[d^d].[i^ee]/[a^ah]/ / failed phone:ue / failed spelling:ne',
  'mediq' => 'm.eh/d.ee.k / [m^m].[e^eh]/[d^d].[i^ee]. / failed phone:k / failed spelling:q',
  'medlen' => 'm.eh/d.eh/l.eh.n / [m^m].[e^eh]/[d^d]. / failed phone:eh / failed spelling:le',
  'meehan' => 'm.ee/eh.n / [m^m].[e^ee]/[e^eh]. / failed phone:n / failed spelling:ha',
  'meehl' => 'm.ee.l / [m^m].[e^ee]. / failed phone:l / failed spelling:eh',
  'meenaghan' => 'm.ee/n.eh/h.ah.n / [m^m].[ee^ee]/[n^n].[a^ah]/ / failed phone:h / failed spelling:gh',
  'meeuwsen' => 'm.ee/ue/s.eh.n / [m^m].[e^ee]/[eu^ue]/ / failed phone:s / failed spelling:ws',
  'mehdi' => 'm.eh/d.ee / [m^m].[e^eh]/ / failed phone:d / failed spelling:hd',
  'mehitabelle' => 'm.eh/h.ih/t.eh/b.eh.l / [m^m].[e^eh]/[h^h].[i^ih]/[t^t].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mehl' => 'm.eh.l / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehlberg' => 'm.eh.l/b.er.g / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehlenbacher' => 'm.eh/l.ih.n/b.aw/k.er / [m^m].[e^eh]/ / failed phone:l / failed spelling:hl',
  'mehler' => 'm.eh/l.er / [m^m].[e^eh]/ / failed phone:l / failed spelling:hl',
  'mehlhaff' => 'm.eh.l/h.eh.f / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehlhoff' => 'm.eh.l/h.aw.f / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehlhorn' => 'm.eh.l/h.er.n / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehling' => 'm.eh/l.ih.ng / [m^m].[e^eh]/ / failed phone:l / failed spelling:hl',
  'mehlman' => 'm.eh.l/m.eh.n / [m^m].[e^eh]. / failed phone:l / failed spelling:hl',
  'mehmet' => 'm.eh/m.eh.t / [m^m].[e^eh]/ / failed phone:m / failed spelling:hm',
  'mehta' => 'm.eh/t.eh / [m^m].[e^eh]/ / failed phone:t / failed spelling:ht',
  'meidl' => 'm.ee/d.eh.l / [m^m].[ei^ee]/[d^d]. / failed phone:eh / failed spelling:l',
  'meierfeld' => 'm.igh.r/f.eh.l.d / [m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'meincke' => 'm.igh.ng.k / [m^m].[ei^igh].[n^ng].[c^k] / failed phone:k / failed spelling:ck',
  'meindl' => 'm.igh.n/d.eh.l / [m^m].[ei^igh].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'meinecke' => 'm.igh/n.ih.k / [m^m].[ei^igh]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'meineke' => 'm.igh/n.ih.k / [m^m].[ei^igh]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'meinhardt' => 'm.igh.n/h.aw.r.t / [m^m].[ei^igh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'meinke' => 'm.ee.ng.k / [m^m].[ei^ee].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'meir' => 'm.ih.r / [m^m].[e^ih]. / failed phone:r / failed spelling:ir',
  'meisch' => 'm.igh.sh / [m^m].[ei^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'meisler' => 'm.igh/s.eh/l.er / [m^m].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'meiyuh' => 'm.ay/ye.ue / [m^m].[ei^ay]/[y^ye].[u^ue] / failed phone:ue / failed spelling:iy',
  'mejia' => 'm.ay/ye.ee/eh / [m^m].[e^ay]/ / failed phone:ye / failed spelling:ji',
  'mejias' => 'm.ay/ye.ee/eh.z / [m^m].[e^ay]/ / failed phone:ye / failed spelling:ji',
  'melange' => 'm.eh/l.ah.ng / [m^m].[e^eh]/[l^l].[a^ah].[n^ng] / failed phone:ng / failed spelling:ng',
  'melgaard' => 'm.eh.l/g.aw.r.d / [m^m].[e^eh].[l^l]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'melisse' => 'm.eh/l.ih.s / [m^m].[e^eh]/[l^l].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'melius' => 'm.ee/l.ee/ih.s / [m^m].[e^ee]/[l^l].[i^ee]/ / failed phone:ih / failed spelling:us',
  'melle' => 'm.eh.l / [m^m].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'melucci' => 'm.eh/l.ue/ch.ee / [m^m].[e^eh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'melville' => 'm.eh.l/v.ih.l / [m^m].[e^eh].[l^l]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'memoir' => 'm.eh.m/w.aw.r / [m^m].[e^eh].[m^m]/ / failed phone:w / failed spelling:oi',
  'memoirs' => 'm.eh.m/w.aw.r.z / [m^m].[e^eh].[m^m]/ / failed phone:w / failed spelling:oi',
  'memorabilia' => 'm.eh/m.er/eh/b.ee/l.ye.eh / [m^m].[e^eh]/[m^m].[o^oh].[r^r]/[a^ah]/[b^b].[i^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'menachem' => 'm.eh/n.aw/h.eh.m / [m^m].[e^eh]/[n^n].[a^aw]/ / failed phone:h / failed spelling:ch',
  'menapace' => 'm.eh/n.aw/p.aw/ch.ee / [m^m].[e^eh]/[n^n].[a^aw]/[p^p].[a^aw]/ / failed phone:t / failed spelling:ce',
  'mende' => 'm.eh.n.d / [m^m].[e^eh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'mendicino' => 'm.eh.n/d.ee/ch.ee/n.oh / [m^m].[e^eh].[n^n]/[d^d].[i^ee]/ / failed phone:t / failed spelling:ci',
  'menjivar' => 'm.ay/n.ye.ee/v.aw.r / [m^m].[e^ay]/[n^n]. / failed phone:ye / failed spelling:ji',
  'menke' => 'm.eh.ng.k / [m^m].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'menkes' => 'm.eh.ng.k.s / [m^m].[e^eh].[n^ng].[k^k]. / failed phone:s / failed spelling:es',
  'menne' => 'm.eh.n / [m^m].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'menotomy' => 'm.ih/n.aw/t.ih/m.ee / [m^m].[e^ih]/[n^n].[o^aw]/[t^t]. / failed phone:ih / failed spelling:om',
  'mensch' => 'm.eh.n.sh / [m^m].[e^eh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'menstruation' => 'm.eh.n/s.t.r.ay/sh.eh.n / [m^m].[e^eh].[n^n]/[s^s].[t^t].[r^r]. / failed phone:ay / failed spelling:ua',
  'merieux' => 'm.air/ee/ue / [m^m].[er^air]/[ie^ee]/[u^ue] / failed phone:ue / failed spelling:ux',
  'mersch' => 'm.er.sh / [m^m].[er^er].[sc^sh] / failed phone:sh / failed spelling:sc',
  'mesch' => 'm.eh.sh / [m^m].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'mescher' => 'm.eh/sh.er / [m^m].[e^eh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'meschke' => 'm.eh.sh.k / [m^m].[e^eh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'meske' => 'm.eh.s.k / [m^m].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'mesler' => 'm.eh/s.eh/l.er / [m^m].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'messerschmidt' => 'm.eh/s.er/sh.m.ih.t / [m^m].[e^eh]/[ss^s].[er^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'messerschmitt' => 'm.eh/s.er/sh.m.ih.t / [m^m].[e^eh]/[ss^s].[er^er]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'meszaros' => 'm.ih/sh.aw/r.oh.z / [m^m].[e^ih]/[s^sh]. / failed phone:aw / failed spelling:za',
  'metallgesellschaft' => 'm.eh/t.eh.l/g.eh/s.eh.l/sh.ah.f.t / [m^m].[e^eh]/[t^t].[a^ah].[ll^l]/[g^g].[e^eh]/[s^s].[e^eh].[ll^l]/[sc^sh]. / failed phone:ah / failed spelling:ha',
  'metcalfe' => 'm.eh.t/k.eh.l.f / [m^m].[e^eh].[t^t]/[c^k].[a^ah].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'meunier' => 'm.oy/n.ee/er / [m^m]. / failed phone:oy / failed spelling:eu',
  'meurer' => 'm.er/er / [m^m]. / failed phone:er / failed spelling:eu',
  'meuser' => 'm.oy/s.er / [m^m]. / failed phone:oy / failed spelling:eu',
  'mezzaluna' => 'm.eh.t/s.eh/l.ue/n.eh / [m^m].[e^eh]. / failed phone:t / failed spelling:zz',
  'mfume' => 'eh.m/f.ue/m.ay /  / failed phone:eh / failed spelling:mf',
  'micciche' => 'm.ee/ch.ee/k.ee / [m^m].[i^ee]/ / failed phone:t / failed spelling:cc',
  'miccio' => 'm.ee/ch.ee/oh / [m^m].[i^ee]/ / failed phone:t / failed spelling:cc',
  'micek' => 'm.ih/ch.eh.k / [m^m].[i^ih]/ / failed phone:t / failed spelling:ce',
  'miceli' => 'm.ee/ch.eh/l.ee / [m^m].[i^ee]/ / failed phone:t / failed spelling:cl',
  'michaella' => 'm.igh/k.eh/l.eh / [m^m].[i^igh]/[ch^k].[a^ah]/[el^l]. / failed phone:eh / failed spelling:la',
  'michalec' => 'm.ih/h.aw/l.ih.k / [m^m].[i^ih]/ / failed phone:h / failed spelling:ch',
  'michalek' => 'm.ih/h.aw/l.eh.k / [m^m].[i^ih]/ / failed phone:h / failed spelling:ch',
  'michalowski' => 'm.ih/ch.eh/l.aw.f/s.k.ee / [m^m].[i^ih]/[ch^ch].[a^ah]/[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'michaud' => 'm.ih/sh.oh / [m^m].[i^ih]/[ch^sh].[a^oh] / failed phone:oh / failed spelling:ha',
  'michaux' => 'm.ih/sh.oh / [m^m].[i^ih]/[ch^sh].[a^oh] / failed phone:oh / failed spelling:ha',
  'micheaux' => 'm.ih/sh.oh / [m^m].[i^ih]/[che^sh].[a^oh] / failed phone:oh / failed spelling:he',
  'michelle' => 'm.ih/sh.eh.l / [m^m].[i^ih]/[ch^sh].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'michener' => 'm.ih.ch/n.er / [m^m].[i^ih].[ch^ch]/ / failed phone:n / failed spelling:en',
  'michl' => 'm.ih/ch.eh.l / [m^m].[i^ih]/[ch^ch]. / failed phone:eh / failed spelling:l',
  'micke' => 'm.ih.k / [m^m].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'mickiewicz' => 'm.ih/k.eh/v.ih.ch / [m^m].[i^ih]/[ck^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'mickles' => 'm.ih/k.eh.l.z / [m^m].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'microcircuits' => 'm.igh/k.r.oh/s.er/k.eh.t.s / [m^m].[i^igh]/[c^k].[r^r].[o^oh]/[c^s].[ir^er]/[c^k].[u^uh]. / failed phone:t / failed spelling:it',
  'microfiche' => 'm.igh/k.r.oh/f.ee.ch / [m^m].[i^igh]/[c^k].[r^r].[o^oh]/[f^f].[i^ee].[ch^ch] / failed phone:t / failed spelling:ch',
  'micrografx' => 'm.igh/k.r.oh/g.r.ah/f.eh.k.s / [m^m].[i^igh]/[c^k].[r^r].[o^oh]/[g^g].[r^r].[a^ah]/[f^f]. / failed phone:eh / failed spelling:x',
  'micucci' => 'm.ee/k.ue/ch.ee / [m^m].[i^ee]/[c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'middlebrook' => 'm.ih/d.eh.l/b.r.oo.k / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlebrooks' => 'm.ih/d.eh.l/b.r.oo.k.s / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middleburg' => 'm.ih/d.eh.l/b.er.g / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlebury' => 'm.ih/d.eh.l/b.air/ee / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlekauff' => 'm.ih/d.eh.l/k.oh.f / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middleman' => 'm.ih/d.eh.l/m.ah.n / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlemen' => 'm.ih/d.eh.l/m.eh.n / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlemiss' => 'm.ih/d.eh.l/m.ih.s / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlesex' => 'm.ih/d.eh.l/s.eh.k.s / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middlesworth' => 'm.ih/d.eh.l/z.w.er.th / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middleton' => 'm.ih/d.eh.l/t.eh.n / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middletown' => 'm.ih/d.eh.l/t.ow.n / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middleweight' => 'm.ih/d.eh.l/w.ay.t / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'middling' => 'm.ih/d.eh/l.ih.ng / [m^m].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:li',
  'midges' => 'm.ih/j.eh.z / [m^m].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'midget' => 'm.ih/j.eh.t / [m^m].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'midgetman' => 'm.ih/j.eh.t/m.ah.n / [m^m].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'midgett' => 'm.ih/j.ih.t / [m^m].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'midgette' => 'm.ih/j.eh.t / [m^m].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'midgley' => 'm.ih.j/l.ee / [m^m].[i^ih].[d^j]/ / failed phone:l / failed spelling:gl',
  'mieczkowski' => 'm.ee.ch/k.aw.f/s.k.ee / [m^m].[ie^ee]. / failed phone:t / failed spelling:cz',
  'mieczyslaw' => 'm.ee/ch.ih/s.l.aw / [m^m].[ie^ee]/ / failed phone:t / failed spelling:cz',
  'mieras' => 'm.ih/r.aw.z / [m^m].[i^ih]/ / failed phone:r / failed spelling:er',
  'mierzejewski' => 'm.ih.r/z.ay/eh.f/s.k.ee / [m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'miesse' => 'm.ee.s / [m^m].[ie^ee].[ss^s] / failed phone:s / failed spelling:ss',
  'migliaccio' => 'm.ee/g.l.ee/aw/ch.ee/oh / [m^m].[i^ee]/[g^g].[l^l].[i^ee]/[a^aw]/ / failed phone:t / failed spelling:cc',
  'migneault' => 'm.ih.g/n.oh / [m^m].[i^ih].[g^g]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'mihm' => 'm.ih.m / [m^m].[i^ih]. / failed phone:m / failed spelling:hm',
  'mijares' => 'm.ee/ye.aw/r.eh.s / [m^m].[i^ee]/ / failed phone:ye / failed spelling:ja',
  'mikhail' => 'm.ih/k.ay.l / [m^m].[i^ih]/[k^k]. / failed phone:ay / failed spelling:ha',
  'mikkelsen' => 'm.ih/k.eh.l/s.eh.n / [m^m].[i^ih]/[k^k]. / failed phone:eh / failed spelling:ke',
  'mikkelson' => 'm.ih/k.ih.l/s.eh.n / [m^m].[i^ih]/[k^k]. / failed phone:ih / failed spelling:ke',
  'mikkola' => 'm.ih/k.oh/l.eh / [m^m].[i^ih]/[k^k]. / failed phone:oh / failed spelling:ko',
  'mikles' => 'm.igh/k.eh.l.z / [m^m].[i^igh]/[k^k]. / failed phone:eh / failed spelling:le',
  'mikolajczak' => 'm.ih/k.aw/l.igh/ch.ah.k / [m^m].[i^ih]/[k^k].[o^aw]/[l^l]. / failed phone:igh / failed spelling:aj',
  'mikolajczyk' => 'm.ih/k.aw/l.igh/ch.ih.k / [m^m].[i^ih]/[k^k].[o^aw]/[l^l]. / failed phone:igh / failed spelling:aj',
  'miksch' => 'm.ih.k.sh / [m^m].[i^ih].[k^k].[sc^sh] / failed phone:sh / failed spelling:sc',
  'mikulich' => 'm.ih/k.ye.ue/l.ih.h / [m^m].[i^ih]/[k^k].[u^ue]/[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'milanowski' => 'm.ih/l.eh/n.aw.f/s.k.ee / [m^m].[i^ih]/[l^l].[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'milbrandt' => 'm.ih.l/b.r.eh.n.t / [m^m].[i^ih].[l^l]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'milewski' => 'm.ih/l.eh.f/s.k.ee / [m^m].[i^ih]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'milici' => 'm.ee/l.ee/ch.ee / [m^m].[i^ee]/[l^l].[i^ee]/ / failed phone:t / failed spelling:ci',
  'milieu' => 'm.ih/l.ye.oo / [m^m].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ie',
  'milius' => 'm.igh/l.ee/ih.s / [m^m].[i^igh]/[l^l].[i^ee]/ / failed phone:ih / failed spelling:us',
  'milke' => 'm.ih.l.k / [m^m].[i^ih].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'milkowski' => 'm.ih.l/k.aw.f/s.k.ee / [m^m].[i^ih].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'milkweed' => 'm.ih.l/kw.ee.d / [m^m].[i^ih].[l^l]/ / failed phone:kw / failed spelling:kw',
  'mille' => 'm.ih.l / [m^m].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'millionths' => 'm.ih/l.ye.eh.n.t.th.s / [m^m].[i^ih]/[ll^l].[io^ue].[n^n].[t^t]. / failed phone:th / failed spelling:hs',
  'milllion' => 'm.ih/l.ye.eh.n / [m^m].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:li',
  'mimnaugh' => 'm.ih.m/n.ow / [m^m].[i^ih].[m^m]/[n^n].[au^aw] / failed phone:ow / failed spelling:au',
  'minasian' => 'm.ih/n.ah/zh.ih.n / [m^m].[i^ih]/[n^n].[a^ah]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'minassian' => 'm.ih/n.ah.s/zh.ih.n / [m^m].[i^ih]/[n^n].[a^ah].[s^s]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'mindanao' => 'm.ih.n/d.eh/n.ow / [m^m].[i^ih].[n^n]/[d^d].[a^ah]/[n^n]. / failed phone:ow / failed spelling:ao',
  'mingled' => 'm.ih.ng/g.eh.l.d / [m^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'mingles' => 'm.ih.ng/g.eh.l.z / [m^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'mingling' => 'm.ih.ng/g.eh/l.ih.ng / [m^m].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'mingus' => 'm.ih.ng/g.ih.s / [m^m].[i^ih].[n^ng]/[gu^g]. / failed phone:ih / failed spelling:s',
  'minh' => 'm.ih.n / [m^m].[i^ih].[n^n] / failed phone:n / failed spelling:nh',
  'miniard' => 'm.ih/n.ye.er.d / [m^m].[i^ih]/[n^n]. / failed phone:er / failed spelling:ia',
  'miniaturized' => 'm.ih/n.ih/ch.er/igh.z.d / [m^m].[i^ih]/[n^n].[i^ih]/ / failed phone:t / failed spelling:at',
  'minicucci' => 'm.ee/n.ee/k.ue/ch.ee / [m^m].[i^ee]/[n^n].[i^ee]/[c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'minimill' => 'm.ih/n.ee/m.aw.l / [m^m].[i^ih]/[n^n].[i^ee]/[m^m]. / failed phone:aw / failed spelling:il',
  'minjares' => 'm.ee/n.ye.aw/r.eh.s / [m^m].[i^ee]/[n^n]. / failed phone:ye / failed spelling:ja',
  'minjarez' => 'm.ee/n.ye.aw/r.eh.z / [m^m].[i^ee]/[n^n]. / failed phone:ye / failed spelling:ja',
  'minke' => 'm.ih.ng.k / [m^m].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'minnaar' => 'm.ih/n.aw.r / [m^m].[i^ih]/[nn^n].[a^oh]. / failed phone:r / failed spelling:ar',
  'minuet' => 'm.ih/n.ye.eh/w.eh.t / [m^m].[i^ih]/[n^n].[u^ue]/ / failed phone:w / failed spelling:et',
  'mirabelle' => 'm.aw/r.eh/b.eh.l / [m^m]. / failed phone:aw / failed spelling:ir',
  'miracles' => 'm.ih/r.eh/k.eh.l.z / [m^m].[i^ih]/[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'mirelle' => 'm.er/eh.l / [m^m].[ir^er]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'misbehavior' => 'm.ih.s/b.eh/h.ay/v.ye.er / [m^m].[i^ih].[s^s]/[b^b].[e^eh]/[h^h].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'miscarriages' => 'm.ih/s.k.air/ih/j.ih.z / [m^m].[i^ih]/[s^s].[c^k].[arr^air]/[i^ih]/ / failed phone:j / failed spelling:ag',
  'miscayuna' => 'm.ih/s.k.igh/ye.ue/n.eh / [m^m].[i^ih]/[s^s].[c^k]. / failed phone:igh / failed spelling:ay',
  'misch' => 'm.ih.sh / [m^m].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'mischa' => 'm.ih/sh.eh / [m^m].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'mischel' => 'm.ih/sh.eh.l / [m^m].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'mischer' => 'm.ih/sh.er / [m^m].[i^ih]/[sc^sh]. / failed phone:er / failed spelling:he',
  'mischke' => 'm.ih.sh.k / [m^m].[i^ih].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'mischler' => 'm.ih/sh.eh/l.er / [m^m].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:hl',
  'miserables' => 'm.ih/z.er/eh/b.eh.l.z / [m^m].[i^ih]/[s^z].[er^er]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'misfeldt' => 'm.ih/s.f.ih.l.t / [m^m].[i^ih]/[s^s].[f^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'mishandled' => 'm.ih.s/h.ah.n/d.eh.l.d / [m^m].[i^ih].[s^s]/[h^h].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'mishoe' => 'm.ee/sh.ue / [m^m].[i^ee]/[sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'misiaszek' => 'm.ih/s.ee/aw/sh.eh.k / [m^m].[i^ih]/[s^s].[i^ee]/[a^aw]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'misiewicz' => 'm.ih/s.eh/v.ih.ch / [m^m].[i^ih]/[s^s].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'misjudgment' => 'm.ih.s/j.uh.j/m.eh.n.t / [m^m].[i^ih].[s^s]/[j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'misjudgments' => 'm.ih.s/j.uh.j/m.eh.n.t.s / [m^m].[i^ih].[s^s]/[j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'miske' => 'm.ih.s.k / [m^m].[i^ih].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'missoula' => 'm.ih/z.ue/l.eh / [m^m].[i^ih]/[s^z]. / failed phone:ue / failed spelling:so',
  'missouri' => 'm.eh/z.oo/r.ee / [m^m].[i^ih]/[s^z]. / failed phone:oo / failed spelling:so',
  'mistletoe' => 'm.ih/s.eh.l/t.oh / [m^m].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'mitsch' => 'm.ih.ch / [m^m].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'mitschke' => 'm.ih.ch.k / [m^m].[i^ih].[t^t].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'mittelstadt' => 'm.ih/t.ih.l.sh/t.ah.t / [m^m].[i^ih]/[tt^t].[e^ih].[l^l].[s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'mittelstaedt' => 'm.ih/t.ih.l/s.t.eh.t / [m^m].[i^ih]/[tt^t].[e^ih].[l^l]/[s^s].[t^t].[a^ah].[ed^t] / failed phone:t / failed spelling:ed',
  'mittelsteadt' => 'm.ih/t.ih.l/s.t.eh.t / [m^m].[i^ih]/[tt^t].[e^ih].[l^l]/[s^s].[te^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'mittleman' => 'm.ih/t.eh.l/m.eh.n / [m^m].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'miyagawa' => 'm.ee/aw/g.aw/w.eh / [m^m].[i^ee]/ / failed phone:aw / failed spelling:ya',
  'miyako' => 'm.ee/uh/k.oh / [m^m].[i^ee]/ / failed phone:uh / failed spelling:ya',
  'miyamori' => 'm.ee/aw/m.aw/r.ee / [m^m].[i^ee]/ / failed phone:aw / failed spelling:ya',
  'mizelle' => 'm.ih/z.eh.l / [m^m].[i^ih]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mkhatshwa' => 'm.eh/k.ah.ch/w.eh / [m^m]. / failed phone:eh / failed spelling:kh',
  'mladic' => 'm/l.aw/d.ih.ch / [m^m]/[l^l].[a^aw]/[d^d].[i^ih]. / failed phone:t / failed spelling:c',
  'mnemonics' => 'n.ih/m.aw/n.ih.k.s /  / failed phone:n / failed spelling:mn',
  'moacq' => 'm.oh.k / [m^m].[oa^oh].[c^k] / failed phone:k / failed spelling:ac',
  'mobiliare' => 'm.oh/b.eh/l.air / [m^m].[o^oh]/[b^b].[i^ih]/[l^l]. / failed phone:air / failed spelling:ia',
  'moccia' => 'm.oh/ch.eh / [m^m].[o^oh]/ / failed phone:t / failed spelling:cc',
  'moccio' => 'm.oh/ch.ee/oh / [m^m].[o^oh]/ / failed phone:t / failed spelling:cc',
  'moceri' => 'm.oh/ch.air/ee / [m^m].[o^oh]/ / failed phone:t / failed spelling:ce',
  'moczygemba' => 'm.eh/ch.ih/g.eh.m/b.eh / [m^m].[o^uh]/ / failed phone:t / failed spelling:cz',
  'modestia' => 'm.oh/d.eh.s/t.ye.eh / [m^m].[o^oh]/[d^d].[e^eh].[s^s]/[t^t]. / failed phone:ue / failed spelling:ia',
  'modglin' => 'm.aw.j/l.ih.n / [m^m].[o^aw].[d^j]/ / failed phone:l / failed spelling:gl',
  'modzelewski' => 'm.eh/j.ih/l.eh.f/s.k.ee / [m^m].[o^uh]/[d^j]. / failed phone:ih / failed spelling:ze',
  'moebius' => 'm.oh/b.ee/ih.s / [m^m].[oe^oh]/[b^b].[i^ee]/ / failed phone:ih / failed spelling:us',
  'moede' => 'm.oh.d / [m^m].[o^oh].[ed^d] / failed phone:d / failed spelling:ed',
  'moehlman' => 'm.oh.l/m.eh.n / [m^m].[o^oh]. / failed phone:l / failed spelling:eh',
  'moehring' => 'm.aw/r.ih.ng / [m^m].[o^aw]/ / failed phone:r / failed spelling:eh',
  'moerbe' => 'm.aw.r.b / [m^m].[oe^oh].[r^r].[b^b] / failed phone:b / failed spelling:be',
  'moerke' => 'm.aw.r.k / [m^m].[oe^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'moesch' => 'm.oh.sh / [m^m].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'mohring' => 'm.aw/r.ih.ng / [m^m].[o^aw]/ / failed phone:r / failed spelling:hr',
  'mohs' => 'm.aw.s / [m^m].[o^aw]. / failed phone:s / failed spelling:hs',
  'moi' => 'm/w.aw / [m^m]/ / failed phone:w / failed spelling:oi',
  'mojave' => 'm.oh/h.aw/v.ee / [m^m].[o^oh]/ / failed phone:h / failed spelling:ja',
  'mojica' => 'm.oh/ye.ee/k.eh / [m^m].[o^oh]/ / failed phone:ye / failed spelling:ji',
  'molenaar' => 'm.aw/l.ih/n.aw.r / [m^m].[o^aw]/[l^l].[e^ih]/[n^n].[a^oh]. / failed phone:r / failed spelling:ar',
  'moliere' => 'm.oh/l.ye.air / [m^m].[o^oh]/[l^l]. / failed phone:ye / failed spelling:ie',
  'molineaux' => 'm.aw/l.eh/n.oh / [m^m].[o^aw]/[l^l].[i^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'molle' => 'm.aw.l / [m^m].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'molotov' => 'm.aw/l.eh/t.aw.f / [m^m].[o^aw]/[l^l].[o^uh]/[t^t].[o^aw]. / failed phone:f / failed spelling:v',
  'molyneaux' => 'm.aw/l.ih/n.oh / [m^m].[o^aw]/[l^l].[y^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'monacelli' => 'm.oh/n.aw/ch.eh/l.ee / [m^m].[o^oh]/[n^n].[a^aw]/ / failed phone:t / failed spelling:ce',
  'monaghan' => 'm.aw/n.eh/h.ah.n / [m^m].[o^aw]/[n^n].[a^ah]/ / failed phone:h / failed spelling:gh',
  'monceaux' => 'm.eh.n/s.oh / [m^m].[o^uh].[n^n]/[ce^s].[a^oh] / failed phone:oh / failed spelling:au',
  'moncus' => 'm.aw.n/k.ih.s / [m^m].[o^aw].[n^n]/[c^k]. / failed phone:ih / failed spelling:us',
  'monde' => 'm.aw.n.d / [m^m].[o^aw].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'mondschein' => 'm.aw.n.d/sh.igh.n / [m^m].[o^aw].[n^n].[d^d]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'monet' => 'm.oh/n.ay / [m^m].[o^oh]/[n^n].[e^ay] / failed phone:ay / failed spelling:t',
  'mongeon' => 'm.aw.n/j.ih.n / [m^m].[o^aw].[n^n]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'monje' => 'm.aw.n.j / [m^m].[o^aw].[n^n].[j^j] / failed phone:j / failed spelling:je',
  'monosaccharide' => 'm.aw/n.eh/s.ah/k.er/igh.d / [m^m].[o^aw]/[n^n].[o^uh]/[s^s].[a^ah]/[cc^k]. / failed phone:er / failed spelling:ha',
  'monoszon' => 'm.aw/n.eh/z.aw.n / [m^m].[o^aw]/[n^n].[o^uh]/[s^z]. / failed phone:aw / failed spelling:zo',
  'monroeville' => 'm.aw.n/r.oh/v.ih.l / [m^m].[o^aw].[n^n]/[r^r].[oe^oh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'monsieur' => 'm.eh.s/ye.er / [m^m].[o^uh]. / failed phone:s / failed spelling:ns',
  'monsieurs' => 'm.eh.s/ye.er.z / [m^m].[o^uh]. / failed phone:s / failed spelling:ns',
  'montagne' => 'm.eh.n/t.ay.n.ye / [m^m].[o^uh].[n^n]/[t^t].[a^ay].[gn^n]. / failed phone:ye / failed spelling:e',
  'monteiro' => 'm.aw.n/t.air/oh / [m^m].[o^aw].[n^n]/[te^t]. / failed phone:air / failed spelling:ir',
  'montejano' => 'm.aw.n/t.ay/aw/n.oh / [m^m].[o^aw].[n^n]/[t^t].[e^ay]/ / failed phone:aw / failed spelling:ja',
  'monticciolo' => 'm.aw.n/t.ee/ch.ee/oh/l.oh / [m^m].[o^aw].[n^n]/[t^t].[i^ee]/ / failed phone:t / failed spelling:cc',
  'montijo' => 'm.oh.n/t.ee/ye.oh / [m^m].[o^oh].[n^n]/[t^t].[i^ee]/ / failed phone:ye / failed spelling:jo',
  'montville' => 'm.oh.n.t/v.ih.l / [m^m].[o^oh].[n^n].[t^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'morace' => 'm.aw/r.aw/ch.ee / [m^m].[o^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'moragne' => 'm.er/ay.n.ye / [m^m].[o^oh].[r^r]/[a^ay].[gn^n]. / failed phone:ye / failed spelling:e',
  'morais' => 'm.er/ay / [m^m].[o^oh].[r^r]/[a^ay] / failed phone:ay / failed spelling:ai',
  'morawski' => 'm.er/aw.f/s.k.ee / [m^m].[o^oh].[r^r]/[a^aw]. / failed phone:f / failed spelling:ws',
  'moreira' => 'm.aw/r.air/eh / [m^m].[o^aw]/[r^r]. / failed phone:air / failed spelling:ei',
  'morency' => 'm.aw/r.aw.n/s.ee / [m^m].[o^aw]/[r^r]. / failed phone:aw / failed spelling:en',
  'morici' => 'm.aw/r.ee/ch.ee / [m^m].[o^aw]/[r^r].[i^ee]/ / failed phone:t / failed spelling:ci',
  'moriya' => 'm.aw/r.ee/eh / [m^m].[o^aw]/[r^r].[i^ee]/[y^eh] / failed phone:eh / failed spelling:ya',
  'morneault' => 'm.er/n.oh / [m^m].[o^oh].[r^r]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'morovcic' => 'm.aw/r.aw.v/ch.ih.k / [m^m].[o^aw]/[r^r].[o^aw].[v^v]/ / failed phone:t / failed spelling:ci',
  'morrisville' => 'm.aw/r.eh/s.v.ih.l / [m^m].[o^aw]/[rr^r].[i^ih]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'morsch' => 'm.aw.r.sh / [m^m].[o^oh].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'mortgage' => 'm.aw.r/g.eh.j / [m^m].[o^oh].[r^r]/ / failed phone:g / failed spelling:tg',
  'mortgaged' => 'm.aw.r/g.ih.j.d / [m^m].[o^oh].[r^r]/ / failed phone:g / failed spelling:tg',
  'mortgagepower' => 'm.aw.r/g.ih.j/p.ow.r / [m^m].[o^oh].[r^r]/ / failed phone:g / failed spelling:tg',
  'mortgages' => 'm.aw.r/g.eh/j.eh.z / [m^m].[o^oh].[r^r]/ / failed phone:g / failed spelling:tg',
  'mortgaging' => 'm.aw.r/g.ih/j.ih.ng / [m^m].[o^oh].[r^r]/ / failed phone:g / failed spelling:tg',
  'moselle' => 'm.oh/z.eh.l / [m^m].[o^oh]/[s^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mosher' => 'm.oh/zh.er / [m^m].[o^oh]/[s^zh]. / failed phone:er / failed spelling:he',
  'moskwa' => 'm.aw.s.k/v.eh / [m^m].[o^aw].[s^s].[k^k]/ / failed phone:v / failed spelling:wa',
  'mosler' => 'm.aw/s.eh/l.er / [m^m].[o^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'moszkowski' => 'm.aw/s.k.ow/s.k.ee / [m^m].[o^aw]/[s^s]. / failed phone:k / failed spelling:zk',
  'motl' => 'm.aw/t.eh.l / [m^m].[o^aw]/[t^t]. / failed phone:eh / failed spelling:l',
  'motorcycles' => 'm.oh/t.er/s.igh/k.eh.l.z / [m^m].[o^oh]/[t^t].[o^oh].[r^r]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:le',
  'motorcyclist' => 'm.oh/t.er/s.igh/k.eh/l.ih.s.t / [m^m].[o^oh]/[t^t].[o^oh].[r^r]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:li',
  'motorcyclists' => 'm.oh/t.er/s.igh/k.eh/l.ih.s.t.s / [m^m].[o^oh]/[t^t].[o^oh].[r^r]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:li',
  'mottl' => 'm.aw/t.eh.l / [m^m].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'mottled' => 'm.aw/t.eh.l.d / [m^m].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'mottling' => 'm.aw/t.eh/l.ih.ng / [m^m].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'moulin' => 'm.ue/l.ah.n / [m^m].[ou^ue]/[l^l]. / failed phone:ah / failed spelling:in',
  'mountaineer' => 'm.ow.n/t.ih/n.ih.r / [m^m].[ou^ow].[n^n]/[t^t].[a^ih]/ / failed phone:n / failed spelling:in',
  'mountleigh' => 'm.ow.n.t/l.ee / [m^m].[ou^ow].[n^n].[t^t]/[le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'mousse' => 'm.ue.s / [m^m].[ou^ue].[ss^s] / failed phone:s / failed spelling:ss',
  'mousseau' => 'm.ue/s.oh / [m^m].[ou^ue]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'moye' => 'm.oy / [m^m].[oy^oy] / failed phone:oy / failed spelling:oy',
  'mozelle' => 'm.eh/z.eh.l / [m^m].[o^uh]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'mpeg' => 'eh.m/p.eh.g /  / failed phone:eh / failed spelling:mp',
  'mpg' => 'eh.m/p.ee/j.ee /  / failed phone:eh / failed spelling:mp',
  'mph' => 'eh.m/p.ee/ay.ch /  / failed phone:eh / failed spelling:mp',
  'mr' => 'm.ih/s.t.er / [m^m]. / failed phone:ih / failed spelling:r',
  'mroczek' => 'm.r.aw/ch.eh.k / [m^m].[r^r].[o^aw]/ / failed phone:t / failed spelling:cz',
  'mroczka' => 'm.r.aw.ch/k.eh / [m^m].[r^r].[o^aw]. / failed phone:t / failed spelling:cz',
  'mroczkowski' => 'm.r.eh.ch/k.aw.f/s.k.ee / [m^m].[r^r].[o^uh]. / failed phone:t / failed spelling:cz',
  'mrs' => 'm.ih/s.ih.z / [m^m]. / failed phone:ih / failed spelling:rs',
  'ms' => 'm.ih.z / [m^m]. / failed phone:ih / failed spelling:s',
  'msgr' => 'm.aw.n/s.ee/n.ye.er / [m^m]. / failed phone:aw / failed spelling:sg',
  'mssrs' => 'm.eh/s.er.z / [m^m]. / failed phone:eh / failed spelling:ss',
  'mt' => 'm.ow.n.t / [m^m]. / failed phone:ow / failed spelling:t',
  'mtel' => 'eh.m/t.eh.l /  / failed phone:eh / failed spelling:mt',
  'mucci' => 'm.ue/ch.ee / [m^m].[u^ue]/ / failed phone:t / failed spelling:cc',
  'muccio' => 'm.ue/ch.ee/oh / [m^m].[u^ue]/ / failed phone:t / failed spelling:cc',
  'muddled' => 'm.uh/d.eh.l.d / [m^m].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'muddleheaded' => 'm.uh/d.eh.l/h.eh/d.eh.d / [m^m].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'muddles' => 'm.uh/d.eh.l.z / [m^m].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'muddling' => 'm.uh/d.eh/l.ih.ng / [m^m].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:li',
  'mudgett' => 'm.uh/j.ih.t / [m^m].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'muecke' => 'm.ue.k / [m^m].[ue^ue].[c^k] / failed phone:k / failed spelling:ec',
  'muegge' => 'm.ue.g / [m^m].[ue^ue].[gg^g] / failed phone:g / failed spelling:eg',
  'muehl' => 'm.ye.ue.l / [m^m].[u^ue]. / failed phone:l / failed spelling:eh',
  'muehlbauer' => 'm.ye.ue.l/b.ow/er / [m^m].[u^ue]. / failed phone:l / failed spelling:eh',
  'muehlebach' => 'm.ye.ue.l/b.aw.k / [m^m].[u^ue]. / failed phone:l / failed spelling:eh',
  'muffled' => 'm.uh/f.eh.l.d / [m^m].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'mughniyeh' => 'm.uh.g/n.ih/ye.eh / [m^m].[u^uh].[gh^g]/[n^n].[i^ih]/[y^ye].[e^eh] / failed phone:eh / failed spelling:eh',
  'muhl' => 'm.uh.l / [m^m].[u^uh]. / failed phone:l / failed spelling:hl',
  'muhlbauer' => 'm.ue.l/b.ow/er / [m^m].[u^ue]. / failed phone:l / failed spelling:hl',
  'muhlenkamp' => 'm.ue/l.ih.n/k.ah.m.p / [m^m].[u^ue]/ / failed phone:l / failed spelling:hl',
  'muhr' => 'm.oo.r / [m^m].[u^oo]. / failed phone:r / failed spelling:hr',
  'muhs' => 'm.uh.s / [m^m].[u^uh]. / failed phone:s / failed spelling:hs',
  'mujahedin' => 'm.ue/h.eh/h.eh/d.ee.n / [m^m].[u^ue]/ / failed phone:h / failed spelling:ja',
  'mukhopadhyay' => 'm.ue/k.oh/p.aw/d.ye.igh / [m^m].[u^ue]/[k^k]. / failed phone:oh / failed spelling:ho',
  'mulcare' => 'm.uh.l/k.er / [m^m].[u^uh].[l^l]/[c^k].[ar^er] / failed phone:er / failed spelling:ar',
  'mulder' => 'm.uh/d.er / [m^m].[u^uh]/ / failed phone:d / failed spelling:ld',
  'mullineaux' => 'm.uh/l.ih/n.oh / [m^m].[u^uh]/[ll^l].[i^ih]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'multiples' => 'm.uh.l/t.eh/p.eh.l.z / [m^m].[u^uh].[l^l]/[t^t].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'multnomah' => 'm.uh.l/n.oh/m.eh / [m^m].[u^uh].[l^l]/ / failed phone:n / failed spelling:tn',
  'mumbled' => 'm.uh.m/b.eh.l.d / [m^m].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'mumbles' => 'm.uh.m/b.eh.l.z / [m^m].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'mumbling' => 'm.uh.m/b.eh/l.ih.ng / [m^m].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'mumme' => 'm.uh.m / [m^m].[u^uh].[m^m] / failed phone:m / failed spelling:mm',
  'mundt' => 'm.uh.n.t / [m^m].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'munoz' => 'm.ue/n.ye.oh.z / [m^m].[u^ue]/[n^n]. / failed phone:ye / failed spelling:oz',
  'munsch' => 'm.uh.n.sh / [m^m].[u^uh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'muranaga' => 'm.er/r.eh/n.aw/g.eh / [m^m].[ur^er]/ / failed phone:r / failed spelling:an',
  'murawski' => 'm.er/aw.f/s.k.ee / [m^m].[ur^er]/[a^aw]. / failed phone:f / failed spelling:ws',
  'murayama' => 'm.er/igh/aw/m.eh / [m^m].[ur^er]/ / failed phone:igh / failed spelling:ay',
  'murrah' => 'm.aw/r.eh / [m^m]. / failed phone:aw / failed spelling:ur',
  'murray' => 'm.er/ee / [m^m].[urr^er]/ / failed phone:ee / failed spelling:ay',
  'murrell' => 'm.aw/r.eh.l / [m^m]. / failed phone:aw / failed spelling:ur',
  'murrill' => 'm.aw/r.eh.l / [m^m]. / failed phone:aw / failed spelling:ur',
  'murrin' => 'm.aw/r.ih.n / [m^m]. / failed phone:aw / failed spelling:ur',
  'murrow' => 'm.aw/r.oh / [m^m]. / failed phone:aw / failed spelling:ur',
  'musacchio' => 'm.ye.ue/s.ah/k.ee/oh / [m^m].[u^ue]/[s^s].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'musch' => 'm.uh.sh / [m^m].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'muscled' => 'm.uh/s.eh.l.d / [m^m].[u^uh]/[sc^s]. / failed phone:eh / failed spelling:le',
  'muscles' => 'm.uh/s.eh.l.z / [m^m].[u^uh]/[sc^s]. / failed phone:eh / failed spelling:le',
  'muscling' => 'm.uh/s.eh/l.ih.ng / [m^m].[u^uh]/[sc^s]. / failed phone:eh / failed spelling:li',
  'mushtaq' => 'm.uh.sh/t.ah.k / [m^m].[u^uh].[sh^sh]/[t^t].[a^ah]. / failed phone:k / failed spelling:q',
  'muske' => 'm.uh.s.k / [m^m].[u^uh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'muskegon' => 'm.eh/s.k.ee/g.ih.n / [m^m].[u^uh]/[s^s].[k^k].[e^ee]/[g^g]. / failed phone:ih / failed spelling:on',
  'musumeci' => 'm.ue/s.ue/m.eh/ch.ee / [m^m].[u^ue]/[s^s].[u^ue]/[m^m].[e^eh]/ / failed phone:t / failed spelling:ci',
  'muszynski' => 'm.eh/sh.ih.n/s.k.ee / [m^m].[u^uh]/[s^sh]. / failed phone:ih / failed spelling:zy',
  'mutsch' => 'm.uh.ch / [m^m].[u^uh].[t^t]. / failed phone:t / failed spelling:ts',
  'mutschler' => 'm.uh.ch/l.er / [m^m].[u^uh].[t^t].[sc^sh]/ / failed phone:l / failed spelling:hl',
  'muzzled' => 'm.uh/z.eh.l.d / [m^m].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'muzzles' => 'm.uh/z.eh.l.z / [m^m].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'mycenaean' => 'm.igh/s.eh/n.ee/eh.n / [m^m].[y^igh]/[c^s].[e^eh]/[n^n]. / failed phone:ee / failed spelling:ae',
  'myhre' => 'm.ih.r / [m^m].[y^ih]. / failed phone:r / failed spelling:hr',
  'myhren' => 'm.ih/r.eh.n / [m^m].[y^ih]/ / failed phone:r / failed spelling:hr',
  'myrmidon' => 'm.er/m.ih/d.ih.n / [m^m].[yr^er]/[m^m].[i^ih]/[d^d]. / failed phone:ih / failed spelling:on',
  'myrmidons' => 'm.er/m.ih/d.ih.n.z / [m^m].[yr^er]/[m^m].[i^ih]/[d^d]. / failed phone:ih / failed spelling:on',
  'myrrh' => 'm.er / [m^m].[yr^er] / failed phone:er / failed spelling:yr',
  'myrtles' => 'm.er/t.eh.l.z / [m^m].[yr^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'mysliwiec' => 'm.ih/s.l.ih/v.ee.k / [m^m].[y^ih]/[s^s].[l^l].[i^ih]/ / failed phone:v / failed spelling:wi',
  'myszka' => 'm.ih.sh/k.eh / [m^m].[y^ih].[s^sh]/ / failed phone:k / failed spelling:zk',
  'n' => 'eh.n /  / failed phone:eh / failed spelling:n',
  'naab' => 'n.aw.b / [n^n].[a^aw]. / failed phone:b / failed spelling:ab',
  'naacp' => 'eh.n/d.uh/b.eh/l.ay/s.ee/p.ee /  / failed phone:eh / failed spelling:na',
  'naas' => 'n.aw.z / [n^n].[a^aw]. / failed phone:z / failed spelling:as',
  'nabil' => 'n.aw/b.ee / [n^n].[a^aw]/[b^b].[i^ee] / failed phone:ee / failed spelling:il',
  'nacchio' => 'n.ah/k.ee/oh / [n^n].[a^ah]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'nacke' => 'n.ah.k / [n^n].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'nadeau' => 'n.eh/d.oh / [n^n].[a^ah]/[d^d]. / failed phone:oh / failed spelling:ea',
  'nadgwick' => 'n.ah.j/w.ih.k / [n^n].[a^ah].[d^j]/ / failed phone:w / failed spelling:gw',
  'nadja' => 'n.ah/d.ye.eh / [n^n].[a^ah]/[d^d]. / failed phone:ue / failed spelling:ja',
  'nadler' => 'n.ay/d.eh/l.er / [n^n].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'naef' => 'n.ee.f / [n^n]. / failed phone:ee / failed spelling:ae',
  'naegele' => 'n.eh/g.eh.l / [n^n].[a^ah]/ / failed phone:g / failed spelling:eg',
  'naegeli' => 'n.eh/g.ih/l.ee / [n^n].[a^ah]/ / failed phone:g / failed spelling:eg',
  'naeger' => 'n.eh/g.er / [n^n].[a^ah]/ / failed phone:g / failed spelling:eg',
  'naeve' => 'n.ee.v / [n^n]. / failed phone:ee / failed spelling:ae',
  'nah' => 'n.aw / [n^n].[a^aw] / failed phone:aw / failed spelling:ah',
  'nahm' => 'n.ah.m / [n^n].[a^ah]. / failed phone:m / failed spelling:hm',
  'nahmias' => 'n.aw/m.ee/eh.z / [n^n].[a^aw]/ / failed phone:m / failed spelling:hm',
  'naim' => 'n.igh/ih.m / [n^n].[ai^igh]/ / failed phone:ih / failed spelling:m',
  'naive' => 'n.igh/ee.v / [n^n].[ai^igh]/ / failed phone:ee / failed spelling:ve',
  'najar' => 'n.aw/ye.aw.r / [n^n].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'najjar' => 'n.aw/ye.aw.r / [n^n].[a^aw]/ / failed phone:ye / failed spelling:jj',
  'nakhamkin' => 'n.ah/k.ah.m/k.ih.n / [n^n].[a^ah]/[k^k]. / failed phone:ah / failed spelling:ha',
  'nandaime' => 'n.ah.n/d.ay.m / [n^n].[a^ah].[n^n]/[d^d].[ai^ay].[m^m] / failed phone:m / failed spelling:im',
  'naperville' => 'n.ay/p.er/v.ih.l / [n^n].[a^ay]/[p^p].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'napierala' => 'n.aw/p.ih/r.aw/l.eh / [n^n].[a^aw]/[p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'naples' => 'n.ay/p.eh.l.z / [n^n].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'naqvi' => 'n.ah.k/v.ee / [n^n].[a^ah]. / failed phone:k / failed spelling:qv',
  'naranjo' => 'n.aw/r.aw/n.ye.oh / [n^n].[a^aw]/[r^r].[a^aw]/[n^n]. / failed phone:ye / failed spelling:jo',
  'narayanan' => 'n.aw/r.igh/aw/n.eh.n / [n^n].[a^aw]/[r^r]. / failed phone:igh / failed spelling:ay',
  'narciso' => 'n.aw.r/ch.ee/s.oh / [n^n].[a^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'narcisse' => 'n.aw.r/s.ih.s / [n^n].[a^oh].[r^r]/[c^s].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'nardozzi' => 'n.aw.r/d.oh.t/s.ee / [n^n].[a^oh].[r^r]/[d^d].[o^oh]. / failed phone:t / failed spelling:zz',
  'narducci' => 'n.aw.r/d.ue/ch.ee / [n^n].[a^oh].[r^r]/[d^d].[u^ue]/ / failed phone:t / failed spelling:cc',
  'narjes' => 'n.aw.r/ye.eh.s / [n^n].[a^oh].[r^r]/ / failed phone:ue / failed spelling:je',
  'nasdaq' => 'n.ah.z/d.ah.k / [n^n].[a^ah].[s^z]/[d^d].[a^ah]. / failed phone:k / failed spelling:q',
  'nashville' => 'n.ah.sh/v.ih.l / [n^n].[a^ah].[sh^sh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'natalia' => 'n.eh/t.aw/l.ye.eh / [n^n].[a^ah]/[t^t].[a^aw]/[l^l]. / failed phone:ue / failed spelling:ia',
  'nathalie' => 'n.ah/t.eh/l.ee / [n^n].[a^ah]/[t^t]. / failed phone:eh / failed spelling:ha',
  'nathaniel' => 'n.eh/th.ah/n.ye.eh.l / [n^n].[a^ah]/[th^th].[a^ah]/[n^n]. / failed phone:ue / failed spelling:ie',
  'natzke' => 'n.ah.t.z.k / [n^n].[a^ah].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'naugles' => 'n.aw/g.eh.l.z / [n^n].[au^aw]/[g^g]. / failed phone:eh / failed spelling:le',
  'navajo' => 'n.aw/v.eh/h.oh / [n^n].[a^aw]/[v^v].[a^ah]/ / failed phone:h / failed spelling:jo',
  'navajos' => 'n.ah/v.eh/h.oh.z / [n^n].[a^ah]/[v^v].[a^ah]/ / failed phone:h / failed spelling:jo',
  'nawrocki' => 'n.aw/v.r.oh.t/s.k.ee / [n^n].[a^aw]/ / failed phone:v / failed spelling:wr',
  'nazarbayev' => 'n.ah/z.er/b.igh/eh.v / [n^n].[a^ah]/[z^z].[ar^er]/[b^b]. / failed phone:igh / failed spelling:ay',
  'nazi' => 'n.aw.t/s.ee / [n^n].[a^aw]. / failed phone:t / failed spelling:zi',
  'nazionale' => 'n.aw.t/s.ee/oh/n.aw/l.ee / [n^n].[a^aw]. / failed phone:t / failed spelling:zi',
  'nazis' => 'n.aw.t/s.ee.z / [n^n].[a^aw]. / failed phone:t / failed spelling:zi',
  'nazzaro' => 'n.aw.t/s.aw/r.oh / [n^n].[a^aw]. / failed phone:t / failed spelling:zz',
  'neault' => 'n.oh / [ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'necci' => 'n.eh/ch.ee / [n^n].[e^eh]/ / failed phone:t / failed spelling:cc',
  'nechayev' => 'n.eh/ch.igh/eh.v / [n^n].[e^eh]/[ch^ch]. / failed phone:igh / failed spelling:ay',
  'neckwear' => 'n.eh/kw.air / [n^n].[e^eh]/[ck^kw]. / failed phone:air / failed spelling:we',
  'nedeau' => 'n.ih/d.oh / [n^n].[e^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'nederlandsche' => 'n.eh/d.er/l.ah.n.d/sh.ee / [n^n].[e^eh]/[d^d].[er^er]/[l^l].[a^ah].[n^n].[d^d]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'nedlloyd' => 'n.eh/d.eh/l.oy.d / [n^n].[e^eh]/[d^d]. / failed phone:eh / failed spelling:ll',
  'needham' => 'n.ee/d.eh.m / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:ha',
  'needled' => 'n.ee/d.eh.l.d / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needlefish' => 'n.ee/d.eh.l/f.ih.sh / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needlelike' => 'n.ee/d.eh.l/l.igh.k / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needleman' => 'n.ee/d.eh.l/m.eh.n / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needlepoint' => 'n.ee/d.eh.l/p.oy.n.t / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needler' => 'n.ee/d.eh/l.er / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needles' => 'n.ee/d.eh.l.z / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'needlework' => 'n.ee/d.eh.l/w.er.k / [ne^n].[e^ee]/[d^d]. / failed phone:eh / failed spelling:le',
  'nehemiah' => 'n.ee/eh/m.igh/eh / [n^n].[e^ee]/ / failed phone:eh / failed spelling:he',
  'neher' => 'n.ay/er / [n^n].[e^ay]/ / failed phone:er / failed spelling:he',
  'nehls' => 'n.eh.l.z / [n^n].[e^eh]. / failed phone:l / failed spelling:hl',
  'nehru' => 'n.ay/r.ue / [n^n].[e^ay]/ / failed phone:r / failed spelling:hr',
  'neidhardt' => 'n.igh.d/h.aw.r.t / [ne^n].[i^igh].[d^d]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'neidl' => 'n.ee/d.eh.l / [ne^n].[i^ee]/[d^d]. / failed phone:eh / failed spelling:l',
  'neidlinger' => 'n.igh/d.eh/l.ih.ng/er / [ne^n].[i^igh]/[d^d]. / failed phone:eh / failed spelling:li',
  'neira' => 'n.air/eh / [ne^n]. / failed phone:air / failed spelling:ir',
  'neisler' => 'n.igh/s.eh/l.er / [ne^n].[i^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'neitzke' => 'n.igh.t.z.k / [ne^n].[i^igh].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'nej' => 'n.ay / [n^n].[e^ay] / failed phone:ay / failed spelling:j',
  'nelle' => 'n.eh.l / [n^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'neorx' => 'n.ee/oh/r.eh.k.s / [n^n].[e^ee]/[o^oh]/[r^r]. / failed phone:eh / failed spelling:x',
  'nepl' => 'n.eh/p.eh.l / [n^n].[e^eh]/[p^p]. / failed phone:eh / failed spelling:l',
  'nesler' => 'n.eh/s.eh/l.er / [n^n].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'nestled' => 'n.eh/s.eh.l.d / [n^n].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'nestler' => 'n.eh/s.eh/l.er / [n^n].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'nestles' => 'n.eh/s.eh.l.z / [n^n].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'netterville' => 'n.eh/t.er/v.ih.l / [n^n].[e^eh]/[tte^t].[r^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'nettesheim' => 'n.eh/t.ih.s/sh.igh.m / [n^n].[e^eh]/[tt^t].[e^ih].[s^s]/ / failed phone:sh / failed spelling:he',
  'nettled' => 'n.eh/t.eh.l.d / [n^n].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'nettles' => 'n.eh/t.eh.l.z / [n^n].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'nettlesome' => 'n.eh/t.eh.l/s.eh.m / [n^n].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'nettleton' => 'n.eh/t.eh.l/t.eh.n / [n^n].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'netview' => 'n.eh.t/v.ye.ue / [n^n].[e^eh].[t^t]/[v^v]. / failed phone:ue / failed spelling:ie',
  'neu' => 'n.oy / [ne^n]. / failed phone:oy / failed spelling:u',
  'neuenfeldt' => 'n.ue/eh.n/f.eh.l.t / [ne^n].[u^ue]/[e^eh].[n^n]/[f^f].[e^eh].[l^l]. / failed phone:t / failed spelling:dt',
  'neuenschwander' => 'n.ue/eh.n/sh.w.aw.n/d.er / [ne^n].[u^ue]/[e^eh].[n^n]/[sc^sh]. / failed phone:w / failed spelling:hw',
  'neuer' => 'n.oy/er / [ne^n]. / failed phone:oy / failed spelling:ue',
  'neustadt' => 'n.ue.sh/t.ah.t / [ne^n].[u^ue].[s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'neuville' => 'n.ue/v.ih.l / [ne^n].[u^ue]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'neville' => 'n.eh/v.ih.l / [n^n].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'nevius' => 'n.ee/v.ee/ih.s / [n^n].[e^ee]/[v^v].[i^ee]/ / failed phone:ih / failed spelling:us',
  'newcombe' => 'n.ue/k.eh.m / [n^n].[ew^ue]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:mb',
  'newcome' => 'n.ue/k.eh.m / [n^n].[ew^ue]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'newfangled' => 'n.ue/f.ah.ng/g.eh.l.d / [n^n].[ew^ue]/[f^f].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'newshour' => 'n.ue/z.ow.r / [n^n].[ew^ue]/[s^z]. / failed phone:ow / failed spelling:ho',
  'newsome' => 'n.ue/s.eh.m / [n^n].[ew^ue]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'newville' => 'n.ue/v.ih.l / [n^n].[ew^ue]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'ng' => 'eh.ng /  / failed phone:eh / failed spelling:ng',
  'ngai' => 'g.igh /  / failed phone:g / failed spelling:ng',
  'ngema' => 'eh.n/j.eh/m.aw /  / failed phone:eh / failed spelling:ng',
  'nghi' => 'g.ee /  / failed phone:g / failed spelling:ng',
  'ngo' => 'g.oh /  / failed phone:g / failed spelling:ng',
  'nguyen' => 'n.ue/ye.eh.n / [n^n]. / failed phone:ue / failed spelling:gu',
  'niagara' => 'n.igh/ah/g.r.eh / [n^n].[i^igh]/[a^ah]/[g^g]. / failed phone:r / failed spelling:ar',
  'nibbe' => 'n.ih.b / [n^n].[i^ih].[bb^b] / failed phone:b / failed spelling:bb',
  'nibbled' => 'n.ih/b.eh.l.d / [n^n].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'nibbles' => 'n.ih/b.eh.l.z / [n^n].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'nibbling' => 'n.ih/b.eh/l.ih.ng / [n^n].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:li',
  'niche' => 'n.ih.ch / [n^n].[i^ih].[ch^ch] / failed phone:t / failed spelling:ch',
  'nichola' => 'n.ih/h.oh/l.eh / [n^n].[i^ih]/ / failed phone:h / failed spelling:ch',
  'nicklaus' => 'n.ih/k.l.eh.s / [n^n].[i^ih]/[ck^k].[l^l].[a^ah]. / failed phone:s / failed spelling:us',
  'nickleby' => 'n.ih/k.eh.l/b.ee / [n^n].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'nickles' => 'n.ih/k.eh.l.z / [n^n].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'nicolae' => 'n.ih/k.oh/l.igh / [n^n].[i^ih]/[c^k].[o^oh]/[l^l]. / failed phone:igh / failed spelling:ae',
  'nicolle' => 'n.ih/k.oh.l / [n^n].[i^ih]/[c^k].[o^oh].[ll^l] / failed phone:l / failed spelling:ll',
  'niebling' => 'n.ee/b.eh/l.ih.ng / [n^n].[ie^ee]/[b^b]. / failed phone:eh / failed spelling:li',
  'niebuhr' => 'n.ee/b.oo.r / [n^n].[ie^ee]/[b^b].[u^oo]. / failed phone:r / failed spelling:hr',
  'niedzielski' => 'n.ee/j.ee.l/s.k.ee / [n^n].[ie^ee]/[d^j]. / failed phone:ee / failed spelling:zi',
  'niedzwiecki' => 'n.ee.j/v.ee.t/s.k.ee / [n^n].[ie^ee].[d^j]/ / failed phone:v / failed spelling:zw',
  'niemczyk' => 'n.ee.m/ch.ih.k / [n^n].[ie^ee].[m^m]/ / failed phone:t / failed spelling:cz',
  'nierenberg' => 'n.ih/r.eh.n/b.er.g / [n^n].[i^ih]/ / failed phone:r / failed spelling:er',
  'nierman' => 'n.ih.r/m.eh.n / [n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'nietzsche' => 'n.ee/ch.ee / [n^n].[ie^ee]/[t^t]. / failed phone:sh / failed spelling:zs',
  'nih' => 'eh/n.igh/ay.ch /  / failed phone:eh / failed spelling:ni',
  'nihilism' => 'n.igh/eh/l.ih/z.eh.m / [n^n].[i^igh]/ / failed phone:eh / failed spelling:hi',
  'nihilists' => 'n.igh/eh/l.eh.s.t.s / [n^n].[i^igh]/ / failed phone:eh / failed spelling:hi',
  'niihau' => 'n.ee/h.ow / [n^n].[i^ee]/ / failed phone:h / failed spelling:ih',
  'nikkei' => 'n.ih/k.ay / [n^n].[i^ih]/[k^k]. / failed phone:ay / failed spelling:ke',
  'nikkel' => 'n.ih/k.eh.l / [n^n].[i^ih]/[k^k]. / failed phone:eh / failed spelling:ke',
  'nikkhah' => 'n.ih.k/h.aw / [n^n].[i^ih].[k^k]/ / failed phone:h / failed spelling:kh',
  'nikki' => 'n.ih/k.ee / [n^n].[i^ih]/[k^k]. / failed phone:ee / failed spelling:ki',
  'nikko' => 'n.ee/k.oh / [n^n].[i^ee]/[k^k]. / failed phone:oh / failed spelling:ko',
  'nikolich' => 'n.ih/k.aw/l.ih.h / [n^n].[i^ih]/[k^k].[o^aw]/[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'nineveh' => 'n.ih/n.eh/v.eh / [n^n].[i^ih]/[n^n].[e^eh]/[v^v].[e^eh] / failed phone:eh / failed spelling:h',
  'ninneman' => 'n.ih.n/m.eh.n / [n^n].[i^ih].[n^n]/ / failed phone:m / failed spelling:ne',
  'nisshin' => 'n.ih/sh.ih.n / [n^n].[i^ih]/[s^sh]. / failed phone:ih / failed spelling:sh',
  'nissho' => 'n.ih/sh.oh / [n^n].[i^ih]/[s^sh]. / failed phone:oh / failed spelling:sh',
  'nitsch' => 'n.ih.ch / [n^n].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'nitsche' => 'n.ih.ch / [n^n].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'nitschke' => 'n.ih.ch.k / [n^n].[i^ih].[t^t].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'nitzsche' => 'n.ih.t.z.sh / [n^n].[i^ih].[t^t].[z^z].[sc^sh] / failed phone:sh / failed spelling:sc',
  'njt' => 'eh.n/j.ay/t.ee /  / failed phone:eh / failed spelling:nj',
  'noakes' => 'n.oh.k.s / [n^n].[oa^oh].[k^k]. / failed phone:x / failed spelling:ak',
  'nobbe' => 'n.aw.b / [n^n].[o^aw].[bb^b] / failed phone:b / failed spelling:bb',
  'nobleman' => 'n.oh/b.eh.l/m.eh.n / [n^n].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'nobles' => 'n.oh/b.eh.l.z / [n^n].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'noblesse' => 'n.oh/b.l.eh.s / [n^n].[o^oh]/[b^b].[l^l].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'noblewoman' => 'n.oh/b.eh.l/w.oo/m.eh.n / [n^n].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'nocella' => 'n.oh/ch.eh/l.eh / [n^n].[o^oh]/ / failed phone:t / failed spelling:ce',
  'nocera' => 'n.oh/ch.air/eh / [n^n].[o^oh]/ / failed phone:t / failed spelling:ce',
  'noelle' => 'n.oh/eh.l / [n^n].[o^oh]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'noffke' => 'n.aw.f.k / [n^n].[o^aw].[ff^f].[k^k] / failed phone:k / failed spelling:ke',
  'nogueira' => 'n.oh/g.air/eh / [n^n].[o^oh]/[gue^g]. / failed phone:air / failed spelling:ir',
  'noire' => 'n.eh/w.ah.r / [n^n].[o^uh]/ / failed phone:w / failed spelling:ir',
  'nolde' => 'n.oh.l.d / [n^n].[o^oh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'nonbusiness' => 'n.aw.n/b.ih.z/n.eh.s / [n^n].[o^aw].[n^n]/[b^b]. / failed phone:ih / failed spelling:us',
  'noncorporate' => 'n.aw.n/k.aw.r/p.r.eh.t / [n^n].[o^aw].[n^n]/[c^k].[o^oh].[r^r]/[p^p]. / failed phone:r / failed spelling:or',
  'nondurables' => 'n.aw.n/d.oo/r.eh/b.eh.l.z / [n^n].[o^aw].[n^n]/[d^d].[u^oo]/[r^r].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'nonexecutive' => 'n.aw/n.ih.g/z.eh/k.ye.eh/t.ih.v / [n^n].[o^aw]/[n^n].[e^ih]. / failed phone:g / failed spelling:xe',
  'nonexistent' => 'n.aw/n.eh.g/z.ih/s.t.eh.n.t / [n^n].[o^aw]/[n^n].[e^eh]. / failed phone:g / failed spelling:xi',
  'noodles' => 'n.ue/d.eh.l.z / [n^n].[oo^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'norcia' => 'n.aw.r/ch.eh / [n^n].[o^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'nordahl' => 'n.aw.r/d.aw.l / [n^n].[o^oh].[r^r]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'nordling' => 'n.aw.r/d.eh/l.ih.ng / [n^n].[o^oh].[r^r]/[d^d]. / failed phone:eh / failed spelling:li',
  'nordyke' => 'n.aw.r/d.igh.k / [n^n].[o^oh].[r^r]/[d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'norgaard' => 'n.aw.r/g.aw.r.d / [n^n].[o^oh].[r^r]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'norkus' => 'n.aw.r/k.ih.s / [n^n].[o^oh].[r^r]/[k^k]. / failed phone:ih / failed spelling:us',
  'northview' => 'n.aw.r.th/v.ye.ue / [n^n].[o^oh].[r^r].[th^th]/[v^v]. / failed phone:ue / failed spelling:ie',
  'norville' => 'n.aw.r/v.ih.l / [n^n].[o^oh].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'notables' => 'n.oh/t.eh/b.eh.l.z / [n^n].[o^oh]/[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'nouvelle' => 'n.ue/v.eh.l / [n^n].[ou^ue]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'nov' => 'n.oh/v.eh.m/b.er / [n^n].[o^oh]/[v^v]. / failed phone:eh / failed spelling:',
  'novacek' => 'n.aw/v.eh/ch.eh.k / [n^n].[o^aw]/[v^v].[a^ah]/ / failed phone:t / failed spelling:ce',
  'novakowski' => 'n.eh/v.eh/k.aw.f/s.k.ee / [n^n].[o^uh]/[v^v].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'novicki' => 'n.eh/v.ih.t/s.k.ee / [n^n].[o^uh]/[v^v].[i^ih]. / failed phone:t / failed spelling:ck',
  'nowacki' => 'n.ow/aw.t/s.k.ee / [n^n].[ow^ow]/[a^aw]. / failed phone:t / failed spelling:ck',
  'nowaczyk' => 'n.ow/eh/ch.ih.k / [n^n].[ow^ow]/[a^ah]/ / failed phone:t / failed spelling:cz',
  'nowak' => 'n.oh/v.ah.k / [n^n].[ow^oh]/ / failed phone:v / failed spelling:ak',
  'nowakowski' => 'n.ow/eh/k.aw.f/s.k.ee / [n^n].[ow^ow]/[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'nowicki' => 'n.ow/ih.t/s.k.ee / [n^n].[ow^ow]/[i^ih]. / failed phone:t / failed spelling:ck',
  'noxema' => 'n.aw.k/s.m.aw / [n^n].[o^aw].[x^x]/ / failed phone:m / failed spelling:em',
  'noxious' => 'n.aw.k/sh.eh.s / [n^n].[o^aw].[x^k]/ / failed phone:sh / failed spelling:io',
  'nozzles' => 'n.aw/z.eh.l.z / [n^n].[o^aw]/[zz^z]. / failed phone:eh / failed spelling:le',
  'nucci' => 'n.ue/ch.ee / [n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'nuccio' => 'n.ue/ch.ee/oh / [n^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'nuckles' => 'n.uh/k.eh.l.z / [n^n].[u^uh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'nudges' => 'n.uh/j.ih.z / [n^n].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'nudging' => 'n.uh/j.ih.ng / [n^n].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'nuhfer' => 'n.ue/f.er / [n^n].[u^ue]/ / failed phone:f / failed spelling:hf',
  'nurre' => 'n.er / [n^n].[urr^er] / failed phone:er / failed spelling:ur',
  'nusbaum' => 'n.ee/ih.s/b.ow.m / [n^n]. / failed phone:ee / failed spelling:us',
  'nusz' => 'n.uh.sh / [n^n].[u^uh].[s^sh] / failed phone:sh / failed spelling:sz',
  'nuzzi' => 'n.ue.t/s.ee / [n^n].[u^ue]. / failed phone:t / failed spelling:zz',
  'nvhomes' => 'eh.n/v.ee/h.oh.m.z /  / failed phone:eh / failed spelling:nv',
  'nvryan' => 'eh.n/v.r.igh/eh.n /  / failed phone:eh / failed spelling:nv',
  'nycz' => 'n.ih.ch / [n^n].[y^ih]. / failed phone:t / failed spelling:cz',
  'nygaard' => 'n.ih/g.aw.r.d / [n^n].[y^ih]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'nyhus' => 'n.ih/h.ih.s / [n^n].[y^ih]/[h^h]. / failed phone:ih / failed spelling:us',
  'oad' => 'oh/ay/d.ee / [o^oh]/[a^ay]/[d^d]. / failed phone:ee / failed spelling:',
  'oakes' => 'oh.k.s / [oa^oh].[k^k]. / failed phone:x / failed spelling:ak',
  'oakville' => 'oh.k/v.ih.l / [oa^oh].[k^k]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'oakwood' => 'oh/kw.oo.d / [o^oh]/ / failed phone:kw / failed spelling:ak',
  'oanh' => 'oh.n / [oa^oh].[n^n] / failed phone:n / failed spelling:an',
  'obanion' => 'oh/b.aw/n.ye.aw.n / [o^oh]/[b^b].[a^aw]/[n^n]. / failed phone:ye / failed spelling:io',
  'obermaier' => 'oh/b.er/m.igh.r / [o^oh]/[b^b].[er^er]/[m^m].[ai^igh]. / failed phone:r / failed spelling:er',
  'oblinger' => 'oh/b.eh/l.ih.ng/er / [o^oh]/[b^b]. / failed phone:eh / failed spelling:li',
  'obnoxious' => 'aw.b/n.aw.k/sh.eh.s / [o^aw].[b^b]/[n^n].[o^aw].[x^k]/ / failed phone:sh / failed spelling:io',
  'obstacles' => 'aw.b/s.t.eh/k.eh.l.z / [o^aw].[b^b]/[s^s].[t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'obuchowski' => 'eh/b.eh/h.aw.f/s.k.ee / [o^uh]/[b^b].[u^uh]/ / failed phone:h / failed spelling:ch',
  'occhino' => 'oh/k.ee/n.oh / [o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'occhipinti' => 'oh/k.ee/p.ee.n/t.ee / [o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'occhoa' => 'oh/ch.oh/eh / [o^oh]/ / failed phone:t / failed spelling:cc',
  'oceanview' => 'oh/sh.eh.n/v.ue / [o^oh]/[c^sh].[ea^eh].[n^n]/[v^v]. / failed phone:ue / failed spelling:ie',
  'ochsenschlager' => 'aw.k/s.eh.n/sh.l.aw/g.er / [o^aw].[ch^k]/[s^s].[e^eh].[n^n]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'oclair' => 'aw/k.l.er / [o^aw]/[c^k].[l^l]. / failed phone:er / failed spelling:ai',
  'oct' => 'aw.k/t.oh/b.er / [o^aw].[c^k]/[t^t]. / failed phone:oh / failed spelling:',
  'odegaard' => 'aw/d.ih/g.aw.r.d / [o^aw]/[d^d].[e^ih]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'odp' => 'oh/d.ee/p.ee / [o^oh]/[d^d]. / failed phone:ee / failed spelling:p',
  'oehler' => 'oh/l.er / [o^oh]/ / failed phone:l / failed spelling:eh',
  'oehlert' => 'oh/l.er.t / [o^oh]/ / failed phone:l / failed spelling:eh',
  'oehlke' => 'oh.l.k / [o^oh]. / failed phone:l / failed spelling:eh',
  'oehme' => 'oh.m / [o^oh]. / failed phone:m / failed spelling:eh',
  'oehmen' => 'oh/m.eh.n / [o^oh]/ / failed phone:m / failed spelling:eh',
  'oehmens' => 'oh/m.eh.n.z / [o^oh]/ / failed phone:m / failed spelling:eh',
  'oehrlein' => 'aw.r/l.igh.n / [o^oh]. / failed phone:r / failed spelling:eh',
  'oelke' => 'oh.l.k / [o^oh].[el^l].[k^k] / failed phone:k / failed spelling:ke',
  'oelschlager' => 'oh.l/sh.l.ay/g.er / [o^oh].[el^l]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'oesch' => 'oh.sh / [oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'oesterreichische' => 'oh/s.t.er/igh/k.ih/sh.ee / [oe^oh]/[s^s].[t^t].[erre^er]/[i^igh]/[ch^k].[i^ih]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'oeuvre' => 'ue/v.r.eh / [o^ue]/ / failed phone:v / failed spelling:eu',
  'ofc' => 'oh/eh.f/s.ee / [o^oh]/ / failed phone:eh / failed spelling:fc',
  'offerdahl' => 'aw/f.er/d.aw.l / [o^aw]/[ff^f].[er^er]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'oftedahl' => 'aw.f/t.ih/d.aw.l / [o^aw].[f^f]/[t^t].[e^ih]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'often' => 'aw/f.eh.n / [o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'oftener' => 'aw/f.eh/n.er / [o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'oftentimes' => 'aw/f.eh.n/t.igh.m.z / [o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'oglebay' => 'oh/g.eh.l/b.ay / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'ogled' => 'oh/g.eh.l.d / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'ogles' => 'oh/g.eh.l.z / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'oglesbee' => 'oh/g.eh.l.z/b.ee / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'oglethorpe' => 'oh/g.eh.l/th.aw.r.p / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'ogletree' => 'oh/g.eh.l/t.r.ee / [o^oh]/[g^g]. / failed phone:eh / failed spelling:le',
  'ohair' => 'aw/h.er / [o^aw]/[h^h]. / failed phone:er / failed spelling:ai',
  'ohanesian' => 'aw/h.eh/n.eh/zh.ih.n / [o^aw]/[h^h].[a^ah]/[n^n].[e^eh]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'ohmae' => 'oh/m.ay / [oh^oh]/[m^m].[a^ay] / failed phone:ay / failed spelling:ae',
  'ohnemus' => 'oh/n.ih/m.ih.s / [oh^oh]/[n^n].[e^ih]/[m^m]. / failed phone:ih / failed spelling:us',
  'oie' => 'oy / [oi^oy] / failed phone:oy / failed spelling:oi',
  'oja' => 'oh/ye.eh / [o^oh]/ / failed phone:ue / failed spelling:ja',
  'ojala' => 'oh/ye.aw/l.eh / [o^oh]/ / failed phone:ye / failed spelling:ja',
  'ojeda' => 'oh/ye.ay/d.eh / [o^oh]/ / failed phone:ye / failed spelling:je',
  'ok' => 'oh/k.ay / [o^oh]/[k^k]. / failed phone:ay / failed spelling:',
  'okeefe' => 'aw/k.ee.f / [o^aw]/[k^k].[ee^ee].[f^f] / failed phone:f / failed spelling:ef',
  'okeeffe' => 'aw/k.ee.f / [o^aw]/[k^k].[ee^ee].[ff^f] / failed phone:f / failed spelling:ef',
  'oken' => 'oh/k.ay/eh.n / [o^oh]/[k^k].[e^ay]/ / failed phone:eh / failed spelling:n',
  'okoniewski' => 'oh/k.aw/n.ee/eh.f/s.k.ee / [o^oh]/[k^k].[o^aw]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'okuma' => 'oh/k.ye.ue/m.er / [o^oh]/[k^k].[u^ue]/[m^m]. / failed phone:er / failed spelling:a',
  'olah' => 'eh/l.aw / [o^uh]/[l^l].[a^aw] / failed phone:aw / failed spelling:ah',
  'olajuwon' => 'eh/l.igh/j.ue/aw.n / [o^uh]/[l^l]. / failed phone:igh / failed spelling:aj',
  'olaughlin' => 'eh/l.aw/k.l.ih.n / [o^uh]/[l^l].[a^aw]/ / failed phone:k / failed spelling:ug',
  'olayan' => 'oh/l.igh/eh.n / [o^oh]/[l^l]. / failed phone:igh / failed spelling:ay',
  'olczak' => 'oh.l/ch.ah.k / [o^oh].[l^l]/ / failed phone:t / failed spelling:cz',
  'olde' => 'oh.l.d / [o^oh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'oldham' => 'oh.l/d.eh.m / [o^oh].[l^l]/[d^d]. / failed phone:eh / failed spelling:ha',
  'oldt' => 'oh.l.t / [o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'olejniczak' => 'eh/l.ay/n.ih/ch.ah.k / [o^uh]/[l^l].[e^ay]/ / failed phone:n / failed spelling:jn',
  'olejnik' => 'eh/l.ay/n.ih.k / [o^uh]/[l^l].[e^ay]/ / failed phone:n / failed spelling:jn',
  'olinde' => 'aw/l.ih.n.d / [o^aw]/[l^l].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'olivier' => 'oh/l.ih/v.ee/ay / [o^oh]/[l^l].[i^ih]/[v^v].[i^ee]/[e^ay] / failed phone:ay / failed spelling:r',
  'olivieri' => 'oh/l.ee/v.ih/r.ee / [o^oh]/[l^l].[i^ee]/[v^v].[i^ih]/ / failed phone:r / failed spelling:er',
  'olkowski' => 'oh.l/k.aw.f/s.k.ee / [o^oh].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'oloughlin' => 'eh/l.ow/k.l.ih.n / [o^uh]/[l^l].[ough^ow]/ / failed phone:k / failed spelling:li',
  'olszewski' => 'oh.l/sh.eh.f/s.k.ee / [o^oh].[l^l]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'omdahl' => 'aw.m/d.aw.l / [o^aw].[m^m]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'once' => 'w.uh.n.s /  / failed phone:w / failed spelling:on',
  'ondaatje' => 'aw.n/d.aw/t.ye.eh / [o^aw].[n^n]/[d^d].[a^aw]/ / failed phone:t / failed spelling:at',
  'one' => 'w.uh.n /  / failed phone:uh / failed spelling:n',
  'onecomm' => 'w.uh.n/k.aw.m /  / failed phone:uh / failed spelling:nc',
  'oneness' => 'w.uh.n/n.eh.s /  / failed phone:uh / failed spelling:nn',
  'ones' => 'w.uh.n.z /  / failed phone:uh / failed spelling:ns',
  'oneself' => 'w.uh.n/s.eh.l.f /  / failed phone:uh / failed spelling:ns',
  'onetime' => 'w.uh.n/t.igh.m /  / failed phone:uh / failed spelling:nt',
  'onex' => 'w.uh/n.eh.k.s /  / failed phone:uh / failed spelling:nx',
  'oneyear' => 'w.uh/n.ye.ih.r /  / failed phone:uh / failed spelling:ny',
  'onoda' => 'oh/n.oh/d.er / [o^oh]/[n^n].[o^oh]/[d^d]. / failed phone:er / failed spelling:a',
  'oodles' => 'ue/d.eh.l.z / [oo^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'ooh' => 'ue / [oo^ue] / failed phone:ue / failed spelling:oo',
  'oohs' => 'ue.z / [oo^ue]. / failed phone:z / failed spelling:hs',
  'oooh' => 'ue / [oo^ue] / failed phone:ue / failed spelling:oo',
  'ooohs' => 'ue.z / [oo^ue]. / failed phone:z / failed spelling:oh',
  'ooten' => 'oh/oh/t.ay/eh.n / [o^oh]/[o^oh]/[t^t].[e^ay]/ / failed phone:eh / failed spelling:n',
  'opdahl' => 'aw.p/d.aw.l / [o^aw].[p^p]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'opdyke' => 'aw.p/d.igh.k / [o^aw].[p^p]/[d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'ophelia' => 'eh/f.ee/l.ye.eh / [o^uh]/[ph^f].[e^ee]/[l^l]. / failed phone:ue / failed spelling:ia',
  'ophthalmologist' => 'aw.p/th.eh/m.aw/l.eh/j.ih.s.t / [o^aw].[p^p]/ / failed phone:th / failed spelling:ht',
  'ophthalmologists' => 'aw.p/th.eh/m.aw/l.eh/j.ih.s.t.s / [o^aw].[p^p]/ / failed phone:th / failed spelling:ht',
  'ophthalmology' => 'aw.p/th.eh/m.aw/l.eh/j.ee / [o^aw].[p^p]/ / failed phone:th / failed spelling:ht',
  'oplinger' => 'oh/p.eh/l.ih.ng/er / [o^oh]/[p^p]. / failed phone:eh / failed spelling:li',
  'opsahl' => 'aw.p/s.aw.l / [o^aw].[p^p]/[s^s].[a^aw]. / failed phone:l / failed spelling:hl',
  'orabelle' => 'aw/r.eh/b.eh.l / [o^aw]/[r^r].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'oracles' => 'aw/r.eh/k.eh.l.z / [o^aw]/[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'orangina' => 'aw/r.ah.n/j.ee/n.er / [o^aw]/[r^r].[a^ah].[n^n]/[g^j].[i^ee]/[n^n]. / failed phone:er / failed spelling:a',
  'orielle' => 'aw/r.ee/eh.l / [o^aw]/[r^r].[i^ee]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'oriordan' => 'oh/r.ih.r/d.eh.n / [o^oh]/[r^r].[i^ih]. / failed phone:r / failed spelling:or',
  'orlowski' => 'aw.r/l.aw.f/s.k.ee / [o^oh].[r^r]/[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'orme' => 'aw.r.m / [o^oh].[r^r].[m^m] / failed phone:m / failed spelling:me',
  'ormonde' => 'aw.r/m.eh.n.d / [o^oh].[r^r]/[m^m].[o^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'orosz' => 'aw/r.eh.sh / [o^aw]/[r^r].[o^uh].[s^sh] / failed phone:sh / failed spelling:sz',
  'orourke' => 'er/oo.r.k / [o^oh].[r^r]/[ou^oo].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'orpah' => 'aw.r/p.aw / [o^oh].[r^r]/[p^p].[a^aw] / failed phone:aw / failed spelling:ah',
  'orville' => 'aw.r/v.ih.l / [o^oh].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'orzech' => 'aw.r/z.ih.h / [o^oh].[r^r]/[z^z].[e^ih]. / failed phone:h / failed spelling:ch',
  'orzechowski' => 'aw.r/z.ih/h.aw.f/s.k.ee / [o^oh].[r^r]/[z^z].[e^ih]/ / failed phone:h / failed spelling:ch',
  'osiecki' => 'eh/s.ee.t/s.k.ee / [o^uh]/[s^s].[ie^ee]. / failed phone:t / failed spelling:ck',
  'osmer' => 'aw/s.eh/m.er / [o^aw]/[s^s]. / failed phone:eh / failed spelling:me',
  'osowski' => 'eh/s.aw.f/s.k.ee / [o^uh]/[s^s].[o^aw]. / failed phone:f / failed spelling:ws',
  'ossicles' => 'aw/s.eh/k.eh.l.z / [o^aw]/[ss^s].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'ostergaard' => 'aw/s.t.er/g.aw.r.d / [o^aw]/[s^s].[te^t].[r^er]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'osterhoudt' => 'aw/s.t.er/h.ow.t / [o^aw]/[s^s].[te^t].[r^er]/[h^h].[ou^ow]. / failed phone:t / failed spelling:dt',
  'osterreichische' => 'aw/s.t.er/r.igh/k.ih/sh.ee / [o^aw]/[s^s].[te^t].[r^er]/[r^r].[ei^igh]/[ch^k].[i^ih]/[sc^sh]. / failed phone:ee / failed spelling:he',
  'ostling' => 'aw/s.eh/l.ih.ng / [o^aw]/[st^s]. / failed phone:eh / failed spelling:li',
  'ostrowski' => 'eh/s.t.r.aw.f/s.k.ee / [o^uh]/[s^s].[t^t].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'ouimet' => 'w.ee/m.eh.t /  / failed phone:w / failed spelling:ou',
  'ouimette' => 'w.ee/m.eh.t /  / failed phone:w / failed spelling:ou',
  'outler' => 'ow/t.eh/l.er / [ou^ow]/[t^t]. / failed phone:eh / failed spelling:le',
  'ovalle' => 'aw/v.ay.l / [o^aw]/[v^v].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'overgaard' => 'oh/v.er/g.aw.r.d / [o^oh]/[ve^v].[r^er]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'overpowering' => 'oh/v.er/p.ow/r.ih.ng / [o^oh]/[ve^v].[r^er]/[p^p].[ow^ow]/ / failed phone:r / failed spelling:er',
  'overview' => 'oh/v.er/v.ye.ue / [o^oh]/[ve^v].[r^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'owczarzak' => 'ow/ch.aw.r/z.eh.k / [ow^ow]/ / failed phone:t / failed spelling:cz',
  'oye' => 'oy / [oy^oy] / failed phone:oy / failed spelling:oy',
  'ozanich' => 'eh/z.ah/n.ih.h / [o^uh]/[z^z].[a^ah]/[n^n].[i^ih]. / failed phone:h / failed spelling:ch',
  'ozanne' => 'oh/z.ah.n / [o^oh]/[z^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'ozelle' => 'eh/z.eh.l / [o^uh]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'p' => 'p.ee / [p^p]. / failed phone:ee / failed spelling:',
  'paap' => 'p.aw.p / [p^p].[a^aw]. / failed phone:p / failed spelling:ap',
  'paape' => 'p.aw.p / [p^p].[a^aw]. / failed phone:p / failed spelling:ap',
  'paar' => 'p.aw.r / [p^p].[a^oh]. / failed phone:r / failed spelling:ar',
  'paasch' => 'p.aw.sh / [p^p].[a^aw]. / failed phone:sh / failed spelling:as',
  'paavola' => 'p.aw/v.oh/l.eh / [p^p].[a^aw]/ / failed phone:v / failed spelling:av',
  'paccione' => 'p.aw.k/ch.oh/n.ee / [p^p].[a^aw].[cc^k]/ / failed phone:t / failed spelling:io',
  'pacesetter' => 'p.ay/s.eh/t.er / [p^p].[a^ay]/[c^s].[e^eh]/ / failed phone:t / failed spelling:se',
  'pacholski' => 'p.eh/h.oh.l/s.k.ee / [p^p].[a^ah]/ / failed phone:h / failed spelling:ch',
  'paci' => 'p.aw/ch.ee / [p^p].[a^aw]/ / failed phone:t / failed spelling:ci',
  'pacifico' => 'p.aw/ch.ee/f.ee/k.oh / [p^p].[a^aw]/ / failed phone:t / failed spelling:ci',
  'pacini' => 'p.aw/ch.ee/n.ee / [p^p].[a^aw]/ / failed phone:t / failed spelling:ci',
  'packwood' => 'p.ah/kw.oo.d / [p^p].[a^ah]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'paczkowski' => 'p.eh.ch/k.aw.f/s.k.ee / [p^p].[a^ah]. / failed phone:t / failed spelling:cz',
  'paddled' => 'p.ah/d.eh.l.d / [p^p].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'paddles' => 'p.ah/d.eh.l.z / [p^p].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'paddling' => 'p.ah/d.eh/l.ih.ng / [p^p].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:li',
  'padget' => 'p.ah/j.ih.t / [p^p].[a^ah]/[d^j]. / failed phone:ih / failed spelling:ge',
  'padgett' => 'p.ah/j.ih.t / [p^p].[a^ah]/[d^j]. / failed phone:ih / failed spelling:ge',
  'padgitt' => 'p.ah/j.ih.t / [p^p].[a^ah]/[d^j]. / failed phone:ih / failed spelling:gi',
  'pae' => 'p.igh / [p^p]. / failed phone:igh / failed spelling:ae',
  'paean' => 'p.ee/eh.n / [p^p]. / failed phone:ee / failed spelling:ae',
  'paeans' => 'p.ee/eh.n.z / [p^p]. / failed phone:ee / failed spelling:ae',
  'paek' => 'p.ee.k / [p^p]. / failed phone:ee / failed spelling:ae',
  'paeth' => 'p.ee.th / [p^p]. / failed phone:ee / failed spelling:ae',
  'paetz' => 'p.ee.t.s / [p^p]. / failed phone:ee / failed spelling:ae',
  'paez' => 'p.igh/eh.z / [p^p]. / failed phone:igh / failed spelling:ae',
  'pah' => 'p.ah / [p^p].[a^ah] / failed phone:ah / failed spelling:ah',
  'pahl' => 'p.aw.l / [p^p].[a^aw]. / failed phone:l / failed spelling:hl',
  'paille' => 'p.ay.l / [p^p].[a^ay].[il^l] / failed phone:l / failed spelling:il',
  'pajak' => 'p.igh/eh.k / [p^p]. / failed phone:igh / failed spelling:aj',
  'palais' => 'p.eh/l.ay / [p^p].[a^ah]/[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'palazzi' => 'p.aw/l.aw.t/s.ee / [p^p].[a^aw]/[l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'palazzola' => 'p.aw/l.aw.t/s.oh/l.eh / [p^p].[a^aw]/[l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'palazzolo' => 'p.aw/l.aw.t/s.oh/l.oh / [p^p].[a^aw]/[l^l].[a^aw]. / failed phone:t / failed spelling:zz',
  'palecek' => 'p.aw/l.ih/ch.eh.k / [p^p].[a^aw]/[l^l].[e^ih]/ / failed phone:t / failed spelling:ce',
  'palme' => 'p.aw.m / [p^p].[a^aw].[lm^m] / failed phone:m / failed spelling:lm',
  'paluzzi' => 'p.aw/l.ue.t/s.ee / [p^p].[a^aw]/[l^l].[u^ue]. / failed phone:t / failed spelling:zz',
  'panagopoulos' => 'p.ah/n.eh/g.aw/p.eh/l.ih.s / [p^p].[a^ah]/[n^n].[a^ah]/[g^g].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'panciera' => 'p.aw.n/ch.ih/r.eh / [p^p].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'paniccia' => 'p.aw/n.ee/ch.eh / [p^p].[a^aw]/[n^n].[i^ee]/ / failed phone:t / failed spelling:cc',
  'pankki' => 'p.ah.ng/k.ee / [p^p].[a^ah].[n^ng]/[k^k]. / failed phone:ee / failed spelling:ki',
  'pantoja' => 'p.aw.n/t.oh/ye.eh / [p^p].[a^aw].[n^n]/[t^t].[o^oh]/ / failed phone:ue / failed spelling:ja',
  'panzhihua' => 'p.ah.n/z.ih/h.ye.ue/eh / [p^p].[a^ah].[n^n]/[z^z]. / failed phone:ih / failed spelling:hi',
  'pao' => 'p.ow / [p^p]. / failed phone:ow / failed spelling:ao',
  'paoli' => 'p.ow/l.ee / [p^p]. / failed phone:ow / failed spelling:ao',
  'paolo' => 'p.ow/l.oh / [p^p]. / failed phone:ow / failed spelling:ao',
  'paolucci' => 'p.aw/oh/l.ue/ch.ee / [p^p].[a^aw]/[o^oh]/[l^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'paparazzi' => 'p.ah/p.er/ah.t/s.ee / [p^p].[a^ah]/[p^p].[ar^er]/[a^ah]. / failed phone:t / failed spelling:zz',
  'papaya' => 'p.eh/p.igh/eh / [p^p].[a^ah]/[p^p]. / failed phone:igh / failed spelling:ay',
  'papayas' => 'p.eh/p.igh/eh.z / [p^p].[a^ah]/[p^p]. / failed phone:igh / failed spelling:ay',
  'papke' => 'p.ay.p.k / [p^p].[a^ay].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'paprocki' => 'p.eh/p.r.oh.t/s.k.ee / [p^p].[a^ah]/[p^p].[r^r].[o^oh]. / failed phone:t / failed spelling:ck',
  'parables' => 'p.air/eh/b.eh.l.z / [p^p].[ar^air]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'paradigm' => 'p.air/eh/d.igh.m / [p^p].[ar^air]/[a^ah]/[d^d].[i^igh]. / failed phone:m / failed spelling:gm',
  'paradigms' => 'p.air/eh/d.igh.m.z / [p^p].[ar^air]/[a^ah]/[d^d].[i^igh]. / failed phone:m / failed spelling:gm',
  'paradowski' => 'p.er/eh/d.aw.f/s.k.ee / [p^p].[ar^er]/[a^ah]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'paraguayan' => 'p.air/eh/g.w.igh/eh.n / [p^p].[ar^air]/[a^ah]/[g^g].[u^w]. / failed phone:igh / failed spelling:ay',
  'paramore' => 'p.eh/eh/m.aw.r / [p^p].[a^ah]/ / failed phone:eh / failed spelling:ra',
  'paraphernalia' => 'p.air/eh/f.eh/n.ay/l.ye.eh / [p^p].[ar^air]/[a^ah]/[ph^f].[e^eh]/ / failed phone:n / failed spelling:rn',
  'parde' => 'p.aw.r.d / [p^p].[a^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'parekh' => 'p.aw/r.ih.k / [p^p].[a^aw]/[r^r].[e^ih].[k^k] / failed phone:k / failed spelling:kh',
  'parikh' => 'p.ah/r.ih.k / [p^p].[a^ah]/[r^r].[i^ih].[k^k] / failed phone:k / failed spelling:kh',
  'parisienne' => 'p.er/ih/s.ee/eh.n / [p^p].[ar^er]/[i^ih]/[s^s].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'parke' => 'p.aw.r.k / [p^p].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'parkes' => 'p.aw.r.k.s / [p^p].[a^oh].[r^r].[k^k]. / failed phone:s / failed spelling:es',
  'parkway' => 'p.aw.r/kw.ay / [p^p].[a^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'parquet' => 'p.aw.r/k.ay / [p^p].[a^oh].[r^r]/[qu^k].[e^ay] / failed phone:ay / failed spelling:t',
  'particles' => 'p.aw.r/t.eh/k.eh.l.z / [p^p].[a^oh].[r^r]/[t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'partridges' => 'p.aw.r/t.r.ih/j.ih.z / [p^p].[a^oh].[r^r]/[t^t].[r^r].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'parzych' => 'p.aw.r/z.ih.h / [p^p].[a^oh].[r^r]/[z^z].[y^ih]. / failed phone:h / failed spelling:ch',
  'pasadena' => 'p.ah/s.eh/d.ee/n.er / [p^p].[a^ah]/[s^s].[a^ah]/[d^d].[e^ee]/[n^n]. / failed phone:er / failed spelling:a',
  'paschal' => 'p.ah/sh.eh.l / [p^p].[a^ah]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'paschall' => 'p.ah/sh.eh.l / [p^p].[a^ah]/[sc^sh]. / failed phone:eh / failed spelling:ha',
  'paschen' => 'p.ah/sh.eh.n / [p^p].[a^ah]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'paschke' => 'p.ah.sh.k / [p^p].[a^ah].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'pascucci' => 'p.aw/s.k.ue/ch.ee / [p^p].[a^aw]/[s^s].[c^k].[u^ue]/ / failed phone:t / failed spelling:cc',
  'pascuzzi' => 'p.aw/s.k.ue.t/s.ee / [p^p].[a^aw]/[s^s].[c^k].[u^ue]. / failed phone:t / failed spelling:zz',
  'pasion' => 'p.aw/zh.ee.n / [p^p].[a^aw]/[s^zh].[i^ee]. / failed phone:n / failed spelling:on',
  'paske' => 'p.ay.s.k / [p^p].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'pasteurization' => 'p.ah.s/ch.er/eh/z.ay/sh.eh.n / [p^p].[a^ah].[s^s]/[te^t]. / failed phone:sh / failed spelling:ur',
  'pasteurized' => 'p.ah.s/ch.er/igh.z.d / [p^p].[a^ah].[s^s]/[te^t]. / failed phone:sh / failed spelling:ur',
  'pastorius' => 'p.ah/s.t.aw/r.ee/ih.s / [p^p].[a^ah]/[s^s].[t^t].[o^aw]/[r^r].[i^ee]/ / failed phone:ih / failed spelling:us',
  'paszek' => 'p.aw/sh.eh.k / [p^p].[a^aw]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'paszkiewicz' => 'p.aw.sh/k.eh/v.ih.ch / [p^p].[a^aw].[s^sh]/ / failed phone:k / failed spelling:zk',
  'pasztor' => 'p.ah/s.t.er / [p^p].[a^ah]/[s^s]. / failed phone:t / failed spelling:zt',
  'patenaude' => 'p.ah/t.ih/n.oh.d / [p^p].[a^ah]/[t^t].[e^ih]/[n^n].[au^oh].[d^d] / failed phone:d / failed spelling:ud',
  'patricelli' => 'p.aw/t.r.ee/ch.eh/l.ee / [p^p].[a^aw]/[t^t].[r^r].[i^ee]/ / failed phone:t / failed spelling:cl',
  'patzke' => 'p.ah.t.z.k / [p^p].[a^ah].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'paulhus' => 'p.ow.l/h.ih.s / [p^p].[au^aw].[l^l]/[h^h]. / failed phone:ih / failed spelling:us',
  'paustian' => 'p.aw.z/ch.ih.n / [p^p].[au^aw].[s^z]/[t^ch].[i^ih]. / failed phone:n / failed spelling:an',
  'pautler' => 'p.ow/t.eh/l.er / [p^p].[au^aw]/[t^t]. / failed phone:eh / failed spelling:le',
  'pautsch' => 'p.ow.ch / [p^p].[au^aw].[t^t]. / failed phone:t / failed spelling:ts',
  'pavao' => 'p.aw/v.ow / [p^p].[a^aw]/[v^v]. / failed phone:ow / failed spelling:ao',
  'pavlicek' => 'p.aw/v.l.ih/ch.eh.k / [p^p].[a^aw]/[v^v].[l^l].[i^ih]/ / failed phone:t / failed spelling:ce',
  'pavlich' => 'p.aw/v.l.ih.h / [p^p].[a^aw]/[v^v].[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'pawelek' => 'p.aw/v.eh/l.eh.k / [p^p].[a^aw]/ / failed phone:v / failed spelling:we',
  'pawelski' => 'p.aw/v.eh.l/s.k.ee / [p^p].[a^aw]/ / failed phone:v / failed spelling:we',
  'pawlicki' => 'p.aw/v.l.ih.t/s.k.ee / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'pawlikowski' => 'p.aw/v.l.ih/k.aw.f/s.k.ee / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'pawloski' => 'p.aw/v.l.ow/s.k.ee / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'pawlowicz' => 'p.aw/v.l.eh/v.ih.ch / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'pawlowski' => 'p.aw/v.l.aw.f/s.k.ee / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'pawluk' => 'p.aw/v.l.eh.k / [p^p].[a^aw]/ / failed phone:v / failed spelling:wl',
  'payables' => 'p.ay/eh/b.eh.l.z / [p^p].[ay^ay]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'paye' => 'p.ay / [p^p].[a^ay] / failed phone:ay / failed spelling:ay',
  'payeur' => 'p.ay/er / [p^p].[a^ay]/ / failed phone:er / failed spelling:ye',
  'peake' => 'p.ee.k / [p^p].[ea^ee].[k^k] / failed phone:k / failed spelling:ak',
  'peakes' => 'p.ee.k.s / [p^p].[ea^ee].[k^k]. / failed phone:x / failed spelling:ak',
  'peay' => 'p.ee / [p^p].[e^ee] / failed phone:ee / failed spelling:ea',
  'pebbles' => 'p.eh/b.eh.l.z / [p^p].[e^eh]/[bb^b]. / failed phone:eh / failed spelling:le',
  'pebereau' => 'p.eh/b.er/oh / [p^p].[e^eh]/[b^b].[er^er]/ / failed phone:oh / failed spelling:ea',
  'pecci' => 'p.eh/ch.ee / [p^p].[e^eh]/ / failed phone:t / failed spelling:cc',
  'pecina' => 'p.eh/ch.ee/n.eh / [p^p].[e^eh]/ / failed phone:t / failed spelling:ci',
  'peckham' => 'p.eh/k.eh.m / [p^p].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kh',
  'peculiar' => 'p.eh/k.ye.ue/l.ye.er / [p^p].[e^eh]/[c^k].[u^ue]/[l^l]. / failed phone:er / failed spelling:ia',
  'peculiarly' => 'p.ih/k.ye.ue/l.ye.er/l.ee / [p^p].[e^ih]/[c^k].[u^ue]/[l^l]. / failed phone:er / failed spelling:ia',
  'peddled' => 'p.eh/d.eh.l.d / [p^p].[e^eh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'peddles' => 'p.eh/d.eh.l.z / [p^p].[e^eh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'peddling' => 'p.eh/d.eh/l.ih.ng / [p^p].[e^eh]/[dd^d]. / failed phone:eh / failed spelling:li',
  'peebles' => 'p.ee/b.eh.l.z / [p^p].[ee^ee]/[b^b]. / failed phone:eh / failed spelling:le',
  'peeples' => 'p.ee/p.eh.l.z / [p^p].[ee^ee]/[p^p]. / failed phone:eh / failed spelling:le',
  'pehl' => 'p.eh.l / [p^p].[e^eh]. / failed phone:l / failed spelling:hl',
  'peladeau' => 'p.eh/l.eh/d.oh / [p^p].[e^eh]/[l^l].[a^ah]/[d^d]. / failed phone:oh / failed spelling:ea',
  'pelczar' => 'p.eh.l/ch.er / [p^p].[e^eh].[l^l]/ / failed phone:t / failed spelling:cz',
  'pelham' => 'p.eh/l.eh.m / [p^p].[e^eh]/[l^l]. / failed phone:eh / failed spelling:ha',
  'pelle' => 'p.eh.l / [p^p].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'pellecchia' => 'p.eh/l.eh/k.ee/eh / [p^p].[e^eh]/[ll^l].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'pelletier' => 'p.eh/l.eh/t.ih.r / [p^p].[e^eh]/[ll^l].[e^eh]/[t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'pendleton' => 'p.eh.n/d.eh.l/t.eh.n / [p^p].[e^eh].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'pendyala' => 'p.eh/d.ye.aw/l.eh / [p^p].[e^eh]/ / failed phone:d / failed spelling:nd',
  'penh' => 'p.eh.n / [p^p].[e^eh].[n^n] / failed phone:n / failed spelling:nh',
  'penitentiary' => 'p.eh/n.ih/t.eh.n/ch.er/ee / [p^p].[e^eh]/[n^n].[i^ih]/[t^t].[e^eh].[n^n]/[t^t]. / failed phone:sh / failed spelling:ia',
  'penknife' => 'p.eh.n / [p^p].[e^eh].[n^n] / failed phone:n / failed spelling:nk',
  'pennacchio' => 'p.eh/n.aw/k.ee/oh / [p^p].[e^eh]/[nn^n].[a^aw]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'pennsylvania' => 'p.eh.n/s.eh.l/v.ay/n.ye.eh / [p^p].[e^eh].[nn^n]/[s^s].[y^eh].[l^l]/[v^v].[a^ay]/[n^n]. / failed phone:ue / failed spelling:ia',
  'peopled' => 'p.ee/p.eh.l.d / [p^p].[eo^ee]/[p^p]. / failed phone:eh / failed spelling:le',
  'peoples' => 'p.ee/p.eh.l.z / [p^p].[eo^ee]/[p^p]. / failed phone:eh / failed spelling:le',
  'pereira' => 'p.er/air/eh / [p^p].[er^er]/ / failed phone:air / failed spelling:ei',
  'pereyra' => 'p.er/air/eh / [p^p].[er^er]/ / failed phone:air / failed spelling:ey',
  'pergande' => 'p.er/g.ih.n.d / [p^p].[er^er]/[g^g].[a^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'perignon' => 'p.er/ih/n.ye.aw.n / [p^p].[er^er]/[i^ih]/[gn^n]. / failed phone:ye / failed spelling:on',
  'perkovic' => 'p.er/k.eh/v.ih.ch / [p^p].[er^er]/[k^k].[o^uh]/[v^v].[i^ih]. / failed phone:t / failed spelling:c',
  'perkowski' => 'p.er/k.aw.f/s.k.ee / [p^p].[er^er]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'perniciaro' => 'p.er/n.ee/ch.er/oh / [p^p].[er^er]/[n^n].[i^ee]/ / failed phone:t / failed spelling:ci',
  'pernod' => 'p.air/n.oh / [p^p].[er^air]/[n^n].[o^oh] / failed phone:oh / failed spelling:od',
  'perot' => 'p.er/oh / [p^p].[er^er]/[o^oh] / failed phone:oh / failed spelling:ot',
  'perpetuate' => 'p.er/p.eh/ch.eh/w.ay.t / [p^p].[er^er]/[p^p].[e^eh]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'perpetuated' => 'p.er/p.eh/ch.eh/w.ay/t.ih.d / [p^p].[er^er]/[p^p].[e^eh]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'perpetuates' => 'p.er/p.eh/ch.eh/w.ay.t.s / [p^p].[er^er]/[p^p].[e^eh]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'perpetuating' => 'p.er/p.eh/ch.eh/w.ay/t.ih.ng / [p^p].[er^er]/[p^p].[e^eh]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'perpetuation' => 'p.er/p.eh/ch.eh/w.ay/sh.eh.n / [p^p].[er^er]/[p^p].[e^eh]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:at',
  'perreault' => 'p.er/r.oh / [p^p].[er^er]/[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'perreira' => 'p.er/r.air/eh / [p^p].[er^er]/[r^r]. / failed phone:air / failed spelling:ei',
  'perschbacher' => 'p.er.sh/b.aw/k.er / [p^p].[er^er].[sc^sh]/ / failed phone:b / failed spelling:hb',
  'pertschuk' => 'p.er.t/ch.eh.k / [p^p].[er^er].[t^t]/ / failed phone:t / failed spelling:sc',
  'peruzzi' => 'p.er/ue.t/s.ee / [p^p].[er^er]/[u^ue]. / failed phone:t / failed spelling:zz',
  'pesce' => 'p.eh.s / [p^p].[e^eh].[sc^s] / failed phone:s / failed spelling:sc',
  'pesch' => 'p.eh.sh / [p^p].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'peschel' => 'p.eh/sh.eh.l / [p^p].[e^eh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'peschke' => 'p.eh.sh.k / [p^p].[e^eh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'pethtel' => 'p.eh/th.eh.l / [p^p].[e^eh]/[th^th]. / failed phone:eh / failed spelling:te',
  'petit' => 'p.eh/t.ee / [p^p].[e^eh]/[t^t].[i^ee] / failed phone:ee / failed spelling:it',
  'petkus' => 'p.eh.t/k.ih.s / [p^p].[e^eh].[t^t]/[k^k]. / failed phone:ih / failed spelling:us',
  'petrocelli' => 'p.eh/t.r.oh/ch.eh/l.ee / [p^p].[e^eh]/[t^t].[r^r].[o^oh]/ / failed phone:t / failed spelling:ce',
  'petropoulos' => 'p.ih/t.r.aw/p.eh/l.ih.s / [p^p].[e^ih]/[t^t].[r^r].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'petrossian' => 'p.eh/t.r.aw/z.eh.n / [p^p].[e^eh]/[t^t].[r^r].[o^aw]/[s^z]. / failed phone:eh / failed spelling:si',
  'petrowski' => 'p.ih/t.r.aw.f/s.k.ee / [p^p].[e^ih]/[t^t].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'petruccelli' => 'p.eh/t.r.ue/ch.eh/l.ee / [p^p].[e^eh]/[t^t].[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'petrucci' => 'p.eh/t.r.ue/ch.ee / [p^p].[e^eh]/[t^t].[r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'petrucelli' => 'p.eh/t.r.ue/ch.eh/l.ee / [p^p].[e^eh]/[t^t].[r^r].[u^ue]/ / failed phone:t / failed spelling:ce',
  'petruzzelli' => 'p.eh/t.r.ue.t/s.eh/l.ee / [p^p].[e^eh]/[t^t].[r^r].[u^ue]. / failed phone:t / failed spelling:zz',
  'petruzzi' => 'p.eh/t.r.ue.t/s.ee / [p^p].[e^eh]/[t^t].[r^r].[u^ue]. / failed phone:t / failed spelling:zz',
  'petsch' => 'p.eh.ch / [p^p].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'petsche' => 'p.eh.ch / [p^p].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'petzoldt' => 'p.eh.t/z.oh.l.t / [p^p].[e^eh].[t^t]/[z^z].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'peugeot' => 'p.ye.ue/zh.oh / [p^p].[eu^ue]/ / failed phone:zh / failed spelling:ge',
  'peugh' => 'p.ye.ue / [p^p].[eu^ue] / failed phone:ue / failed spelling:eu',
  'peyrelevade' => 'p.air/eh/l.eh/v.ay.d / [p^p]. / failed phone:air / failed spelling:ey',
  'pezzella' => 'p.eh.t/s.eh/l.eh / [p^p].[e^eh]. / failed phone:t / failed spelling:zz',
  'pezzullo' => 'p.eh.t/s.ue/l.oh / [p^p].[e^eh]. / failed phone:t / failed spelling:zz',
  'pfaff' => 'f.ah.f /  / failed phone:f / failed spelling:pf',
  'pfahl' => 'f.aw.l /  / failed phone:f / failed spelling:pf',
  'pfahler' => 'f.aw/l.er /  / failed phone:f / failed spelling:pf',
  'pfalzgraf' => 'f.ah.l.z/g.r.ah.f /  / failed phone:f / failed spelling:pf',
  'pfannenstiel' => 'f.ah/n.eh.n/s.t.ee.l /  / failed phone:f / failed spelling:pf',
  'pfarr' => 'f.aw.r /  / failed phone:f / failed spelling:pf',
  'pfau' => 'f.ow /  / failed phone:f / failed spelling:pf',
  'pfeffer' => 'f.eh/f.er /  / failed phone:f / failed spelling:pf',
  'pfefferkorn' => 'f.eh/f.er/k.aw.r.n /  / failed phone:f / failed spelling:pf',
  'pfefferle' => 'f.eh/f.er/eh.l /  / failed phone:f / failed spelling:pf',
  'pfeifer' => 'f.igh/f.er /  / failed phone:f / failed spelling:pf',
  'pfeiffer' => 'f.igh/f.er /  / failed phone:f / failed spelling:pf',
  'pfeifle' => 'f.igh/f.eh.l /  / failed phone:f / failed spelling:pf',
  'pfeil' => 'f.igh.l /  / failed phone:f / failed spelling:pf',
  'pfennig' => 'f.eh/n.ih.g /  / failed phone:f / failed spelling:pf',
  'pfennigs' => 'f.eh/n.ih.g.z /  / failed phone:f / failed spelling:pf',
  'pfenning' => 'f.eh/n.ih.ng /  / failed phone:f / failed spelling:pf',
  'pfenninger' => 'f.eh/n.ih.ng/er /  / failed phone:f / failed spelling:pf',
  'pfeuffer' => 'f.ye.ue/f.er /  / failed phone:f / failed spelling:pf',
  'pfiester' => 'f.igh/s.t.er /  / failed phone:f / failed spelling:pf',
  'pfiffner' => 'f.ih.f/n.er /  / failed phone:f / failed spelling:pf',
  'pfingsten' => 'f.ih.ng/s.t.eh.n /  / failed phone:f / failed spelling:pf',
  'pfister' => 'f.ih/s.t.er /  / failed phone:f / failed spelling:pf',
  'pfisterer' => 'f.ih/s.t.er/er /  / failed phone:f / failed spelling:pf',
  'pfizer' => 'f.igh/z.er /  / failed phone:f / failed spelling:pf',
  'pflaum' => 'f.l.ow.m /  / failed phone:f / failed spelling:pf',
  'pfleger' => 'f.l.ee/g.er /  / failed phone:f / failed spelling:pf',
  'pfleiderer' => 'f.l.igh/d.er/er /  / failed phone:f / failed spelling:pf',
  'pflieger' => 'f.l.ee/g.er /  / failed phone:f / failed spelling:pf',
  'pflueger' => 'f.l.ue/g.er /  / failed phone:f / failed spelling:pf',
  'pflug' => 'f.l.ue.g /  / failed phone:f / failed spelling:pf',
  'pfluger' => 'f.l.ue/g.er /  / failed phone:f / failed spelling:pf',
  'pflum' => 'f.l.uh.m /  / failed phone:f / failed spelling:pf',
  'pfohl' => 'f.oh.l /  / failed phone:f / failed spelling:pf',
  'pforzheimer' => 'f.aw.r.z/h.igh/m.er /  / failed phone:f / failed spelling:pf',
  'pfost' => 'f.aw.s.t /  / failed phone:f / failed spelling:pf',
  'pfund' => 'f.uh.n.d /  / failed phone:f / failed spelling:pf',
  'pfundstein' => 'f.uh.n.d/s.t.ee.n /  / failed phone:f / failed spelling:pf',
  'ph' => 'p.ee/ay.ch / [p^p]. / failed phone:ee / failed spelling:h',
  'pharaoh' => 'f.ay/r.oh / [ph^f].[a^ay]/[r^r].[a^oh] / failed phone:oh / failed spelling:ao',
  'pharaon' => 'f.air/oh.n / [ph^f].[ar^air]/[a^oh]. / failed phone:n / failed spelling:on',
  'pharoah' => 'f.ay/r.oh / [ph^f].[a^ay]/[r^r].[o^oh] / failed phone:oh / failed spelling:oa',
  'philhower' => 'f.ih/l.ow/er / [ph^f].[i^ih]/[l^l]. / failed phone:ow / failed spelling:ho',
  'phlcorp' => 'p.ee/ay/ch.eh.l/k.aw.r.p / [p^p]. / failed phone:ee / failed spelling:hl',
  'phoebe' => 'f.ee/b.ee / [ph^f]. / failed phone:ee / failed spelling:oe',
  'phoebus' => 'f.ee/b.eh.s / [ph^f]. / failed phone:ee / failed spelling:oe',
  'phoenicia' => 'f.eh/n.ee/sh.eh / [ph^f].[o^uh]/ / failed phone:n / failed spelling:en',
  'phoenician' => 'f.eh/n.ee/sh.eh.n / [ph^f].[o^uh]/ / failed phone:n / failed spelling:en',
  'phoenicians' => 'f.eh/n.ee/sh.eh.n.z / [ph^f].[o^uh]/ / failed phone:n / failed spelling:en',
  'phoenix' => 'f.ee/n.ih.k.s / [ph^f]. / failed phone:ee / failed spelling:oe',
  'phytoplankton' => 'f.igh/t.oh/p.l.ah.ng/t.eh.n / [ph^f].[y^igh]/[t^t].[o^oh]/[p^p].[l^l].[a^ah].[n^ng]/ / failed phone:t / failed spelling:kt',
  'piacente' => 'p.ee/aw/ch.eh.n/t.ee / [p^p].[i^ee]/[a^aw]/ / failed phone:t / failed spelling:ce',
  'piacentini' => 'p.ee/aw/ch.eh.n/t.ee/n.ee / [p^p].[i^ee]/[a^aw]/ / failed phone:t / failed spelling:ce',
  'piaget' => 'p.ee/eh/z.ay / [p^p].[i^ee]/[a^ah]/ / failed phone:z / failed spelling:ge',
  'piascik' => 'p.ee/eh.s/ch.ih.k / [p^p].[i^ee]/[a^ah].[sc^s]/ / failed phone:t / failed spelling:ik',
  'piasecki' => 'p.ee/eh/s.eh.t/s.k.ee / [p^p].[i^ee]/[a^ah]/[s^s].[e^eh]. / failed phone:t / failed spelling:ck',
  'piatkowski' => 'p.ee/eh.t/k.aw.f/s.k.ee / [p^p].[i^ee]/[a^ah].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'picayune' => 'p.ih/k.ee/ye.ue.n / [p^p].[i^ih]/[c^k]. / failed phone:ee / failed spelling:ay',
  'picchi' => 'p.ih/k.ee / [p^p].[i^ih]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'picciano' => 'p.ee/ch.ee/aw/n.oh / [p^p].[i^ee]/ / failed phone:t / failed spelling:cc',
  'piccinini' => 'p.ee/ch.ee/n.ee/n.ee / [p^p].[i^ee]/ / failed phone:t / failed spelling:cc',
  'piccione' => 'p.ee.k/ch.oh/n.ee / [p^p].[i^ee].[cc^k]/ / failed phone:t / failed spelling:io',
  'piccirilli' => 'p.ee/ch.ih/r.ee/l.ee / [p^p].[i^ee]/ / failed phone:t / failed spelling:cc',
  'piccirillo' => 'p.ee/ch.ih/r.ih/l.oh / [p^p].[i^ee]/ / failed phone:t / failed spelling:cc',
  'piche' => 'p.ih.ch / [p^p].[i^ih].[ch^ch] / failed phone:t / failed spelling:ch',
  'pichler' => 'p.ih/k.eh/l.er / [p^p].[i^ih]/[ch^k]. / failed phone:eh / failed spelling:le',
  'pickled' => 'p.ih/k.eh.l.d / [p^p].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'pickler' => 'p.ih/k.eh/l.er / [p^p].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'pickles' => 'p.ih/k.eh.l.z / [p^p].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'pickwick' => 'p.ih/kw.ih.k / [p^p].[i^ih]/[ck^kw]. / failed phone:ih / failed spelling:wi',
  'pickworth' => 'p.ih/kw.er.th / [p^p].[i^ih]/[ck^kw]. / failed phone:er / failed spelling:wo',
  'picower' => 'p.ih/k.ow.r / [p^p].[i^ih]/[c^k].[ow^ow]. / failed phone:r / failed spelling:er',
  'piddles' => 'p.ih/d.eh.l.z / [p^p].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'piddling' => 'p.ih/d.eh/l.ih.ng / [p^p].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:li',
  'pidgeon' => 'p.ih.d/j.ih.n / [p^p].[i^ih].[d^d]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'piechocki' => 'p.ee/h.oh.t/s.k.ee / [p^p].[ie^ee]/ / failed phone:h / failed spelling:ch',
  'piechota' => 'p.ee/h.oh/t.eh / [p^p].[ie^ee]/ / failed phone:h / failed spelling:ch',
  'piechowski' => 'p.ee/h.aw.f/s.k.ee / [p^p].[ie^ee]/ / failed phone:h / failed spelling:ch',
  'pieczynski' => 'p.ee/ch.ih.n/s.k.ee / [p^p].[ie^ee]/ / failed phone:t / failed spelling:cz',
  'piedboeuf' => 'p.ee.d/b.uh.f / [p^p].[ie^ee].[d^d]/[b^b].[o^uh]. / failed phone:f / failed spelling:eu',
  'piehl' => 'p.ee.l / [p^p].[ie^ee]. / failed phone:l / failed spelling:hl',
  'pier' => 'p.ih.r / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pieraccini' => 'p.ih/r.eh/ch.ee/n.ee / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierce' => 'p.ih.r.s / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierceall' => 'p.ih.r/s.ee.l / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierced' => 'p.ih.r.s.t / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'piercey' => 'p.ih.r/s.ee / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'piercing' => 'p.ih.r/s.ih.ng / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'piercy' => 'p.ih.r/k.ee / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierette' => 'p.ih/r.eh.t / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierini' => 'p.ih/r.ee/n.ee / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierman' => 'p.ih.r/m.eh.n / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pieroni' => 'p.ih/r.oh/n.ee / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierotti' => 'p.ih/r.oh/t.ee / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierpoint' => 'p.ih.r/p.oy.n.t / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierpont' => 'p.ih.r/p.aw.n.t / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierre' => 'p.ee/air / [p^p].[i^ee]/[er^air] / failed phone:air / failed spelling:rr',
  'pierrelouis' => 'p.ih/r.ih.l/w.ee.z / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierrepont' => 'p.ih/r.ay/p.oh.n.t / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierro' => 'p.ih/r.oh / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'pierron' => 'p.ih/r.aw.n / [p^p].[i^ih]/ / failed phone:r / failed spelling:er',
  'piers' => 'p.ih.r.z / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'piersall' => 'p.ih.r/s.eh.l / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'piersol' => 'p.ih.r/s.aw.l / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pierson' => 'p.ih.r/s.eh.n / [p^p].[i^ih]. / failed phone:r / failed spelling:er',
  'pietrowski' => 'p.ee/t.r.aw.f/s.k.ee / [p^p].[ie^ee]/[t^t].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'pietruszka' => 'p.ee/t.r.uh.sh/k.eh / [p^p].[ie^ee]/[t^t].[r^r].[u^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'pietsch' => 'p.ee.ch / [p^p].[ie^ee].[t^t]. / failed phone:t / failed spelling:ts',
  'pih' => 'p.ih / [p^p].[i^ih] / failed phone:ih / failed spelling:ih',
  'pihl' => 'p.ih.l / [p^p].[i^ih]. / failed phone:l / failed spelling:hl',
  'pileggi' => 'p.ih/l.eh/j.ee / [p^p].[i^ih]/[l^l].[e^eh]/[g^j]. / failed phone:ee / failed spelling:gi',
  'pille' => 'p.ih.l / [p^p].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'pimples' => 'p.ih.m/p.eh.l.z / [p^p].[i^ih].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'pineapples' => 'p.igh/n.ah/p.eh.l.z / [p^p].[i^igh]/[ne^n].[a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'pineiro' => 'p.ee/n.air/oh / [p^p].[i_e^ee]/[n^n]. / failed phone:air / failed spelling:ir',
  'pinheiro' => 'p.ee.n/h.air/oh / [p^p].[i^ee].[n^n]/[h^h]. / failed phone:air / failed spelling:ei',
  'pinkowski' => 'p.ih.ng/k.aw.f/s.k.ee / [p^p].[i^ih].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'pinkwater' => 'p.ih.ng/kw.aw/t.er / [p^p].[i^ih].[n^ng]/ / failed phone:kw / failed spelling:kw',
  'pinocchio' => 'p.ih/n.oh/k.ee/oh / [p^p].[i^ih]/[n^n].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'pinochet' => 'p.ih/n.eh/sh.ay / [p^p].[i^ih]/[n^n].[o^uh]/[ch^sh].[e^ay] / failed phone:ay / failed spelling:he',
  'piontkowski' => 'p.ee/oh.n.t/k.aw.f/s.k.ee / [p^p].[i^ee]/[o^oh].[n^n].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'piorkowski' => 'p.ee/aw.r/k.aw.f/s.k.ee / [p^p].[i^ee]/[o^oh].[r^r]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'piotrowski' => 'p.ee/oh/t.r.aw.f/s.k.ee / [p^p].[i^ee]/[o^oh]/[t^t].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'pirkl' => 'p.er/k.eh.l / [p^p].[ir^er]/[k^k]. / failed phone:eh / failed spelling:l',
  'pischel' => 'p.ih/sh.eh.l / [p^p].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'pischke' => 'p.ih.sh.k / [p^p].[i^ih].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'pisciotta' => 'p.ee.s/ch.oh/t.eh / [p^p].[i^ee].[sc^s]/ / failed phone:t / failed spelling:io',
  'piscitelli' => 'p.ee.s/ch.ee/t.eh/l.ee / [p^p].[i^ee].[sc^s]/ / failed phone:t / failed spelling:it',
  'pitchblende' => 'p.ih.ch/b.l.eh.n.d / [p^p].[i^ih].[t^t].[ch^sh]/[b^b].[l^l].[e^eh].[n^n]. / failed phone:n / failed spelling:nd',
  'pitsch' => 'p.ih.ch / [p^p].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'pizza' => 'p.ee.t/s.eh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzano' => 'p.ee.t/s.aw/n.oh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzas' => 'p.ee.t/s.eh.z / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzeria' => 'p.ee.t/s.er/ee/eh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzerias' => 'p.ee.t/s.er/ee/eh.z / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzimenti' => 'p.ee.t/s.ee/m.eh.n/t.ee / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzino' => 'p.ee.t/s.ee/n.oh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzitola' => 'p.ee.t/s.ee/t.oh/l.eh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzolato' => 'p.ee.t/s.oh/l.aw/t.oh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzuti' => 'p.ee.t/s.ue/t.ee / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'pizzuto' => 'p.ee.t/s.ue/t.oh / [p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'placek' => 'p.l.aw/ch.eh.k / [p^p].[l^l].[a^aw]/ / failed phone:t / failed spelling:ce',
  'placencia' => 'p.l.aw/ch.eh.n/ch.eh / [p^p].[l^l].[a^aw]/ / failed phone:t / failed spelling:ce',
  'placida' => 'p.l.aw/ch.ee/d.eh / [p^p].[l^l].[a^aw]/ / failed phone:t / failed spelling:ci',
  'placido' => 'p.l.aw/ch.ih/d.oh / [p^p].[l^l].[a^aw]/ / failed phone:t / failed spelling:ci',
  'placke' => 'p.l.ah.k / [p^p].[l^l].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'placzek' => 'p.l.aw/ch.eh.k / [p^p].[l^l].[a^aw]/ / failed phone:t / failed spelling:cz',
  'plagge' => 'p.l.ah.g / [p^p].[l^l].[a^ah].[gg^g] / failed phone:g / failed spelling:gg',
  'plagiarism' => 'p.l.ay/j.er/ih/z.eh.m / [p^p].[l^l].[a^ay]/[g^j]. / failed phone:er / failed spelling:ia',
  'plaia' => 'p.l.aw/ye.eh / [p^p].[l^l].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'plaid' => 'p.l.ah.d / [p^p].[l^l].[a^ah]. / failed phone:d / failed spelling:id',
  'plainclothes' => 'p.l.ay.n/k.l.oh.z / [p^p].[l^l].[ai^ay].[n^n]/[c^k].[l^l].[o^oh]. / failed phone:z / failed spelling:th',
  'plainview' => 'p.l.ay.n/v.ye.ue / [p^p].[l^l].[ai^ay].[n^n]/[v^v]. / failed phone:ue / failed spelling:ie',
  'plascencia' => 'p.l.aw.s/ch.eh.n/ch.eh / [p^p].[l^l].[a^aw].[sc^s]/ / failed phone:t / failed spelling:en',
  'plasencia' => 'p.l.aw/s.eh.n/ch.eh / [p^p].[l^l].[a^aw]/[s^s].[e^eh].[n^n]/ / failed phone:t / failed spelling:ci',
  'plasse' => 'p.l.ah.s / [p^p].[l^l].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'platinum' => 'p.l.ah.t/n.eh.m / [p^p].[l^l].[a^ah].[t^t]/ / failed phone:n / failed spelling:in',
  'plauche' => 'p.l.aw.ch / [p^p].[l^l].[au^aw].[ch^ch] / failed phone:t / failed spelling:ch',
  'playa' => 'p.l.igh/eh / [p^p].[l^l]. / failed phone:igh / failed spelling:ay',
  'pleasantville' => 'p.l.eh/z.eh.n.t/v.ih.l / [p^p].[le^l].[a^ah]/[s^z].[a^ah].[n^n].[t^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'pledges' => 'p.l.eh/j.ih.z / [p^p].[l^l].[e^eh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'pledging' => 'p.l.eh/j.ih.ng / [p^p].[l^l].[e^eh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'pletscher' => 'p.l.eh/ch.er / [p^p].[l^l].[e^eh]/[t^t].[sc^sh]. / failed phone:er / failed spelling:he',
  'plisetskaya' => 'p.l.ih/s.eh.t/s.k.igh/eh / [p^p].[l^l].[i^ih]/[s^s].[e^eh].[t^t]/[s^s].[k^k]. / failed phone:igh / failed spelling:ay',
  'plocek' => 'p.l.oh/ch.eh.k / [p^p].[l^l].[o^oh]/ / failed phone:t / failed spelling:ce',
  'plouffe' => 'p.l.oh.f / [p^p].[l^l].[ou^oh].[ff^f] / failed phone:f / failed spelling:ff',
  'plourde' => 'p.l.aw.r.d / [p^p].[l^l].[ou^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'plucinski' => 'p.l.eh/ch.ih.n/s.k.ee / [p^p].[l^l].[u^uh]/ / failed phone:t / failed spelling:ci',
  'pm' => 'p.ee/eh.m / [p^p]. / failed phone:ee / failed spelling:m',
  'pneumatics' => 'n.oo/m.ah/t.ih.k.s / [pn^n]. / failed phone:oo / failed spelling:eu',
  'pneumonia' => 'n.ue/m.oh/n.ye.eh / [pn^n].[eu^ue]/[m^m].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'poarch' => 'p.aw.r.h / [p^p].[oa^oh].[r^r]. / failed phone:h / failed spelling:ch',
  'poche' => 'p.aw.ch / [p^p].[o^aw].[ch^ch] / failed phone:t / failed spelling:ch',
  'pociask' => 'p.eh/ch.ee/eh.s.k / [p^p].[o^uh]/ / failed phone:t / failed spelling:ci',
  'pocius' => 'p.oh/s.ee/ih.s / [p^p].[o^oh]/[c^s].[i^ee]/ / failed phone:ih / failed spelling:us',
  'poclain' => 'p.aw/k.l.ih.n / [p^p].[o^aw]/[c^k].[l^l].[a^ih]. / failed phone:n / failed spelling:in',
  'podgorski' => 'p.aw/j.aw.r/s.k.ee / [p^p].[o^aw]/[d^j]. / failed phone:oh / failed spelling:go',
  'podgurski' => 'p.aw/j.er/s.k.ee / [p^p].[o^aw]/[d^j]. / failed phone:er / failed spelling:gu',
  'podunk' => 'p.oh/t.eh.ng.k / [p^p].[o^oh]/ / failed phone:t / failed spelling:du',
  'poehl' => 'p.oh.l / [p^p].[o^oh]. / failed phone:l / failed spelling:eh',
  'poehler' => 'p.oh/l.er / [p^p].[o^oh]/ / failed phone:l / failed spelling:eh',
  'poehlman' => 'p.oh.l/m.eh.n / [p^p].[o^oh]. / failed phone:l / failed spelling:eh',
  'poeschel' => 'p.oh/sh.eh.l / [p^p].[oe^oh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'poeschl' => 'p.oh/s.k.eh.l / [p^p].[oe^oh]/[s^s].[ch^k]. / failed phone:eh / failed spelling:l',
  'pofahl' => 'p.aw/f.aw.l / [p^p].[o^aw]/[f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'poggi' => 'p.aw/j.ee / [p^p].[o^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'poggioli' => 'p.oh/j.oh/l.ee / [p^p].[o^oh]/[g^j]. / failed phone:oh / failed spelling:gi',
  'poignancy' => 'p.oy/n.ye.eh.n/s.ee / [p^p].[oi^oy]/[gn^n]. / failed phone:ue / failed spelling:an',
  'poignant' => 'p.oy/n.ye.eh.n.t / [p^p].[oi^oy]/[gn^n]. / failed phone:ue / failed spelling:an',
  'poignantly' => 'p.oy/n.ye.eh.n.t/l.ee / [p^p].[oi^oy]/[gn^n]. / failed phone:ue / failed spelling:an',
  'pokeweed' => 'p.oh/kw.ee.d / [p^p].[o^oh]/ / failed phone:kw / failed spelling:ke',
  'polacek' => 'p.aw/l.eh/ch.eh.k / [p^p].[o^aw]/[l^l].[a^ah]/ / failed phone:t / failed spelling:ce',
  'polakowski' => 'p.eh/l.eh/k.aw.f/s.k.ee / [p^p].[o^uh]/[l^l].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'polhamus' => 'p.oh.l/h.eh/m.ih.s / [p^p].[o^oh].[l^l]/[h^h].[a^ah]/[m^m]. / failed phone:ih / failed spelling:us',
  'polizzi' => 'p.oh/l.ee.t/s.ee / [p^p].[o^oh]/[l^l].[i^ee]. / failed phone:t / failed spelling:zz',
  'polysaccharide' => 'p.aw/l.ih/s.ah/k.er/igh.d / [p^p].[o^aw]/[l^l].[y^ih]/[s^s].[a^ah]/[cc^k]. / failed phone:er / failed spelling:ha',
  'polysaccharides' => 'p.aw/l.ih/s.ah/k.er/igh.d.z / [p^p].[o^aw]/[l^l].[y^ih]/[s^s].[a^ah]/[cc^k]. / failed phone:er / failed spelling:ha',
  'poniatowski' => 'p.eh/n.ee/eh/t.aw.f/s.k.ee / [p^p].[o^uh]/[n^n].[i^ee]/[a^ah]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'ponsolle' => 'p.aw.n/s.oh.l / [p^p].[o^aw].[n^n]/[s^s].[o^oh].[ll^l] / failed phone:l / failed spelling:ll',
  'pontious' => 'p.oh.n/sh.ih.s / [p^p].[o^oh].[n^n]/[t^sh].[i^ih]. / failed phone:s / failed spelling:ou',
  'pontius' => 'p.aw.n/t.ee/ih.s / [p^p].[o^aw].[n^n]/[t^t].[i^ee]/ / failed phone:ih / failed spelling:us',
  'poodles' => 'p.ue/d.eh.l.z / [p^p].[oo^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'pooh' => 'p.ue / [p^p].[oo^ue] / failed phone:ue / failed spelling:oo',
  'poohed' => 'p.ue.d / [p^p].[oo^ue]. / failed phone:d / failed spelling:he',
  'popieluszko' => 'p.oh/p.ee/eh/l.uh/s.k.oh / [p^p].[o^oh]/[p^p].[i^ee]/[e^eh]/[l^l].[u^uh]/[s^s]. / failed phone:k / failed spelling:zk',
  'poplawski' => 'p.eh/p.l.aw.f/s.k.ee / [p^p].[o^uh]/[p^p].[l^l].[a^aw]. / failed phone:f / failed spelling:ws',
  'popowski' => 'p.eh/p.aw.f/s.k.ee / [p^p].[o^uh]/[p^p].[o^aw]. / failed phone:f / failed spelling:ws',
  'porcella' => 'p.aw.r/ch.eh/l.eh / [p^p].[o^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'porcelli' => 'p.aw.r/ch.eh/l.ee / [p^p].[o^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'porcello' => 'p.aw.r/ch.eh/l.oh / [p^p].[o^oh].[r^r]/ / failed phone:t / failed spelling:ce',
  'porche' => 'p.aw.r.ch / [p^p].[o^oh].[r^r].[ch^ch] / failed phone:t / failed spelling:ch',
  'porpoises' => 'p.aw.r/p.eh/s.eh.z / [p^p].[o^oh].[r^r]/[p^p].[o^uh]/ / failed phone:s / failed spelling:is',
  'porsche' => 'p.aw.r/sh.eh / [p^p].[o^oh].[r^r]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'porsches' => 'p.aw.r/sh.ih.z / [p^p].[o^oh].[r^r]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'portables' => 'p.aw.r/t.eh/b.eh.l.z / [p^p].[o^oh].[r^r]/[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'porteous' => 'p.aw.r/t.ee/ih.s / [p^p].[o^oh].[r^r]/[t^t].[eo^ee]/ / failed phone:ih / failed spelling:us',
  'posch' => 'p.aw.sh / [p^p].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'posluszny' => 'p.eh/s.l.uh/sh.n.ee / [p^p].[o^uh]/[s^s].[l^l].[u^uh]/[s^sh]. / failed phone:n / failed spelling:zn',
  'possehl' => 'p.aw/s.eh.l / [p^p].[o^aw]/[ss^s].[e^eh]. / failed phone:l / failed spelling:hl',
  'possess' => 'p.eh/z.eh.s / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possessed' => 'p.eh/z.eh.s.t / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possesses' => 'p.eh/z.eh/s.eh.z / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possessing' => 'p.eh/z.eh/s.ih.ng / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possession' => 'p.eh/z.eh/sh.eh.n / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possessions' => 'p.eh/z.eh/sh.eh.n.z / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possessive' => 'p.eh/z.eh/s.ih.v / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possessor' => 'p.eh/z.eh/s.er / [p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'possiblity' => 'p.aw/s.eh/b.ih/l.eh/t.ee / [p^p].[o^aw]/[ss^s].[i^ih]/[b^b]. / failed phone:ih / failed spelling:li',
  'postgraduate' => 'p.oh.s.t/g.r.ah/j.eh/w.eh.t / [p^p].[o^oh].[s^s].[t^t]/[g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'posthumous' => 'p.aw.s/ch.oo/m.eh.s / [p^p].[o^aw].[s^s]/[t^t]. / failed phone:sh / failed spelling:hu',
  'posthumously' => 'p.aw.s/ch.oo/m.eh/s.l.ee / [p^p].[o^aw].[s^s]/[t^t]. / failed phone:sh / failed spelling:hu',
  'postindustrial' => 'p.oh/s.t.eh.n/d.uh.s.t.r/ye.eh.l / [p^p].[o^oh]/[s^s].[t^t].[i^ih].[n^n]/[d^d].[u^uh].[s^s].[t^t].[r^r]/ / failed phone:ue / failed spelling:ia',
  'postipankki' => 'p.aw/s.t.ih/p.ah.ng/k.ee / [p^p].[o^aw]/[s^s].[t^t].[i^ih]/[p^p].[a^ah].[n^ng]/[k^k]. / failed phone:ee / failed spelling:ki',
  'postrelle' => 'p.oh/s.t.r.eh.l / [p^p].[o^oh]/[s^s].[t^t].[r^r].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'postscript' => 'p.oh/s.k.r.ih.p.t / [p^p].[o^oh]/[st^s]. / failed phone:k / failed spelling:sc',
  'postscripts' => 'p.oh/s.k.r.ih.p.t.s / [p^p].[o^oh]/[st^s]. / failed phone:k / failed spelling:sc',
  'potocki' => 'p.eh/t.oh.t/s.k.ee / [p^p].[o^uh]/[t^t].[o^oh]. / failed phone:t / failed spelling:ck',
  'potpourri' => 'p.oh/p.oo/r.ee / [p^p].[o^oh]/ / failed phone:p / failed spelling:tp',
  'potthast' => 'p.aw/th.eh.s.t / [p^p].[o^aw]/ / failed phone:th / failed spelling:tt',
  'potucek' => 'p.aw/t.eh/ch.eh.k / [p^p].[o^aw]/[t^t].[u^uh]/ / failed phone:t / failed spelling:ce',
  'poughkeepsie' => 'p.eh/k.ih.p/s.ee / [p^p].[o^uh]/ / failed phone:k / failed spelling:ug',
  'poulin' => 'p.ue/l.ah.n / [p^p].[ou^ue]/[l^l]. / failed phone:ah / failed spelling:in',
  'pouliot' => 'p.ue/l.ee/oh / [p^p].[ou^ue]/[l^l].[i^ee]/[o^oh] / failed phone:oh / failed spelling:ot',
  'poulos' => 'p.eh/l.ee.s / [p^p].[ou^eh]/[l^l]. / failed phone:ee / failed spelling:os',
  'poussaint' => 'p.ue/s.aw.n.t / [p^p].[ou^ue]/[ss^s].[a^aw]. / failed phone:n / failed spelling:in',
  'powe' => 'p.ow / [p^p].[ow^ow] / failed phone:ow / failed spelling:ow',
  'powercise' => 'p.ow.r/s.igh.z / [p^p].[ow^ow]. / failed phone:r / failed spelling:er',
  'powerfully' => 'p.ow/er/f.l.ee / [p^p].[ow^ow]/[er^er]/[f^f]. / failed phone:l / failed spelling:ul',
  'powerpc' => 'p.ow/er/p.ee/s.ee / [p^p].[ow^ow]/[er^er]/[p^p]. / failed phone:ee / failed spelling:c',
  'powerpcs' => 'p.ow/er/p.ee/s.ee.z / [p^p].[ow^ow]/[er^er]/[p^p]. / failed phone:ee / failed spelling:cs',
  'powertrain' => 'p.ow.r/t.r.ay.n / [p^p].[ow^ow]. / failed phone:r / failed spelling:er',
  'powles' => 'p.ow/eh.l.z / [p^p].[ow^ow]/ / failed phone:eh / failed spelling:le',
  'ppm' => 'p.ee/p.ee/eh.m / [p^p]. / failed phone:ee / failed spelling:pm',
  'praetor' => 'p.r.ee/t.er / [p^p].[r^r]. / failed phone:ee / failed spelling:ae',
  'praetorian' => 'p.r.ee/t.aw/r.ee/eh.n / [p^p].[r^r]. / failed phone:ee / failed spelling:ae',
  'prahl' => 'p.r.aw.l / [p^p].[r^r].[a^aw]. / failed phone:l / failed spelling:hl',
  'pralle' => 'p.r.ay.l / [p^p].[r^r].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'prattville' => 'p.r.ah.t/v.ih.l / [p^p].[r^r].[a^ah].[tt^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'prayer' => 'p.r.air / [p^p].[r^r]. / failed phone:air / failed spelling:ay',
  'prayers' => 'p.r.air.z / [p^p].[r^r]. / failed phone:air / failed spelling:ay',
  'prechtl' => 'p.r.eh.k/t.eh.l / [p^p].[r^r].[e^eh].[ch^k]/[t^t]. / failed phone:eh / failed spelling:l',
  'preciado' => 'p.r.eh/ch.aw/d.oh / [p^p].[r^r].[e^eh]/ / failed phone:t / failed spelling:ci',
  'precis' => 'p.r.ay/s.ee / [p^p].[r^r].[e^ay]/[c^s].[i^ee] / failed phone:ee / failed spelling:is',
  'preexist' => 'p.r.ee/ih.g/z.ih.s.t / [p^p].[r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xi',
  'preexisted' => 'p.r.ee/ih.g/z.ih/s.t.ih.d / [p^p].[r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xi',
  'preexisting' => 'p.r.ee/ih.g/z.ih/s.t.ih.ng / [p^p].[r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xi',
  'preexists' => 'p.r.ee/ih.g/z.ih.s.t.s / [p^p].[r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xi',
  'preisler' => 'p.r.igh/s.eh/l.er / [p^p].[r^r].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'prejudgment' => 'p.r.ee/j.uh.j/m.eh.n.t / [p^p].[r^r].[e^ee]/[j^j].[u^uh].[d^j]/ / failed phone:m / failed spelling:gm',
  'premier' => 'p.r.eh/m.ih.r / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'premiere' => 'p.r.eh/m.ih.r / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'premiered' => 'p.r.eh/m.ih.r.d / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'premieres' => 'p.r.eh/m.ih.r.z / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'premiering' => 'p.r.eh/m.ih/r.ih.ng / [p^p].[r^r].[e^eh]/[m^m].[i^ih]/ / failed phone:r / failed spelling:er',
  'premiers' => 'p.r.eh/m.ih.r.z / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'premiership' => 'p.r.eh/m.ih.r/sh.ih.p / [p^p].[r^r].[e^eh]/[m^m].[i^ih]. / failed phone:r / failed spelling:er',
  'preponderance' => 'p.r.ee/p.aw.n/d.r.eh.n.s / [p^p].[r^r].[e^ee]/[p^p].[o^aw].[n^n]/[d^d]. / failed phone:r / failed spelling:er',
  'preschel' => 'p.r.eh/sh.eh.l / [p^p].[r^r].[e^eh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'prescher' => 'p.r.eh/sh.er / [p^p].[r^r].[e^eh]/[sc^sh]. / failed phone:er / failed spelling:he',
  'presler' => 'p.r.eh/s.eh/l.er / [p^p].[r^r].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'presse' => 'p.r.eh.s / [p^p].[r^r].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'prestia' => 'p.r.eh.s/t.ye.eh / [p^p].[r^r].[e^eh].[s^s]/[t^t]. / failed phone:ue / failed spelling:ia',
  'prestige' => 'p.r.eh/s.t.ee.zh / [p^p].[r^r].[e^eh]/[s^s].[t^t].[i^ee]. / failed phone:zh / failed spelling:g',
  'presumptuous' => 'p.r.ih/z.uh.m.p/ch.eh/w.eh.s / [p^p].[r^r].[e^ih]/[s^z].[u^uh].[m^m].[p^p]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:ou',
  'preszler' => 'p.r.eh/s.l.er / [p^p].[r^r].[e^eh]/[s^s]. / failed phone:l / failed spelling:zl',
  'preternatural' => 'p.r.ee/t.er/n.ah.t/ch.er/eh.l / [p^p].[r^r].[e^ee]/[te^t].[r^er]/[n^n].[a^ah].[t^t]/ / failed phone:t / failed spelling:ur',
  'preusser' => 'p.r.oy/s.er / [p^p].[r^r]. / failed phone:oy / failed spelling:eu',
  'preview' => 'p.r.ee/v.ye.ue / [p^p].[r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'previewed' => 'p.r.ee/v.ye.ue.d / [p^p].[r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'previewing' => 'p.r.ee/v.ye.ue/ih.ng / [p^p].[r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'previews' => 'p.r.ee/v.ye.ue.z / [p^p].[r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'pricklebacks' => 'p.r.ih/k.eh.l/b.ah.k.s / [p^p].[r^r].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'prideaux' => 'p.r.ih/d.oh / [p^p].[r^r].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'pridgen' => 'p.r.ih/j.eh.n / [p^p].[r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'pridgeon' => 'p.r.ih.d/j.ih.n / [p^p].[r^r].[i^ih].[d^d]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'priebe' => 'p.r.ee.b / [p^p].[r^r].[ie^ee].[b^b] / failed phone:b / failed spelling:be',
  'prigge' => 'p.r.ih.g / [p^p].[r^r].[i^ih].[gg^g] / failed phone:g / failed spelling:gg',
  'primeau' => 'p.r.ih/m.oh / [p^p].[r^r].[i^ih]/[m^m]. / failed phone:oh / failed spelling:ea',
  'primeaux' => 'p.r.ih/m.oh / [p^p].[r^r].[i^ih]/[m^m]. / failed phone:oh / failed spelling:ea',
  'princeville' => 'p.r.ih.n/s.v.ih.l / [p^p].[r^r].[i^ih].[n^n]/[ce^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'principato' => 'p.r.ee.n/ch.ee/p.aw/t.oh / [p^p].[r^r].[i^ee].[n^n]/ / failed phone:t / failed spelling:ci',
  'principe' => 'p.r.ee.n/ch.ee/p.ee / [p^p].[r^r].[i^ee].[n^n]/ / failed phone:t / failed spelling:ci',
  'principled' => 'p.r.ih.n/s.eh/p.eh.l.d / [p^p].[r^r].[i^ih].[n^n]/[c^s].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'principles' => 'p.r.ih.n/s.eh/p.eh.l.z / [p^p].[r^r].[i^ih].[n^n]/[c^s].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'prindiville' => 'p.r.ee.n/d.ee/v.ih.l / [p^p].[r^r].[i^ee].[n^n]/[d^d].[i^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'prindl' => 'p.r.ih.n/d.eh.l / [p^p].[r^r].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'pritzl' => 'p.r.ih.t/z.eh.l / [p^p].[r^r].[i^ih].[t^t]/[z^z]. / failed phone:eh / failed spelling:l',
  'prix' => 'p.r.ee / [p^p].[r^r].[i^ee] / failed phone:ee / failed spelling:ix',
  'probus' => 'p.r.oh/b.ih.s / [p^p].[r^r].[o^oh]/[b^b]. / failed phone:ih / failed spelling:us',
  'probusiness' => 'p.r.oh/b.ih.z/n.eh.s / [p^p].[r^r].[o^oh]/[b^b]. / failed phone:ih / failed spelling:us',
  'procaccini' => 'p.r.oh/k.aw/ch.ee/n.ee / [p^p].[r^r].[o^oh]/[c^k].[a^aw]/ / failed phone:t / failed spelling:cc',
  'prochaska' => 'p.r.eh/h.aw/s.k.eh / [p^p].[r^r].[o^uh]/ / failed phone:h / failed spelling:ch',
  'prochazka' => 'p.r.eh/h.aw.z/k.eh / [p^p].[r^r].[o^uh]/ / failed phone:h / failed spelling:ch',
  'prochnow' => 'p.r.aw/n.ow / [p^p].[r^r].[o^aw]/ / failed phone:n / failed spelling:ch',
  'procida' => 'p.r.oh/ch.ee/d.eh / [p^p].[r^r].[o^oh]/ / failed phone:t / failed spelling:ci',
  'prodigiously' => 'p.r.oh/d.ih/j.ih/s.l.ee / [p^p].[r^r].[o^oh]/[d^d].[i^ih]/[g^j].[i^ih]/ / failed phone:s / failed spelling:ou',
  'proehl' => 'p.r.oh.l / [p^p].[r^r].[o^oh]. / failed phone:l / failed spelling:eh',
  'programme' => 'p.r.oh/g.r.ah.m / [p^p].[r^r].[o^oh]/[g^g].[r^r].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'proia' => 'p.r.oh/ye.eh / [p^p].[r^r].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'proj' => 'p.r.aw/j.eh.k.t / [p^p].[r^r].[o^aw]/[j^j]. / failed phone:eh / failed spelling:',
  'promiscuous' => 'p.r.oh/m.ih/s.kw.eh.s / [p^p].[r^r].[o^oh]/[m^m].[i^ih]/[sc^s]. / failed phone:kw / failed spelling:uo',
  'prosch' => 'p.r.aw.sh / [p^p].[r^r].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'proscia' => 'p.r.oh.s/ch.eh / [p^p].[r^r].[o^oh].[sc^s]/ / failed phone:t / failed spelling:ia',
  'proskauer' => 'p.r.aw/s.k.ow.r / [p^p].[r^r].[o^aw]/[s^s].[k^k].[au^aw]. / failed phone:r / failed spelling:er',
  'proske' => 'p.r.oh.s.k / [p^p].[r^r].[o^oh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'protege' => 'p.r.oh/t.eh/zh.ay / [p^p].[r^r].[o^oh]/[t^t].[e^eh]/ / failed phone:zh / failed spelling:ge',
  'proteges' => 'p.r.oh/t.ih/z.ay.z / [p^p].[r^r].[o^oh]/[t^t].[e^ih]/ / failed phone:z / failed spelling:ge',
  'provincialism' => 'p.r.eh/v.ih.n/ch.eh/l.ih/z.eh.m / [p^p].[r^r].[o^uh]/[v^v].[i^ih].[n^n]/ / failed phone:t / failed spelling:ci',
  'prudentialbache' => 'p.r.ue/d.eh.n/t.ee/ah.l/b.ah.ch / [p^p].[r^r].[u^ue]/[d^d].[e^eh].[n^n]/[t^t].[i^ee]/[a^ah].[l^l]/[b^b].[a^ah].[ch^ch] / failed phone:t / failed spelling:ch',
  'prudhomme' => 'p.r.uh.d/h.eh.m / [p^p].[r^r].[u^uh].[d^d]/[h^h].[o^uh].[m^m] / failed phone:m / failed spelling:mm',
  'prugh' => 'p.r.ue / [p^p].[r^r].[u^ue] / failed phone:ue / failed spelling:ug',
  'pryde' => 'p.r.igh.d / [p^p].[r^r].[y^igh].[d^d] / failed phone:d / failed spelling:de',
  'przybysz' => 'p.er/z.ih/b.ih.sh / [p^p].[r^er]/[z^z].[y^ih]/[b^b].[y^ih].[s^sh] / failed phone:sh / failed spelling:sz',
  'przywara' => 'p.er/z.eh/v.aw/r.eh / [p^p].[r^er]/[z^z].[y^eh]/ / failed phone:v / failed spelling:wa',
  'psalm' => 's.aw.l.m /  / failed phone:s / failed spelling:ps',
  'psalms' => 's.aw.l.m.z /  / failed phone:s / failed spelling:ps',
  'psalter' => 's.aw.l/t.er /  / failed phone:s / failed spelling:ps',
  'psalters' => 's.aw.l/t.er.z /  / failed phone:s / failed spelling:ps',
  'psarouthakis' => 's.air/ue/th.aw/k.ih.s /  / failed phone:s / failed spelling:ps',
  'psencik' => 's.eh.n/s.ih.k /  / failed phone:s / failed spelling:ps',
  'pseudo' => 's.ue/d.oh /  / failed phone:s / failed spelling:ps',
  'pseudomonas' => 's.ue/d.eh/m.oh/n.eh.z /  / failed phone:s / failed spelling:ps',
  'pseudonym' => 's.ue/d.eh/n.ih.m /  / failed phone:s / failed spelling:ps',
  'pseudonyms' => 's.ue/d.eh/n.ih.m.z /  / failed phone:s / failed spelling:ps',
  'pseudopodial' => 's.ue/d.eh/p.oh/d.ee/eh.l /  / failed phone:s / failed spelling:ps',
  'pseudoscience' => 's.ue/d.oh/s.igh/eh.n.s /  / failed phone:s / failed spelling:ps',
  'pseudoscientific' => 's.ue/d.oh/s.igh/eh.n/t.ih/f.ih.k /  / failed phone:s / failed spelling:ps',
  'psi' => 's.igh /  / failed phone:s / failed spelling:ps',
  'psilocybin' => 's.igh/l.eh/s.igh/b.eh.n /  / failed phone:s / failed spelling:ps',
  'psoriasis' => 's.er/igh/eh/s.eh.s /  / failed phone:s / failed spelling:ps',
  'psych' => 's.igh.k /  / failed phone:s / failed spelling:ps',
  'psyche' => 's.igh/k.ee /  / failed phone:s / failed spelling:ps',
  'psychedelic' => 's.igh/k.eh/d.eh/l.ih.k /  / failed phone:s / failed spelling:ps',
  'psyches' => 's.igh/k.ee.z /  / failed phone:s / failed spelling:ps',
  'psychiatric' => 's.igh/k.ee/ah/t.r.ih.k /  / failed phone:s / failed spelling:ps',
  'psychiatrist' => 's.eh/k.igh/eh/t.r.eh.s.t /  / failed phone:s / failed spelling:ps',
  'psychiatrists' => 's.eh/k.igh/eh/t.r.eh.s.t.s /  / failed phone:s / failed spelling:ps',
  'psychiatry' => 's.igh/k.igh/eh/t.r.ee /  / failed phone:s / failed spelling:ps',
  'psychic' => 's.igh/k.ih.k /  / failed phone:s / failed spelling:ps',
  'psychical' => 's.igh/k.ih/k.eh.l /  / failed phone:s / failed spelling:ps',
  'psychics' => 's.igh/k.ih.k.s /  / failed phone:s / failed spelling:ps',
  'psycho' => 's.igh/k.oh /  / failed phone:s / failed spelling:ps',
  'psychoanalysis' => 's.igh/k.oh/eh/n.ah/l.eh/s.eh.s /  / failed phone:s / failed spelling:ps',
  'psychoanalyst' => 's.igh/k.oh/ah/n.eh/l.eh.s.t /  / failed phone:s / failed spelling:ps',
  'psychoanalytic' => 's.igh/k.oh/ah/n.eh/l.ih/t.ih.k /  / failed phone:s / failed spelling:ps',
  'psychobabble' => 's.igh/k.oh/b.ah/b.eh.l /  / failed phone:s / failed spelling:ps',
  'psychodynamic' => 's.igh/k.oh/d.igh/n.ah/m.ih.k /  / failed phone:s / failed spelling:ps',
  'psychogenic' => 's.igh/k.oh/j.eh/n.ih.k /  / failed phone:s / failed spelling:ps',
  'psychokinesis' => 's.igh/k.oh/k.eh/n.ee/s.eh.s /  / failed phone:s / failed spelling:ps',
  'psychological' => 's.igh/k.eh/l.aw/j.ih/k.eh.l /  / failed phone:s / failed spelling:ps',
  'psychologically' => 's.igh/k.eh/l.aw/j.ih/k.l.ee /  / failed phone:s / failed spelling:ps',
  'psychologist' => 's.igh/k.aw/l.eh/j.eh.s.t /  / failed phone:s / failed spelling:ps',
  'psychologists' => 's.igh/k.aw/l.eh/j.eh.s.t.s /  / failed phone:s / failed spelling:ps',
  'psychology' => 's.igh/k.aw/l.eh/j.ee /  / failed phone:s / failed spelling:ps',
  'psychopath' => 's.igh/k.oh/p.ah.th /  / failed phone:s / failed spelling:ps',
  'psychopathic' => 's.igh/k.eh/p.ah/th.ih.k /  / failed phone:s / failed spelling:ps',
  'psychopaths' => 's.igh/k.oh/p.ah.th.s /  / failed phone:s / failed spelling:ps',
  'psychopathy' => 's.igh/k.aw/p.eh/th.ee /  / failed phone:s / failed spelling:ps',
  'psychosis' => 's.igh/k.oh/s.eh.s /  / failed phone:s / failed spelling:ps',
  'psychotherapeutic' => 's.igh/k.oh/th.air/eh/p.ye.ue/t.ih.k /  / failed phone:s / failed spelling:ps',
  'psychotherapist' => 's.igh/k.eh/th.air/eh/p.ih.s.t /  / failed phone:s / failed spelling:ps',
  'psychotherapists' => 's.igh/k.eh/th.air/eh/p.ih.s.t.s /  / failed phone:s / failed spelling:ps',
  'psychotherapy' => 's.igh/k.oh/th.air/eh/p.ee /  / failed phone:s / failed spelling:ps',
  'psychotic' => 's.igh/k.aw/t.ih.k /  / failed phone:s / failed spelling:ps',
  'psyllium' => 's.ih/l.ee/eh.m /  / failed phone:s / failed spelling:ps',
  'ptacek' => 't.aw/ch.eh.k / [pt^t].[a^aw]/ / failed phone:t / failed spelling:ce',
  'pucci' => 'p.ue/ch.ee / [p^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'pucciarelli' => 'p.ue/ch.er/eh/l.ee / [p^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'puccinelli' => 'p.ue/ch.ee/n.eh/l.ee / [p^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'puccini' => 'p.ue/ch.ee/n.ee / [p^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'puccio' => 'p.ue/ch.ee/oh / [p^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'puchalski' => 'p.eh/h.aw.l/s.k.ee / [p^p].[u^uh]/ / failed phone:h / failed spelling:ch',
  'puche' => 'p.ue.ch / [p^p].[u^ue].[ch^ch] / failed phone:t / failed spelling:ch',
  'pucillo' => 'p.ue/ch.ih/l.oh / [p^p].[u^ue]/ / failed phone:t / failed spelling:ci',
  'puddles' => 'p.uh/d.eh.l.z / [p^p].[u^uh]/[dd^d]. / failed phone:eh / failed spelling:le',
  'pudgies' => 'p.uh/j.ee.z / [p^p].[u^uh]/[d^j]. / failed phone:ee / failed spelling:gi',
  'pudgy' => 'p.uh/j.ee / [p^p].[u^uh]/[d^j]. / failed phone:ee / failed spelling:gy',
  'pufahl' => 'p.ye.ue/f.aw.l / [p^p].[u^ue]/[f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'pugh' => 'p.ye.ue / [p^p].[u^ue] / failed phone:ue / failed spelling:ug',
  'pugnacious' => 'p.eh.g/n.ah/sh.ih.s / [p^p].[u^uh].[g^g]/[n^n].[a^ah]/[c^sh].[i^ih]. / failed phone:s / failed spelling:ou',
  'puhl' => 'p.uh.l / [p^p].[u^uh]. / failed phone:l / failed spelling:hl',
  'pulcini' => 'p.ue.l/ch.ee/n.ee / [p^p].[u^ue].[l^l]/ / failed phone:t / failed spelling:ci',
  'pulmazyme' => 'p.oo.l/m.eh/z.igh.m / [p^p].[u^oo].[l^l]/[m^m].[a^ah]/[z^z].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'pulmozyme' => 'p.oo.l/m.oh/z.igh.m / [p^p].[u^oo].[l^l]/[m^m].[o^oh]/[z^z].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'pundt' => 'p.uh.n.t / [p^p].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'punta' => 'p.oo.n/t.er / [p^p].[u^oo].[n^n]/[t^t]. / failed phone:er / failed spelling:a',
  'puricelli' => 'p.oo/r.ee/ch.eh/l.ee / [p^p].[u^oo]/[r^r].[i^ee]/ / failed phone:t / failed spelling:cl',
  'purview' => 'p.er/v.ye.ue / [p^p].[ur^er]/[v^v]. / failed phone:ue / failed spelling:ie',
  'pusch' => 'p.uh.sh / [p^p].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'pustejovsky' => 'p.eh/s.t.ay/aw.v/s.k.ee / [p^p].[u^uh]/[s^s].[t^t].[e^ay]/ / failed phone:aw / failed spelling:jo',
  'putsch' => 'p.oo.t.ch / [p^p].[u^oo].[t^t]. / failed phone:t / failed spelling:sc',
  'puusepp' => 'p.ue/z.eh.p / [p^p].[u^ue]/ / failed phone:z / failed spelling:us',
  'puzzled' => 'p.uh/z.eh.l.d / [p^p].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'puzzlement' => 'p.uh/z.eh.l/m.eh.n.t / [p^p].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'puzzles' => 'p.uh/z.eh.l.z / [p^p].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:le',
  'puzzling' => 'p.uh/z.eh/l.ih.ng / [p^p].[u^uh]/[zz^z]. / failed phone:eh / failed spelling:li',
  'pyke' => 'p.igh.k / [p^p].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'pyrenees' => 'p.ih/r.eh/ee.z / [p^p].[y^ih]/[r^r].[e^eh]/ / failed phone:ee / failed spelling:ne',
  'pyrrhic' => 'p.ih/r.ih.k / [p^p].[y^ih]/[r^r]. / failed phone:ih / failed spelling:rh',
  'q' => 'k.ye.ue /  / failed phone:k / failed spelling:q',
  'qantas' => 'k.ah.n/t.eh.s /  / failed phone:k / failed spelling:qa',
  'qatar' => 'k.uh/t.aw.r /  / failed phone:k / failed spelling:qa',
  'qawi' => 'k.aw/w.ee /  / failed phone:k / failed spelling:qa',
  'qi' => 'k.ee /  / failed phone:k / failed spelling:qi',
  'qian' => 'k.ee/aw.n /  / failed phone:k / failed spelling:qi',
  'qiao' => 'k.ee/ow /  / failed phone:k / failed spelling:qi',
  'qiaotou' => 'ch.ow/t.ue /  / failed phone:t / failed spelling:qi',
  'qichen' => 'k.ih/ch.ih.n /  / failed phone:k / failed spelling:qi',
  'qin' => 'k.ih.n /  / failed phone:k / failed spelling:qi',
  'qing' => 'k.ih.ng /  / failed phone:k / failed spelling:qi',
  'qingdao' => 'ch.ih.ng/d.ow /  / failed phone:t / failed spelling:qi',
  'qingming' => 'k.ih.ng/m.ih.ng /  / failed phone:k / failed spelling:qi',
  'qintex' => 'k.ih.n/t.eh.k.s /  / failed phone:k / failed spelling:qi',
  'qmax' => 'k.ye.ue/m.ah.k.s /  / failed phone:k / failed spelling:qm',
  'qom' => 'k.aw.m /  / failed phone:k / failed spelling:qo',
  'quadrupled' => 'kw.aw/d.r.ue/p.eh.l.d / [qu^kw].[a^aw]/[d^d].[r^r].[u^ue]/[p^p]. / failed phone:eh / failed spelling:le',
  'quadrupling' => 'kw.aw/d.r.ue/p.eh/l.ih.ng / [qu^kw].[a^aw]/[d^d].[r^r].[u^ue]/[p^p]. / failed phone:eh / failed spelling:li',
  'quai' => 'k.ee / [qu^k]. / failed phone:ee / failed spelling:ai',
  'quamme' => 'kw.ah.m / [qu^kw].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'quarre' => 'kw.aw.r / [qu^kw].[a^oh].[r^r] / failed phone:r / failed spelling:rr',
  'quarrelsome' => 'kw.aw/r.eh.l/s.eh.m / [qu^kw].[a^aw]/[rr^r].[e^eh].[l^l]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'quattlebaum' => 'kw.aw/t.eh.l/b.ow.m / [qu^kw].[a^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'quattrocchi' => 'kw.aw/t.r.oh/k.ee / [qu^kw].[a^aw]/[tt^t].[r^r].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'quay' => 'k.ee / [qu^k]. / failed phone:ee / failed spelling:ay',
  'quddus' => 'k.ue/d.ue.s / [qu^k]. / failed phone:ue / failed spelling:dd',
  'que' => 'k.ye.ue / [que^k]. / failed phone:ue / failed spelling:',
  'queau' => 'kw.oh / [qu^kw]. / failed phone:oh / failed spelling:ea',
  'quebecois' => 'kw.eh/b.eh/s.w.aw / [qu^kw].[e^eh]/[b^b].[e^eh]/[c^s]. / failed phone:w / failed spelling:oi',
  'quebecoise' => 'k.eh/b.eh/kw.aw / [qu^k].[e^eh]/[b^b].[e^eh]/ / failed phone:kw / failed spelling:co',
  'quebedeaux' => 'kw.eh/b.ih/d.oh / [qu^kw].[e^eh]/[b^b].[e^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'quenneville' => 'kw.ay/n.ay/v.ih.l / [qu^kw].[e^ay]/[nn^n].[e^ay]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'quibbles' => 'kw.ih/b.eh.l.z / [qu^kw].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'quibbling' => 'kw.ih/b.eh/l.ih.ng / [qu^kw].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:li',
  'quijada' => 'kw.ee/ye.aw/d.eh / [qu^kw].[i^ee]/ / failed phone:ye / failed spelling:ja',
  'quijano' => 'kw.ee/ye.aw/n.oh / [qu^kw].[i^ee]/ / failed phone:ye / failed spelling:ja',
  'quilici' => 'kw.ee/l.ee/ch.ee / [qu^kw].[i^ee]/[l^l].[i^ee]/ / failed phone:t / failed spelling:ci',
  'quillian' => 'kw.ih/l.ye.eh.n / [qu^kw].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'quintupled' => 'kw.ih.n/t.ye.ue/p.eh.l.d / [qu^kw].[i^ih].[n^n]/[t^t].[u^ue]/[p^p]. / failed phone:eh / failed spelling:le',
  'quiram' => 'kw.aw/r.eh.m / [qu^kw]. / failed phone:aw / failed spelling:ir',
  'quirke' => 'kw.er.k / [qu^kw].[ir^er].[k^k] / failed phone:k / failed spelling:ke',
  'quixote' => 'k.ee/h.oh/t.ee / [qu^k].[i^ee]/ / failed phone:h / failed spelling:xo',
  'qureshey' => 'k.oo/r.ay/sh.ay / [qu^k]. / failed phone:oo / failed spelling:re',
  'qureshi' => 'k.oo/r.ay/sh.ee / [qu^k]. / failed phone:oo / failed spelling:re',
  'r' => 'aw.r /  / failed phone:oh / failed spelling:r',
  'raab' => 'r.aw.b / [r^r].[a^aw]. / failed phone:b / failed spelling:ab',
  'raabe' => 'r.aw.b / [r^r].[a^aw]. / failed phone:b / failed spelling:ab',
  'raad' => 'r.aw.d / [r^r].[a^aw]. / failed phone:d / failed spelling:ad',
  'raap' => 'r.aw.p / [r^r].[a^aw]. / failed phone:p / failed spelling:ap',
  'raasch' => 'r.aw.sh / [r^r].[a^aw]. / failed phone:sh / failed spelling:as',
  'raatz' => 'r.aw.t.s / [r^r].[a^aw]. / failed phone:t / failed spelling:at',
  'rabalais' => 'r.ah/b.eh/l.ay / [r^r].[a^ah]/[b^b].[a^ah]/[l^l].[a^ay] / failed phone:ay / failed spelling:ai',
  'rabideau' => 'r.ah/b.ih/d.oh / [r^r].[a^ah]/[b^b].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'rachelle' => 'r.eh/sh.eh.l / [r^r].[a^ah]/[ch^sh].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'racioppi' => 'r.aw/ch.oh/p.ee / [r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'rackliffe' => 'r.ah/k.l.ih.f / [r^r].[a^ah]/[ck^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'racquet' => 'r.ah/k.ih.t / [r^r].[a^ah]/[c^k]. / failed phone:ih / failed spelling:qu',
  'racquetball' => 'r.ah/k.eh.t/b.aw.l / [r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:qu',
  'racquets' => 'r.ah/k.ih.t.s / [r^r].[a^ah]/[c^k]. / failed phone:ih / failed spelling:qu',
  'racz' => 'r.aw.ch / [r^r].[a^aw]. / failed phone:t / failed spelling:cz',
  'raczka' => 'r.aw.ch/k.eh / [r^r].[a^aw]. / failed phone:t / failed spelling:cz',
  'raczkowski' => 'r.eh.ch/k.aw.f/s.k.ee / [r^r].[a^ah]. / failed phone:t / failed spelling:cz',
  'raczynski' => 'r.eh/ch.ih.n/s.k.ee / [r^r].[a^ah]/ / failed phone:t / failed spelling:cz',
  'radcliffe' => 'r.ah.d/k.l.ih.f / [r^r].[a^ah].[d^d]/[c^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'radde' => 'r.ah.d / [r^r].[a^ah].[dd^d] / failed phone:d / failed spelling:dd',
  'radha' => 'r.aw/d.eh / [r^r].[a^aw]/[d^d]. / failed phone:eh / failed spelling:ha',
  'radiance' => 'r.ay/d.ye.eh.n.s / [r^r].[a^ay]/[d^d]. / failed phone:ue / failed spelling:ia',
  'radicchio' => 'r.eh/d.ih/k.ee/oh / [r^r].[a^ah]/[d^d].[i^ih]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'radler' => 'r.ay/d.eh/l.er / [r^r].[a^ay]/[d^d]. / failed phone:eh / failed spelling:le',
  'radtke' => 'r.ah.d/k.ee / [r^r].[a^ah].[d^d]/ / failed phone:k / failed spelling:tk',
  'radziewicz' => 'r.aw/j.eh/v.ih.ch / [r^r].[a^aw]/[d^j]. / failed phone:eh / failed spelling:zi',
  'rae' => 'r.ay / [r^r].[a^ay] / failed phone:ay / failed spelling:ae',
  'raeburn' => 'r.ay/b.er.n / [r^r].[a^ay]/ / failed phone:b / failed spelling:eb',
  'raether' => 'r.eh/dh.er / [r^r].[a^ah]/ / failed phone:dh / failed spelling:et',
  'raetz' => 'r.ee.t.s / [r^r]. / failed phone:ee / failed spelling:ae',
  'rafael' => 'r.aw/f.igh/eh.l / [r^r].[a^aw]/[f^f]. / failed phone:igh / failed spelling:ae',
  'raffaele' => 'r.aw/f.igh/eh/l.ay / [r^r].[a^aw]/[ff^f]. / failed phone:igh / failed spelling:ae',
  'raffety' => 'r.ah.f/t.ee / [r^r].[a^ah].[ff^f]/ / failed phone:t / failed spelling:et',
  'raffles' => 'r.ah/f.eh.l.z / [r^r].[a^ah]/[ff^f]. / failed phone:eh / failed spelling:le',
  'raggio' => 'r.aw/j.ee/oh / [r^r].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'ragucci' => 'r.aw/g.ue/ch.ee / [r^r].[a^aw]/[g^g].[u^ue]/ / failed phone:t / failed spelling:cc',
  'rah' => 'r.aw / [r^r].[a^aw] / failed phone:aw / failed spelling:ah',
  'rahl' => 'r.aw.l / [r^r].[a^aw]. / failed phone:l / failed spelling:hl',
  'rahm' => 'r.ah.m / [r^r].[a^ah]. / failed phone:m / failed spelling:hm',
  'rahman' => 'r.aw/m.eh.n / [r^r].[a^aw]/ / failed phone:m / failed spelling:hm',
  'rahming' => 'r.aw/m.ih.ng / [r^r].[a^aw]/ / failed phone:m / failed spelling:hm',
  'rahrig' => 'r.ah/r.ih.g / [r^r].[a^ah]/ / failed phone:r / failed spelling:hr',
  'rahway' => 'r.aw/w.ay / [r^r].[a^aw]/ / failed phone:w / failed spelling:hw',
  'raia' => 'r.aw/ye.eh / [r^r].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'raiche' => 'r.ay.ch / [r^r].[ai^ay].[ch^ch] / failed phone:t / failed spelling:ch',
  'raikes' => 'r.ay.k.s / [r^r].[ai^ay].[k^k]. / failed phone:x / failed spelling:ik',
  'rainier' => 'r.ay/n.ih.r / [r^r].[ai^ay]/[n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'rainville' => 'r.ay.n/v.ih.l / [r^r].[ai^ay].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'raisch' => 'r.igh.sh / [r^r].[ai^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'raj' => 'r.aw.zh / [r^r].[a^ah]. / failed phone:g / failed spelling:j',
  'rajala' => 'r.aw/ye.aw/l.eh / [r^r].[a^aw]/ / failed phone:ye / failed spelling:ja',
  'rajewski' => 'r.igh/eh.f/s.k.ee / [r^r]. / failed phone:igh / failed spelling:aj',
  'rajkumar' => 'r.aw.zh/k.ue/m.aw.r / [r^r].[a^ah]. / failed phone:g / failed spelling:jk',
  'raju' => 'r.aw/ye.ue / [r^r].[a^aw]/ / failed phone:ue / failed spelling:ju',
  'rakoczy' => 'r.eh/k.oh/ch.ee / [r^r].[a^ah]/[k^k].[o^oh]/ / failed phone:t / failed spelling:cz',
  'raleigh' => 'r.aw/l.ee / [r^r].[a^aw]/[le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'rambeau' => 'r.eh.m/b.oh / [r^r].[a^ah].[m^m]/[b^b]. / failed phone:oh / failed spelling:ea',
  'rambled' => 'r.ah.m/b.eh.l.d / [r^r].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'ramqvist' => 'r.ah.m.k/v.ih.s.t / [r^r].[a^ah].[m^m]. / failed phone:k / failed spelling:qv',
  'ramsay' => 'r.ah.m/z.ee / [r^r].[a^ah].[m^m]/[s^z]. / failed phone:ee / failed spelling:ay',
  'randleman' => 'r.ah.n/d.eh.l/m.eh.n / [r^r].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'randles' => 'r.ah.n/d.eh.l.z / [r^r].[a^ah].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'ranh' => 'r.ah.n / [r^r].[a^ah].[n^n] / failed phone:n / failed spelling:nh',
  'ranke' => 'r.ah.ng.k / [r^r].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'rankled' => 'r.ah.ng/k.eh.l.d / [r^r].[a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'rankles' => 'r.ah.ng/k.eh.l.z / [r^r].[a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'ransome' => 'r.ah.n/s.eh.m / [r^r].[a^ah].[n^n]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'rao' => 'r.ow / [r^r]. / failed phone:ow / failed spelling:ao',
  'rapacious' => 'r.eh/p.ah/sh.ih.s / [r^r].[a^ah]/[p^p].[a^ah]/[c^sh].[i^ih]. / failed phone:s / failed spelling:ou',
  'rapacz' => 'r.aw/p.eh.ch / [r^r].[a^aw]/[p^p].[a^ah]. / failed phone:t / failed spelling:cz',
  'raphael' => 'r.aw/f.igh/eh.l / [r^r].[a^aw]/[ph^f]. / failed phone:igh / failed spelling:ae',
  'rapoca' => 'r.eh/p.oh/k.er / [r^r].[a^ah]/[p^p].[o^oh]/[c^k]. / failed phone:er / failed spelling:a',
  'rapport' => 'r.ah/p.aw.r / [r^r].[a^ah]/[pp^p].[o^oh].[r^r] / failed phone:r / failed spelling:rt',
  'rapprochement' => 'r.ah/p.r.oh/sh.m.aw.n / [r^r].[a^ah]/[pp^p].[r^r].[o^oh]/[che^sh].[m^m]. / failed phone:aw / failed spelling:en',
  'rasch' => 'r.ah.sh / [r^r].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'rasche' => 'r.ah.sh / [r^r].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'raschke' => 'r.ah.sh.k / [r^r].[a^ah].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'raske' => 'r.ay.s.k / [r^r].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'rasmus' => 'r.ah.z/m.ih.s / [r^r].[a^ah].[s^z]/[m^m]. / failed phone:ih / failed spelling:us',
  'rasnake' => 'r.ah/s.n.eh.k / [r^r].[a^ah]/[s^s].[n^n].[a^ah].[k^k] / failed phone:k / failed spelling:ke',
  'raspberries' => 'r.ah.z/b.air/ee.z / [r^r].[a^ah].[s^z]/ / failed phone:b / failed spelling:pb',
  'raspberry' => 'r.ah.z/b.air/ee / [r^r].[a^ah].[s^z]/ / failed phone:b / failed spelling:pb',
  'ratajczak' => 'r.ah/t.eh/ch.eh.k / [r^r].[a^ah]/[t^t].[a^ah]/ / failed phone:t / failed spelling:jc',
  'ratcliffe' => 'r.ah.t/k.l.ih.f / [r^r].[a^ah].[t^t]/[c^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'rathje' => 'r.ah.th.j / [r^r].[a^ah].[th^th].[j^j] / failed phone:j / failed spelling:je',
  'rathke' => 'r.ah.th.k / [r^r].[a^ah].[th^th].[k^k] / failed phone:k / failed spelling:ke',
  'ratkowski' => 'r.eh.t/k.aw.f/s.k.ee / [r^r].[a^ah].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'ratliffe' => 'r.ah.t/l.ih.f / [r^r].[a^ah].[t^t]/[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'rattled' => 'r.ah/t.eh.l.d / [r^r].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'rattler' => 'r.ah/t.eh/l.er / [r^r].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'rattles' => 'r.ah/t.eh.l.z / [r^r].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'rattlesnake' => 'r.ah/t.eh.l/s.n.ay.k / [r^r].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'rattlesnakes' => 'r.ah/t.eh.l/s.n.ay.k.s / [r^r].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'raucci' => 'r.aw/ch.ee / [r^r].[a^aw]/ / failed phone:t / failed spelling:uc',
  'rauh' => 'r.aw / [r^r].[a^aw] / failed phone:aw / failed spelling:au',
  'rausch' => 'r.ow.sh / [r^r].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'rauschenberg' => 'r.ow/sh.eh.n/b.er.g / [r^r].[au^aw]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'rauscher' => 'r.ow/sh.er / [r^r].[au^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'raux' => 'r.oh / [r^r].[a^oh] / failed phone:oh / failed spelling:au',
  'rawe' => 'r.aw / [r^r].[a^aw] / failed phone:aw / failed spelling:aw',
  'raye' => 'r.ay / [r^r].[a^ay] / failed phone:ay / failed spelling:ay',
  'rayonier' => 'r.ay/oh/n.ih.r / [r^r].[ay^ay]/[o^oh]/[n^n].[i^ih]. / failed phone:r / failed spelling:er',
  'razaleigh' => 'r.ah/z.eh/l.ee / [r^r].[a^ah]/[z^z].[a^ah]/[le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'razzano' => 'r.aw.t/s.aw/n.oh / [r^r].[a^aw]. / failed phone:t / failed spelling:zz',
  'rb' => 'aw.r/b.ee /  / failed phone:oh / failed spelling:rb',
  'reade' => 'r.eh.d / [r^r].[ea^eh].[d^d] / failed phone:d / failed spelling:ad',
  'readus' => 'r.eh/d.ih.s / [r^r].[ea^eh]/[d^d]. / failed phone:ih / failed spelling:us',
  'reasonableness' => 'r.ee/z.eh/n.eh/b.eh.l/n.eh.s / [r^r].[ea^ee]/[s^z].[o^uh]/[n^n].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'reassembled' => 'r.ee/eh/s.eh.m/b.eh.l.d / [r^r].[e^ee]/[a^ah]/[ss^s].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'reaume' => 'r.ue.m / [r^r]. / failed phone:ue / failed spelling:ea',
  'reaux' => 'r.oh / [re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'rebekka' => 'r.ih/b.eh/k.eh / [r^r].[e^ih]/[b^b].[e^eh]/[k^k]. / failed phone:eh / failed spelling:ka',
  'rebellious' => 'r.ih/b.eh/l.ye.eh.s / [r^r].[e^ih]/[b^b].[e^eh]/[ll^l].[io^ue]. / failed phone:s / failed spelling:us',
  'recchia' => 'r.eh/k.ee/eh / [r^r].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'receivables' => 'r.ih/s.ee/v.eh/b.eh.l.z / [r^r].[e^ih]/[ce^s].[i^ee]/[v^v].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'receptacles' => 'r.ih/s.eh.p/t.ih/k.eh.l.z / [r^r].[e^ih]/[c^s].[e^eh].[p^p]/[t^t].[a^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'recine' => 'r.eh/ch.ee/n.ee / [r^r].[e^eh]/ / failed phone:t / failed spelling:ci',
  'recio' => 'r.eh/ch.ee/oh / [r^r].[e^eh]/ / failed phone:t / failed spelling:ci',
  'rectangles' => 'r.eh.k/t.ah.ng/g.eh.l.z / [r^r].[e^eh].[c^k]/[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'recycled' => 'r.ee/s.igh/k.eh.l.d / [r^r].[e^ee]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:le',
  'recycles' => 'r.ee/s.igh/k.eh.l.z / [r^r].[e^ee]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:le',
  'recycling' => 'r.ee/s.igh/k.eh/l.ih.ng / [r^r].[e^ee]/[c^s].[y^igh]/[c^k]. / failed phone:eh / failed spelling:li',
  'reczek' => 'r.eh/ch.eh.k / [r^r].[e^eh]/ / failed phone:t / failed spelling:cz',
  'redenbaugh' => 'r.eh/d.ih.n/b.ow / [r^r].[e^eh]/[d^d].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'redenius' => 'r.eh/d.ee/n.ee/ih.s / [r^r].[e^eh]/[d^d].[e^ee]/[n^n].[i^ee]/ / failed phone:ih / failed spelling:us',
  'redlinger' => 'r.eh/d.eh/l.ih.ng/er / [r^r].[e^eh]/[d^d]. / failed phone:eh / failed spelling:li',
  'redoubled' => 'r.ee/d.uh/b.eh.l.d / [r^r].[e^ee]/[d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'redoubling' => 'r.ee/d.uh/b.eh/l.ih.ng / [r^r].[e^ee]/[d^d].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:li',
  'reeh' => 'r.ee / [r^r].[e^ee] / failed phone:ee / failed spelling:ee',
  'reexamination' => 'r.ee/ih.g/z.ah/m.eh/n.ay/sh.eh.n / [r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xa',
  'reexamine' => 'r.ee/eh.g/z.ah/m.eh.n / [r^r].[e^ee]/[e^eh]. / failed phone:g / failed spelling:xa',
  'reexamined' => 'r.ee/ih.g/z.ah/m.eh.n.d / [r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xa',
  'reexamining' => 'r.ee/ih.g/z.ah/m.eh/n.ih.ng / [r^r].[e^ee]/[e^ih]. / failed phone:g / failed spelling:xa',
  'refaat' => 'r.eh/f.aw.t / [r^r].[e^eh]/[f^f].[a^aw]. / failed phone:t / failed spelling:at',
  'refah' => 'r.eh/f.aw / [r^r].[e^eh]/[f^f].[a^aw] / failed phone:aw / failed spelling:ah',
  'regalia' => 'r.ih/g.ay/l.ye.eh / [r^r].[e^ih]/[g^g].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'regehr' => 'r.eh/g.ih.r / [r^r].[e^eh]/[g^g].[e^ih]. / failed phone:r / failed spelling:hr',
  'reggae' => 'r.eh/g.ay / [r^r].[e^eh]/[gg^g].[a^ay] / failed phone:ay / failed spelling:ae',
  'reggie' => 'r.eh/j.ee / [r^r].[e^eh]/[g^j]. / failed phone:ee / failed spelling:gi',
  'reggio' => 'r.eh/j.ee/oh / [r^r].[e^eh]/[g^j]. / failed phone:ee / failed spelling:gi',
  'regime' => 'r.eh/zh.ee.m / [r^r].[e^eh]/ / failed phone:zh / failed spelling:gi',
  'regimes' => 'r.eh/zh.ee.m.z / [r^r].[e^eh]/ / failed phone:zh / failed spelling:gi',
  'reh' => 'r.eh / [r^r].[e^eh] / failed phone:eh / failed spelling:eh',
  'rehbein' => 'r.eh/b.igh.n / [r^r].[e^eh]/ / failed phone:b / failed spelling:hb',
  'rehberg' => 'r.eh/b.er.g / [r^r].[e^eh]/ / failed phone:b / failed spelling:hb',
  'rehberger' => 'r.eh/b.er/g.er / [r^r].[e^eh]/ / failed phone:b / failed spelling:hb',
  'rehder' => 'r.eh/d.er / [r^r].[e^eh]/ / failed phone:d / failed spelling:hd',
  'reher' => 'r.air / [r^r]. / failed phone:air / failed spelling:eh',
  'rehfeld' => 'r.eh/f.eh.l.d / [r^r].[e^eh]/ / failed phone:f / failed spelling:hf',
  'rehfeldt' => 'r.eh/f.eh.l.t / [r^r].[e^eh]/ / failed phone:f / failed spelling:hf',
  'rehg' => 'r.eh.j / [r^r].[e^eh]. / failed phone:j / failed spelling:hg',
  'rehkopf' => 'r.eh/k.aw.p.f / [r^r].[e^eh]/ / failed phone:k / failed spelling:hk',
  'rehling' => 'r.eh/l.ih.ng / [r^r].[e^eh]/ / failed phone:l / failed spelling:hl',
  'rehm' => 'r.eh.m / [r^r].[e^eh]. / failed phone:m / failed spelling:hm',
  'rehman' => 'r.eh/m.eh.n / [r^r].[e^eh]/ / failed phone:m / failed spelling:hm',
  'rehmann' => 'r.eh/m.eh.n / [r^r].[e^eh]/ / failed phone:m / failed spelling:hm',
  'rehmer' => 'r.eh/m.er / [r^r].[e^eh]/ / failed phone:m / failed spelling:hm',
  'reichardt' => 'r.igh/k.aw.r.t / [r^r].[ei^igh]/[ch^k].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'reichl' => 'r.igh/k.eh.l / [r^r].[ei^igh]/[ch^k]. / failed phone:eh / failed spelling:l',
  'reichling' => 'r.igh/k.eh/l.ih.ng / [r^r].[ei^igh]/[ch^k]. / failed phone:eh / failed spelling:li',
  'reichstuhl' => 'r.igh.k/s.t.ue.l / [r^r].[ei^igh].[ch^k]/[s^s].[t^t].[u^ue]. / failed phone:l / failed spelling:hl',
  'reichwein' => 'r.igh/kw.igh.n / [r^r].[ei^igh]/ / failed phone:kw / failed spelling:ch',
  'reihl' => 'r.igh.l / [r^r].[ei^igh]. / failed phone:l / failed spelling:hl',
  'reincke' => 'r.igh.ng.k / [r^r].[ei^igh].[n^ng].[c^k] / failed phone:k / failed spelling:ck',
  'reindl' => 'r.igh.n/d.eh.l / [r^r].[ei^igh].[n^n]/[d^d]. / failed phone:eh / failed spelling:l',
  'reinecke' => 'r.igh/n.ih.k / [r^r].[ei^igh]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'reineke' => 'r.igh/n.ih.k / [r^r].[ei^igh]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'reinhardt' => 'r.igh.n/h.aw.r.t / [r^r].[ei^igh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'reinhold' => 'r.igh.n/h.oh.l.t / [r^r].[ei^igh].[n^n]/[h^h].[o^oh].[l^l]. / failed phone:t / failed spelling:d',
  'reinke' => 'r.ay.ng.k / [r^r].[ei^ay].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'reinoehl' => 'r.igh/n.oh.l / [r^r].[ei^igh]/[n^n].[o^oh]. / failed phone:l / failed spelling:eh',
  'reinsch' => 'r.igh.n.sh / [r^r].[ei^igh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'reisch' => 'r.igh.sh / [r^r].[ei^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'reischauer' => 'r.igh/sh.ow.r / [r^r].[ei^igh]/[sc^sh]. / failed phone:ow / failed spelling:ha',
  'reischman' => 'r.igh/sh.m.eh.n / [r^r].[ei^igh]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'reisz' => 'r.igh.sh / [r^r].[ei^igh].[s^sh] / failed phone:sh / failed spelling:sz',
  'reiterates' => 'r.ee/ih/t.er/ay.s / [r^r].[e^ee]/[i^ih]/[te^t].[r^er]/[a^ay]. / failed phone:s / failed spelling:te',
  'rekenthaler' => 'r.eh/k.eh.n/t.aw/l.er / [r^r].[e^eh]/[k^k].[e^eh].[n^n]/[t^t]. / failed phone:aw / failed spelling:ha',
  'rekindled' => 'r.ee/k.ih.n/d.eh.l.d / [r^r].[e^ee]/[k^k].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'remarriage' => 'r.ee/m.air/ih.j / [r^r].[e^ee]/[m^m].[arr^air]/[i^ih]. / failed phone:j / failed spelling:ag',
  'rembrandt' => 'r.eh.m/b.r.ah.n.t / [r^r].[e^eh].[m^m]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'rembrandts' => 'r.eh.m/b.r.ah.n.t.s / [r^r].[e^eh].[m^m]/[b^b].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'reminisce' => 'r.eh/m.eh/n.ih.s / [r^r].[e^eh]/[m^m].[i^ih]/[n^n].[i^ih].[sc^s] / failed phone:s / failed spelling:sc',
  'remlinger' => 'r.eh/m.eh/l.ih.ng/er / [r^r].[e^eh]/[m^m]. / failed phone:eh / failed spelling:li',
  'remme' => 'r.eh.m / [r^r].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'renaud' => 'r.ih/n.oh / [r^r].[e^ih]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'renault' => 'r.eh/n.oh / [r^r].[e^eh]/[n^n].[a^oh] / failed phone:oh / failed spelling:au',
  'rende' => 'r.eh.n.d / [r^r].[e^eh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'rendezvous' => 'r.aw.n/d.ih/v.ue / [r^r]. / failed phone:aw / failed spelling:en',
  'rendleman' => 'r.eh.n/d.eh.l/m.eh.n / [r^r].[e^eh].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'renne' => 'r.eh.n / [r^r].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'renoir' => 'r.eh.n/w.aw.r / [r^r].[e^eh].[n^n]/ / failed phone:w / failed spelling:oi',
  'rensch' => 'r.eh.n.sh / [r^r].[e^eh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'renschler' => 'r.eh.n/sh.eh/l.er / [r^r].[e^eh].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:hl',
  'rensselaer' => 'r.eh.n/s.eh/l.ih.r / [r^r].[e^eh].[n^n]/[ss^s].[e^eh]/[l^l].[a^ih]. / failed phone:r / failed spelling:er',
  'rentsch' => 'r.eh.n.ch / [r^r].[e^eh].[n^n].[t^t]. / failed phone:t / failed spelling:ts',
  'rentschler' => 'r.eh.n.ch/l.er / [r^r].[e^eh].[n^n].[t^t].[sc^sh]/ / failed phone:l / failed spelling:hl',
  'repertoire' => 'r.eh/p.er/t.w.aw.r / [r^r].[e^eh]/[p^p].[er^er]/[t^t]. / failed phone:w / failed spelling:oi',
  'repossess' => 'r.ee/p.eh/z.eh.s / [r^r].[e^ee]/[p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'repossessed' => 'r.ee/p.eh/z.eh.s.t / [r^r].[e^ee]/[p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'repossessions' => 'r.ee/p.eh/z.eh/sh.eh.n.z / [r^r].[e^ee]/[p^p].[o^uh]/[s^z]. / failed phone:eh / failed spelling:se',
  'reppucci' => 'r.eh/p.ue/ch.ee / [r^r].[e^eh]/[pp^p].[u^ue]/ / failed phone:t / failed spelling:cc',
  'resch' => 'r.eh.sh / [r^r].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'reschke' => 'r.eh.sh.k / [r^r].[e^eh].[s^sh].[ch^k] / failed phone:k / failed spelling:hk',
  'rescigno' => 'r.eh.s/ch.ee.g/n.oh / [r^r].[e^eh].[sc^s]/ / failed phone:t / failed spelling:ig',
  'rescission' => 'r.ih/s.ih/zh.eh.n / [r^r].[e^ih]/[sc^s].[i^ih]/[s^zh]. / failed phone:eh / failed spelling:si',
  'rescissions' => 'r.ih/s.ih/zh.eh.n.z / [r^r].[e^ih]/[sc^s].[i^ih]/[s^zh]. / failed phone:eh / failed spelling:si',
  'reseachers' => 'r.ee/s.er/ch.er.z / [r^r].[e^ee]/[se^s]. / failed phone:er / failed spelling:ac',
  'resembled' => 'r.ih/z.eh.m/b.eh.l.d / [r^r].[e^ih]/[s^z].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'resembles' => 'r.ih/z.eh.m/b.eh.l.z / [r^r].[e^ih]/[s^z].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'resembling' => 'r.ih/z.eh.m/b.eh/l.ih.ng / [r^r].[e^ih]/[s^z].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'reservoir' => 'r.eh/z.eh.v/w.aw.r / [r^r].[e^eh]/[s^z].[e^eh]. / failed phone:v / failed spelling:rv',
  'reservoirs' => 'r.eh/z.er.v/w.aw.r.z / [r^r].[e^eh]/[s^z].[er^er].[v^v]/ / failed phone:w / failed spelling:oi',
  'resettled' => 'r.ee/s.eh/t.eh.l.d / [r^r].[e^ee]/[s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'resettlement' => 'r.ee/s.eh/t.eh.l/m.eh.n.t / [r^r].[e^ee]/[s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'reshuffled' => 'r.ee/sh.uh/f.eh.l.d / [r^r].[e^ee]/[s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'reshuffling' => 'r.ee/sh.uh/f.eh/l.ih.ng / [r^r].[e^ee]/[s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:li',
  'resiliency' => 'r.ih/z.ih/l.ye.eh.n/s.ee / [r^r].[e^ih]/[s^z].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ie',
  'resilient' => 'r.ih/z.ih/l.ye.eh.n.t / [r^r].[e^ih]/[s^z].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ie',
  'reske' => 'r.eh.s.k / [r^r].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'resnais' => 'r.eh/s.n.ay / [r^r].[e^eh]/[s^s].[n^n].[a^ay] / failed phone:ay / failed spelling:ai',
  'respironics' => 'r.eh/s.er/aw/n.ih.k.s / [r^r].[e^eh]/[s^s]. / failed phone:er / failed spelling:pi',
  'restaurant' => 'r.eh/s.t.er/aw.n.t / [r^r].[e^eh]/[s^s].[t^t]. / failed phone:er / failed spelling:au',
  'restaurants' => 'r.eh/s.t.er/aw.n.t.s / [r^r].[e^eh]/[s^s].[t^t]. / failed phone:er / failed spelling:au',
  'restaurateur' => 'r.eh/s.t.er/eh/t.er / [r^r].[e^eh]/[s^s].[t^t]. / failed phone:er / failed spelling:au',
  'restaurateurs' => 'r.eh/s.t.er/eh/t.er.z / [r^r].[e^eh]/[s^s].[t^t]. / failed phone:er / failed spelling:au',
  'retaliatory' => 'r.ee/t.ah/l.ye.eh/t.aw/r.ee / [r^r].[e^ee]/[t^t].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'reuber' => 'r.oy/b.er / [r^r]. / failed phone:oy / failed spelling:eu',
  'reuland' => 'r.oy/l.eh.n.d / [r^r]. / failed phone:oy / failed spelling:eu',
  'reusch' => 'r.oy.sh / [r^r]. / failed phone:oy / failed spelling:eu',
  'reusser' => 'r.oy/s.er / [r^r]. / failed phone:oy / failed spelling:eu',
  'reuter' => 'r.oy/t.er / [r^r]. / failed phone:oy / failed spelling:eu',
  'reuters' => 'r.oy/t.er.z / [r^r]. / failed phone:oy / failed spelling:eu',
  'reuther' => 'r.oy/dh.er / [r^r]. / failed phone:oy / failed spelling:eu',
  'reutter' => 'r.oy/t.er / [r^r]. / failed phone:oy / failed spelling:eu',
  'reutzel' => 'r.oy.t/z.eh.l / [r^r]. / failed phone:oy / failed spelling:eu',
  'revelle' => 'r.ih/v.eh.l / [r^r].[e^ih]/[v^v].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'review' => 'r.ee/v.ye.ue / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reviewed' => 'r.ee/v.ye.ue.d / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reviewer' => 'r.ee/v.ye.ue/er / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reviewers' => 'r.ee/v.ye.ue/er.z / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reviewing' => 'r.ee/v.ye.ue/ih.ng / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reviews' => 'r.ee/v.ye.ue.z / [r^r].[e^ee]/[v^v]. / failed phone:ue / failed spelling:ie',
  'reville' => 'r.eh/v.ih.l / [r^r].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'revoir' => 'r.ih.v/w.aw.r / [r^r].[e^ih].[v^v]/ / failed phone:w / failed spelling:oi',
  'revved' => 'r.eh.v.d / [r^r].[e^eh].[v^v]. / failed phone:d / failed spelling:ve',
  'revving' => 'r.eh/v.ih.ng / [r^r].[e^eh]/[v^v]. / failed phone:ih / failed spelling:vi',
  'rexana' => 'r.ih.g/z.ah/n.eh / [r^r].[e^ih]. / failed phone:g / failed spelling:xa',
  'rexham' => 'r.eh.k/s.eh.m / [r^r].[e^eh].[x^x]/ / failed phone:eh / failed spelling:ha',
  'rexrodt' => 'r.eh.k/s.r.oh.d / [r^r].[e^eh].[x^x]/[r^r].[o^oh].[d^d] / failed phone:d / failed spelling:dt',
  'reykjavik' => 'r.eh/k.ye.eh/v.ih.k / [re^r].[y^eh]/[k^k]. / failed phone:ue / failed spelling:ja',
  'reznicek' => 'r.eh.z/n.ih/ch.eh.k / [r^r].[e^eh].[z^z]/[n^n].[i^ih]/ / failed phone:t / failed spelling:ce',
  'rheault' => 'r.oh / [r^r]. / failed phone:oh / failed spelling:he',
  'rheaume' => 'r.ue.m / [r^r]. / failed phone:ue / failed spelling:he',
  'rheinisch' => 'r.igh/n.ih.sh / [rh^r].[ei^igh]/[n^n].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'rhinehardt' => 'r.igh.n/h.aw.r.t / [rh^r].[i^igh].[ne^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'rhyme' => 'r.igh.m / [rh^r].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'rhythm' => 'r.ih/dh.eh.m / [rh^r].[y^ih]/[th^dh]. / failed phone:eh / failed spelling:m',
  'rhythms' => 'r.ih/dh.eh.m.z / [rh^r].[y^ih]/[th^dh]. / failed phone:eh / failed spelling:ms',
  'ribeiro' => 'r.ee/b.air/oh / [r^r].[i_e^ee]/[b^b]. / failed phone:air / failed spelling:ir',
  'ricci' => 'r.ee/ch.ee / [r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'ricciardelli' => 'r.ee/ch.er/d.eh/l.ee / [r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'ricciardi' => 'r.ee/ch.aw.r/d.ee / [r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'riccio' => 'r.ee/ch.ee/oh / [r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'riccitelli' => 'r.ee/ch.ee/t.eh/l.ee / [r^r].[i^ee]/ / failed phone:t / failed spelling:cc',
  'ricciuti' => 'r.ee.k/ch.ue/t.ee / [r^r].[i^ee].[cc^k]/ / failed phone:t / failed spelling:iu',
  'richardt' => 'r.ih/k.aw.r.t / [r^r].[i^ih]/[ch^k].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'richco' => 'r.ih/k.oh / [r^r].[i^ih]/[ch^k]. / failed phone:oh / failed spelling:co',
  'riche' => 'r.ih.ch / [r^r].[i^ih].[ch^ch] / failed phone:t / failed spelling:ch',
  'richelieu' => 'r.ih/sh.eh/l.ue / [r^r].[i^ih]/[ch^sh].[e^eh]/[l^l]. / failed phone:ue / failed spelling:ie',
  'richoux' => 'r.ih/sh.ue / [r^r].[i^ih]/[ch^sh].[ou^ue] / failed phone:ue / failed spelling:ho',
  'ricke' => 'r.ih.k / [r^r].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'rickles' => 'r.ih/k.eh.l.z / [r^r].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'rickward' => 'r.ih/kw.er.d / [r^r].[i^ih]/[ck^kw]. / failed phone:er / failed spelling:wa',
  'rickwood' => 'r.ih/kw.oo.d / [r^r].[i^ih]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'ricochet' => 'r.ih/k.eh/sh.ay / [r^r].[i^ih]/[c^k].[o^uh]/[ch^sh].[e^ay] / failed phone:ay / failed spelling:he',
  'ricocheted' => 'r.ih/k.eh/sh.ay.d / [r^r].[i^ih]/[c^k].[o^uh]/[ch^sh].[e^ay].[t^d] / failed phone:d / failed spelling:te',
  'ricocheting' => 'r.ih/k.eh/sh.ay/eh.ng / [r^r].[i^ih]/[c^k].[o^uh]/[ch^sh].[e^ay]/ / failed phone:eh / failed spelling:ti',
  'riddled' => 'r.ih/d.eh.l.d / [r^r].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'riddles' => 'r.ih/d.eh.l.z / [r^r].[i^ih]/[dd^d]. / failed phone:eh / failed spelling:le',
  'rideau' => 'r.ih/d.oh / [r^r].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'rideaux' => 'r.ih/d.oh / [r^r].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'ridenhour' => 'r.ih/d.ih/n.ow.r / [r^r].[i^ih]/[d^d].[e^ih]/[n^n]. / failed phone:ow / failed spelling:ho',
  'ridgell' => 'r.ih/j.eh.l / [r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'ridges' => 'r.ih/j.eh.z / [r^r].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'ridgley' => 'r.ih.j/l.ee / [r^r].[i^ih].[d^j]/ / failed phone:l / failed spelling:gl',
  'ridgway' => 'r.ih.j/w.ay / [r^r].[i^ih].[d^j]/ / failed phone:w / failed spelling:gw',
  'riebe' => 'r.ee.b / [r^r].[ie^ee].[b^b] / failed phone:b / failed spelling:be',
  'riecke' => 'r.ee.k / [r^r].[ie^ee].[c^k] / failed phone:k / failed spelling:ck',
  'riede' => 'r.ee.d / [r^r].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'riedl' => 'r.ee/d.eh.l / [r^r].[ie^ee]/[d^d]. / failed phone:eh / failed spelling:l',
  'riedlinger' => 'r.ee/d.eh/l.ih.ng/er / [r^r].[ie^ee]/[d^d]. / failed phone:eh / failed spelling:li',
  'riehl' => 'r.ee.l / [r^r].[ie^ee]. / failed phone:l / failed spelling:hl',
  'riehm' => 'r.ee.m / [r^r].[ie^ee]. / failed phone:m / failed spelling:hm',
  'rieke' => 'r.ee.k / [r^r].[ie^ee].[k^k] / failed phone:k / failed spelling:ke',
  'riendeau' => 'r.eh.n/d.oh / [r^r].[ie^eh].[n^n]/[d^d]. / failed phone:oh / failed spelling:ea',
  'riffe' => 'r.ih.f / [r^r].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'rifled' => 'r.igh/f.eh.l.d / [r^r].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'rifleman' => 'r.igh/f.eh.l/m.eh.n / [r^r].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'riflery' => 'r.igh/f.eh.l/r.ee / [r^r].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'rifles' => 'r.igh/f.eh.l.z / [r^r].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'riggi' => 'r.ih/j.ee / [r^r].[i^ih]/[g^j]. / failed phone:ee / failed spelling:gi',
  'riggio' => 'r.ee/j.ee/oh / [r^r].[i^ee]/[g^j]. / failed phone:ee / failed spelling:gi',
  'riggleman' => 'r.ih/g.eh.l/m.eh.n / [r^r].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:le',
  'righteous' => 'r.igh/ch.eh.s / [r^r].[igh^igh]/[t^ch].[e^eh]. / failed phone:s / failed spelling:ou',
  'righteously' => 'r.igh/ch.eh/s.l.ee / [r^r].[igh^igh]/[t^ch].[e^eh]/ / failed phone:s / failed spelling:ou',
  'righteousness' => 'r.igh/ch.eh/s.n.eh.s / [r^r].[igh^igh]/[t^ch].[e^eh]/ / failed phone:s / failed spelling:ou',
  'rigler' => 'r.igh/g.eh/l.er / [r^r].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'rijn' => 'r.ee/eh.n / [r^r].[i^ee]/ / failed phone:eh / failed spelling:jn',
  'rindahl' => 'r.ih.n/d.aw.l / [r^r].[i^ih].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'rindfleisch' => 'r.ih.n.d/f.l.igh.sh / [r^r].[i^ih].[n^n].[d^d]/[f^f].[le^l].[i^igh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'rindt' => 'r.ih.n.t / [r^r].[i^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'rinehardt' => 'r.igh.n/h.aw.r.t / [r^r].[i^igh].[ne^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'ringdahl' => 'r.ih.ng/d.aw.l / [r^r].[i^ih].[ng^ng]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'ringe' => 'r.ih.ng / [r^r].[i^ih].[n^ng] / failed phone:ng / failed spelling:ng',
  'ringgit' => 'r.ih.ng/ih.t / [r^r].[i^ih].[n^ng]/ / failed phone:ih / failed spelling:gg',
  'ringler' => 'r.ih.ng/g.eh/l.er / [r^r].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'rinke' => 'r.ih.ng.k / [r^r].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'rinne' => 'r.ih.n / [r^r].[i^ih].[n^n] / failed phone:n / failed spelling:nn',
  'riojas' => 'r.ee/oh/ye.aw.z / [r^r].[i^ee]/[o^oh]/ / failed phone:ye / failed spelling:ja',
  'riordan' => 'r.ih.r/d.eh.n / [r^r].[i^ih]. / failed phone:r / failed spelling:or',
  'rioux' => 'r.ue / [r^r].[io^ue] / failed phone:ue / failed spelling:io',
  'riphagen' => 'r.ih/p.aw/g.eh.n / [r^r].[i^ih]/[p^p]. / failed phone:aw / failed spelling:ha',
  'ripke' => 'r.ih.p.k / [r^r].[i^ih].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'rippled' => 'r.ih/p.eh.l.d / [r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'ripples' => 'r.ih/p.eh.l.z / [r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'rippling' => 'r.ih/p.eh/l.ih.ng / [r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'ripplinger' => 'r.ih/p.eh/l.ih.ng/er / [r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:pl',
  'risch' => 'r.ih.sh / [r^r].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'riske' => 'r.ih.s.k / [r^r].[i^ih].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'risse' => 'r.ih.s / [r^r].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'ritterbusch' => 'r.ih/t.er/b.oo.sh / [r^r].[i^ih]/[tte^t].[r^er]/[b^b].[u^oo].[sc^sh] / failed phone:sh / failed spelling:sc',
  'ritthaler' => 'r.ih/th.eh/l.er / [r^r].[i^ih]/ / failed phone:th / failed spelling:tt',
  'rivieres' => 'r.ih/v.ye.ih/r.eh.z / [r^r].[i^ih]/[v^v]. / failed phone:ye / failed spelling:ie',
  'riyad' => 'r.ee/aw.d / [r^r].[i^ee]/ / failed phone:aw / failed spelling:ya',
  'riyadh' => 'r.ee/ah.d / [r^r].[i^ee]/ / failed phone:ah / failed spelling:ya',
  'rizzolo' => 'r.ee.t/s.oh/l.oh / [r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'rizzuti' => 'r.ee.t/s.ue/t.ee / [r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'rizzuto' => 'r.ee.t/s.ue/t.oh / [r^r].[i^ee]. / failed phone:t / failed spelling:zz',
  'roache' => 'r.oh.ch / [r^r].[oa^oh].[ch^ch] / failed phone:t / failed spelling:ch',
  'roarke' => 'r.aw.r.k / [r^r].[oa^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'robbe' => 'r.aw.b / [r^r].[o^aw].[bb^b] / failed phone:b / failed spelling:bb',
  'robichaud' => 'r.aw/b.ih/sh.oh / [r^r].[o^aw]/[b^b].[i^ih]/[ch^sh].[a^oh] / failed phone:oh / failed spelling:ha',
  'robichaux' => 'r.aw/b.ih/sh.oh / [r^r].[o^aw]/[b^b].[i^ih]/[ch^sh].[a^oh] / failed phone:oh / failed spelling:ha',
  'robicheaux' => 'r.aw/b.ih/sh.oh / [r^r].[o^aw]/[b^b].[i^ih]/[che^sh].[a^oh] / failed phone:oh / failed spelling:he',
  'robideau' => 'r.aw/b.ih/d.oh / [r^r].[o^aw]/[b^b].[i^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'robidoux' => 'r.aw/b.ih/d.ue / [r^r].[o^aw]/[b^b].[i^ih]/[d^d].[ou^ue] / failed phone:ue / failed spelling:ou',
  'robitaille' => 'r.aw/b.ih/t.ay.l / [r^r].[o^aw]/[b^b].[i^ih]/[t^t].[a^ay].[il^l] / failed phone:l / failed spelling:il',
  'robl' => 'r.aw/b.eh.l / [r^r].[o^aw]/[b^b]. / failed phone:eh / failed spelling:l',
  'robles' => 'r.oh/b.eh.l.z / [r^r].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'robling' => 'r.oh/b.eh/l.ih.ng / [r^r].[o^oh]/[b^b]. / failed phone:eh / failed spelling:li',
  'rocchi' => 'r.oh/k.ee / [r^r].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'rocchio' => 'r.oh/k.ee/oh / [r^r].[o^oh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'roche' => 'r.oh.ch / [r^r].[o^oh].[ch^ch] / failed phone:t / failed spelling:ch',
  'rochelle' => 'r.oh/sh.eh.l / [r^r].[o^oh]/[ch^sh].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'rocke' => 'r.aw.k / [r^r].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'rockville' => 'r.aw.k/v.ih.l / [r^r].[o^aw].[ck^k]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'rockwell' => 'r.aw/kw.eh.l / [r^r].[o^aw]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'rockwood' => 'r.aw/kw.oo.d / [r^r].[o^aw]/[ck^kw]. / failed phone:oo / failed spelling:wo',
  'rocque' => 'r.aw.k / [r^r].[o^aw].[c^k] / failed phone:k / failed spelling:cq',
  'rodenbaugh' => 'r.aw/d.ih.n/b.ow / [r^r].[o^aw]/[d^d].[e^ih].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'roderick' => 'r.aw/d.r.ih.k / [r^r].[o^aw]/[d^d]. / failed phone:r / failed spelling:er',
  'rodgin' => 'r.aw/j.ih.n / [r^r].[o^aw]/[d^j]. / failed phone:ih / failed spelling:gi',
  'rodham' => 'r.aw/d.eh.m / [r^r].[o^aw]/[d^d]. / failed phone:eh / failed spelling:ha',
  'rodriques' => 'r.aw/d.r.ee/g.eh.s / [r^r].[o^aw]/[d^d].[r^r].[i^ee]/ / failed phone:g / failed spelling:qu',
  'roebke' => 'r.oh.b.k / [r^r].[oe^oh].[b^b].[k^k] / failed phone:k / failed spelling:ke',
  'roedl' => 'r.oh/d.eh.l / [r^r].[o^oh]/[ed^d]. / failed phone:eh / failed spelling:l',
  'roehl' => 'r.oh.l / [r^r].[o^oh]. / failed phone:l / failed spelling:eh',
  'roehling' => 'r.oh/l.ih.ng / [r^r].[o^oh]/ / failed phone:l / failed spelling:eh',
  'roehm' => 'r.oh.m / [r^r].[o^oh]. / failed phone:m / failed spelling:eh',
  'roehr' => 'r.aw.r / [r^r].[o^oh]. / failed phone:r / failed spelling:eh',
  'roehrich' => 'r.aw/r.ih.k / [r^r].[o^aw]/ / failed phone:r / failed spelling:eh',
  'roehrig' => 'r.aw/r.ih.g / [r^r].[o^aw]/ / failed phone:r / failed spelling:eh',
  'roehrs' => 'r.aw.r.z / [r^r].[o^oh]. / failed phone:r / failed spelling:eh',
  'roelke' => 'r.oh.l.k / [r^r].[o^oh].[el^l].[k^k] / failed phone:k / failed spelling:ke',
  'roelle' => 'r.oh.l / [r^r].[o^oh].[el^l] / failed phone:l / failed spelling:el',
  'roepke' => 'r.oh.p.k / [r^r].[oe^oh].[p^p].[k^k] / failed phone:k / failed spelling:ke',
  'roesch' => 'r.oh.sh / [r^r].[oe^oh].[sc^sh] / failed phone:sh / failed spelling:es',
  'roeske' => 'r.oh.s.k / [r^r].[oe^oh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'roesler' => 'r.oh/s.eh/l.er / [r^r].[oe^oh]/[s^s]. / failed phone:eh / failed spelling:le',
  'roessler' => 'r.oh/s.eh/l.er / [r^r].[oe^oh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'roethler' => 'r.oh/th.eh/l.er / [r^r].[oe^oh]/[th^th]. / failed phone:eh / failed spelling:le',
  'roffe' => 'r.aw.f / [r^r].[o^aw].[ff^f] / failed phone:f / failed spelling:ff',
  'rogacki' => 'r.eh/g.aw.t/s.k.ee / [r^r].[o^uh]/[g^g].[a^aw]. / failed phone:t / failed spelling:ck',
  'rogge' => 'r.aw.g / [r^r].[o^aw].[gg^g] / failed phone:g / failed spelling:gg',
  'roggio' => 'r.aw/z.ee/oh / [r^r].[o^aw]/ / failed phone:z / failed spelling:gg',
  'rogowski' => 'r.eh/g.aw.f/s.k.ee / [r^r].[o^uh]/[g^g].[o^aw]. / failed phone:f / failed spelling:ws',
  'rohde' => 'r.oh.d / [r^r].[oh^oh].[d^d] / failed phone:d / failed spelling:de',
  'rohe' => 'r.oh / [r^r].[oh^oh] / failed phone:oh / failed spelling:oh',
  'rohlicek' => 'r.aw/l.eh/ch.eh.k / [r^r].[o^aw]/ / failed phone:l / failed spelling:hl',
  'rohrbaugh' => 'r.aw.r/b.ow / [r^r].[oh^oh].[r^r]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'rohrer' => 'r.aw/r.er / [r^r].[o^aw]/ / failed phone:r / failed spelling:hr',
  'rohrich' => 'r.aw/r.ih.k / [r^r].[o^aw]/ / failed phone:r / failed spelling:hr',
  'rohrig' => 'r.aw/r.ih.g / [r^r].[o^aw]/ / failed phone:r / failed spelling:hr',
  'rojas' => 'r.oh/h.aw.s / [r^r].[o^oh]/ / failed phone:h / failed spelling:ja',
  'rojek' => 'r.oh/ye.eh.k / [r^r].[o^oh]/ / failed phone:ue / failed spelling:je',
  'rokosz' => 'r.aw/k.eh.sh / [r^r].[o^aw]/[k^k].[o^uh].[s^sh] / failed phone:sh / failed spelling:sz',
  'rolfe' => 'r.oh.l.f / [r^r].[o^oh].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'rolfes' => 'r.oh.l.f.s / [r^r].[o^oh].[l^l].[f^f]. / failed phone:s / failed spelling:es',
  'rolle' => 'r.oh.l / [r^r].[o^oh].[ll^l] / failed phone:l / failed spelling:ll',
  'romagnolo' => 'r.oh/m.aw/n.ye.oh/l.oh / [r^r].[o^oh]/[m^m].[a^aw]/[gn^n]. / failed phone:ye / failed spelling:ol',
  'romanowski' => 'r.eh/m.eh/n.aw.f/s.k.ee / [r^r].[o^uh]/[m^m].[a^ah]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'romelle' => 'r.eh/m.eh.l / [r^r].[o^uh]/[m^m].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'rondeau' => 'r.aw.n/d.oh / [r^r].[o^aw].[n^n]/[d^d]. / failed phone:oh / failed spelling:ea',
  'ronne' => 'r.aw.n / [r^r].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'ronstadt' => 'r.aw.n/s.t.ah.t / [r^r].[o^aw].[n^n]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'roode' => 'r.ue.d / [r^r].[oo^ue].[d^d] / failed phone:d / failed spelling:de',
  'rooke' => 'r.oo.k / [r^r].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'roome' => 'r.ue.m / [r^r].[oo^ue].[m^m] / failed phone:m / failed spelling:me',
  'rorke' => 'r.aw.r.k / [r^r].[o^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'rorrer' => 'r.aw/er.r / [r^r].[o^aw]/[r^er].[r^r] / failed phone:r / failed spelling:re',
  'rosabelle' => 'r.aw/s.eh/b.eh.l / [r^r].[o^aw]/[s^s].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'rosanne' => 'r.oh/z.ah.n / [r^r].[o^oh]/[s^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'rosch' => 'r.aw.sh / [r^r].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'roscher' => 'r.aw/sh.er / [r^r].[o^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'roseanne' => 'r.oh/z.ah.n / [r^r].[o^oh]/[se^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'rosendahl' => 'r.oh/z.eh.n/d.aw.l / [r^r].[o^oh]/[s^z].[e^eh].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'rosenkranz' => 'r.oh/z.eh.n/k.r.ah.n.t.s / [r^r].[o^oh]/[s^z].[e^eh].[n^n]/[k^k].[r^r].[a^ah].[n^n]. / failed phone:t / failed spelling:z',
  'roseville' => 'r.oh.z/v.ih.l / [r^r].[o^oh].[se^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'rosewicz' => 'r.oh/z.w.ih.t.s / [r^r].[o^oh]/[se^z].[w^w].[i^ih]. / failed phone:t / failed spelling:cz',
  'roske' => 'r.oh.s.k / [r^r].[o^oh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'rosse' => 'r.aw.s / [r^r].[o^aw].[ss^s] / failed phone:s / failed spelling:ss',
  'rossiya' => 'r.aw/s.ee/eh / [r^r].[o^aw]/[ss^s].[i^ee]/[y^eh] / failed phone:eh / failed spelling:ya',
  'rossler' => 'r.aw/s.eh/l.er / [r^r].[o^aw]/[ss^s]. / failed phone:eh / failed spelling:le',
  'roszak' => 'r.aw/sh.eh.k / [r^r].[o^aw]/[s^sh]. / failed phone:eh / failed spelling:za',
  'roszell' => 'r.aw/sh.eh.l / [r^r].[o^aw]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'roszkowski' => 'r.eh.sh/k.aw.f/s.k.ee / [r^r].[o^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'rotc' => 'aw/r.oh/t.ee/s.ee /  / failed phone:aw / failed spelling:ro',
  'rothmeier' => 'r.aw.th/m.igh.r / [r^r].[o^aw].[th^th]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'rothschilds' => 'r.aw.th/ch.igh.l.d.z / [r^r].[o^aw].[th^th]/ / failed phone:t / failed spelling:sc',
  'rouge' => 'r.ue.zh / [r^r].[ou^ue]. / failed phone:zh / failed spelling:ge',
  'rougeau' => 'r.ue/zh.oh / [r^r].[ou^ue]/ / failed phone:zh / failed spelling:ge',
  'rouillard' => 'r/w.ee/l.aw.r.d / [r^r]/ / failed phone:w / failed spelling:ou',
  'roukema' => 'r.ue.k/m.aw / [r^r].[ou^ue].[k^k]/ / failed phone:m / failed spelling:em',
  'rounsaville' => 'r.ue.n/s.eh/v.ih.l / [r^r].[ou^ue].[n^n]/[s^s].[a^ah]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'rourke' => 'r.aw.r.k / [r^r].[ou^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'rousse' => 'r.ow.s / [r^r].[ou^ow].[ss^s] / failed phone:s / failed spelling:ss',
  'rousseau' => 'r.ue/s.oh / [r^r].[ou^ue]/[ss^s]. / failed phone:oh / failed spelling:ea',
  'rousselle' => 'r.ue/s.eh.l / [r^r].[ou^ue]/[ss^s].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'roussin' => 'r.ue/s.ah.n / [r^r].[ou^ue]/[ss^s]. / failed phone:ah / failed spelling:in',
  'roux' => 'r.ue / [r^r].[ou^ue] / failed phone:ue / failed spelling:ou',
  'roxanne' => 'r.aw.k/s.ih.n / [r^r].[o^aw].[x^x]/[a^ih].[n^n] / failed phone:n / failed spelling:nn',
  'roye' => 'r.oy / [r^r].[oy^oy] / failed phone:oy / failed spelling:oy',
  'rozelle' => 'r.eh/z.eh.l / [r^r].[o^uh]/[z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'roznowski' => 'r.eh.z/n.aw.f/s.k.ee / [r^r].[o^uh].[z^z]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'rozycki' => 'r.eh/z.ih.t/s.k.ee / [r^r].[o^uh]/[z^z].[y^ih]. / failed phone:t / failed spelling:ck',
  'rpm' => 'aw.r/p.ee/eh.m /  / failed phone:oh / failed spelling:rp',
  'rubles' => 'r.ue/b.eh.l.z / [r^r].[u^ue]/[b^b]. / failed phone:eh / failed spelling:le',
  'rucci' => 'r.ue/ch.ee / [r^r].[u^ue]/ / failed phone:t / failed spelling:cc',
  'rucinski' => 'r.eh/ch.ih.n/s.k.ee / [r^r].[u^uh]/ / failed phone:t / failed spelling:ci',
  'rudelle' => 'r.eh/d.eh.l / [r^r].[u^uh]/[d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'rudzinski' => 'r.eh/j.ih.n/s.k.ee / [r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'ruehl' => 'r.oo.l / [r^r].[u^oo]. / failed phone:l / failed spelling:eh',
  'ruelle' => 'r.ue/eh.l / [r^r].[u^ue]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'ruesch' => 'r.ue.sh / [r^r].[ue^ue].[sc^sh] / failed phone:sh / failed spelling:es',
  'ruffled' => 'r.uh/f.eh.l.d / [r^r].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'ruffles' => 'r.uh/f.eh.l.z / [r^r].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'ruffling' => 'r.uh/f.eh/l.ih.ng / [r^r].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:li',
  'ruggeri' => 'r.ue/j.air/ee / [r^r].[u^ue]/[g^j]. / failed phone:air / failed spelling:ge',
  'ruggerio' => 'r.ue/j.air/ee/oh / [r^r].[u^ue]/[g^j]. / failed phone:air / failed spelling:ge',
  'ruggieri' => 'r.ue/j.ih/r.ee / [r^r].[u^ue]/[g^j]. / failed phone:ih / failed spelling:gi',
  'ruggiero' => 'r.ue/j.ih/r.oh / [r^r].[u^ue]/[g^j]. / failed phone:ih / failed spelling:gi',
  'ruggirello' => 'r.ue/j.ih/r.eh/l.oh / [r^r].[u^ue]/[g^j]. / failed phone:ih / failed spelling:gi',
  'ruggles' => 'r.uh/g.eh.l.z / [r^r].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'rugh' => 'r.uh / [r^r].[u^uh] / failed phone:uh / failed spelling:ug',
  'ruh' => 'r.uh / [r^r].[u^uh] / failed phone:uh / failed spelling:uh',
  'ruhl' => 'r.uh.l / [r^r].[u^uh]. / failed phone:l / failed spelling:hl',
  'ruhland' => 'r.uh/l.eh.n.d / [r^r].[u^uh]/ / failed phone:l / failed spelling:hl',
  'ruhle' => 'r.ue/eh.l / [r^r].[u^ue]/ / failed phone:eh / failed spelling:hl',
  'ruhlman' => 'r.ue.l/m.eh.n / [r^r].[u^ue]. / failed phone:l / failed spelling:hl',
  'ruhnke' => 'r.uh.ng.k / [r^r].[u^uh]. / failed phone:ng / failed spelling:hn',
  'ruhr' => 'r.oo.r / [r^r].[u^oo]. / failed phone:r / failed spelling:hr',
  'ruhrgas' => 'r.oo.r/g.eh.s / [r^r].[u^oo]. / failed phone:r / failed spelling:hr',
  'ruiz' => 'r.ue/w.ee.z / [r^r].[u^ue]/ / failed phone:w / failed spelling:iz',
  'rumbled' => 'r.uh.m/b.eh.l.d / [r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'rumbles' => 'r.uh.m/b.eh.l.z / [r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'rumbling' => 'r.uh.m/b.eh/l.ih.ng / [r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'rumblings' => 'r.uh.m/b.eh/l.ih.ng.z / [r^r].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'rumpled' => 'r.uh.m/p.eh.l.d / [r^r].[u^uh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'runde' => 'r.uh.n.d / [r^r].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'runkles' => 'r.uh.ng/k.eh.l.z / [r^r].[u^uh].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'rusch' => 'r.uh.sh / [r^r].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'rusche' => 'r.uh.sh / [r^r].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'ruscitti' => 'r.ue.s/ch.ee/t.ee / [r^r].[u^ue].[sc^s]/ / failed phone:t / failed spelling:it',
  'russe' => 'r.uh.s / [r^r].[u^uh].[ss^s] / failed phone:s / failed spelling:ss',
  'russellville' => 'r.uh/s.eh.l/v.ih.l / [r^r].[u^uh]/[ss^s].[e^eh].[ll^l]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'rustlers' => 'r.uh/s.eh/l.er.z / [r^r].[u^uh]/[st^s]. / failed phone:eh / failed spelling:le',
  'ruszkowski' => 'r.eh.sh/k.aw.f/s.k.ee / [r^r].[u^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'rutkowski' => 'r.eh.t/k.aw.f/s.k.ee / [r^r].[u^uh].[t^t]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'ruud' => 'r.ue.d / [r^r].[u^ue]. / failed phone:d / failed spelling:ud',
  'ruzich' => 'r.uh/z.ih.h / [r^r].[u^uh]/[z^z].[i^ih]. / failed phone:h / failed spelling:ch',
  'rwanda' => 'r.eh/w.aw.n/d.eh / [r^r]. / failed phone:eh / failed spelling:wa',
  'rwandan' => 'r.eh/w.aw.n/d.eh.n / [r^r]. / failed phone:eh / failed spelling:wa',
  'rwandans' => 'r.eh/w.aw.n/d.eh.n.z / [r^r]. / failed phone:eh / failed spelling:wa',
  'rwandese' => 'r.eh/w.aw/d.ee.z / [r^r]. / failed phone:eh / failed spelling:wa',
  'rybacki' => 'r.ih/b.aw.t/s.k.ee / [r^r].[y^ih]/[b^b].[a^aw]. / failed phone:t / failed spelling:ck',
  'rybarczyk' => 'r.ih/b.er/ch.ih.k / [r^r].[y^ih]/[b^b].[ar^er]/ / failed phone:t / failed spelling:cz',
  'rybicki' => 'r.ih/b.ih.t/s.k.ee / [r^r].[y^ih]/[b^b].[i^ih]. / failed phone:t / failed spelling:ck',
  'ryczek' => 'r.ih/ch.eh.k / [r^r].[y^ih]/ / failed phone:t / failed spelling:cz',
  'rydzewski' => 'r.ih/j.eh.f/s.k.ee / [r^r].[y^ih]/[d^j]. / failed phone:eh / failed spelling:ze',
  'rykowski' => 'r.ih/k.aw.f/s.k.ee / [r^r].[y^ih]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'ryzhkov' => 'r.igh.z/k.aw.v / [r^r].[y^igh].[z^z]/ / failed phone:k / failed spelling:hk',
  's' => 'eh.s /  / failed phone:eh / failed spelling:s',
  'saab' => 's.aw.b / [s^s].[a^aw]. / failed phone:b / failed spelling:ab',
  'saad' => 's.aw.d / [s^s].[a^aw]. / failed phone:d / failed spelling:ad',
  'saam' => 's.aw.m / [s^s].[a^aw]. / failed phone:m / failed spelling:am',
  'saamstaan' => 's.aw.m/s.t.aw.n / [s^s].[a^aw]. / failed phone:m / failed spelling:am',
  'saar' => 's.aw.r / [s^s].[a^oh]. / failed phone:r / failed spelling:ar',
  'saari' => 's.aw/r.ee / [s^s].[a^aw]/ / failed phone:r / failed spelling:ar',
  'saarinen' => 's.aw/r.ih/n.eh.n / [s^s].[a^aw]/ / failed phone:r / failed spelling:ar',
  'saatchi' => 's.aw/ch.ee / [s^s].[a^aw]/ / failed phone:t / failed spelling:at',
  'saathoff' => 's.aw.t/h.aw.f / [s^s].[a^aw]. / failed phone:t / failed spelling:at',
  'saavedra' => 's.aw/v.ay/d.r.eh / [s^s].[a^aw]/ / failed phone:v / failed spelling:av',
  'sables' => 's.ay/b.eh.l.z / [s^s].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'sabotaging' => 's.ah/b.eh/t.aw/zh.ih.ng / [s^s].[a^ah]/[b^b].[o^uh]/[t^t].[a^aw]/ / failed phone:zh / failed spelling:gi',
  'sabourin' => 's.ah/b.oo/r.ah.n / [s^s].[a^ah]/[b^b].[ou^oo]/[r^r]. / failed phone:ah / failed spelling:in',
  'saccharin' => 's.ah/k.er/eh.n / [s^s].[a^ah]/[cc^k]. / failed phone:er / failed spelling:ha',
  'saccharine' => 's.ah/k.er/igh.n / [s^s].[a^ah]/[cc^k]. / failed phone:er / failed spelling:ha',
  'saccoccio' => 's.aw/k.oh/ch.ee/oh / [s^s].[a^aw]/[cc^k].[o^oh]/ / failed phone:t / failed spelling:cc',
  'sackville' => 's.ah.k/v.ih.l / [s^s].[a^ah].[ck^k]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sacrilegious' => 's.ah/k.r.eh/l.eh/j.ih.s / [s^s].[a^ah]/[c^k].[r^r].[i^ih]/[l^l].[e^eh]/[g^j].[i^ih]. / failed phone:s / failed spelling:ou',
  'sadao' => 's.eh/d.ow / [s^s].[a^ah]/[d^d]. / failed phone:ow / failed spelling:ao',
  'saddlebags' => 's.ah/d.eh.l/b.ah.g.z / [s^s].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'saddled' => 's.ah/d.eh.l.d / [s^s].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'saddler' => 's.ah/d.eh/l.er / [s^s].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'saddles' => 's.ah/d.eh.l.z / [s^s].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'saddling' => 's.ah/d.eh/l.ih.ng / [s^s].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:li',
  'sadeh' => 's.aw/d.eh / [s^s].[a^aw]/[d^d].[e^eh] / failed phone:eh / failed spelling:eh',
  'sadowski' => 's.eh/d.aw.f/s.k.ee / [s^s].[a^ah]/[d^d].[o^aw]. / failed phone:f / failed spelling:ws',
  'saechao' => 's.ee/ch.ow / [s^s]. / failed phone:ee / failed spelling:ae',
  'saeger' => 's.eh/g.er / [s^s].[a^ah]/ / failed phone:g / failed spelling:eg',
  'saehan' => 's.ay/eh.n / [s^s].[a^ay]/[e^eh]. / failed phone:n / failed spelling:ha',
  'saemaul' => 's.ay/m.aw.l / [s^s].[a^ay]/ / failed phone:m / failed spelling:em',
  'saenger' => 's.eh.n/j.er / [s^s].[a^ah]. / failed phone:n / failed spelling:en',
  'saenz' => 's.ee.n.z / [s^s]. / failed phone:ee / failed spelling:ae',
  'saez' => 's.ee.z / [s^s]. / failed phone:ee / failed spelling:ae',
  'safier' => 's.eh/f.ih.r / [s^s].[a^ah]/[f^f].[i^ih]. / failed phone:r / failed spelling:er',
  'sahagian' => 's.eh/h.ee/j.ee/eh.n / [s^s].[a^ah]/[h^h]. / failed phone:ee / failed spelling:ag',
  'sahgal' => 's.aw/g.eh.l / [s^s].[a^aw]/ / failed phone:g / failed spelling:hg',
  'sahl' => 's.aw.l / [s^s].[a^aw]. / failed phone:l / failed spelling:hl',
  'sahlen' => 's.aw/l.eh.n / [s^s].[a^aw]/ / failed phone:l / failed spelling:hl',
  'sahli' => 's.aw/l.ee / [s^s].[a^aw]/ / failed phone:l / failed spelling:hl',
  'sahlin' => 's.aw/l.ih.n / [s^s].[a^aw]/ / failed phone:l / failed spelling:hl',
  'sahlman' => 's.aw.l/m.eh.n / [s^s].[a^aw]. / failed phone:l / failed spelling:hl',
  'sahm' => 's.ah.m / [s^s].[a^ah]. / failed phone:m / failed spelling:hm',
  'sahr' => 's.ah.r / [s^s].[a^ah]. / failed phone:r / failed spelling:hr',
  'saia' => 's.aw/ye.eh / [s^s].[a^aw]/ / failed phone:ue / failed spelling:ia',
  'sajdak' => 's.igh/d.eh.k / [s^s]. / failed phone:igh / failed spelling:aj',
  'sakharov' => 's.aw/k.er/aw.v / [s^s].[a^aw]/[k^k]. / failed phone:er / failed spelling:ha',
  'sakowski' => 's.eh/k.aw.f/s.k.ee / [s^s].[a^ah]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'salaam' => 's.eh/l.aw.m / [s^s].[a^ah]/[l^l].[a^aw]. / failed phone:m / failed spelling:am',
  'salables' => 's.ay/l.eh/b.eh.l.z / [s^s].[a^ay]/[l^l].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'salameh' => 's.aw/l.aw/m.eh / [s^s].[a^aw]/[l^l].[a^aw]/[m^m].[e^eh] / failed phone:eh / failed spelling:eh',
  'salcedo' => 's.aw.l/ch.ay/d.oh / [s^s].[a^aw].[l^l]/ / failed phone:t / failed spelling:ce',
  'salcido' => 's.aw.l/ch.ee/d.oh / [s^s].[a^aw].[l^l]/ / failed phone:t / failed spelling:ci',
  'salemme' => 's.ah/l.ih.m / [s^s].[a^ah]/[l^l].[e^ih].[m^m] / failed phone:m / failed spelling:mm',
  'saleswomen' => 's.ay.l/z.w.ih/m.eh.n / [s^s].[a^ay].[le^l]/[s^z].[w^w]. / failed phone:ih / failed spelling:om',
  'salisbury' => 's.ah.l.z/b.er/ee / [s^s].[a^ah].[l^l]. / failed phone:z / failed spelling:is',
  'salle' => 's.ay.l / [s^s].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'salois' => 's.eh.l/w.aw / [s^s].[a^ah].[l^l]/ / failed phone:w / failed spelling:oi',
  'salus' => 's.ah/l.ih.s / [s^s].[a^ah]/[l^l]. / failed phone:ih / failed spelling:us',
  'salvaggio' => 's.aw.l/v.aw/j.ee/oh / [s^s].[a^aw].[l^l]/[v^v].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'salvatierra' => 's.aw.l/v.aw/t.ih/r.eh / [s^s].[a^aw].[l^l]/[v^v].[a^aw]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'salve' => 's.aw.v / [s^s].[a^aw]. / failed phone:v / failed spelling:lv',
  'salves' => 's.aw.v.z / [s^s].[a^aw]. / failed phone:v / failed spelling:lv',
  'salvucci' => 's.aw.l/v.ue/ch.ee / [s^s].[a^aw].[l^l]/[v^v].[u^ue]/ / failed phone:t / failed spelling:cc',
  'salzburg' => 's.aw.l.t.s/b.er.g / [s^s].[a^aw].[l^l]. / failed phone:t / failed spelling:zb',
  'salzgitter' => 's.aw.l.t.s/g.ih/t.er / [s^s].[a^aw].[l^l]. / failed phone:t / failed spelling:zg',
  'salzhauer' => 's.aw.l.t.s/h.ow.r / [s^s].[a^aw].[l^l]. / failed phone:t / failed spelling:zh',
  'samelle' => 's.eh/m.eh.l / [s^s].[a^ah]/[m^m].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'samojlik' => 's.eh/m.oy/l.ih.k / [s^s].[a^ah]/[m^m]. / failed phone:oy / failed spelling:oj',
  'sampled' => 's.ah.m/p.eh.l.d / [s^s].[a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'samples' => 's.ah.m/p.eh.l.z / [s^s].[a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'samuelle' => 's.ah/m.ye.ue/eh.l / [s^s].[a^ah]/[m^m].[u^ue]/[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'samurais' => 's.ah/m.er/ih.z / [s^s].[a^ah]/[m^m].[ur^er]/[a^ih]. / failed phone:z / failed spelling:is',
  'sanaa' => 's.eh/n.aw / [s^s].[a^ah]/[n^n].[a^aw] / failed phone:aw / failed spelling:aa',
  'sancia' => 's.aw.n/ch.eh / [s^s].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'sandahl' => 's.ah.n/d.aw.l / [s^s].[a^ah].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'sande' => 's.ah.n.d / [s^s].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'sandling' => 's.ah.d/l.ih.ng / [s^s].[a^ah]. / failed phone:d / failed spelling:nd',
  'sandt' => 's.ah.n.t / [s^s].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'sanjuan' => 's.aw/n.ye.ue/aw.n / [s^s].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ju',
  'santacroce' => 's.aw.n/t.aw/k.r.oh/ch.ee / [s^s].[a^aw].[n^n]/[t^t].[a^aw]/[c^k].[r^r].[o^oh]/ / failed phone:t / failed spelling:ce',
  'santarsiero' => 's.aw.n/t.aw.r/s.ih/r.oh / [s^s].[a^aw].[n^n]/[t^t].[a^oh].[r^r]/[s^s].[i^ih]/ / failed phone:r / failed spelling:er',
  'santayana' => 's.ah.n/t.igh/aw/n.eh / [s^s].[a^ah].[n^n]/[t^t]. / failed phone:igh / failed spelling:ay',
  'santerre' => 's.ah.n/t.air / [s^s].[a^ah].[n^n]/[t^t].[er^air] / failed phone:air / failed spelling:rr',
  'santucci' => 's.aw.n/t.ue/ch.ee / [s^s].[a^aw].[n^n]/[t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'sanville' => 's.aw.n/v.ih.l / [s^s].[a^aw].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sao' => 's.ow / [s^s]. / failed phone:ow / failed spelling:ao',
  'saouma' => 's.ow/ye.ue/m.eh / [s^s]. / failed phone:ow / failed spelling:ao',
  'sapphire' => 's.ah/f.igh/er / [s^s].[a^ah]/ / failed phone:f / failed spelling:pp',
  'saraceni' => 's.aw/r.aw/ch.eh/n.ee / [s^s].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'saraceno' => 's.aw/r.aw/ch.eh/n.oh / [s^s].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'saracino' => 's.aw/r.aw/ch.ee/n.oh / [s^s].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ci',
  'sarajevan' => 's.aw/r.eh/ye.ay/v.eh.n / [s^s].[a^aw]/[r^r].[a^ah]/ / failed phone:ye / failed spelling:je',
  'sarajevans' => 's.aw/r.eh/ye.ay/v.eh.n.z / [s^s].[a^aw]/[r^r].[a^ah]/ / failed phone:ye / failed spelling:je',
  'sarajevo' => 's.aw/r.eh/ye.ay/v.oh / [s^s].[a^aw]/[r^r].[a^ah]/ / failed phone:ye / failed spelling:je',
  'sarandon' => 's.air/eh.n/d.ih.n / [s^s].[ar^air]/[a^ah].[n^n]/[d^d]. / failed phone:ih / failed spelling:on',
  'sarcoma' => 's.aw.r/k.oh/m.er / [s^s].[a^oh].[r^r]/[c^k].[o^oh]/[m^m]. / failed phone:er / failed spelling:a',
  'sarejevo' => 's.aw/r.eh/ye.ay/v.oh / [s^s].[a^aw]/[r^r].[e^eh]/ / failed phone:ye / failed spelling:je',
  'sarkisian' => 's.aw.r/k.ih/zh.ih.n / [s^s].[a^oh].[r^r]/[k^k].[i^ih]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'sarkissian' => 's.aw.r/k.ih.s/zh.ih.n / [s^s].[a^oh].[r^r]/[k^k].[i^ih].[s^s]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'sarnowski' => 's.er/n.aw.f/s.k.ee / [s^s].[ar^er]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'sartorius' => 's.aw.r/t.aw/r.ee/ih.s / [s^s].[a^oh].[r^r]/[t^t].[o^aw]/[r^r].[i^ee]/ / failed phone:ih / failed spelling:us',
  'sasse' => 's.ah.s / [s^s].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'satagaj' => 's.ah/t.eh/g.igh / [s^s].[a^ah]/[t^t].[a^ah]/[g^g]. / failed phone:igh / failed spelling:aj',
  'satirize' => 's.ah/t.air/igh.z / [s^s].[a^ah]/[t^t]. / failed phone:air / failed spelling:ir',
  'satisfactorily' => 's.ah/t.ih/s.f.ah.k/t.r.eh/l.ee / [s^s].[a^ah]/[t^t].[i^ih]/[s^s].[f^f].[a^ah].[c^k]/[t^t]. / failed phone:r / failed spelling:or',
  'satisfactory' => 's.ah/t.eh/s.f.ah.k/t.r.ee / [s^s].[a^ah]/[t^t].[i^ih]/[s^s].[f^f].[a^ah].[c^k]/[t^t]. / failed phone:r / failed spelling:or',
  'saut' => 's.aw/t.ay.d / [s^s].[au^aw]/[t^t]. / failed phone:ay / failed spelling:',
  'sauvageau' => 's.oh/v.eh/zh.oh / [s^s].[au^oh]/[v^v].[a^ah]/ / failed phone:zh / failed spelling:ge',
  'sauvignon' => 's.aw/v.ih/n.ye.aw.n / [s^s].[au^aw]/[v^v].[i^ih]/[gn^n]. / failed phone:ye / failed spelling:on',
  'saville' => 's.aw/v.ih.l / [s^s].[a^aw]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'savior' => 's.ay/v.ye.er / [s^s].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'saviors' => 's.ay/v.ye.er.z / [s^s].[a^ay]/[v^v]. / failed phone:er / failed spelling:io',
  'savoia' => 's.aw/v.oh/ye.eh / [s^s].[a^aw]/[v^v].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'savoie' => 's.aw.v/w.aw / [s^s].[a^aw].[v^v]/ / failed phone:aw / failed spelling:i',
  'savviest' => 's.ah/v.ee/ih.s.t / [s^s].[a^ah]/[v^v]. / failed phone:ee / failed spelling:vi',
  'savvy' => 's.ah/v.ee / [s^s].[a^ah]/[v^v]. / failed phone:ee / failed spelling:vy',
  'sawicki' => 's.aw/ih.t/s.k.ee / [s^s].[aw^aw]/[i^ih]. / failed phone:t / failed spelling:ck',
  'sawicz' => 's.ow/ih.t.s / [s^s].[aw^aw]/[i^ih]. / failed phone:t / failed spelling:cz',
  'sawtelle' => 's.aw/t.eh.l / [s^s].[aw^aw]/[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'saxe' => 's.ah.k.s / [s^s].[a^ah].[x^x] / failed phone:s / failed spelling:e',
  'sayad' => 's.igh/ah.d / [s^s]. / failed phone:igh / failed spelling:ay',
  'saye' => 's.ay / [s^s].[a^ay] / failed phone:ay / failed spelling:ay',
  'sayre' => 's.air / [s^s]. / failed phone:air / failed spelling:ay',
  'sayres' => 's.air.z / [s^s]. / failed phone:air / failed spelling:ay',
  'sbf' => 'eh.s/b.ee/eh.f /  / failed phone:eh / failed spelling:sb',
  'scaccia' => 's.k.aw/ch.eh / [s^s].[c^k].[a^aw]/ / failed phone:t / failed spelling:cc',
  'scaife' => 's.k.ay.f / [s^s].[c^k].[ai^ay].[f^f] / failed phone:f / failed spelling:if',
  'schaab' => 'sh.aw.b / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaack' => 'sh.aw.k / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaad' => 'sh.aw.d / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaadt' => 'sh.aw.t / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaaf' => 'sh.aw.f / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaafsma' => 'sh.aw.f/s.m.eh / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaal' => 'sh.aw.l / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaap' => 'sh.aw.p / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaar' => 'sh.aw.r / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schab' => 'sh.ah.b / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schabacker' => 'sh.aw/b.ah/k.er / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schabel' => 'sh.ah/b.eh.l / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaben' => 'sh.ah/b.eh.n / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaber' => 'sh.ay/b.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schaberg' => 'sh.aw/b.er.g / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schabes' => 'sh.ay.b.z / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schacher' => 'sh.ah/k.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schachner' => 'sh.ah.k/n.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schacht' => 'sh.ah.k.t / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schachter' => 'sh.ah.k/t.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schack' => 'sh.ah.k / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schad' => 'sh.ah.d / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schade' => 'sh.ay.d / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schadel' => 'sh.ah/d.eh.l / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaden' => 'sh.ah/d.eh.n / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schader' => 'sh.ay/d.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schadler' => 'sh.ay/d.eh/l.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schadt' => 'sh.ah.t / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaecher' => 'sh.eh/k.er / [sc^sh]. / failed phone:eh / failed spelling:ha',
  'schaedel' => 'sh.eh/d.eh.l / [sc^sh]. / failed phone:eh / failed spelling:ha',
  'schaedler' => 'sh.eh/d.eh/l.er / [sc^sh]. / failed phone:eh / failed spelling:ha',
  'schaefer' => 'sh.ay/f.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schaefers' => 'sh.ay.f.r.z / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schaeffer' => 'sh.eh/f.er / [sc^sh]. / failed phone:eh / failed spelling:ha',
  'schaer' => 'sh.aw/er / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schafer' => 'sh.ay/f.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schaff' => 'sh.ah.f / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaffer' => 'sh.ay/f.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schaffert' => 'sh.ah/f.er.t / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaffner' => 'sh.ah.f/n.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schairer' => 'sh.igh/er.r / [sc^sh]. / failed phone:igh / failed spelling:ha',
  'schaja' => 'sh.aw/j.eh / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schake' => 'sh.ay.k / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schalk' => 'sh.aw.k / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schall' => 'sh.aw.l / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schaller' => 'sh.aw/l.er / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schallock' => 'sh.ah/l.eh.k / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schalow' => 'sh.ah/l.oh / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schama' => 'sh.aw/m.eh / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schamber' => 'sh.ah.m/b.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schamberger' => 'sh.ah.m/b.er/g.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schamel' => 'sh.ah/m.eh.l / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schamp' => 'sh.ah.m.p / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schanbacher' => 'sh.ah.n/b.aw/k.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schanck' => 'sh.ah.ng.k / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaner' => 'sh.ay/n.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schank' => 'sh.ah.ng.k / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schantz' => 'sh.ah.n.t.s / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schanz' => 'sh.ah.n.s / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schaper' => 'sh.ay/p.er / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schapiro' => 'sh.ah/p.igh/r.oh / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schappell' => 'sh.ah/p.eh.l / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schappert' => 'sh.ah/p.er.t / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schar' => 'sh.aw.r / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schardt' => 'sh.aw.r.t / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharenberg' => 'sh.air/eh.n/b.er.g / [sc^sh]. / failed phone:air / failed spelling:ha',
  'scharer' => 'sh.air/er / [sc^sh]. / failed phone:air / failed spelling:ha',
  'scharf' => 'sh.aw.r.f / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharfe' => 's.k.aw.r.f / [s^s].[ch^k].[a^oh].[r^r].[f^f] / failed phone:f / failed spelling:fe',
  'scharfenberg' => 'sh.aw.r/f.eh.n/b.er.g / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharff' => 'sh.aw.r.f / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharffenberger' => 'sh.aw.r/f.eh.n/b.er/g.er / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharlau' => 'sh.aw.r/l.ow / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharnhorst' => 'sh.aw.r.n/h.aw.r.s.t / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharp' => 'sh.aw.r.p / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharpf' => 'sh.aw.r.p.f / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharr' => 'sh.aw.r / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'scharrer' => 'sh.aw/r.er / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schartz' => 'sh.aw.r.t.s / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schattner' => 'sh.ah.t/n.er / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schatz' => 'sh.ah.t.s / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schatzberg' => 'sh.ah.t.s/b.er.g / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schatzel' => 'sh.ah.t/z.eh.l / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schatzman' => 'sh.ah.t.z/m.eh.n / [sc^sh]. / failed phone:ah / failed spelling:ha',
  'schau' => 'sh.oh / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schaub' => 'sh.aw.b / [sc^sh]. / failed phone:aw / failed spelling:ha',
  'schauble' => 'sh.oh/b.eh.l / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schauer' => 'sh.ow/er / [sc^sh]. / failed phone:ow / failed spelling:ha',
  'schauf' => 'sh.ow.f / [sc^sh]. / failed phone:ow / failed spelling:ha',
  'schaufler' => 'sh.ow/f.eh/l.er / [sc^sh]. / failed phone:ow / failed spelling:ha',
  'schaul' => 'sh.oh.l / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schaum' => 'sh.oh.m / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schaumberg' => 'sh.oh.m/b.er.g / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schaumburg' => 'sh.ow.m/b.er.g / [sc^sh]. / failed phone:ow / failed spelling:ha',
  'schaut' => 'sh.oh.t / [sc^sh]. / failed phone:oh / failed spelling:ha',
  'schave' => 'sh.ay.v / [sc^sh]. / failed phone:ay / failed spelling:ha',
  'schear' => 'sh.ih.r / [sc^sh]. / failed phone:ih / failed spelling:he',
  'schechter' => 'sh.eh.k/t.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schechtman' => 'sh.eh.k.t/m.eh.n / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheck' => 'sh.eh.k / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheckel' => 'sh.eh/k.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schecter' => 'sh.eh.k/t.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schedler' => 'sh.eh/d.eh/l.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schedulers' => 's.k.eh.d/j.oo/l.er.z / [s^s].[ch^k].[e^eh].[d^d]/ / failed phone:j / failed spelling:ul',
  'scheel' => 'sh.ee.l / [sc^sh]. / failed phone:ee / failed spelling:he',
  'scheele' => 'sh.ee.l / [sc^sh]. / failed phone:ee / failed spelling:he',
  'scheeler' => 'sh.ee/l.er / [sc^sh]. / failed phone:ee / failed spelling:he',
  'scheer' => 'sh.ih.r / [sc^sh]. / failed phone:ih / failed spelling:he',
  'scheerer' => 'sh.ih/r.er / [sc^sh]. / failed phone:ih / failed spelling:he',
  'scheets' => 'sh.ee.t.s / [sc^sh]. / failed phone:ee / failed spelling:he',
  'scheetz' => 'sh.ee.t.s / [sc^sh]. / failed phone:ee / failed spelling:he',
  'scheff' => 'sh.eh.f / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheffel' => 'sh.eh/f.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheffer' => 'sh.eh/f.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheffler' => 'sh.eh/f.eh/l.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schehr' => 'sh.air / [sc^sh]. / failed phone:air / failed spelling:he',
  'scheib' => 'sh.igh.b / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheibe' => 'sh.igh.b / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheibel' => 'sh.igh/b.eh.l / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheiber' => 'sh.igh/b.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheibner' => 'sh.igh.b/n.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheid' => 'sh.igh.d / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheidecker' => 'sh.igh/d.ih/k.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheidegger' => 'sh.igh/d.ih/g.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheidel' => 'sh.igh/d.eh.l / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheider' => 'sh.igh/d.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheiderer' => 'sh.igh/d.er/er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheidler' => 'sh.igh/d.eh/l.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheidt' => 'sh.igh.t / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheier' => 'sh.igh/er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheiman' => 'sh.igh/m.eh.n / [sc^sh]. / failed phone:igh / failed spelling:he',
  'schein' => 'sh.igh.n / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheinberg' => 'sh.igh.n/b.er.g / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheiner' => 'sh.igh/n.er / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheirer' => 'sh.igh/er.r / [sc^sh]. / failed phone:igh / failed spelling:he',
  'scheler' => 'sh.ee/l.er / [sc^sh]. / failed phone:ee / failed spelling:he',
  'schelin' => 'sh.eh/l.ih.n / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellenberg' => 'sh.eh/l.eh.n/b.er.g / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellenberger' => 'sh.eh/l.eh.n/b.er/g.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellenger' => 'sh.eh/l.ih.n/j.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellhammer' => 'sh.eh.l/h.eh/m.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellhase' => 'sh.eh.l/h.eh.s / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellhorn' => 'sh.eh.l/h.er.n / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schellinger' => 'sh.eh/l.ih.ng/er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schembri' => 'sh.eh.m/b.r.ee / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schemel' => 'sh.eh/m.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schemm' => 'sh.eh.m / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schemmel' => 'sh.eh/m.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schempf' => 'sh.eh.m.f / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schempp' => 'sh.eh.m.p / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schena' => 'sh.ee/n.eh / [sc^sh]. / failed phone:ee / failed spelling:he',
  'schenck' => 'sh.eh.ng.k / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schendel' => 'sh.eh.n/d.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schenk' => 'sh.eh.ng.k / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schenkel' => 'sh.eh.ng/k.eh.l / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schenker' => 'sh.eh.ng/k.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schenley' => 'sh.eh.n/l.ee / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheper' => 'sh.ee/p.er / [sc^sh]. / failed phone:ee / failed spelling:he',
  'schepers' => 'sh.ee/p.er.z / [sc^sh]. / failed phone:ee / failed spelling:he',
  'schepis' => 'sh.eh/p.ih.s / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schepp' => 'sh.eh.p / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scher' => 'sh.er / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherb' => 'sh.er.b / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherbarth' => 'sh.er/b.aw.r.th / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherer' => 'sh.ih/r.er / [sc^sh]. / failed phone:ih / failed spelling:he',
  'scherf' => 'sh.er.f / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherff' => 'sh.er.f / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherger' => 'sh.er/g.er / [sc^sh]. / failed phone:er / failed spelling:he',
  'schering' => 'sh.er/ih.ng / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherlis' => 'sh.er/l.ih.s / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherman' => 'sh.er/m.eh.n / [sc^sh]. / failed phone:er / failed spelling:he',
  'schermer' => 'sh.er/m.er / [sc^sh]. / failed phone:er / failed spelling:he',
  'schermerhorn' => 'sh.er/m.er/h.er.n / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherr' => 'sh.air / [sc^sh]. / failed phone:air / failed spelling:he',
  'scherrer' => 'sh.air/er / [sc^sh]. / failed phone:air / failed spelling:he',
  'schertz' => 'sh.er.t.s / [sc^sh]. / failed phone:er / failed spelling:he',
  'schertzer' => 'sh.er.t/s.er / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherz' => 'sh.er.z / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherzer' => 'sh.er/z.er / [sc^sh]. / failed phone:er / failed spelling:he',
  'scherzinger' => 'sh.er/z.ih.ng/er / [sc^sh]. / failed phone:er / failed spelling:he',
  'schetter' => 'sh.eh/t.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schettino' => 'sh.eh/t.ee/n.oh / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schettler' => 'sh.eh/t.eh/l.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'scheu' => 'sh.oy / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheuer' => 'sh.oy/er / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheuerman' => 'sh.oy/er/m.eh.n / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheuermann' => 'sh.oy/er/m.eh.n / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheufler' => 'sh.oy/f.eh/l.er / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheunemann' => 'sh.oy.n/m.eh.n / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheurer' => 'sh.er/er / [sc^sh]. / failed phone:er / failed spelling:he',
  'scheurich' => 'sh.oy/r.ih.k / [sc^sh]. / failed phone:oy / failed spelling:he',
  'scheuring' => 'sh.er/ih.ng / [sc^sh]. / failed phone:er / failed spelling:he',
  'scheve' => 'sh.ee.v / [sc^sh]. / failed phone:ee / failed spelling:he',
  'schewe' => 'sh/ye.ue / [sc^sh]/ / failed phone:ue / failed spelling:he',
  'schexnayder' => 'sh.eh.k/s.n.ay/d.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schexnider' => 'sh.eh.k/s.n.igh/d.er / [sc^sh]. / failed phone:eh / failed spelling:he',
  'schey' => 'sh.ay / [sc^sh]. / failed phone:ay / failed spelling:he',
  'schick' => 'sh.ih.k / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schicker' => 'sh.ih/k.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schickler' => 'sh.ih/k.eh/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schickling' => 'sh.ih/k.eh/l.ih.ng / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiebel' => 'sh.ee/b.eh.l / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schieber' => 'sh.ee/b.er / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiefelbein' => 'sh.ee/f.ih.l/b.igh.n / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiefer' => 'sh.ee/f.er / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schieffelin' => 'sh.ee/f.eh/l.ih.n / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schieffer' => 'sh.ee/f.er / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiel' => 'sh.ee.l / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schield' => 'sh.ee.l.d / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiele' => 'sh.ee.l / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schielke' => 'sh.ee.l.k / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiemann' => 'sh.ee/m.eh.n / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schier' => 'sh.igh/er / [sc^sh]. / failed phone:igh / failed spelling:hi',
  'schieren' => 'sh.ih/r.eh.n / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schierl' => 'sh.ih.r.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiess' => 'sh.ee.s / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiesser' => 'sh.ee/s.er / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiewe' => 'sh.ee/w.ee / [sc^sh]. / failed phone:ee / failed spelling:hi',
  'schiff' => 'sh.ih.f / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiffbauer' => 'sh.ih.f/b.ow/er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiffer' => 'sh.ih/f.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiffler' => 'sh.ih/f.eh/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiffman' => 'sh.ih.f/m.eh.n / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiffner' => 'sh.ih.f/n.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schild' => 'sh.igh.l.d / [sc^sh]. / failed phone:igh / failed spelling:hi',
  'schilder' => 'sh.igh.l/d.er / [sc^sh]. / failed phone:igh / failed spelling:hi',
  'schildknecht' => 'sh.igh.l.d/k.eh/n.eh.k.t / [sc^sh]. / failed phone:igh / failed spelling:hi',
  'schildt' => 'sh.ih.l.t / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schilke' => 'sh.ih.l.k / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schill' => 'sh.ih.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schillaci' => 's.k.ee/l.aw/ch.ee / [s^s].[ch^k].[i^ee]/[ll^l].[a^aw]/ / failed phone:t / failed spelling:ci',
  'schiller' => 'sh.ih/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schilling' => 'sh.ih/l.ih.ng / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schillinger' => 'sh.ih/l.ih.ng/er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schillings' => 'sh.ih/l.ih.ng.z / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schilt' => 'sh.ih.l.t / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiltknecht' => 'sh.ih.l.t/n.eh.k.t / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schiltz' => 'sh.ih.l.t.s / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schilz' => 'sh.ih.l.z / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimberni' => 'sh.ih.m/b.er/n.ee / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimek' => 'sh.ih/m.ih.k / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimke' => 's.k.ih.m.k / [s^s].[ch^k].[i^ih].[m^m].[k^k] / failed phone:k / failed spelling:ke',
  'schimmel' => 'sh.ih/m.eh.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimmelbusch' => 'sh.ih/m.eh.l/b.oo.sh / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimming' => 'sh.ih/m.ih.ng / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schimpf' => 'sh.ih.m.p.f / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schindel' => 'sh.ih.n/d.eh.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schindler' => 'sh.ih.n.d/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schinke' => 's.k.ih.ng.k / [s^s].[ch^k].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'schinkel' => 'sh.ih.ng/k.eh.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schipke' => 'sh.ih.p/k.ee / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schipper' => 'sh.ih/p.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schippers' => 'sh.ih/p.er.z / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schirm' => 'sh.er.m / [sc^sh]. / failed phone:er / failed spelling:hi',
  'schirmer' => 'sh.er/m.er / [sc^sh]. / failed phone:er / failed spelling:hi',
  'schirtzinger' => 'sh.er.t/z.ih.ng/er / [sc^sh]. / failed phone:er / failed spelling:hi',
  'schisler' => 'sh.ih/s.eh/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schissel' => 'sh.ih/s.eh.l / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schissler' => 'sh.ih/s.eh/l.er / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schists' => 'sh.ih.s.t.s / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schizophrenia' => 's.k.ih.t/s.eh/f.r.ee/n.ee/eh / [s^s].[ch^k].[i^ih]. / failed phone:t / failed spelling:zo',
  'schizophrenic' => 'sh.ih/z.eh/f.r.eh/n.ih.k / [sc^sh]. / failed phone:ih / failed spelling:hi',
  'schlabach' => 'sh.l.ah/b.aw.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlachter' => 'sh.l.ah.k/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlack' => 'sh.l.ah.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlafer' => 'sh.l.ay/f.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlafly' => 'sh.l.ah/f.l.ee / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlag' => 'sh.l.ah.g / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlagel' => 'sh.l.ah/g.eh.l / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlager' => 'sh.l.ay/g.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlageter' => 'sh.l.ah/g.ee/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlake' => 'sh.l.ay.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlang' => 'sh.l.ah.ng / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlangen' => 'sh.l.ah.ng/eh.n / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlanger' => 'sh.l.ah.ng/er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlarb' => 'sh.l.aw.r.b / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlater' => 'sh.l.ay/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlatter' => 'sh.l.ah/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlauch' => 'sh.l.ow.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlecht' => 'sh.l.eh.k.t / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlechter' => 'sh.l.eh.k/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlee' => 'sh.l.ee / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleeter' => 'sh.l.ee/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlegel' => 'sh.l.ay/g.eh.l / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlegelmilch' => 'sh.l.eh/g.ih.l/m.ih.l.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleich' => 'sh.l.igh.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleicher' => 'sh.l.igh/k.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleif' => 'sh.l.igh.f / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleifer' => 'sh.l.igh/f.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleiger' => 'sh.l.igh/g.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleimer' => 'sh.l.igh/m.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlein' => 'sh.l.igh.n / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleis' => 'sh.l.igh.z / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlemmer' => 'sh.l.eh/m.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlender' => 'sh.l.eh.n/d.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlenker' => 'sh.l.eh.ng/k.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlep' => 'sh.l.eh.p / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlepp' => 'sh.l.eh.p / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlereth' => 'sh.l.air/ih.th / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlesinger' => 'sh.l.eh/s.ih.n/j.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlesser' => 'sh.l.eh/s.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlessinger' => 'sh.l.eh/s.ih.n/j.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleswig' => 'sh.l.eh/s.w.ih.g / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schley' => 'sh.l.ay / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schleyer' => 'sh.l.ay/er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlicher' => 'sh.l.ih/k.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlicht' => 'sh.l.ih.k.t / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlichter' => 'sh.l.ih.k/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlichting' => 'sh.l.ih.k/t.ih.ng / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlick' => 'sh.l.ih.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlicker' => 'sh.l.ih/k.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlie' => 'sh.l.ee / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schliep' => 'sh.l.ee.p / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlieper' => 'sh.l.ee/p.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlink' => 'sh.l.ih.ng.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlitt' => 'sh.l.ih.t / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlitter' => 'sh.l.ih/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlitz' => 'sh.l.ih.t.s / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlobohm' => 'sh.l.aw/b.oh.m / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlock' => 'sh.l.aw.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schloemer' => 'sh.l.oh/m.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schloesser' => 'sh.l.aw/ih/s.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlosberg' => 'sh.l.aw.s/b.er.g / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schloss' => 'sh.l.aw.s / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlossberg' => 'sh.l.aw.s/b.er.g / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlosser' => 'sh.l.aw/s.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlossman' => 'sh.l.aw/s.m.eh.n / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlott' => 'sh.l.aw.t / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlotter' => 'sh.l.aw/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlotterbeck' => 'sh.l.aw/t.er/b.eh.k / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlottman' => 'sh.l.aw.t/m.eh.n / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlotzhauer' => 'sh.l.aw.t.s/h.ow/er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlough' => 'sh.l.ow / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlueter' => 'sh.l.oo/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlumberger' => 'sh.l.uh.m/b.er/zh.ay / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlund' => 'sh.l.uh.n.d / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schlup' => 'sh.l.uh.p / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schluter' => 'sh.l.ue/t.er / [sc^sh]. / failed phone:l / failed spelling:hl',
  'schmader' => 'sh.m.ay/d.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmahl' => 'sh.m.aw.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmal' => 'sh.m.ah.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmale' => 'sh.m.ay.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmall' => 'sh.m.aw.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmaltz' => 'sh.m.aw.l.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmalz' => 'sh.m.aw.l.z / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmaus' => 'sh.m.ow.z / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmechel' => 'sh.m.eh/k.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeck' => 'sh.m.eh.k / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmehl' => 'sh.m.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeichel' => 'sh.m.igh/k.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeiser' => 'sh.m.igh/s.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeling' => 'sh.m.eh/l.ih.ng / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmelter' => 'sh.m.eh.l/t.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeltz' => 'sh.m.eh.l.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmeltzer' => 'sh.m.eh.l.t/z.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmelz' => 'sh.m.eh.l.z / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmelzer' => 'sh.m.eh.l/z.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmelzle' => 'sh.m.eh.l/z.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmergel' => 'sh.m.er/g.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmertz' => 'sh.m.er.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmetterer' => 'sh.m.eh/t.er/er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmick' => 'sh.m.ih.k / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmid' => 'sh.m.ih.d / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmidgall' => 'sh.m.ih/j.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmidl' => 'sh.m.ih/d.eh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmidlin' => 'sh.m.ih.d/l.ih.n / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmidt' => 'sh.m.ih.t / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmidtke' => 'sh.m.ih.t/k.ee / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmied' => 'sh.m.igh.d / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmieder' => 'sh.m.igh/d.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmieg' => 'sh.m.ee.g / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmierer' => 'sh.m.igh/er/er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmiesing' => 'sh.m.ee/s.ih.ng / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmit' => 'sh.m.ih.t / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmitt' => 'sh.m.ih.t / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmitter' => 'sh.m.ih/t.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmittou' => 'sh.m.ih/ch.ue / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmitz' => 'sh.m.ih.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmitzer' => 'sh.m.ih.t/s.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmoker' => 'sh.m.oh/k.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmoldt' => 'sh.m.oh.l.t / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmoll' => 'sh.m.aw.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmoozing' => 'sh.m.ue/z.ih.ng / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmotzer' => 'sh.m.oh.t/z.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmoyer' => 'sh.m.oy/er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmuck' => 'sh.m.uh.k / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmucker' => 'sh.m.uh/k.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmuckler' => 'sh.m.uh/k.l.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmuhl' => 'sh.m.uh.l / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmults' => 'sh.m.uh.l.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmunk' => 'sh.m.uh.ng.k / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmutz' => 'sh.m.uh.t.s / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schmutzler' => 'sh.m.uh.t/z.eh/l.er / [sc^sh]. / failed phone:m / failed spelling:hm',
  'schnelle' => 'sh.n.eh.l / [sc^sh].[hn^n].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'schnettler' => 'sh.n.eh/t.eh/l.er / [sc^sh].[hn^n].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'schobel' => 'sh.oh/b.eh.l / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schober' => 'sh.oh/b.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoeck' => 'sh.oh.k / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoeffler' => 'sh.oh/f.eh/l.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoeller' => 'sh.oh/l.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoellhorn' => 'sh.oh.l/h.aw.r.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoemaker' => 'sh.oh/m.ay/k.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoen' => 'sh.oh.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenbaum' => 'sh.oh.n/b.ow.m / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenbeck' => 'sh.oh.n/b.eh.k / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenberg' => 'sh.oh.n/b.er.g / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenberger' => 'sh.oh.n/b.er/g.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenborn' => 'sh.oh.n/b.er.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoendorf' => 'sh.oh.n/d.aw.r.f / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoeneck' => 'sh.oh/n.eh.k / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenecker' => 'sh.oh/n.eh/k.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoener' => 'sh.oh/n.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenfeld' => 'sh.oh.n/f.eh.l.d / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenfelder' => 'sh.oh.n/f.eh.l/d.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenfeldt' => 'sh.oh.n/f.ih.l.t / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenhals' => 'sh.oh.n/h.eh.l.z / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenherr' => 'sh.oh.n/h.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenholtz' => 'sh.oh.n/h.oh.l.t.s / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenig' => 'sh.oh/n.ih.g / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenrock' => 'sh.oh.n/r.eh.k / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenthal' => 'sh.oh.n/th.aw.l / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoenwald' => 'sh.oh.n/w.aw.l.d / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoepe' => 'sh.oh.p / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoepf' => 'sh.oh.p / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoepke' => 'sh.oh.p/k.ee / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoepp' => 'sh.oh.p / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoeppner' => 'sh.oh.p/n.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoettle' => 'sh.oh/t.eh.l / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholer' => 'sh.oh/l.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholey' => 'sh.oh/l.ee / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholle' => 'sh.oh.l / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholten' => 'sh.oh.l/t.eh.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholtes' => 'sh.oh.l.t.s / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholtz' => 'sh.oh.l.t.s / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholz' => 'sh.oh.l.z / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'scholze' => 'sh.oh.l.z / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schomaker' => 'sh.oh/m.ay/k.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schomer' => 'sh.oh/m.er / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schone' => 'sh.oh.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoneman' => 'sh.oh.n/m.eh.n / [sc^sh]. / failed phone:oh / failed spelling:ho',
  'schoo' => 'sh.ue / [sc^sh]. / failed phone:ue / failed spelling:ho',
  'schoof' => 'sh.oo.f / [sc^sh]. / failed phone:oo / failed spelling:ho',
  'schook' => 'sh.oo.k / [sc^sh]. / failed phone:oo / failed spelling:ho',
  'schoonmaker' => 'sh.ue.n/m.ay/k.er / [sc^sh]. / failed phone:ue / failed spelling:ho',
  'schoonover' => 'sh.ue/n.eh/v.er / [sc^sh]. / failed phone:ue / failed spelling:ho',
  'schorsch' => 'sh.aw.r.sh / [sc^sh].[ho^aw].[r^r].[sc^sh] / failed phone:sh / failed spelling:sc',
  'schou' => 'sh.ue / [sc^sh]. / failed phone:ue / failed spelling:ho',
  'schow' => 'sh.ow / [sc^sh]. / failed phone:ow / failed spelling:ho',
  'schowalter' => 'sh.ow/eh.l/t.er / [sc^sh]. / failed phone:ow / failed spelling:ho',
  'schrack' => 'sh.r.ah.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrade' => 'sh.r.ay.d / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrader' => 'sh.r.ay/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schraeder' => 'sh.r.eh/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrag' => 'sh.r.ah.g / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrage' => 'sh.r.ay.j / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrager' => 'sh.r.ay/g.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schram' => 'sh.r.ah.m / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schramm' => 'sh.r.ah.m / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrandt' => 'sh.r.ah.n.t / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrank' => 'sh.r.ah.ng.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrantz' => 'sh.r.ah.n.t.s / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schranz' => 'sh.r.ah.n.s / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schraufnagel' => 'sh.r.ow.f/n.eh/g.eh.l / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrecengost' => 'sh.r.eh/s.ih.ng/g.eh.s.t / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreck' => 'sh.r.eh.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreckengost' => 'sh.r.eh/k.ih.ng/g.eh.s.t / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrecongost' => 'sh.r.eh/k.eh.ng/g.eh.s.t / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreder' => 'sh.r.ee/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreffler' => 'sh.r.eh/f.eh/l.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreger' => 'sh.r.eh/g.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreiber' => 'sh.r.igh/b.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreibman' => 'sh.r.igh.b/m.eh.n / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreier' => 'sh.r.igh/er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreifels' => 'sh.r.igh/f.eh.l.z / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreiner' => 'sh.r.igh/n.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreiter' => 'sh.r.igh/t.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schremp' => 'sh.r.eh.m.p / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrempf' => 'sh.r.eh.m.p.f / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrempp' => 'sh.r.eh.m.p / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrenk' => 'sh.r.eh.ng.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreur' => 'sh.r.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreurs' => 'sh.r.er.z / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schreyer' => 'sh.r.igh.r / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schriber' => 'sh.r.igh/b.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrick' => 'sh.r.ih.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schricker' => 'sh.r.ih/k.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrieber' => 'sh.r.ee/b.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schriefer' => 'sh.r.ee/f.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrier' => 'sh.r.igh/er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schriever' => 'sh.r.ee/v.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrimpf' => 'sh.r.ih.m.p.f / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrimsher' => 'sh.r.ih.m/sh.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schriner' => 'sh.r.igh/n.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schriver' => 'sh.r.igh/v.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroader' => 'sh.r.oh/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrock' => 'sh.r.aw.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroder' => 'sh.r.oh/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroders' => 'sh.r.oh/d.er.z / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrodt' => 'sh.r.aw.t / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroeck' => 'sh.r.oh.k / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroeder' => 'sh.r.oh/d.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroedl' => 'sh.r.oh/d.eh.l / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroepfer' => 'sh.r.oh.p/f.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroer' => 'sh.r.oh/er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroeter' => 'sh.r.oh/t.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroff' => 'sh.r.aw.f / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroll' => 'sh.r.oh.l / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrom' => 'sh.r.aw.m / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schronce' => 'sh.r.aw.n.s / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schropp' => 'sh.r.aw.p / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroth' => 'sh.r.aw.th / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schroyer' => 'sh.r.oy/er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrum' => 'sh.r.uh.m / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrumpf' => 'sh.r.uh.m.p.f / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schrupp' => 'sh.r.uh.p / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schryer' => 'sh.r.igh/er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schryver' => 'sh.r.igh/v.er / [sc^sh]. / failed phone:r / failed spelling:hr',
  'schubel' => 'sh.ue/b.eh.l / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schubert' => 'sh.ue/b.er.t / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuchardt' => 'sh.uh/k.aw.r.t / [sc^sh].[hu^uh]/[ch^k].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'schue' => 'sh.ue / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuele' => 'sh.ue.l / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schueler' => 'sh.ue/l.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuelke' => 'sh.ue.l.k / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schueller' => 'sh.ue/l.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schueneman' => 'sh.ue/n.eh/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuenemann' => 'sh.ue/n.eh/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuerman' => 'sh.ue/er/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuermann' => 'sh.ue/er/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuessler' => 'sh.ue/s.l.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuetz' => 'sh.ue.t.s / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuetze' => 'sh.ue.t.s / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuh' => 'sh.ue / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuhmacher' => 'sh.ue/m.aw/k.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuhmann' => 'sh.ue/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuitema' => 'sh.ue/t.ih/m.eh / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schul' => 'sh.oo.l / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schuld' => 'sh.oo.d / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schuldener' => 'sh.ue.l/d.eh/n.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuldt' => 'sh.oo.l.t / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schulenberg' => 'sh.ue/l.eh.n/b.er.g / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schulenburg' => 'sh.ue/l.eh.n/b.er.g / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuler' => 'sh.ue/l.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schulhof' => 'sh.ue.l/h.aw.f / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schulke' => 'sh.oo.l/k.ee / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schull' => 'sh.oo.l / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schuller' => 'sh.ue/l.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schulman' => 'sh.ue.l/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schulof' => 'sh.ue/l.aw.f / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schultz' => 'sh.oo.l.t.s / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schulz' => 'sh.oo.l.t.s / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schulze' => 'sh.oo.l.t.s / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schumacher' => 'sh.ue/m.aw/k.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schumacker' => 'sh.ue/m.aw/k.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schumaker' => 'sh.ue/m.ay/k.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuman' => 'sh.ue/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schumann' => 'sh.ue/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schumer' => 'sh.ue/m.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuneman' => 'sh.ue.n/m.eh.n / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schupak' => 'sh.ue/p.ah.k / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schur' => 'sh.er / [sc^sh]. / failed phone:er / failed spelling:hu',
  'schuring' => 'sh.er/ih.ng / [sc^sh]. / failed phone:er / failed spelling:hu',
  'schurman' => 'sh.er/m.eh.n / [sc^sh]. / failed phone:er / failed spelling:hu',
  'schurr' => 'sh.er / [sc^sh]. / failed phone:er / failed spelling:hu',
  'schuster' => 'sh.ue/s.t.er / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuth' => 'sh.ue.th / [sc^sh]. / failed phone:ue / failed spelling:hu',
  'schuur' => 'sh.oo.r / [sc^sh]. / failed phone:oo / failed spelling:hu',
  'schuylkill' => 's.k.ye.ue.l/k.ih.l / [s^s].[ch^k].[u^ue]. / failed phone:l / failed spelling:yl',
  'schwab' => 'sh.w.aw.b / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwabe' => 'sh.w.aw.b / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwaderer' => 'sh.w.aw/d.er/er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwager' => 'sh.w.ay/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwahn' => 'sh.w.aw.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwaiger' => 'sh.w.igh/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwake' => 'sh.w.ay.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwalb' => 'sh.w.aw.l.b / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwalbach' => 'sh.w.aw.l/b.aw.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwalbe' => 'sh.w.aw.l.b / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwall' => 'sh.w.aw.l / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwaller' => 'sh.w.aw/l.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwalm' => 'sh.w.aw.l.m / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwam' => 'sh.w.aw.m / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwan' => 'sh.w.aw.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwandt' => 'sh.w.aw.n.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwanke' => 'sh.w.aw.ng.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwantes' => 'sh.w.aw.n.t.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwanz' => 'sh.w.aw.n.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwark' => 'sh.w.aw.r.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarm' => 'sh.w.aw.r.m / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwartz' => 'sh.w.aw.r.t.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwartzberg' => 'sh.w.aw.r.t.s/b.er.g / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwartzkopf' => 'sh.w.aw.r.t/s.k.aw.p.f / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwartzman' => 'sh.w.aw.r.t/s.m.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarz' => 'sh.w.aw.r.t.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarze' => 'sh.w.aw.r.t.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarzenegger' => 'sh.w.aw.r/z.eh/n.ay/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarzer' => 'sh.w.aw.r.t/s.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarzkopf' => 'sh.w.aw.r.t/s.k.aw.p.f / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwarzman' => 'sh.w.aw.r.t/s.m.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwebach' => 'sh.w.eh/b.aw.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwebel' => 'sh.w.eh/b.eh.l / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwebke' => 'sh.w.eh.b.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwed' => 'sh.w.eh.d / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweda' => 'sh.w.ee/d.eh / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwede' => 'sh.w.ee.d / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweder' => 'sh.w.ee/d.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweer' => 'sh.w.ih.r / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweers' => 'sh.w.ih.r.z / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwegel' => 'sh.w.eh/g.eh.l / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwegler' => 'sh.w.eh/g.eh/l.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwegman' => 'sh.w.eh.g/m.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweich' => 'sh.w.igh.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweickert' => 'sh.w.igh/k.er.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweiger' => 'sh.w.igh/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweigert' => 'sh.w.igh/g.er.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweighardt' => 'sh.w.igh.g/h.aw.r.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweikert' => 'sh.w.igh/k.er.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweinsberg' => 'sh.w.igh.n.s/b.er.g / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweiss' => 'sh.w.igh.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweitzer' => 'sh.w.igh.t/s.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweizer' => 'sh.w.igh/z.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweizerische' => 'sh.w.igh/z.er/ih.sh / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwemm' => 'sh.w.eh.m / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwemmer' => 'sh.w.eh/m.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwendeman' => 'sh.w.eh.n.d/m.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwenk' => 'sh.w.eh.ng.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwenke' => 'sh.w.eh.ng.k / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwenker' => 'sh.w.eh.ng/k.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwenn' => 'sh.w.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwent' => 'sh.w.eh.n.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweppe' => 'sh.w.eh.p / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schweppes' => 'sh.w.eh.p.s / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwer' => 'sh.w.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwerdloff' => 'sh.w.er.d/l.aw.f / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwerdt' => 'sh.w.er.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwerdtfeger' => 'sh.w.er.t/f.ay/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwerin' => 'sh.w.air/ih.n / [sc^sh]. / failed phone:ah / failed spelling:hw',
  'schwering' => 'sh.w.ih/r.ih.ng / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwerner' => 'sh.w.er/n.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwertfeger' => 'sh.w.er.t/f.ih/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwertner' => 'sh.w.er.t/n.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwichtenberg' => 'sh.w.ih.k/t.eh.n/b.er.g / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwieger' => 'sh.w.ee/g.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwier' => 'sh.w.igh/er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwiesow' => 'sh.w.ee/s.oh / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwieterman' => 'sh.w.ee/t.er/m.eh.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwimmer' => 'sh.w.ih/m.er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwind' => 'sh.w.ih.n.d / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwindt' => 'sh.w.ih.n.t / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwing' => 'sh.w.ih.ng / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwinger' => 'sh.w.ih.ng/er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwinn' => 'sh.w.ih.n / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwisow' => 'sh.w.ih/s.oh / [sc^sh]. / failed phone:w / failed spelling:hw',
  'schwoerer' => 'sh.w.oh/er/er / [sc^sh]. / failed phone:w / failed spelling:hw',
  'sciacca' => 's.k.aw/k.aw / [s^s].[c^k]. / failed phone:aw / failed spelling:ia',
  'scialabba' => 's.k.aw/l.aw/b.eh / [s^s].[c^k]. / failed phone:aw / failed spelling:ia',
  'scialdone' => 'sh.aw.l/d.oh/n.ee / [sc^sh]. / failed phone:aw / failed spelling:ia',
  'sciandra' => 'sh.aw.n/d.r.eh / [sc^sh]. / failed phone:aw / failed spelling:ia',
  'scianna' => 'sh.aw/n.eh / [sc^sh]. / failed phone:aw / failed spelling:ia',
  'sciara' => 'sh.aw/r.eh / [sc^sh]. / failed phone:aw / failed spelling:ia',
  'sciarrino' => 'sh.er/ee/n.oh / [sc^sh]. / failed phone:er / failed spelling:ia',
  'sciascia' => 'sh.aw.s/ch.eh / [sc^sh]. / failed phone:aw / failed spelling:ia',
  'scicchitano' => 's.ih/k.ih/t.aw/n.oh / [sc^s].[i^ih]/[cc^k]. / failed phone:ih / failed spelling:hi',
  'scissors' => 's.ih/z.er.z / [sc^s].[i^ih]/[s^z]. / failed phone:er / failed spelling:so',
  'scoville' => 's.k.oh/v.ih.l / [s^s].[c^k].[o^oh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'scozzafava' => 's.k.oh.t/s.aw/f.aw/v.eh / [s^s].[c^k].[o^oh]. / failed phone:t / failed spelling:zz',
  'scrambled' => 's.k.r.ah.m/b.eh.l.d / [s^s].[c^k].[r^r].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'scrambles' => 's.k.r.ah.m/b.eh.l.z / [s^s].[c^k].[r^r].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'scrambling' => 's.k.r.ah.m/b.eh/l.ih.ng / [s^s].[c^k].[r^r].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'scribbled' => 's.k.r.ih/b.eh.l.d / [s^s].[c^k].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'scribbles' => 's.k.r.ih/b.eh.l.z / [s^s].[c^k].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'scribbling' => 's.k.r.ih/b.eh/l.ih.ng / [s^s].[c^k].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:li',
  'scruples' => 's.k.r.ue/p.eh.l.z / [s^s].[c^k].[r^r].[u^ue]/[p^p]. / failed phone:eh / failed spelling:le',
  'scuffled' => 's.k.uh/f.eh.l.d / [s^s].[c^k].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'scuffles' => 's.k.uh/f.eh.l.z / [s^s].[c^k].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'scuttled' => 's.k.uh/t.eh.l.d / [s^s].[c^k].[u^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'scuttling' => 's.k.uh/t.eh/l.ih.ng / [s^s].[c^k].[u^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'sczepanski' => 's.ih/p.ah.n/s.k.ee / [sc^s]. / failed phone:ih / failed spelling:ze',
  'sdn' => 'eh.s/d.ee/eh.n /  / failed phone:eh / failed spelling:sd',
  'se' => 's.ow/th.ee.s.t / [se^s]. / failed phone:ow / failed spelling:',
  'sean' => 'sh.aw.n / [s^sh]. / failed phone:aw / failed spelling:ea',
  'seaq' => 's.ee.k / [s^s].[e^ee]. / failed phone:k / failed spelling:aq',
  'searles' => 's.aw/r.eh.l.z / [se^s].[a^aw]/[r^r]. / failed phone:eh / failed spelling:le',
  'secchia' => 's.eh/k.ee/eh / [s^s].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'sedgley' => 's.eh.j/l.ee / [s^s].[e^eh].[d^j]/ / failed phone:l / failed spelling:gl',
  'sedgwick' => 's.eh.j/w.ih.k / [s^s].[e^eh].[d^j]/ / failed phone:w / failed spelling:gw',
  'seefeldt' => 's.ee/f.ih.l.t / [se^s].[e^ee]/[f^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'seidl' => 's.igh/d.eh.l / [se^s].[i^igh]/[d^d]. / failed phone:eh / failed spelling:l',
  'seigler' => 's.igh/g.eh/l.er / [se^s].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'sejm' => 's.ay.m / [s^s].[e^ay]. / failed phone:m / failed spelling:jm',
  'selbe' => 's.eh.l.b / [s^s].[e^eh].[l^l].[b^b] / failed phone:b / failed spelling:be',
  'selke' => 's.eh.l.k / [s^s].[e^eh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'selle' => 's.eh.l / [s^s].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'selvaggio' => 's.eh.l/v.aw/j.ee/oh / [s^s].[e^eh].[l^l]/[v^v].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'senior' => 's.ee/n.ye.er / [s^s].[e^ee]/[n^n]. / failed phone:er / failed spelling:io',
  'seniority' => 's.ee/n.ye.aw/r.ih/t.ee / [s^s].[e^ee]/[n^n]. / failed phone:ye / failed spelling:io',
  'seniornet' => 's.ee/n.ye.er/n.eh.t / [s^s].[e^ee]/[n^n]. / failed phone:r / failed spelling:io',
  'seniors' => 's.ee/n.ye.er.z / [s^s].[e^ee]/[n^n]. / failed phone:er / failed spelling:io',
  'senne' => 's.eh.n / [s^s].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'senske' => 's.eh.n.s.k / [s^s].[e^eh].[n^n].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'sensual' => 's.eh.n/ch.eh/w.eh.l / [s^s].[e^eh].[n^n]/ / failed phone:t / failed spelling:su',
  'sensuality' => 's.eh.n/ch.eh/w.ah/l.eh/t.ee / [s^s].[e^eh].[n^n]/ / failed phone:t / failed spelling:su',
  'sensuous' => 's.eh.n/ch.eh/w.eh.s / [s^s].[e^eh].[n^n]/ / failed phone:t / failed spelling:su',
  'sentelle' => 's.eh.n/t.eh.l / [s^s].[e^eh].[n^n]/[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'separate' => 's.eh/p.r.eh.t / [s^s].[e^eh]/[p^p]. / failed phone:r / failed spelling:ar',
  'septimus' => 's.eh.p/t.ih/m.ih.s / [s^s].[e^eh].[p^p]/[t^t].[i^ih]/[m^m]. / failed phone:ih / failed spelling:us',
  'sequeira' => 's.ay/kw.air/eh / [s^s].[e^ay]/[qu^kw]. / failed phone:air / failed spelling:ei',
  'sergeant' => 's.aw.r/j.eh.n.t / [se^s]. / failed phone:oh / failed spelling:rg',
  'sergeants' => 's.aw.r/j.eh.n.t.s / [se^s]. / failed phone:oh / failed spelling:rg',
  'serle' => 's.aw/r.eh.l / [se^s]. / failed phone:aw / failed spelling:rl',
  'serrao' => 's.air/ow / [s^s].[er^air]/ / failed phone:ow / failed spelling:ra',
  'servaas' => 's.er/v.aw.s / [se^s].[r^er]/[v^v].[a^aw]. / failed phone:s / failed spelling:as',
  'servais' => 's.er/v.ay / [se^s].[r^er]/[v^v].[a^ay] / failed phone:ay / failed spelling:ai',
  'sesdaq' => 's.eh.s/d.ah.k / [s^s].[e^eh].[s^s]/[d^d].[a^ah]. / failed phone:k / failed spelling:q',
  'sesler' => 's.eh/s.eh/l.er / [s^s].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'settled' => 's.eh/t.eh.l.d / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'settlement' => 's.eh/t.eh.l/m.eh.n.t / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'settlements' => 's.eh/t.eh.l/m.eh.n.t.s / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'settler' => 's.eh/t.eh/l.er / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'settles' => 's.eh/t.eh.l.z / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'settling' => 's.eh/t.eh/l.ih.ng / [s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'seville' => 's.eh/v.ih.l / [s^s].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sew' => 's.oh / [se^s]. / failed phone:oh / failed spelling:w',
  'sewed' => 's.oh.d / [se^s]. / failed phone:oh / failed spelling:we',
  'sewing' => 's.oh/ih.ng / [se^s]. / failed phone:oh / failed spelling:wi',
  'sewn' => 's.oh.n / [se^s]. / failed phone:oh / failed spelling:wn',
  'sexual' => 's.eh.k/sh.ue/eh.l / [s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'sexuality' => 's.eh.k/sh.ue/ah/l.eh/t.ee / [s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'sexually' => 's.eh.k/sh.ue/eh/l.ee / [s^s].[e^eh].[x^k]/ / failed phone:sh / failed spelling:ua',
  'seydoux' => 's.ay/d.ue / [s^s].[ey^ay]/[d^d].[ou^ue] / failed phone:ue / failed spelling:ou',
  'sferrazza' => 's.f.er/aw.t/s.eh / [s^s].[f^f].[err^er]/[a^aw]. / failed phone:t / failed spelling:zz',
  'sfuzzi' => 's.f.ue.t/z.ee / [s^s].[f^f].[u^ue]. / failed phone:t / failed spelling:zz',
  'sgambati' => 's.k.aw.m/b.aw/t.ee / [s^s]. / failed phone:k / failed spelling:ga',
  'sgro' => 's.k.r.oh / [s^s]. / failed phone:k / failed spelling:gr',
  'sgroi' => 's.k.r.oy / [s^s]. / failed phone:k / failed spelling:gr',
  'sh' => 'eh/s.ay.ch /  / failed phone:eh / failed spelling:sh',
  'shaak' => 'sh.aw.k / [sh^sh].[a^aw]. / failed phone:k / failed spelling:ak',
  'shaanxi' => 'sh.aw.ng.k/s.ee / [sh^sh].[a^aw]. / failed phone:ng / failed spelling:an',
  'shaath' => 'sh.aw.th / [sh^sh].[a^aw]. / failed phone:th / failed spelling:at',
  'shackled' => 'sh.ah/k.eh.l.d / [sh^sh].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'shackles' => 'sh.ah/k.eh.l.z / [sh^sh].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'shackleton' => 'sh.ah/k.eh.l/t.eh.n / [sh^sh].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'shaefer' => 'sh.ay/f.er / [sh^sh].[a^ay]/ / failed phone:f / failed spelling:ef',
  'shaeffer' => 'sh.eh/f.er / [sh^sh].[a^ah]/ / failed phone:f / failed spelling:ef',
  'shah' => 'sh.aw / [sh^sh].[a^aw] / failed phone:aw / failed spelling:ha',
  'shahrokh' => 'sh.aw/r.aw.k / [sh^sh].[a^aw]/ / failed phone:r / failed spelling:hr',
  'shahrzad' => 'sh.aw.r/z.ah.d / [sh^sh].[a^oh]. / failed phone:r / failed spelling:hr',
  'shaikh' => 'sh.ay.k / [sh^sh].[ai^ay].[k^k] / failed phone:k / failed spelling:ik',
  'shambles' => 'sh.ah.m/b.eh.l.z / [sh^sh].[a^ah].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'shankles' => 'sh.ah.ng/k.eh.l.z / [sh^sh].[a^ah].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'shao' => 'sh.ow / [s^sh]. / failed phone:ow / failed spelling:ha',
  'shaq' => 'sh.ah.k / [sh^sh].[a^ah]. / failed phone:k / failed spelling:q',
  'shaquille' => 'sh.eh/k.ee.l / [sh^sh].[a^ah]/[qu^k].[i^ee].[ll^l] / failed phone:l / failed spelling:ll',
  'sharpeville' => 'sh.aw.r/p.eh/v.ih.l / [sh^sh].[a^oh].[r^r]/[p^p].[e^eh]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sharples' => 'sh.aw.r/p.eh.l.z / [sh^sh].[a^oh].[r^r]/[p^p]. / failed phone:eh / failed spelling:le',
  'shcharansky' => 'sh.er/ah.n/s.k.ee / [s^sh]. / failed phone:er / failed spelling:hc',
  'shchedrin' => 'sh.eh/d.r.ih.n / [s^sh]. / failed phone:eh / failed spelling:hc',
  'shcherbitsky' => 'sh.er/b.ih.t/s.k.ee / [s^sh]. / failed phone:er / failed spelling:hc',
  'sheahan' => 'sh.ee/eh.n / [sh^sh].[e^ee]/[ah^eh]. / failed phone:n / failed spelling:an',
  'sheehan' => 'sh.ee/eh.n / [sh^sh].[e^ee]/[e^eh]. / failed phone:n / failed spelling:ha',
  'sheikh' => 'sh.ee.k / [sh^sh].[ei^ee].[k^k] / failed phone:k / failed spelling:ik',
  'shelbyville' => 'sh.eh.l/b.ee/v.ih.l / [sh^sh].[e^eh].[l^l]/[b^b].[y^ee]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sheldahl' => 'sh.eh.l/d.aw.l / [sh^sh].[e^eh].[l^l]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'shenzhen' => 'sh.eh.n/zh.eh.n / [sh^sh].[e^eh].[n^n]/[z^zh]. / failed phone:eh / failed spelling:he',
  'shepherd' => 'sh.eh/p.er.d / [sh^sh].[e^eh]/[p^p]. / failed phone:er / failed spelling:he',
  'shepherded' => 'sh.eh/p.er/d.ih.d / [sh^sh].[e^eh]/[p^p]. / failed phone:er / failed spelling:he',
  'shepherding' => 'sh.eh/p.er/d.ih.ng / [sh^sh].[e^eh]/[p^p]. / failed phone:er / failed spelling:he',
  'shepherds' => 'sh.eh/p.er.d.z / [sh^sh].[e^eh]/[p^p]. / failed phone:er / failed spelling:he',
  'shidler' => 'sh.igh/d.eh/l.er / [sh^sh].[i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'shieh' => 'sh.ee / [sh^sh].[ie^ee] / failed phone:ee / failed spelling:hi',
  'shih' => 'sh.ee / [sh^sh].[i^ee] / failed phone:ee / failed spelling:hi',
  'shiina' => 'sh.ee/n.eh / [sh^sh].[i^ee]/ / failed phone:n / failed spelling:in',
  'shingles' => 'sh.ih.ng/g.eh.l.z / [sh^sh].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'shingleton' => 'sh.ih.ng/g.eh.l/t.eh.n / [sh^sh].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'shirrell' => 'sh.aw/r.eh.l / [s^sh]. / failed phone:aw / failed spelling:hi',
  'shisler' => 'sh.ih/s.eh/l.er / [sh^sh].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'shiu' => 'sh.ue / [s^sh]. / failed phone:ue / failed spelling:hi',
  'shiyuan' => 'sh.ee/ue/aw.n / [sh^sh].[i^ee]/ / failed phone:ue / failed spelling:yu',
  'shoe' => 'sh.ue / [sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'shoehorn' => 'sh.ue/h.aw.r.n / [sh^sh].[o^ue]/ / failed phone:h / failed spelling:eh',
  'shoehorned' => 'sh.ue/h.aw.r.n.d / [sh^sh].[o^ue]/ / failed phone:h / failed spelling:eh',
  'shoemake' => 'sh.ue/m.ay.k / [sh^sh].[o^ue]/ / failed phone:m / failed spelling:em',
  'shoemaker' => 'sh.ue/m.ay/k.er / [sh^sh].[o^ue]/ / failed phone:m / failed spelling:em',
  'shoemate' => 'sh.ue/m.ay.t / [sh^sh].[o^ue]/ / failed phone:m / failed spelling:em',
  'shoen' => 'sh.ue.n / [sh^sh].[o^ue]. / failed phone:n / failed spelling:en',
  'shoeshine' => 'sh.ue/sh.igh.n / [sh^sh].[o^ue]/ / failed phone:sh / failed spelling:es',
  'shoestring' => 'sh.ue/s.t.r.ih.ng / [sh^sh].[o^ue]/ / failed phone:s / failed spelling:es',
  'shokhin' => 'sh.oh/k.ih.n / [sh^sh].[o^oh]/[k^k]. / failed phone:ih / failed spelling:hi',
  'shonkwiler' => 'sh.aw.ng/kw.igh/l.er / [s^sh].[ho^aw].[n^ng]/ / failed phone:kw / failed spelling:kw',
  'shor' => 'sh.ee/er / [s^sh]. / failed phone:ee / failed spelling:ho',
  'shoreham' => 'sh.aw/r.eh.m / [s^sh].[ho^aw]/[r^r].[e^eh]. / failed phone:m / failed spelling:ha',
  'shuffled' => 'sh.uh/f.eh.l.d / [s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'shuffler' => 'sh.uh/f.eh/l.er / [s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'shufflers' => 'sh.uh/f.eh/l.er.z / [s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'shuffles' => 'sh.uh/f.eh.l.z / [s^sh].[hu^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'shuttled' => 'sh.uh/t.eh.l.d / [s^sh].[hu^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'shuttles' => 'sh.uh/t.eh.l.z / [s^sh].[hu^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'shuttlesworth' => 'sh.uh/t.eh.l/z.w.er.th / [s^sh].[hu^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'shuttleworth' => 'sh.uh/t.eh.l/w.er.th / [s^sh].[hu^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'shuttling' => 'sh.uh/t.eh/l.ih.ng / [s^sh].[hu^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'siang' => 's/ye.ah.ng / [s^s]/ / failed phone:ye / failed spelling:ia',
  'sias' => 'zh.aw.z / [s^zh]. / failed phone:aw / failed spelling:ia',
  'sibelle' => 's.ih/b.eh.l / [s^s].[i^ih]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'sibille' => 's.ih/b.ih.l / [s^s].[i^ih]/[b^b].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sicilia' => 's.ih/s.ih/l.ye.eh / [s^s].[i^ih]/[c^s].[i^ih]/[l^l]. / failed phone:ue / failed spelling:ia',
  'siciliano' => 's.ee/ch.ee/l.ee/aw/n.oh / [s^s].[i^ee]/ / failed phone:t / failed spelling:ci',
  'sickles' => 's.ih/k.eh.l.z / [s^s].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'siddhartha' => 's.ih/d.aw.r/t.uh / [s^s].[i^ih]/[dd^d]. / failed phone:oh / failed spelling:ha',
  'siddiqi' => 's.ee/d.ee/k.ee / [s^s].[i^ee]/[dd^d].[i^ee]/ / failed phone:k / failed spelling:qi',
  'sidler' => 's.igh/d.eh/l.er / [s^s].[i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'siebe' => 's.ee.b / [s^s].[ie^ee].[b^b] / failed phone:b / failed spelling:be',
  'siedlecki' => 's.ee.d/l.eh.t/s.k.ee / [s^s].[ie^ee].[d^d]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'siedschlag' => 's.ee.d/sh.l.eh.g / [s^s].[ie^ee].[d^d]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'sieh' => 's.ee / [s^s].[ie^ee] / failed phone:ee / failed spelling:ie',
  'sieja' => 's.ay/eh / [s^s]. / failed phone:ay / failed spelling:ie',
  'siekierski' => 's.ee/k.ih.r/s.k.ee / [s^s].[ie^ee]/[k^k].[i^ih]. / failed phone:r / failed spelling:er',
  'sieracki' => 's.ih/r.aw.t/s.k.ee / [s^s].[i^ih]/ / failed phone:r / failed spelling:er',
  'sieve' => 's.ih.v / [s^s].[i^ih]. / failed phone:v / failed spelling:ev',
  'sieves' => 's.ih.v.z / [s^s].[i^ih]. / failed phone:v / failed spelling:ev',
  'sieving' => 's.ih/v.ih.ng / [s^s].[i^ih]/ / failed phone:v / failed spelling:ev',
  'siew' => 's.ue / [s^s]. / failed phone:ue / failed spelling:ie',
  'siewiorek' => 's.eh/w.aw/r.ih.k / [s^s].[ie^eh]/[w^w]. / failed phone:aw / failed spelling:io',
  'sigl' => 's.ih/g.eh.l / [s^s].[i^ih]/[g^g]. / failed phone:eh / failed spelling:l',
  'sigler' => 's.igh/g.eh/l.er / [s^s].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'signor' => 's.ee/n.ye.aw.r / [s^s].[i^ee]/[gn^n]. / failed phone:ye / failed spelling:or',
  'signore' => 's.ee/n.ye.aw/r.ay / [s^s].[i^ee]/[gn^n]. / failed phone:ye / failed spelling:or',
  'sihanouk' => 's.ee/eh/n.oo.k / [s^s].[i^ee]/ / failed phone:eh / failed spelling:ha',
  'sikh' => 's.ee.k / [s^s].[i^ee].[k^k] / failed phone:k / failed spelling:kh',
  'sikhs' => 's.ee.k.s / [s^s].[i^ee].[k^k]. / failed phone:s / failed spelling:hs',
  'sikkema' => 's.ih/k.ee/m.eh / [s^s].[i^ih]/[k^k]. / failed phone:ee / failed spelling:ke',
  'silajdzic' => 's.ih/l.aw/j.ih.k / [s^s].[i^ih]/[l^l].[a^aw]/[j^j]. / failed phone:ih / failed spelling:dz',
  'silhouette' => 's.ih/l.eh/w.eh.t / [s^s].[i^ih]/[l^l]. / failed phone:eh / failed spelling:ho',
  'silhouettes' => 's.ih/l.eh/w.eh.t.s / [s^s].[i^ih]/[l^l]. / failed phone:eh / failed spelling:ho',
  'silkwood' => 's.ih.l/kw.oo.d / [s^s].[i^ih].[l^l]/ / failed phone:kw / failed spelling:kw',
  'silkworm' => 's.ih.l/kw.er.m / [s^s].[i^ih].[l^l]/ / failed phone:kw / failed spelling:kw',
  'silkworms' => 's.ih.l/kw.er.m.z / [s^s].[i^ih].[l^l]/ / failed phone:kw / failed spelling:kw',
  'silveira' => 's.ee.l/v.air/eh / [s^s].[i^ee].[l^l]/[ve^v]. / failed phone:air / failed spelling:ir',
  'silvershoe' => 's.ih.l/v.er/sh.ue / [s^s].[i^ih].[l^l]/[ve^v].[r^er]/[sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'silvius' => 's.ih.l/v.ee/ih.s / [s^s].[i^ih].[l^l]/[v^v].[i^ee]/ / failed phone:ih / failed spelling:us',
  'simcha' => 's.ih.m/h.eh / [s^s].[i^ih].[m^m]/ / failed phone:h / failed spelling:ch',
  'simler' => 's.ih/m.eh/l.er / [s^s].[i^ih]/[m^m]. / failed phone:eh / failed spelling:le',
  'simoneaux' => 's.ih/m.eh/n.oh / [s^s].[i^ih]/[m^m].[o^uh]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'simpleminded' => 's.ih.m/p.eh.l/m.igh.n/d.eh.d / [s^s].[i^ih].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'simpler' => 's.ih.m/p.eh/l.er / [s^s].[i^ih].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'simplesse' => 's.ih.m/p.l.eh.s / [s^s].[i^ih].[m^m]/[p^p].[l^l].[e^eh].[ss^s] / failed phone:s / failed spelling:ss',
  'sindt' => 's.ih.n.t / [s^s].[i^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'singh' => 's.ih.ng / [s^s].[i^ih].[n^ng] / failed phone:ng / failed spelling:ng',
  'singled' => 's.ih.ng/g.eh.l.d / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'singlehandedly' => 's.ih.ng/g.eh.l/h.ah.n/d.ih.d/l.ee / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'singler' => 's.ih.ng/g.eh/l.er / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'singles' => 's.ih.ng/g.eh.l.z / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'singleton' => 's.ih.ng/g.eh.l/t.eh.n / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'singling' => 's.ih.ng/g.eh/l.ih.ng / [s^s].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'sinhalese' => 's.ih/n.eh/l.ee.z / [s^s].[i^ih]/[n^n]. / failed phone:eh / failed spelling:ha',
  'siobhan' => 'sh.ow/b.aw.n / [s^sh]. / failed phone:ow / failed spelling:io',
  'sioux' => 's.ue / [s^s].[io^ue] / failed phone:ue / failed spelling:io',
  'sirek' => 's.aw/r.ih.k / [s^s]. / failed phone:aw / failed spelling:ir',
  'sirignano' => 's.ih/r.ee/n.ye.aw/n.oh / [s^s].[i^ih]/[r^r].[i^ee]/[gn^n]. / failed phone:ye / failed spelling:an',
  'sirles' => 's.aw/r.eh.l.z / [s^s]. / failed phone:aw / failed spelling:ir',
  'sirois' => 's.igh.r/w.aw / [s^s].[i^igh].[r^r]/ / failed phone:w / failed spelling:oi',
  'siron' => 's.aw/r.eh.n / [s^s]. / failed phone:aw / failed spelling:ir',
  'sisler' => 's.ih/s.eh/l.er / [s^s].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'sitler' => 's.igh/t.eh/l.er / [s^s].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'sizzled' => 's.ih/z.eh.l.d / [s^s].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:le',
  'sizzling' => 's.ih/z.eh/l.ih.ng / [s^s].[i^ih]/[zz^z]. / failed phone:eh / failed spelling:li',
  'sjoberg' => 'sh.oh/b.er.g / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjoblom' => 'sh.oh/b.l.aw.m / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjodin' => 'sh.oh/d.ih.n / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjogren' => 'sh.oh/g.r.eh.n / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjolander' => 'sh.oh/l.ah.n/d.er / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjoquist' => 'sh.oh/kw.ih.s.t / [s^sh]. / failed phone:oh / failed spelling:jo',
  'sjostrom' => 'sh.oh/s.t.r.eh.m / [s^sh]. / failed phone:oh / failed spelling:jo',
  'skaar' => 's.k.aw.r / [s^s].[k^k].[a^oh]. / failed phone:r / failed spelling:ar',
  'skandia' => 's.k.ah.n/d.ee/er / [s^s].[k^k].[a^ah].[n^n]/[d^d].[i^ee]/ / failed phone:er / failed spelling:a',
  'skandinaviska' => 's.k.ah.n/d.ih/n.eh/v.ih/s.eh / [s^s].[k^k].[a^ah].[n^n]/[d^d].[i^ih]/[n^n].[a^ah]/[v^v].[i^ih]/[s^s]. / failed phone:eh / failed spelling:ka',
  'skehan' => 's.k.ay/eh.n / [s^s].[k^k].[e^ay]/ / failed phone:eh / failed spelling:ha',
  'skibbe' => 's.k.ih.b / [s^s].[k^k].[i^ih].[bb^b] / failed phone:b / failed spelling:bb',
  'skidgel' => 's.k.ih/j.eh.l / [s^s].[k^k].[i^ih]/[d^j]. / failed phone:eh / failed spelling:ge',
  'skoczylas' => 's.k.eh/ch.ih/l.eh.z / [s^s].[k^k].[o^uh]/ / failed phone:t / failed spelling:cz',
  'skonieczny' => 's.k.eh/n.ee.ch/n.ee / [s^s].[k^k].[o^uh]/[n^n].[ie^ee]. / failed phone:t / failed spelling:cz',
  'slaght' => 's.l.ah.t / [s^s].[l^l].[a^ah]. / failed phone:t / failed spelling:gh',
  'slawinski' => 's.l.aw/v.ih.n/s.k.ee / [s^s].[l^l].[a^aw]/ / failed phone:v / failed spelling:wi',
  'sliwa' => 's.l.igh/v.eh / [s^s].[l^l].[i^igh]/ / failed phone:v / failed spelling:wa',
  'sliwinski' => 's.l.ih/v.ih.n/s.k.ee / [s^s].[l^l].[i^ih]/ / failed phone:v / failed spelling:wi',
  'slovacek' => 's.l.aw/v.eh/ch.eh.k / [s^s].[l^l].[o^aw]/[v^v].[a^ah]/ / failed phone:t / failed spelling:ce',
  'smirnov' => 's.m.er/n.aw.f / [s^s].[m^m].[ir^er]/[n^n].[o^aw]. / failed phone:f / failed spelling:v',
  'smuggled' => 's.m.uh/g.eh.l.d / [s^s].[m^m].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'smuggler' => 's.m.uh/g.eh/l.er / [s^s].[m^m].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'smugglers' => 's.m.uh/g.eh/l.er.z / [s^s].[m^m].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'smuggling' => 's.m.uh/g.eh/l.ih.ng / [s^s].[m^m].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:li',
  'snapples' => 's.n.ah/p.eh.l.z / [s^s].[n^n].[a^ah]/[p^p]. / failed phone:eh / failed spelling:pl',
  'snarled' => 's.n.aw/r.eh.l.d / [s^s].[n^n].[a^aw]/[r^r]. / failed phone:eh / failed spelling:le',
  'sniegowski' => 's.n.ee/g.aw.f/s.k.ee / [s^s].[n^n].[ie^ee]/[g^g].[o^aw]. / failed phone:f / failed spelling:ws',
  'snowshoe' => 's.n.oh/sh.ue / [s^s].[n^n].[ow^oh]/[sh^sh].[o^ue] / failed phone:ue / failed spelling:ho',
  'sobczak' => 's.aw.b/ch.ah.k / [s^s].[o^aw].[b^b]/ / failed phone:t / failed spelling:cz',
  'sobczyk' => 's.aw.b/ch.ih.k / [s^s].[o^aw].[b^b]/ / failed phone:t / failed spelling:cz',
  'sobecki' => 's.eh/b.eh.t/s.k.ee / [s^s].[o^uh]/[b^b].[e^eh]. / failed phone:t / failed spelling:ck',
  'sobiech' => 's.aw/b.ee.h / [s^s].[o^aw]/[b^b].[ie^ee]. / failed phone:h / failed spelling:ch',
  'sobocinski' => 's.eh/b.eh/ch.ih.n/s.k.ee / [s^s].[o^uh]/[b^b].[o^uh]/ / failed phone:t / failed spelling:ci',
  'sobolewski' => 's.eh/b.eh/l.eh.f/s.k.ee / [s^s].[o^uh]/[b^b].[o^uh]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'sobriquet' => 's.oh/b.r.eh/k.ay / [s^s].[o^oh]/[b^b].[r^r].[i^ih]/[qu^k].[e^ay] / failed phone:ay / failed spelling:t',
  'socci' => 's.oh/ch.ee / [s^s].[o^oh]/ / failed phone:t / failed spelling:cc',
  'sochet' => 's.oh/sh.ay / [s^s].[o^oh]/[ch^sh].[e^ay] / failed phone:ay / failed spelling:he',
  'socia' => 's.oh/ch.eh / [s^s].[o^oh]/ / failed phone:t / failed spelling:ci',
  'sociopath' => 's.oh.sh/ye.oh/p.ah.th / [s^s].[o^oh].[c^sh]/ / failed phone:ye / failed spelling:io',
  'sockwell' => 's.aw/kw.eh.l / [s^s].[o^aw]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'soerensen' => 's.aw/r.eh.n/s.eh.n / [s^s].[o^aw]/ / failed phone:r / failed spelling:er',
  'sofaer' => 's.oh/f.ay.r / [s^s].[o^oh]/[f^f].[a^ay]. / failed phone:r / failed spelling:er',
  'soften' => 's.aw/f.eh.n / [s^s].[o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'softened' => 's.aw/f.eh.n.d / [s^s].[o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'softener' => 's.aw/f.eh/n.er / [s^s].[o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'softening' => 's.aw/f.eh/n.ih.ng / [s^s].[o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'softens' => 's.aw/f.eh.n.z / [s^s].[o^aw]/[f^f]. / failed phone:eh / failed spelling:te',
  'soiree' => 's.w.aw/r.ay / [s^s]. / failed phone:w / failed spelling:oi',
  'sojka' => 's.oy/k.eh / [s^s]. / failed phone:oy / failed spelling:oj',
  'sokolowski' => 's.eh/k.eh/l.aw.f/s.k.ee / [s^s].[o^uh]/[k^k].[o^uh]/[l^l].[o^aw]. / failed phone:f / failed spelling:ws',
  'solder' => 's.aw/d.er / [s^s].[o^aw]/ / failed phone:d / failed spelling:ld',
  'soldering' => 's.aw/d.er/ih.ng / [s^s].[o^aw]/ / failed phone:d / failed spelling:ld',
  'solecki' => 's.eh/l.eh.t/s.k.ee / [s^s].[o^uh]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'soltesz' => 's.oh.l/t.ih.sh / [s^s].[o^oh].[l^l]/[t^t].[e^ih].[s^sh] / failed phone:sh / failed spelling:sz',
  'solzhenitsyn' => 's.oh.l/z.eh/n.ih.t/s.ih.n / [s^s].[o^oh].[l^l]/[z^z]. / failed phone:eh / failed spelling:he',
  'someone' => 's.uh.m/w.uh.n / [s^s].[o^uh].[m^m]/ / failed phone:uh / failed spelling:n',
  'somerville' => 's.uh/m.er/v.ih.l / [s^s].[o^uh]/[m^m].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sometimes' => 's.eh.m/t.igh.m.z / [s^s].[o^uh].[m^m]/ / failed phone:t / failed spelling:et',
  'sommerfeldt' => 's.aw/m.er/f.ih.l.t / [s^s].[o^aw]/[mm^m].[er^er]/[f^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'sommers' => 's.uh/m.er.r.z / [s^s].[o^uh]/[mm^m].[er^er]. / failed phone:r / failed spelling:s',
  'sommerville' => 's.aw/m.er/v.ih.l / [s^s].[o^aw]/[mm^m].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sonia' => 's.oh/n.ye.eh / [s^s].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'sonja' => 's.oh/n.ye.eh / [s^s].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ja',
  'sonne' => 's.aw.n / [s^s].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'sonnenschein' => 's.aw/n.ih.n/sh.igh.n / [s^s].[o^aw]/[nn^n].[e^ih].[n^n]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'sophocles' => 's.oh/f.oh/k.eh.l.z / [s^s].[o^oh]/[ph^f].[o^oh]/[c^k]. / failed phone:eh / failed spelling:le',
  'sophomore' => 's.aw.f/m.aw.r / [s^s].[o^aw].[ph^f]/ / failed phone:m / failed spelling:om',
  'sophomores' => 's.aw.f/m.aw.r.z / [s^s].[o^aw].[ph^f]/ / failed phone:m / failed spelling:om',
  'sorbonne' => 's.aw.r/b.aw.n / [s^s].[o^oh].[r^r]/[b^b].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'sorci' => 's.aw.r/ch.ee / [s^s].[o^oh].[r^r]/ / failed phone:t / failed spelling:ci',
  'sosnowski' => 's.eh/s.n.aw.f/s.k.ee / [s^s].[o^uh]/[s^s].[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'soundview' => 's.ow.n.d/v.ye.ue / [s^s].[ou^ow].[n^n].[d^d]/[v^v]. / failed phone:ue / failed spelling:ie',
  'sourrouille' => 's.aw/r.ue/ee / [s^s].[ou^aw]/[rr^r].[ou^ue]/[i^ee] / failed phone:ee / failed spelling:il',
  'southampton' => 's.ow.th/h.ah.m.p/t.eh.n / [s^s].[ou^ow].[th^th]/ / failed phone:h / failed spelling:am',
  'sovetskaya' => 's.oh/v.eh.t/s.k.igh/eh / [s^s].[o^oh]/[v^v].[e^eh].[t^t]/[s^s].[k^k]. / failed phone:igh / failed spelling:ay',
  'spacek' => 's.p.aw/ch.eh.k / [s^s].[p^p].[a^aw]/ / failed phone:t / failed spelling:ce',
  'spacesuit' => 's.p.ay/s.ue.t / [s^s].[p^p].[a^ay]/[ce^s]. / failed phone:ue / failed spelling:su',
  'spadaccini' => 's.p.aw/d.aw/ch.ee/n.ee / [s^s].[p^p].[a^aw]/[d^d].[a^aw]/ / failed phone:t / failed spelling:cc',
  'spaeth' => 's.p.ee.th / [s^s].[p^p]. / failed phone:ee / failed spelling:ae',
  'spahr' => 's.p.aw.r / [s^s].[p^p].[a^oh]. / failed phone:r / failed spelling:hr',
  'spainhour' => 's.p.igh/n.ow.r / [s^s].[p^p].[ai^igh]/[n^n]. / failed phone:ow / failed spelling:ho',
  'spangled' => 's.p.ah.ng/g.eh.l.d / [s^s].[p^p].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'spangler' => 's.p.ah.ng/g.eh/l.er / [s^s].[p^p].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'spaniard' => 's.p.ah/n.ye.er.d / [s^s].[p^p].[a^ah]/[n^n]. / failed phone:er / failed spelling:ia',
  'spaniards' => 's.p.ah/n.ye.er.d.z / [s^s].[p^p].[a^ah]/[n^n]. / failed phone:er / failed spelling:ia',
  'spaniel' => 's.p.ah/n.ye.eh.l / [s^s].[p^p].[a^ah]/[n^n]. / failed phone:ue / failed spelling:ie',
  'sparacino' => 's.p.er/eh/ch.ee/n.oh / [s^s].[p^p].[ar^er]/[a^ah]/ / failed phone:t / failed spelling:ci',
  'sparkes' => 's.p.aw.r.k.s / [s^s].[p^p].[a^oh].[r^r].[k^k]. / failed phone:s / failed spelling:es',
  'sparkled' => 's.p.aw.r/k.eh.l.d / [s^s].[p^p].[a^oh].[r^r]/[k^k]. / failed phone:eh / failed spelling:le',
  'sparkles' => 's.p.aw.r/k.eh.l.z / [s^s].[p^p].[a^oh].[r^r]/[k^k]. / failed phone:eh / failed spelling:le',
  'spayde' => 's.p.ay.d / [s^s].[p^p].[ay^ay].[d^d] / failed phone:d / failed spelling:yd',
  'speake' => 's.p.ee.k / [s^s].[p^p].[ea^ee].[k^k] / failed phone:k / failed spelling:ak',
  'speakes' => 's.p.ee.k.s / [s^s].[p^p].[ea^ee].[k^k]. / failed phone:x / failed spelling:ak',
  'speciale' => 's.p.eh/ch.eh/l.ee / [s^s].[p^p].[e^eh]/ / failed phone:t / failed spelling:ci',
  'specialities' => 's.p.eh/sh.eh.l/t.ee.z / [s^s].[p^p].[e^eh]/[c^sh].[ia^eh].[l^l]/ / failed phone:t / failed spelling:it',
  'speckled' => 's.p.eh/k.eh.l.d / [s^s].[p^p].[e^eh]/[c^k]. / failed phone:eh / failed spelling:kl',
  'spectacles' => 's.p.eh.k/t.eh/k.eh.l.z / [s^s].[p^p].[e^eh].[c^k]/[t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'spengler' => 's.p.ih.ng/eh/l.er / [s^s].[p^p].[e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'sperle' => 's.p.aw/r.eh.l / [s^s].[p^p]. / failed phone:aw / failed spelling:er',
  'sperrazza' => 's.p.er/aw.t/s.eh / [s^s].[p^p].[err^er]/[a^aw]. / failed phone:t / failed spelling:zz',
  'spezzano' => 's.p.eh.t/s.aw/n.oh / [s^s].[p^p].[e^eh]. / failed phone:t / failed spelling:zz',
  'spicuzza' => 's.p.ee/k.ue.t/s.eh / [s^s].[p^p].[i^ee]/[c^k].[u^ue]. / failed phone:t / failed spelling:zz',
  'spiess' => 's.p.ee.z / [s^s].[p^p].[ie^ee].[s^z] / failed phone:z / failed spelling:ss',
  'spilde' => 's.p.ih.l.d / [s^s].[p^p].[i^ih].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'spindler' => 's.p.ih.n/d.eh/l.er / [s^s].[p^p].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'spirituality' => 's.p.ih/r.ih/ch.eh/w.ah/l.eh/t.ee / [s^s].[p^p].[i^ih]/[r^r].[i^ih]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:al',
  'spiwak' => 's.p.ih/v.eh.k / [s^s].[p^p].[i^ih]/ / failed phone:v / failed spelling:wa',
  'spizzirri' => 's.p.ee.t/s.ih/r.ee / [s^s].[p^p].[i^ee]. / failed phone:t / failed spelling:zz',
  'spokewoman' => 's.p.oh/kw.oo/m.eh.n / [s^s].[p^p].[o^oh]/ / failed phone:kw / failed spelling:ke',
  'sponsler' => 's.p.aw.n/s.eh/l.er / [s^s].[p^p].[o^aw].[n^n]/[s^s]. / failed phone:eh / failed spelling:le',
  'sporophyte' => 's.p.aw.r/f.igh.t / [s^s].[p^p].[o^oh].[r^r]/ / failed phone:f / failed spelling:op',
  'sporophytes' => 's.p.aw.r/f.igh.t.s / [s^s].[p^p].[o^oh].[r^r]/ / failed phone:f / failed spelling:op',
  'sporrer' => 's.p.aw/er.r / [s^s].[p^p].[o^aw]/[r^er].[r^r] / failed phone:r / failed spelling:re',
  'spracklen' => 's.p.r.ah/k.eh/l.eh.n / [s^s].[p^p].[r^r].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'springerville' => 's.p.r.ih.ng/er/v.ih.l / [s^s].[p^p].[r^r].[i^ih].[ng^ng]/[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sprinkled' => 's.p.r.ih.ng/k.eh.l.d / [s^s].[p^p].[r^r].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'sprinkles' => 's.p.r.ih.ng/k.eh.l.z / [s^s].[p^p].[r^r].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'spruiell' => 's.p.r.ue.l / [s^s].[p^p].[r^r].[ui^ue].[el^l] / failed phone:l / failed spelling:ie',
  'spuhler' => 's.p.ue/l.er / [s^s].[p^p].[u^ue]/ / failed phone:l / failed spelling:hl',
  'spurgeon' => 's.p.er/j.ih.n / [s^s].[p^p].[ur^er]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'spychalski' => 's.p.ih/h.aw.l/s.k.ee / [s^s].[p^p].[y^ih]/ / failed phone:h / failed spelling:ch',
  'squabbled' => 's.kw.aw/b.eh.l.d / [s^s].[qu^kw].[a^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'squabbles' => 's.kw.aw/b.eh.l.z / [s^s].[qu^kw].[a^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'squabbling' => 's.kw.aw/b.eh/l.ih.ng / [s^s].[qu^kw].[a^aw]/[bb^b]. / failed phone:eh / failed spelling:li',
  'squitieri' => 's.kw.ee/t.ih/r.ee / [s^s].[qu^kw].[i^ee]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'sr' => 's.ee/n.ye.er / [s^s]. / failed phone:ee / failed spelling:r',
  'srebrenica' => 's.r.ay/b.r.eh/n.ee.t/s.eh / [s^s].[r^r].[e^ay]/[b^b].[r^r].[e^eh]/[n^n].[i^ee]. / failed phone:t / failed spelling:ca',
  'sroufe' => 'sh.r.oh.f / [s^sh].[r^r].[ou^oh].[f^f] / failed phone:f / failed spelling:fe',
  'st' => 's.t.r.ee.t / [s^s].[t^t]. / failed phone:r / failed spelling:',
  'staab' => 's.t.aw.b / [s^s].[t^t].[a^aw]. / failed phone:b / failed spelling:ab',
  'staack' => 's.t.aw.k / [s^s].[t^t].[a^aw]. / failed phone:k / failed spelling:ac',
  'staar' => 's.t.aw.r / [s^s].[t^t].[a^oh]. / failed phone:r / failed spelling:ar',
  'staas' => 's.t.aw.z / [s^s].[t^t].[a^aw]. / failed phone:z / failed spelling:as',
  'staat' => 's.t.aw.t / [s^s].[t^t].[a^aw]. / failed phone:t / failed spelling:at',
  'staats' => 's.t.aw.t.s / [s^s].[t^t].[a^aw]. / failed phone:t / failed spelling:at',
  'stabler' => 's.t.ay/b.eh/l.er / [s^s].[t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'stables' => 's.t.ay/b.eh.l.z / [s^s].[t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'stablest' => 's.t.ay/b.eh/l.eh.s.t / [s^s].[t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'stachowiak' => 's.t.eh/h.ow/ee/ah.k / [s^s].[t^t].[a^ah]/ / failed phone:h / failed spelling:ch',
  'stachowicz' => 's.t.aw/h.eh/v.ih.ch / [s^s].[t^t].[a^aw]/ / failed phone:h / failed spelling:ch',
  'stachowski' => 's.t.eh/h.aw.f/s.k.ee / [s^s].[t^t].[a^ah]/ / failed phone:h / failed spelling:ch',
  'stachurski' => 's.t.eh/h.er/s.k.ee / [s^s].[t^t].[a^ah]/ / failed phone:h / failed spelling:ch',
  'staci' => 's.t.aw/z.ee / [s^s].[t^t].[a^aw]/ / failed phone:z / failed spelling:ci',
  'stacia' => 's.t.aw/ch.eh / [s^s].[t^t].[a^aw]/ / failed phone:t / failed spelling:ci',
  'stadtlander' => 'sh/t.ah.t/l.ah.n/d.er / [s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'stadtmiller' => 'sh/t.ah.t/m.ih/l.er / [s^sh]/[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'staebell' => 's.t.eh/b.eh.l / [s^s].[t^t].[a^ah]/ / failed phone:b / failed spelling:eb',
  'staebler' => 's.t.ay/l.er / [s^s].[t^t].[a^ay]/ / failed phone:l / failed spelling:eb',
  'staehle' => 's.t.ay.l / [s^s].[t^t].[a^ay]. / failed phone:l / failed spelling:eh',
  'staffieri' => 's.t.aw/f.ih/r.ee / [s^s].[t^t].[a^aw]/[ff^f].[i^ih]/ / failed phone:r / failed spelling:er',
  'staffordshire' => 's.t.ah/f.er.d/sh.er / [s^s].[t^t].[a^ah]/[ff^f].[o^oh].[r^r].[d^d]/[sh^sh].[ir^er] / failed phone:er / failed spelling:hi',
  'stahl' => 's.t.aw.l / [s^s].[t^t].[a^aw]. / failed phone:l / failed spelling:hl',
  'stahlberg' => 's.t.aw.l/b.er.g / [s^s].[t^t].[a^aw]. / failed phone:l / failed spelling:hl',
  'stahlecker' => 's.t.aw/l.ih/k.er / [s^s].[t^t].[a^aw]/ / failed phone:l / failed spelling:hl',
  'stahler' => 's.t.aw/l.er / [s^s].[t^t].[a^aw]/ / failed phone:l / failed spelling:hl',
  'stahley' => 's.t.ah/l.ee / [s^s].[t^t].[a^ah]/ / failed phone:l / failed spelling:hl',
  'stahlhut' => 's.t.aw.l/h.eh.t / [s^s].[t^t].[a^aw]. / failed phone:l / failed spelling:hl',
  'stahlman' => 's.t.aw.l/m.eh.n / [s^s].[t^t].[a^aw]. / failed phone:l / failed spelling:hl',
  'stahly' => 's.t.ah/l.ee / [s^s].[t^t].[a^ah]/ / failed phone:l / failed spelling:hl',
  'stahmer' => 's.t.aw/m.er / [s^s].[t^t].[a^aw]/ / failed phone:m / failed spelling:hm',
  'stahnke' => 's.t.ah.ng.k / [s^s].[t^t].[a^ah]. / failed phone:ng / failed spelling:hn',
  'stahr' => 's.t.ah.r / [s^s].[t^t].[a^ah]. / failed phone:r / failed spelling:hr',
  'stanczak' => 's.t.ah.n/ch.ah.k / [s^s].[t^t].[a^ah].[n^n]/ / failed phone:t / failed spelling:cz',
  'stanczyk' => 's.t.ah.n/ch.ih.k / [s^s].[t^t].[a^ah].[n^n]/ / failed phone:t / failed spelling:cz',
  'stangl' => 's.t.ah.ng/g.eh.l / [s^s].[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:l',
  'stangler' => 's.t.ah.ng/g.eh/l.er / [s^s].[t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'stanhope' => 's.t.ah/n.eh.p / [s^s].[t^t].[a^ah]/[n^n]. / failed phone:eh / failed spelling:ho',
  'stanislawski' => 's.t.eh/n.ih/s.l.aw.f/s.k.ee / [s^s].[t^t].[a^ah]/[n^n].[i^ih]/[s^s].[l^l].[a^aw]. / failed phone:f / failed spelling:ws',
  'staniszewski' => 's.t.eh/n.ih/sh.eh.f/s.k.ee / [s^s].[t^t].[a^ah]/[n^n].[i^ih]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'stanke' => 's.t.ah.ng.k / [s^s].[t^t].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'stankiewicz' => 's.t.ah.n/k.eh/v.ih.ch / [s^s].[t^t].[a^ah].[n^n]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'stankowski' => 's.t.eh.ng/k.aw.f/s.k.ee / [s^s].[t^t].[a^ah].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'stanleigh' => 's.t.ah.n/l.eh / [s^s].[t^t].[a^ah].[n^n]/[le^l].[i^ih] / failed phone:eh / failed spelling:ig',
  'stapled' => 's.t.ay/p.eh.l.d / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'stapler' => 's.t.ay/p.eh/l.er / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'staplers' => 's.t.ay/p.eh/l.er.z / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'staples' => 's.t.ay/p.eh.l.z / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'stapleton' => 's.t.ay/p.eh.l/t.eh.n / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:le',
  'stapling' => 's.t.ay/p.eh/l.ih.ng / [s^s].[t^t].[a^ay]/[p^p]. / failed phone:eh / failed spelling:li',
  'starace' => 's.t.aw/r.aw/ch.ee / [s^s].[t^t].[a^aw]/[r^r].[a^aw]/ / failed phone:t / failed spelling:ce',
  'starboards' => 's.t.aw.r/b.er.r.d.z / [s^s].[t^t].[a^oh].[r^r]/[b^b].[oar^er]. / failed phone:r / failed spelling:ds',
  'starke' => 's.t.aw.r.k / [s^s].[t^t].[a^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'starkes' => 's.t.aw.r.k.s / [s^s].[t^t].[a^oh].[r^r].[k^k]. / failed phone:s / failed spelling:es',
  'starkweather' => 's.t.aw.r/kw.eh/dh.er / [s^s].[t^t].[a^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'startled' => 's.t.aw.r/t.eh.l.d / [s^s].[t^t].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'startles' => 's.t.aw.r/t.eh.l.z / [s^s].[t^t].[a^oh].[r^r]/[t^t]. / failed phone:eh / failed spelling:le',
  'staszak' => 's.t.aw/sh.eh.k / [s^s].[t^t].[a^aw]/[s^sh]. / failed phone:eh / failed spelling:za',
  'staszewski' => 's.t.eh/sh.eh.f/s.k.ee / [s^s].[t^t].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'stathopoulos' => 's.t.eh/th.aw/p.eh/l.ih.s / [s^s].[t^t].[a^ah]/[th^th].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'staude' => 's.t.aw.d / [s^s].[t^t].[au^aw].[d^d] / failed phone:d / failed spelling:ud',
  'stavropoulos' => 's.t.eh/v.r.aw/p.eh/l.ih.s / [s^s].[t^t].[a^ah]/[v^v].[r^r].[o^aw]/[p^p].[ou^eh]/[l^l]. / failed phone:ih / failed spelling:os',
  'stawicki' => 's.t.aw/v.ih.t/s.k.ee / [s^s].[t^t].[a^aw]/ / failed phone:v / failed spelling:wi',
  'stawski' => 's.t.aw.f/s.k.ee / [s^s].[t^t].[a^aw]. / failed phone:f / failed spelling:ws',
  'stechschulte' => 's.t.eh.k/sh.eh.l.t / [s^s].[t^t].[e^eh].[ch^k]/[sc^sh]. / failed phone:eh / failed spelling:hu',
  'steeplechase' => 's.t.ee/p.eh.l/ch.ay.s / [s^s].[te^t].[e^ee]/[p^p]. / failed phone:eh / failed spelling:le',
  'stefanowicz' => 's.t.ih/f.ah/n.eh/v.ih.ch / [s^s].[t^t].[e^ih]/[f^f].[a^ah]/[n^n].[o^uh]/ / failed phone:v / failed spelling:wi',
  'steffe' => 's.t.eh.f / [s^s].[t^t].[e^eh].[ff^f] / failed phone:f / failed spelling:ff',
  'steffes' => 's.t.eh.f.s / [s^s].[t^t].[e^eh].[ff^f]. / failed phone:s / failed spelling:es',
  'stefl' => 's.t.eh/f.eh.l / [s^s].[t^t].[e^eh]/[f^f]. / failed phone:eh / failed spelling:l',
  'stegemeier' => 's.t.eh.g/m.igh.r / [s^s].[t^t].[e^eh].[ge^g]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'stehlik' => 's.t.eh/l.ih.k / [s^s].[t^t].[e^eh]/ / failed phone:l / failed spelling:hl',
  'stehlin' => 's.t.eh/l.ih.n / [s^s].[t^t].[e^eh]/ / failed phone:l / failed spelling:hl',
  'stehling' => 's.t.eh/l.ih.ng / [s^s].[t^t].[e^eh]/ / failed phone:l / failed spelling:hl',
  'stehman' => 's.t.eh/m.eh.n / [s^s].[t^t].[e^eh]/ / failed phone:m / failed spelling:hm',
  'steidl' => 's.t.ee/d.eh.l / [s^s].[te^t].[i^ee]/[d^d]. / failed phone:eh / failed spelling:l',
  'steidtmann' => 's.t.igh.t/m.eh.n / [s^s].[te^t].[i^igh]. / failed phone:t / failed spelling:dt',
  'steinbaugh' => 's.t.igh.n/b.ow / [s^s].[te^t].[i^igh].[n^n]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'steinfeldt' => 's.t.igh.n/f.eh.l.t / [s^s].[te^t].[i^igh].[n^n]/[f^f].[e^eh].[l^l]. / failed phone:t / failed spelling:dt',
  'steinhardt' => 's.t.igh.n/h.aw.r.t / [s^s].[te^t].[i^igh].[n^n]/[h^h].[a^oh].[r^r]. / failed phone:t / failed spelling:dt',
  'steinke' => 's.t.igh.ng.k / [s^s].[te^t].[i^igh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'steinkuehler' => 's.t.igh.n/k.ye.ue/l.er / [s^s].[te^t].[i^igh].[n^n]/[k^k].[u^ue]/ / failed phone:l / failed spelling:eh',
  'stelle' => 's.t.eh.l / [s^s].[t^t].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'stellenbosch' => 's.t.eh/l.eh.n/b.aw.sh / [s^s].[t^t].[e^eh]/[ll^l].[e^eh].[n^n]/[b^b].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'stelljes' => 's.t.ay/l.ye.eh.s / [s^s].[t^t].[e^ay]/[ll^l]. / failed phone:ue / failed spelling:je',
  'stephen' => 's.t.ee/v.eh.n / [s^s].[t^t].[e^ee]/ / failed phone:v / failed spelling:ph',
  'stephens' => 's.t.ee/v.eh.n.z / [s^s].[t^t].[e^ee]/ / failed phone:v / failed spelling:ph',
  'stephenson' => 's.t.ee/v.eh.n/s.eh.n / [s^s].[t^t].[e^ee]/ / failed phone:v / failed spelling:ph',
  'stephenville' => 's.t.ee/v.ih.n/v.ih.l / [s^s].[t^t].[e^ee]/ / failed phone:v / failed spelling:ph',
  'sterle' => 's.t.aw/r.eh.l / [s^s].[te^t]. / failed phone:aw / failed spelling:rl',
  'steuart' => 's.t.oy/aw.r.t / [s^s].[te^t]. / failed phone:oy / failed spelling:ua',
  'steubenville' => 's.t.ue/b.eh.n/v.ih.l / [s^s].[te^t].[u^ue]/[b^b].[e^eh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'steuber' => 's.t.oy/b.er / [s^s].[te^t]. / failed phone:oy / failed spelling:ub',
  'steuer' => 's.t.oy/er / [s^s].[te^t]. / failed phone:oy / failed spelling:ue',
  'steuerwald' => 's.t.oy/er/w.aw.l.d / [s^s].[te^t]. / failed phone:oy / failed spelling:ue',
  'stickler' => 's.t.ih/k.eh/l.er / [s^s].[t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'stickles' => 's.t.ih/k.eh.l.z / [s^s].[t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'stiegemeier' => 's.t.ee/j.eh/m.igh.r / [s^s].[t^t].[ie^ee]/[g^j].[e^eh]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'stiehl' => 's.t.ee.l / [s^s].[t^t].[ie^ee]. / failed phone:l / failed spelling:hl',
  'stierwalt' => 's.t.ih.r/w.eh.l.t / [s^s].[t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'stifled' => 's.t.igh/f.eh.l.d / [s^s].[t^t].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'stifles' => 's.t.igh/f.eh.l.z / [s^s].[t^t].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'stihl' => 's.t.ih.l / [s^s].[t^t].[i^ih]. / failed phone:l / failed spelling:hl',
  'stille' => 's.t.ih.l / [s^s].[t^t].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'stirewalt' => 's.t.aw/r.ue/eh.l.t / [s^s].[t^t]. / failed phone:aw / failed spelling:ir',
  'stobbe' => 's.t.aw.b / [s^s].[t^t].[o^aw].[bb^b] / failed phone:b / failed spelling:bb',
  'stocke' => 's.t.aw.k / [s^s].[t^t].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'stockwell' => 's.t.aw/kw.eh.l / [s^s].[t^t].[o^aw]/[ck^kw]. / failed phone:eh / failed spelling:we',
  'stodghill' => 's.t.aw.j/h.ih.l / [s^s].[t^t].[o^aw].[d^j]/ / failed phone:h / failed spelling:gh',
  'stodgy' => 's.t.aw/j.ee / [s^s].[t^t].[o^aw]/[d^j]. / failed phone:ee / failed spelling:gy',
  'stoehr' => 's.t.aw.r / [s^s].[t^t].[o^oh]. / failed phone:r / failed spelling:eh',
  'stoeltze' => 's.t.oh.l.t.s / [s^s].[t^t].[o^oh].[el^l].[t^t].[z^s] / failed phone:s / failed spelling:ze',
  'stoia' => 's.t.oh/ye.eh / [s^s].[t^t].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'stokke' => 's.t.aw.k / [s^s].[t^t].[o^aw].[k^k] / failed phone:k / failed spelling:kk',
  'stoldt' => 's.t.oh.l.t / [s^s].[t^t].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'stolichnaya' => 's.t.oh/l.ih.k/n.igh/eh / [s^s].[t^t].[o^oh]/[l^l].[i^ih].[ch^k]/[n^n]. / failed phone:igh / failed spelling:ay',
  'stolle' => 's.t.aw.l / [s^s].[t^t].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'stoneham' => 's.t.oh/n.eh.m / [s^s].[t^t].[o^oh]/[n^n].[e^eh]. / failed phone:m / failed spelling:ha',
  'storaska' => 's.t.aw/r.ah/s.eh / [s^s].[t^t].[o^aw]/[r^r].[a^ah]/[s^s]. / failed phone:eh / failed spelling:ka',
  'stordahl' => 's.t.aw.r/d.aw.l / [s^s].[t^t].[o^oh].[r^r]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'stracke' => 's.t.r.ah.k / [s^s].[t^t].[r^r].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'straddled' => 's.t.r.ah/d.eh.l.d / [s^s].[t^t].[r^r].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'straddles' => 's.t.r.ah/d.eh.l.z / [s^s].[t^t].[r^r].[a^ah]/[dd^d]. / failed phone:eh / failed spelling:le',
  'straggled' => 's.t.r.ah/g.eh.l.d / [s^s].[t^t].[r^r].[a^ah]/[gg^g]. / failed phone:eh / failed spelling:le',
  'strahl' => 's.t.r.aw.l / [s^s].[t^t].[r^r].[a^aw]. / failed phone:l / failed spelling:hl',
  'strahler' => 's.t.r.aw/l.er / [s^s].[t^t].[r^r].[a^aw]/ / failed phone:l / failed spelling:hl',
  'strahm' => 's.t.r.aw.m / [s^s].[t^t].[r^r].[a^aw]. / failed phone:m / failed spelling:hm',
  'strande' => 's.t.r.ah.n.d / [s^s].[t^t].[r^r].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'strangled' => 's.t.r.ah.ng/g.eh.l.d / [s^s].[t^t].[r^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'stranglehold' => 's.t.r.ah.ng/g.eh.l/h.oh.l.d / [s^s].[t^t].[r^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'strangling' => 's.t.r.ah.ng/g.eh/l.ih.ng / [s^s].[t^t].[r^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'straszheim' => 's.t.r.ah.s/h.igh.m / [s^s].[t^t].[r^r].[a^ah].[s^s]/ / failed phone:h / failed spelling:zh',
  'straube' => 's.t.r.ow.b / [s^s].[t^t].[r^r].[au^aw].[b^b] / failed phone:b / failed spelling:be',
  'strausbaugh' => 's.t.r.ow.s/b.ow / [s^s].[t^t].[r^r].[au^aw].[s^s]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'strehl' => 's.t.r.eh.l / [s^s].[t^t].[r^r].[e^eh]. / failed phone:l / failed spelling:hl',
  'strehle' => 's.t.r.eh.l / [s^s].[t^t].[r^r].[e^eh]. / failed phone:l / failed spelling:hl',
  'strehlow' => 's.t.r.eh/l.oh / [s^s].[t^t].[r^r].[e^eh]/ / failed phone:l / failed spelling:hl',
  'striar' => 's.t.r.igh.r / [s^s].[t^t].[r^r].[i^igh]. / failed phone:r / failed spelling:ar',
  'stribling' => 's.t.er/eh/b.eh/l.ih.ng / [s^s].[t^t].[r^er]/[i^ih]/[b^b]. / failed phone:eh / failed spelling:li',
  'stricklen' => 's.t.r.ih/k.eh/l.eh.n / [s^s].[t^t].[r^r].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'strobl' => 's.t.r.aw/b.eh.l / [s^s].[t^t].[r^r].[o^aw]/[b^b]. / failed phone:eh / failed spelling:l',
  'strojny' => 's.t.r.oh.ye/n.ee / [s^s].[t^t].[r^r].[o^oh]. / failed phone:ye / failed spelling:jn',
  'stromme' => 's.t.r.aw.m / [s^s].[t^t].[r^r].[o^aw].[m^m] / failed phone:m / failed spelling:mm',
  'stroschein' => 's.t.r.aw/sh.igh.n / [s^s].[t^t].[r^r].[o^aw]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'strubbe' => 's.t.r.uh.b / [s^s].[t^t].[r^r].[u^uh].[bb^b] / failed phone:b / failed spelling:bb',
  'struggled' => 's.t.r.uh/g.eh.l.d / [s^s].[t^t].[r^r].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'struggles' => 's.t.r.uh/g.eh.l.z / [s^s].[t^t].[r^r].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:le',
  'struggling' => 's.t.r.uh/g.eh/l.ih.ng / [s^s].[t^t].[r^r].[u^uh]/[gg^g]. / failed phone:eh / failed spelling:li',
  'strycharz' => 's.t.r.ih/h.er.z / [s^s].[t^t].[r^r].[y^ih]/ / failed phone:h / failed spelling:ch',
  'strzelecki' => 's.t.r.eh/z.ih/l.eh.t/s.k.ee / [s^s].[t^t].[r^r]. / failed phone:eh / failed spelling:ze',
  'stubbe' => 's.t.uh.b / [s^s].[t^t].[u^uh].[bb^b] / failed phone:b / failed spelling:bb',
  'stubblefield' => 's.t.uh/b.eh.l/f.ee.l.d / [s^s].[t^t].[u^uh]/[bb^b]. / failed phone:eh / failed spelling:le',
  'stucke' => 's.t.uh.k / [s^s].[t^t].[u^uh].[c^k] / failed phone:k / failed spelling:ck',
  'studzinski' => 's.t.eh/j.ih.n/s.k.ee / [s^s].[t^t].[u^uh]/[d^j]. / failed phone:ih / failed spelling:zi',
  'stuebe' => 's.t.ue.b / [s^s].[t^t].[ue^ue].[b^b] / failed phone:b / failed spelling:eb',
  'stuewe' => 's.t.ue / [s^s].[t^t].[u^ue] / failed phone:ue / failed spelling:ue',
  'stufflebeam' => 's.t.uh/f.eh.l/b.ee.m / [s^s].[t^t].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'stufflebean' => 's.t.uh/f.eh.l/b.ee.n / [s^s].[t^t].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'stuhler' => 's.t.ue/l.er / [s^s].[t^t].[u^ue]/ / failed phone:l / failed spelling:hl',
  'stuhr' => 's.t.er / [s^s].[t^t]. / failed phone:er / failed spelling:uh',
  'stumbled' => 's.t.uh.m/b.eh.l.d / [s^s].[t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'stumbles' => 's.t.uh.m/b.eh.l.z / [s^s].[t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'stumbling' => 's.t.uh.m/b.eh/l.ih.ng / [s^s].[t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'sturrock' => 's.t.aw/r.eh.k / [s^s].[t^t]. / failed phone:aw / failed spelling:ur',
  'stuteville' => 's.t.ue.t/v.ih.l / [s^s].[t^t].[u^ue].[te^t]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'subhlok' => 's.uh/b.l.aw.k / [s^s].[u^uh]/[b^b]. / failed phone:l / failed spelling:hl',
  'subpoena' => 's.eh/p.ee/n.eh / [s^s].[u^uh]/ / failed phone:p / failed spelling:bp',
  'subpoenaed' => 's.eh/p.ee/n.eh.d / [s^s].[u^uh]/ / failed phone:p / failed spelling:bp',
  'subpoenaing' => 's.eh/p.ee/n.eh/ih.ng / [s^s].[u^uh]/ / failed phone:p / failed spelling:bp',
  'subpoenas' => 's.eh/p.ee/n.eh.z / [s^s].[u^uh]/ / failed phone:p / failed spelling:bp',
  'subtitled' => 's.uh.b/t.igh/t.eh.l.d / [s^s].[u^uh].[b^b]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'subtitles' => 's.uh.b/t.igh/t.eh.l.z / [s^s].[u^uh].[b^b]/[t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'subtler' => 's.uh/t.eh/l.er / [s^s].[u^uh]/[bt^t]. / failed phone:eh / failed spelling:le',
  'subtleties' => 's.uh/t.eh.l/t.ee.z / [s^s].[u^uh]/[bt^t]. / failed phone:eh / failed spelling:le',
  'subtlety' => 's.uh/t.eh.l/t.ee / [s^s].[u^uh]/[bt^t]. / failed phone:eh / failed spelling:le',
  'subtly' => 's.uh/t.eh/l.ee / [s^s].[u^uh]/[bt^t]. / failed phone:eh / failed spelling:ly',
  'sudler' => 's.ue/d.eh/l.er / [s^s].[u^ue]/[d^d]. / failed phone:eh / failed spelling:le',
  'suede' => 's.w.ay.d / [s^s].[u^w].[e^ay].[d^d] / failed phone:d / failed spelling:de',
  'suh' => 's.uh / [s^s].[u^uh] / failed phone:uh / failed spelling:uh',
  'suhler' => 's.ue/l.er / [s^s].[u^ue]/ / failed phone:l / failed spelling:hl',
  'suhm' => 's.ue.m / [s^s].[u^ue]. / failed phone:m / failed spelling:hm',
  'suhr' => 's.oo.r / [s^s].[u^oo]. / failed phone:r / failed spelling:hr',
  'suhre' => 's.oo.r / [s^s].[u^oo]. / failed phone:r / failed spelling:hr',
  'suisse' => 's.w.ih.s / [s^s].[u^w].[i^ih].[ss^s] / failed phone:s / failed spelling:ss',
  'sukiyaki' => 's.ue/k.ee/aw/k.ee / [s^s].[u^ue]/[k^k].[i^ee]/ / failed phone:aw / failed spelling:ya',
  'sukthankar' => 's.ue.k/t.aw.ng/k.aw.r / [s^s].[u^ue].[k^k]/[t^t]. / failed phone:aw / failed spelling:ha',
  'sulewski' => 's/ye.ue/l.eh.f/s.k.ee / [s^s]/[u^ue]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'sulkowski' => 's.eh.l/k.aw.f/s.k.ee / [s^s].[u^uh].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'sulzberger' => 's.uh.l.t.s/b.er/g.er / [s^s].[u^uh].[l^l]. / failed phone:t / failed spelling:zb',
  'summerville' => 's.uh/m.er/v.ih.l / [s^s].[u^uh]/[mm^m].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sundae' => 's.uh.n/d.ay / [s^s].[u^uh].[n^n]/[d^d].[a^ay] / failed phone:ay / failed spelling:ae',
  'sundahl' => 's.uh.n/d.aw.l / [s^s].[u^uh].[n^n]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'sunde' => 's.uh.n.d / [s^s].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'sundt' => 's.uh.n.t / [s^s].[u^uh].[n^n]. / failed phone:t / failed spelling:dt',
  'sunoco' => 's.ih/n.oh/k.oh / [s^s]. / failed phone:ih / failed spelling:un',
  'superfon' => 's.ue/p.er/f.ih.n / [s^s].[u^ue]/[p^p].[er^er]/[f^f]. / failed phone:ih / failed spelling:on',
  'superx' => 's.ue/p.er/eh.k.s / [s^s].[u^ue]/[p^p].[er^er]/ / failed phone:eh / failed spelling:x',
  'surfeit' => 's.er/f.eh.t / [s^s].[ur^er]/[f^f].[e^eh]. / failed phone:t / failed spelling:it',
  'suriname' => 's.er/ih/n.aw.m / [s^s].[ur^er]/[i^ih]/[n^n].[a^aw].[m^m] / failed phone:m / failed spelling:me',
  'surles' => 's.aw/r.eh.l.z / [s^s]. / failed phone:aw / failed spelling:ur',
  'surratt' => 's.aw/r.eh.t / [s^s]. / failed phone:aw / failed spelling:ur',
  'surrell' => 's.aw/r.eh.l / [s^s]. / failed phone:aw / failed spelling:ur',
  'surrency' => 's.aw/r.eh.n/s.ee / [s^s]. / failed phone:aw / failed spelling:ur',
  'surrett' => 's.aw/r.ih.t / [s^s]. / failed phone:aw / failed spelling:ur',
  'susanne' => 's.ue/z.ah.n / [s^s].[u^ue]/[s^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'sutcliffe' => 's.uh.t/k.l.ih.f / [s^s].[u^uh].[t^t]/[c^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'suttles' => 's.uh/t.eh.l.z / [s^s].[u^uh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'suttmeier' => 's.uh.t/m.igh.r / [s^s].[u^uh].[tt^t]/[m^m].[ei^igh]. / failed phone:r / failed spelling:er',
  'suu' => 'eh.s/ye.ue/ye.ue /  / failed phone:eh / failed spelling:su',
  'suzanne' => 's.ue/z.ah.n / [s^s].[u^ue]/[z^z].[a^ah].[n^n] / failed phone:n / failed spelling:nn',
  'svehla' => 's.v.eh/l.eh / [s^s].[v^v].[e^eh]/ / failed phone:l / failed spelling:hl',
  'swackhamer' => 's.w.aw/k.ah/m.er / [s^s].[w^w].[a^aw]/[c^k]. / failed phone:ah / failed spelling:kh',
  'swanke' => 's.w.aw.ng.k / [s^s].[w^w].[a^aw].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'sweetheart' => 's.w.ee.t/h.aw.r.t / [s^s].[w^w].[ee^ee].[t^t]/[h^h]. / failed phone:oh / failed spelling:ea',
  'sweethearts' => 's.w.ee.t/h.aw.r.t.s / [s^s].[w^w].[ee^ee].[t^t]/[h^h]. / failed phone:oh / failed spelling:ea',
  'swehla' => 's.w.eh/l.eh / [s^s].[w^w].[e^eh]/ / failed phone:l / failed spelling:hl',
  'swiatek' => 's.v.ee/aw/t.eh.k / [sw^s]. / failed phone:v / failed spelling:ia',
  'swiatkowski' => 's.v.ee/eh.t/k.aw.f/s.k.ee / [sw^s]. / failed phone:v / failed spelling:ia',
  'swiderski' => 's.v.ih/d.er/s.k.ee / [sw^s]. / failed phone:v / failed spelling:id',
  'swindled' => 's.w.ih.n/d.eh.l.d / [s^s].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'swindler' => 's.w.ih.n/d.eh/l.er / [s^s].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'swindles' => 's.w.ih.n/d.eh.l.z / [s^s].[w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'swingler' => 's.w.ih.ng/g.eh/l.er / [s^s].[w^w].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'swisshelm' => 's.w.ih/sh.ih.l.m / [s^s].[w^w].[i^ih]/[s^sh]. / failed phone:ih / failed spelling:sh',
  'switaj' => 's.w.ih/t.igh / [s^s].[w^w].[i^ih]/[t^t]. / failed phone:igh / failed spelling:aj',
  'sybille' => 's.ih/b.ih.l / [s^s].[y^ih]/[b^b].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'sykes' => 's.igh.k.s / [s^s].[y^igh].[k^k]. / failed phone:s / failed spelling:es',
  'syllables' => 's.ih/l.eh/b.eh.l.z / [s^s].[y^ih]/[ll^l].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'sylvanus' => 's.ih.l/v.eh/n.ih.s / [s^s].[y^ih].[l^l]/[v^v].[a^ah]/[n^n]. / failed phone:ih / failed spelling:us',
  'sylvest' => 's.ye.l/v.ay/ih.s.t / [s^s].[y^ye].[l^l]/[v^v].[e^ay]/ / failed phone:ih / failed spelling:st',
  'syme' => 's.igh.m / [s^s].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'sypniewski' => 's.ih.p/n.ee/eh.f/s.k.ee / [s^s].[y^ih].[p^p]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'szabo' => 'sh.aw/b.oh / [s^sh]. / failed phone:aw / failed spelling:za',
  'szafran' => 'sh.aw/f.r.eh.n / [s^sh]. / failed phone:aw / failed spelling:za',
  'szafranski' => 'sh.eh/f.r.ah.n/s.k.ee / [s^sh]. / failed phone:eh / failed spelling:za',
  'szalay' => 'sh.aw/l.igh / [s^sh]. / failed phone:aw / failed spelling:za',
  'szalkowski' => 'sh.eh.l/k.aw.f/s.k.ee / [s^sh]. / failed phone:eh / failed spelling:za',
  'szanto' => 'sh.ah.n/t.oh / [s^sh]. / failed phone:ah / failed spelling:za',
  'szarek' => 'sh.aw/r.eh.k / [s^sh]. / failed phone:aw / failed spelling:za',
  'szatkowski' => 'sh.eh.t/k.aw.f/s.k.ee / [s^sh]. / failed phone:eh / failed spelling:za',
  'szczech' => 'sh.eh.k / [s^sh]. / failed phone:eh / failed spelling:zc',
  'szczepaniak' => 'sh.ih/p.ah/n.ee/ah.k / [s^sh]. / failed phone:ih / failed spelling:zc',
  'szczepanik' => 'sh.ih/p.ah/n.ih.k / [s^sh]. / failed phone:ih / failed spelling:zc',
  'szczepanski' => 'sh.ih/p.ah.n/s.k.ee / [s^sh]. / failed phone:ih / failed spelling:zc',
  'szczerba' => 'sh.er/b.eh / [s^sh]. / failed phone:er / failed spelling:zc',
  'szczesniak' => 'sh.eh.z/n.ee/ah.k / [s^sh]. / failed phone:eh / failed spelling:zc',
  'szczesny' => 'sh.eh.z/n.ee / [s^sh]. / failed phone:eh / failed spelling:zc',
  'szczygiel' => 'sh.ih/g.ee.l / [s^sh]. / failed phone:ih / failed spelling:zc',
  'sze' => 'sh.ee / [s^sh]. / failed phone:ee / failed spelling:ze',
  'szekely' => 'sh.ee/k.l.ee / [s^sh]. / failed phone:ee / failed spelling:ze',
  'szeliga' => 'sh.ih/l.igh/g.eh / [s^sh]. / failed phone:ih / failed spelling:ze',
  'szeto' => 'sh.ee/t.oh / [s^sh]. / failed phone:ee / failed spelling:ze',
  'szewczyk' => 'sh.ue/ch.ih.k / [s^sh]. / failed phone:ue / failed spelling:ze',
  'szilagyi' => 'sh.ih/l.aw/g.ee / [s^sh]. / failed phone:ih / failed spelling:zi',
  'szoke' => 'sh.oh.k / [s^sh]. / failed phone:oh / failed spelling:zo',
  'szostak' => 'sh.aw/s.t.eh.k / [s^sh]. / failed phone:aw / failed spelling:zo',
  'szostek' => 'sh.aw/s.t.eh.k / [s^sh]. / failed phone:aw / failed spelling:zo',
  'szot' => 'sh.aw.t / [s^sh]. / failed phone:aw / failed spelling:zo',
  'szott' => 'sh.aw.t / [s^sh]. / failed phone:aw / failed spelling:zo',
  'szuba' => 'sh.ue/b.eh / [s^sh]. / failed phone:ue / failed spelling:zu',
  'szuch' => 'sh.uh.ch / [s^sh]. / failed phone:uh / failed spelling:zu',
  'szucs' => 'sh.uh.k.s / [s^sh]. / failed phone:uh / failed spelling:zu',
  'szumski' => 'sh.uh.m/s.k.ee / [s^sh]. / failed phone:uh / failed spelling:zu',
  'szwed' => 'sh/v.eh.d / [s^sh]/ / failed phone:v / failed spelling:zw',
  'szydlowski' => 'sh.ih.d/l.aw.f/s.k.ee / [s^sh]. / failed phone:ih / failed spelling:zy',
  'szymanowski' => 'sh.ih/m.eh/n.aw.f/s.k.ee / [s^sh]. / failed phone:ih / failed spelling:zy',
  'szymanski' => 'sh.ih/m.ah.n/s.k.ee / [s^sh]. / failed phone:ih / failed spelling:zy',
  'szymborski' => 'sh.ih.m/b.aw.r/s.k.ee / [s^sh]. / failed phone:ih / failed spelling:zy',
  'szymczak' => 'sh.ih.m/ch.ah.k / [s^sh]. / failed phone:ih / failed spelling:zy',
  't' => 't.ee / [t^t]. / failed phone:ee / failed spelling:',
  'taaffe' => 't.aw.f / [t^t].[a^aw]. / failed phone:f / failed spelling:af',
  'tableaux' => 't.eh/b.l.oh / [t^t].[a^ah]/[b^b].[le^l].[a^oh] / failed phone:oh / failed spelling:au',
  'tablecloth' => 't.ay/b.eh.l/k.l.aw.th / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tablecloths' => 't.ay/b.eh.l/k.l.aw.th.s / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tabled' => 't.ay/b.eh.l.d / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tabler' => 't.ay/b.eh/l.er / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tables' => 't.ay/b.eh.l.z / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tablespoon' => 't.ay/b.eh.l/s.p.ue.n / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tablespoons' => 't.ay/b.eh.l/s.p.ue.n.z / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tabletop' => 't.ay/b.eh.l/t.aw.p / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tableware' => 't.ay/b.eh.l/w.air / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'tabling' => 't.ay/b.eh/l.ih.ng / [t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:li',
  'tacita' => 't.aw/ch.ee/t.eh / [t^t].[a^aw]/ / failed phone:t / failed spelling:ci',
  'tacke' => 't.ah.k / [t^t].[a^ah].[c^k] / failed phone:k / failed spelling:ck',
  'tackled' => 't.ah/k.eh.l.d / [t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'tackles' => 't.ah/k.eh.l.z / [t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'tadeusz' => 't.ah/d.ee/ue.z / [t^t].[a^ah]/[d^d].[e^ee]/[u^ue].[s^z] / failed phone:z / failed spelling:sz',
  'tadych' => 't.aw/d.ih.h / [t^t].[a^aw]/[d^d].[y^ih]. / failed phone:h / failed spelling:ch',
  'tadzhikistan' => 't.ah.d/zh.eh/k.eh/s.t.aw.n / [t^t].[a^ah].[d^d]/[z^zh]. / failed phone:eh / failed spelling:hi',
  'tae' => 't.ay / [t^t].[a^ay] / failed phone:ay / failed spelling:ae',
  'taegu' => 't.ay/g.ue / [t^t].[a^ay]/ / failed phone:g / failed spelling:eg',
  'taekwondo' => 't.ah/kw.aw.n/d.oh / [t^t].[a^ah]/ / failed phone:kw / failed spelling:ek',
  'taffe' => 't.ah.f / [t^t].[a^ah].[ff^f] / failed phone:f / failed spelling:ff',
  'taflinger' => 't.ay/f.eh/l.ih.ng/er / [t^t].[a^ay]/[f^f]. / failed phone:eh / failed spelling:li',
  'tagge' => 't.ah.g / [t^t].[a^ah].[gg^g] / failed phone:g / failed spelling:gg',
  'tagliaferri' => 't.aw.g/l.ye.aw/f.air/ee / [t^t].[a^aw].[g^g]/[l^l]. / failed phone:ye / failed spelling:ia',
  'taglieri' => 't.aw/g.l.ih/r.ee / [t^t].[a^aw]/[g^g].[l^l].[i^ih]/ / failed phone:r / failed spelling:er',
  'taher' => 't.ay/er / [t^t].[a^ay]/ / failed phone:er / failed spelling:he',
  'tahmassebi' => 't.aw/m.eh/s.ee/b.ee / [t^t].[a^aw]/ / failed phone:m / failed spelling:hm',
  'taj' => 't.aw.zh / [t^t].[a^ah]. / failed phone:g / failed spelling:j',
  'takecare' => 't.ay/k.air / [t^t].[a^ay]/[k^k]. / failed phone:air / failed spelling:ec',
  'takihyo' => 't.eh/k.ee/ye.oh / [t^t].[a^ah]/[k^k].[i^ee]/ / failed phone:ye / failed spelling:hy',
  'taneja' => 't.eh/n.ay/h.eh / [t^t].[a^ah]/[n^n].[e^ay]/ / failed phone:h / failed spelling:ja',
  'tangibles' => 't.ah.n/j.eh/b.eh.l.z / [t^t].[a^ah].[n^n]/[g^j].[i^ih]/[b^b]. / failed phone:eh / failed spelling:le',
  'tangiers' => 't.ah.n/j.ih.r.z / [t^t].[a^ah].[n^n]/[g^j].[i^ih]. / failed phone:r / failed spelling:er',
  'tangled' => 't.ah.ng/g.eh.l.d / [t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tangles' => 't.ah.ng/g.eh.l.z / [t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tanglewood' => 't.ah.ng/g.eh.l/w.oo.d / [t^t].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tania' => 't.aw/n.ye.eh / [t^t].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ia',
  'tanja' => 't.ah/n.ye.uh / [t^t].[a^ah]/[n^n]. / failed phone:ye / failed spelling:ja',
  'tanke' => 't.ah.ng.k / [t^t].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'tannehill' => 't.ah.n/h.ih.l / [t^t].[a^ah].[n^n]/ / failed phone:h / failed spelling:ne',
  'tao' => 't.ow / [t^t]. / failed phone:ow / failed spelling:ao',
  'taoism' => 'd.ow/ih/z.eh.m / [t^d]. / failed phone:ow / failed spelling:ao',
  'taoists' => 'd.ow/eh.s.t.s / [t^d]. / failed phone:ow / failed spelling:ao',
  'taos' => 't.ow.z / [t^t]. / failed phone:ow / failed spelling:ao',
  'tariq' => 't.aw/r.ee.k / [t^t].[a^aw]/[r^r].[i^ee]. / failed phone:k / failed spelling:q',
  'tarkowski' => 't.er/k.aw.f/s.k.ee / [t^t].[ar^er]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'tarnowski' => 't.er/n.aw.f/s.k.ee / [t^t].[ar^er]/[n^n].[o^aw]. / failed phone:f / failed spelling:ws',
  'tasch' => 't.ah.sh / [t^t].[a^ah].[sc^sh] / failed phone:sh / failed spelling:sc',
  'tasm' => 't.ah/s.eh.m / [t^t].[a^ah]/[s^s]. / failed phone:eh / failed spelling:m',
  'tatsch' => 't.ah.ch / [t^t].[a^ah].[t^t]. / failed phone:t / failed spelling:ts',
  'tattled' => 't.ah/t.eh.l.d / [t^t].[a^ah]/[t^t]. / failed phone:eh / failed spelling:tl',
  'taube' => 't.aw.b / [t^t].[au^aw].[b^b] / failed phone:b / failed spelling:ub',
  'tauke' => 't.ow.k / [t^t].[au^aw].[k^k] / failed phone:k / failed spelling:ke',
  'tausch' => 't.ow.sh / [t^t].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'tauscher' => 't.ow/sh.er / [t^t].[au^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'taxables' => 't.ah.k/s.eh/b.eh.l.z / [t^t].[a^ah].[x^x]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'tb' => 't.ee/b.ee / [t^t]. / failed phone:ee / failed spelling:b',
  'tbilisi' => 't.eh/b.ih/l.ee/s.ee / [t^t]. / failed phone:eh / failed spelling:bi',
  'tcas' => 't.ee/s.ee/ay/eh.s / [t^t]. / failed phone:ee / failed spelling:ca',
  'tchuruk' => 'ch.oo/r.ih.k / [t^t].[ch^sh].[u^oo]/[r^r]. / failed phone:ih / failed spelling:uk',
  'teahan' => 't.ee/eh.n / [t^t].[e^ee]/[ah^eh]. / failed phone:n / failed spelling:an',
  'teakwood' => 't.ee/kw.oo.d / [t^t].[e^ee]/ / failed phone:kw / failed spelling:ak',
  'tebbe' => 't.eh.b / [t^t].[e^eh].[bb^b] / failed phone:b / failed spelling:bb',
  'tebeau' => 't.ih/b.oh / [t^t].[e^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'tebuthiuron' => 't.eh/b.eh.th/ye.ue/r.aw.n / [t^t].[e^eh]/[b^b].[u^uh].[th^th]/ / failed phone:ue / failed spelling:iu',
  'tecumseh' => 't.eh/k.uh.m/s.eh / [t^t].[e^eh]/[c^k].[u^uh].[m^m]/[s^s].[e^eh] / failed phone:eh / failed spelling:h',
  'teehan' => 't.ee/eh.n / [t^t].[e^ee]/[e^eh]. / failed phone:n / failed spelling:ha',
  'teeples' => 't.ee/p.eh.l.z / [te^t].[e^ee]/[p^p]. / failed phone:eh / failed spelling:le',
  'tegge' => 't.eh.g / [t^t].[e^eh].[gg^g] / failed phone:g / failed spelling:gg',
  'tegtmeier' => 't.eh.t/m.igh/er / [t^t].[e^eh]. / failed phone:t / failed spelling:gt',
  'tegtmeyer' => 't.eh.t/m.igh/er / [t^t].[e^eh]. / failed phone:t / failed spelling:gt',
  'tehan' => 't.ay/eh.n / [t^t].[e^ay]/ / failed phone:eh / failed spelling:ha',
  'tehran' => 't.ay/r.aw.n / [t^t].[e^ay]/ / failed phone:r / failed spelling:hr',
  'tehrani' => 't.ay/r.aw/n.ee / [t^t].[e^ay]/ / failed phone:r / failed spelling:hr',
  'tehranis' => 't.ay/r.aw/n.ee.z / [t^t].[e^ay]/ / failed phone:r / failed spelling:hr',
  'tehrans' => 't.ay/r.aw.n.z / [t^t].[e^ay]/ / failed phone:r / failed spelling:hr',
  'teixeira' => 't.eh.k/s.air/eh / [te^t].[i^ih].[x^x]/ / failed phone:air / failed spelling:ei',
  'tejada' => 't.ay/ye.aw/d.eh / [t^t].[e^ay]/ / failed phone:ye / failed spelling:ja',
  'tejeda' => 't.ay/ye.ay/d.eh / [t^t].[e^ay]/ / failed phone:ye / failed spelling:je',
  'tejera' => 't.ay/ih/r.eh / [t^t].[e^ay]/ / failed phone:ih / failed spelling:je',
  'teknowledge' => 't.eh.k/n.aw/l.eh.j / [t^t].[e^eh].[k^k]/[n^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'teleconference' => 't.eh/l.eh/k.aw.n/f.r.eh.n.s / [t^t].[e^eh]/[l^l].[e^eh]/[c^k].[o^aw].[n^n]/[f^f]. / failed phone:r / failed spelling:er',
  'teleconferencing' => 't.eh/l.eh/k.aw.n/f.r.eh.n/s.ih.ng / [t^t].[e^eh]/[l^l].[e^eh]/[c^k].[o^aw].[n^n]/[f^f]. / failed phone:r / failed spelling:er',
  'telecredit' => 't.eh/l.eh/k.r.eh/t.ih.t / [t^t].[e^eh]/[l^l].[e^eh]/[c^k].[r^r].[e^eh]/ / failed phone:t / failed spelling:di',
  'telemedia' => 't.eh/l.eh/m.ee/t.ee/eh / [t^t].[e^eh]/[l^l].[e^eh]/[m^m].[e^ee]/ / failed phone:t / failed spelling:di',
  'telethon' => 't.eh/l.eh/th.ih.n / [t^t].[e^eh]/[l^l].[e^eh]/[th^th]. / failed phone:ih / failed spelling:on',
  'televideo' => 't.eh/l.eh/v.ih/t.ee/oh / [t^t].[e^eh]/[l^l].[e^eh]/[v^v].[i^ih]/ / failed phone:t / failed spelling:de',
  'telexed' => 't.eh/l.eh.s.k.t / [t^t].[e^eh]/[l^l].[e^eh]. / failed phone:s / failed spelling:xe',
  'teltschik' => 't.eh.l/ch.ih.k / [t^t].[e^eh].[l^l]/[t^t].[sc^sh]. / failed phone:ih / failed spelling:hi',
  'telxon' => 't.eh.l/z.aw.n / [t^t].[e^eh].[l^l]/ / failed phone:z / failed spelling:xo',
  'temme' => 't.eh.m / [t^t].[e^eh].[m^m] / failed phone:m / failed spelling:mm',
  'templeman' => 't.eh.m/p.eh.l/m.eh.n / [t^t].[e^eh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'templer' => 't.eh.m/p.eh/l.er / [t^t].[e^eh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'temples' => 't.eh.m/p.eh.l.z / [t^t].[e^eh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'templeton' => 't.eh.m/p.eh.l/t.eh.n / [t^t].[e^eh].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'tencza' => 't.eh.n/ch.eh / [t^t].[e^eh].[n^n]/ / failed phone:t / failed spelling:cz',
  'tenglemann' => 't.eh.ng/g.eh.l/m.eh.n / [t^t].[e^eh].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tenn' => 't.eh/n.eh/s.ee / [t^t].[e^eh]/[n^n]. / failed phone:eh / failed spelling:n',
  'tensions' => 't.eh.n/ch.eh.n.z / [t^t].[e^eh].[n^n]/ / failed phone:t / failed spelling:si',
  'tentacles' => 't.eh.n/t.eh/k.eh.l.z / [t^t].[e^eh].[n^n]/[t^t].[a^ah]/[c^k]. / failed phone:eh / failed spelling:le',
  'tenuous' => 't.eh/n.ye.eh/w.eh.s / [t^t].[e^eh]/[n^n].[u^ue]/ / failed phone:w / failed spelling:ou',
  'tercero' => 't.er/ch.air/oh / [te^t].[r^er]/ / failed phone:t / failed spelling:ce',
  'terhaar' => 't.er/h.aw.r / [te^t].[r^er]/[h^h].[a^oh]. / failed phone:r / failed spelling:ar',
  'terlecki' => 't.er/l.eh.t/s.k.ee / [te^t].[r^er]/[l^l].[e^eh]. / failed phone:t / failed spelling:ck',
  'terlizzi' => 't.er/l.ee.t/s.ee / [te^t].[r^er]/[l^l].[i^ee]. / failed phone:t / failed spelling:zz',
  'terracciano' => 't.er/aw/ch.ee/aw/n.oh / [t^t].[err^er]/[a^aw]/ / failed phone:t / failed spelling:cc',
  'terrizzi' => 't.air/ih.t/s.ee / [t^t].[err^air]/[i^ih]. / failed phone:t / failed spelling:zz',
  'tertiary' => 't.er/sh.er/ee / [te^t].[r^er]/[t^sh]. / failed phone:er / failed spelling:ia',
  'tertius' => 't.er/t.ee/ih.s / [te^t].[r^er]/[t^t].[i^ee]/ / failed phone:ih / failed spelling:us',
  'tesch' => 't.eh.sh / [t^t].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'teske' => 't.eh.s.k / [t^t].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'tesler' => 't.eh/s.eh/l.er / [t^t].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'tesmer' => 't.eh/s.eh/m.er / [t^t].[e^eh]/[s^s]. / failed phone:eh / failed spelling:me',
  'tesoriero' => 't.eh/s.aw/r.ih/r.oh / [t^t].[e^eh]/[s^s].[o^aw]/[r^r].[i^ih]/ / failed phone:r / failed spelling:er',
  'testicles' => 't.eh/s.t.ih/k.eh.l.z / [t^t].[e^eh]/[s^s].[t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'tetreault' => 't.ih/t.r.oh / [t^t].[e^ih]/[t^t].[re^r].[a^oh] / failed phone:oh / failed spelling:ea',
  'teuber' => 't.oy/b.er / [te^t]. / failed phone:oy / failed spelling:ub',
  'teubner' => 't.oy.b/n.er / [te^t]. / failed phone:oy / failed spelling:ub',
  'teufel' => 't.oy/f.eh.l / [te^t]. / failed phone:oy / failed spelling:uf',
  'teuscher' => 't.oy/sh.er / [te^t]. / failed phone:oy / failed spelling:us',
  'teutsch' => 't.oy.ch / [te^t]. / failed phone:oy / failed spelling:ut',
  'tevye' => 't.eh/v.ee / [t^t].[e^eh]/[v^v].[y^ee] / failed phone:ee / failed spelling:ye',
  'texeira' => 't.ay.k/s.air/eh / [t^t].[e^ay].[x^x]/ / failed phone:air / failed spelling:ei',
  'th' => 't.ee/ay.ch / [t^t]. / failed phone:ee / failed spelling:h',
  'thackeray' => 'th.ah/k.er/ee / [th^th].[a^ah]/[ck^k].[er^er]/ / failed phone:ee / failed spelling:ay',
  'thai' => 't.igh / [t^t]. / failed phone:igh / failed spelling:ha',
  'thailand' => 't.igh/l.ah.n.d / [t^t]. / failed phone:igh / failed spelling:ha',
  'thais' => 't.igh.z / [t^t]. / failed phone:igh / failed spelling:ha',
  'thakkar' => 'th.ah/k.er / [th^th].[a^ah]/[k^k]. / failed phone:er / failed spelling:ka',
  'thalia' => 'th.ay/l.ye.eh / [th^th].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'thames' => 't.eh.m.z / [t^t]. / failed phone:eh / failed spelling:ha',
  'thanh' => 'th.ah.n / [th^th].[a^ah].[n^n] / failed phone:n / failed spelling:nh',
  'thao' => 'dh.ow / [th^dh]. / failed phone:ow / failed spelling:ao',
  'thatll' => 'dh.ah/t.eh.l / [th^dh].[a^ah]/[t^t]. / failed phone:eh / failed spelling:ll',
  'thebeau' => 'th.ih/b.oh / [th^th].[e^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'their' => 'dh.air / [the^dh]. / failed phone:air / failed spelling:ir',
  'theirs' => 'dh.air.z / [the^dh]. / failed phone:air / failed spelling:ir',
  'theorem' => 'th.ih/r.eh.m / [th^th].[e^ih]/ / failed phone:r / failed spelling:or',
  'theories' => 'th.ih/r.ee.z / [th^th].[e^ih]/ / failed phone:r / failed spelling:or',
  'theory' => 'th.ih/r.ee / [th^th].[e^ih]/ / failed phone:r / failed spelling:or',
  'therani' => 't.air/aw/n.ee / [t^t]. / failed phone:air / failed spelling:he',
  'theresa' => 't.er/ee/s.eh / [t^t]. / failed phone:er / failed spelling:he',
  'theriault' => 'th.air/ee/oh / [th^th].[er^air]/[i^ee]/[a^oh] / failed phone:oh / failed spelling:au',
  'thermae' => 'th.er/m.ee / [the^th].[r^er]/[m^m]. / failed phone:ee / failed spelling:ae',
  'theroux' => 'th.er/ue / [the^th].[r^er]/[ou^ue] / failed phone:ue / failed spelling:ou',
  'therriault' => 'th.air/ee/oh / [th^th].[err^air]/[i^ee]/[a^oh] / failed phone:oh / failed spelling:au',
  'thibadeau' => 't.ih/b.eh/d.oh / [t^t]. / failed phone:ih / failed spelling:hi',
  'thibault' => 'th.ih/b.oh / [th^th].[i^ih]/[b^b].[a^oh] / failed phone:oh / failed spelling:au',
  'thibeau' => 'th.ih/b.oh / [th^th].[i^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'thibeault' => 't.ee/b.oh / [t^t]. / failed phone:ee / failed spelling:hi',
  'thibeaux' => 'th.ih/b.oh / [th^th].[i^ih]/[b^b]. / failed phone:oh / failed spelling:ea',
  'thibedeau' => 'th.ih/b.ih/d.oh / [th^th].[i^ih]/[b^b].[e^ih]/[d^d]. / failed phone:oh / failed spelling:ea',
  'thibodeau' => 'th.ih/b.eh/d.oh / [th^th].[i^ih]/[b^b].[o^uh]/[d^d]. / failed phone:oh / failed spelling:ea',
  'thibodeaux' => 'th.ih/b.eh/d.oh / [th^th].[i^ih]/[b^b].[o^uh]/[d^d]. / failed phone:oh / failed spelling:ea',
  'thiebaud' => 'th.ee/b.oh / [th^th].[ie^ee]/[b^b].[a^oh] / failed phone:oh / failed spelling:au',
  'thiede' => 'th.ee.d / [th^th].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'thielke' => 'th.ee.l.k / [th^th].[ie^ee].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'thielsch' => 'th.ee.l.sh / [th^th].[ie^ee].[l^l].[sc^sh] / failed phone:sh / failed spelling:sc',
  'thieme' => 'th.ee.m / [th^th].[ie^ee].[m^m] / failed phone:m / failed spelling:me',
  'thierry' => 'th.ih/r.ee / [th^th].[i^ih]/ / failed phone:r / failed spelling:er',
  'thiery' => 'th.ih/r.ee / [th^th].[i^ih]/ / failed phone:r / failed spelling:er',
  'thistles' => 'th.ih/s.eh.l.z / [th^th].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'thomasville' => 't.aw/m.eh/s.v.ih.l / [t^t].[ho^aw]/[m^m].[a^ah]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'thorndike' => 'th.aw.r.n/d.ih.k / [th^th].[o^oh].[r^r].[n^n]/[d^d].[i^ih].[k^k] / failed phone:k / failed spelling:ke',
  'thorndyke' => 'th.aw.r.n/d.igh.k / [th^th].[o^oh].[r^r].[n^n]/[d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'threesome' => 'th.r.ee/s.eh.m / [th^th].[r^r].[ee^ee]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'thrillingly' => 'th.r.ih/l.eh/g.l.ee / [th^th].[r^r].[i^ih]/[ll^l].[i^ih]/ / failed phone:g / failed spelling:ng',
  'throttled' => 'th.r.aw/t.eh.l.d / [th^th].[r^r].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'throttles' => 'th.r.aw/t.eh.l.z / [th^th].[r^r].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'throttling' => 'th.r.aw/t.eh/l.ih.ng / [th^th].[r^r].[o^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'thurnher' => 'th.er/n.er / [th^th].[ur^er]/[n^n]. / failed phone:er / failed spelling:he',
  'thuy' => 't.ue / [t^t]. / failed phone:ue / failed spelling:hu',
  'thyme' => 'th.igh.m / [th^th].[y^igh].[m^m] / failed phone:m / failed spelling:me',
  'thyssen' => 't.igh/s.eh.n / [t^t]. / failed phone:igh / failed spelling:hy',
  'tiaacref' => 't.ee/eh/k.r.eh.f / [t^t].[i^ee]/[a^ah]/ / failed phone:k / failed spelling:ac',
  'tian' => 't.ye.aw.n / [t^t]. / failed phone:ye / failed spelling:ia',
  'tickled' => 't.ih/k.eh.l.d / [t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'ticklish' => 't.ih/k.eh/l.ih.sh / [t^t].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'tiede' => 't.ee.d / [t^t].[ie^ee].[d^d] / failed phone:d / failed spelling:de',
  'tiedeman' => 't.ee.d/m.eh.n / [t^t].[ie^ee].[d^d]/ / failed phone:m / failed spelling:em',
  'tiedemann' => 't.ee.d/m.eh.n / [t^t].[ie^ee].[d^d]/ / failed phone:m / failed spelling:em',
  'tien' => 't.ye.eh.n / [t^t]. / failed phone:ue / failed spelling:ie',
  'tiernan' => 't.ih.r/n.eh.n / [t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'tierney' => 't.ih.r/n.ee / [t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'tierno' => 't.ih.r/n.oh / [t^t].[i^ih]. / failed phone:r / failed spelling:er',
  'tieszen' => 't.ee/sh.eh.n / [t^t].[ie^ee]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'tietje' => 't.ee.t.j / [t^t].[ie^ee].[t^t].[j^j] / failed phone:j / failed spelling:je',
  'tighe' => 't.igh.g / [t^t].[i^igh].[gh^g] / failed phone:g / failed spelling:e',
  'tijerina' => 't.ee/ye.air/ee/n.eh / [t^t].[i^ee]/ / failed phone:ye / failed spelling:jr',
  'tijuana' => 't.ih/w.aw/n.eh / [t^t].[i^ih]/ / failed phone:w / failed spelling:ju',
  'tilghman' => 't.ih.l/m.eh.n / [t^t].[i^ih].[l^l]/ / failed phone:m / failed spelling:gh',
  'timetables' => 't.igh.m/t.ay/b.eh.l.z / [t^t].[i_e^igh].[m^m]/[t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'timme' => 't.ih.m / [t^t].[i^ih].[m^m] / failed phone:m / failed spelling:mm',
  'tinajero' => 't.ee/n.aw/ye.air/oh / [t^t].[i^ee]/[n^n].[a^aw]/ / failed phone:ye / failed spelling:je',
  'tingler' => 't.ih.ng/g.eh/l.er / [t^t].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tingling' => 't.ih.ng/g.eh/l.ih.ng / [t^t].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'tinkham' => 't.ih.ng/k.eh.m / [t^t].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:ha',
  'tinkled' => 't.ih.ng/k.eh.l.d / [t^t].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'tinkler' => 't.ih.ng/k.eh/l.er / [t^t].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'tinkling' => 't.ih.ng/k.eh/l.ih.ng / [t^t].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:li',
  'tipler' => 't.igh/p.eh/l.er / [t^t].[i^igh]/[p^p]. / failed phone:eh / failed spelling:le',
  'tiresome' => 't.igh/er/s.eh.m / [t^t].[i^igh]/[re^er]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'tisch' => 't.ih.sh / [t^t].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'tischer' => 't.ih/sh.er / [t^t].[i^ih]/[sc^sh]. / failed phone:er / failed spelling:he',
  'tischler' => 't.ih/sh.eh/l.er / [t^t].[i^ih]/[sc^sh]. / failed phone:eh / failed spelling:hl',
  'titania' => 't.eh/t.aw/n.ye.eh / [t^t].[i^ih]/[t^t].[a^aw]/[n^n]. / failed phone:ue / failed spelling:ia',
  'titled' => 't.igh/t.eh.l.d / [t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'titleholder' => 't.igh/t.eh.l/h.oh.l/d.er / [t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'titles' => 't.igh/t.eh.l.z / [t^t].[i^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'titusville' => 't.igh/t.eh/s.v.ih.l / [t^t].[i^igh]/[t^t].[u^uh]/[s^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'tjaden' => 'j.ay/d.eh.n /  / failed phone:j / failed spelling:tj',
  'tjarks' => 'j.aw.r.k.s /  / failed phone:j / failed spelling:tj',
  'tkach' => 'k.ah.ch /  / failed phone:k / failed spelling:tk',
  'tkacz' => 'k.aw.ch /  / failed phone:k / failed spelling:tk',
  'tobler' => 't.oh/b.eh/l.er / [t^t].[o^oh]/[b^b]. / failed phone:eh / failed spelling:le',
  'tocci' => 't.oh/ch.ee / [t^t].[o^oh]/ / failed phone:t / failed spelling:cc',
  'tocqueville' => 't.oh.k/v.ih.l / [t^t].[o^oh].[c^k]/ / failed phone:v / failed spelling:qu',
  'toczek' => 't.aw/ch.eh.k / [t^t].[o^aw]/ / failed phone:t / failed spelling:cz',
  'toelle' => 't.oh.l / [t^t].[o^oh].[el^l] / failed phone:l / failed spelling:el',
  'toggled' => 't.aw/g.eh.l.d / [t^t].[o^aw]/[gg^g]. / failed phone:eh / failed spelling:le',
  'tokarczyk' => 't.aw/k.er/ch.ih.k / [t^t].[o^aw]/[k^k].[ar^er]/ / failed phone:t / failed spelling:cz',
  'tokkin' => 't.aw/k.ih.n / [t^t].[o^aw]/[k^k]. / failed phone:ih / failed spelling:ki',
  'tolle' => 't.aw.l / [t^t].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'tomaszewski' => 't.eh/m.eh/sh.eh.f/s.k.ee / [t^t].[o^uh]/[m^m].[a^ah]/[s^sh]. / failed phone:eh / failed spelling:ze',
  'tomayko' => 't.eh/m.igh/k.oh / [t^t].[o^uh]/[m^m]. / failed phone:igh / failed spelling:ay',
  'tomczak' => 't.aw.m/ch.ah.k / [t^t].[o^aw].[m^m]/ / failed phone:t / failed spelling:cz',
  'tomczyk' => 't.aw.m/ch.ih.k / [t^t].[o^aw].[m^m]/ / failed phone:t / failed spelling:cz',
  'tomkiewicz' => 't.aw.m/k.eh/v.ih.ch / [t^t].[o^aw].[m^m]/[k^k].[ie^eh]/ / failed phone:v / failed spelling:wi',
  'tonjes' => 't.oh/n.ye.eh.s / [t^t].[o^oh]/[n^n]. / failed phone:ue / failed spelling:je',
  'tonne' => 't.uh.n / [t^t].[o^uh].[n^n] / failed phone:n / failed spelling:nn',
  'tonnesen' => 't.uh.n/s.eh.n / [t^t].[o^uh].[n^n]/ / failed phone:s / failed spelling:ne',
  'toohey' => 't.ue/ee / [t^t].[oo^ue]/ / failed phone:ee / failed spelling:he',
  'tooke' => 't.oo.k / [t^t].[oo^oo].[k^k] / failed phone:k / failed spelling:ok',
  'tookes' => 't.oo.k.s / [t^t].[oo^oo].[k^k]. / failed phone:x / failed spelling:ok',
  'toppled' => 't.aw/p.eh.l.d / [t^t].[o^aw]/[p^p]. / failed phone:eh / failed spelling:pl',
  'topples' => 't.aw/p.eh.l.z / [t^t].[o^aw]/[p^p]. / failed phone:eh / failed spelling:pl',
  'toppling' => 't.aw/p.eh/l.ih.ng / [t^t].[o^aw]/[p^p]. / failed phone:eh / failed spelling:pl',
  'torme' => 't.aw.r.m / [t^t].[o^oh].[r^r].[m^m] / failed phone:m / failed spelling:me',
  'torosian' => 't.er/aw/zh.ih.n / [t^t].[o^oh].[r^r]/[o^aw]/[s^zh].[i^ih]. / failed phone:n / failed spelling:an',
  'torre' => 't.aw.r / [t^t].[o^oh].[r^r] / failed phone:r / failed spelling:rr',
  'torrijos' => 't.aw/r.ee/oh.s / [t^t].[o^aw]/[rr^r].[i^ee]/ / failed phone:oh / failed spelling:jo',
  'tortilla' => 't.aw.r/t.ee/eh / [t^t].[o^oh].[r^r]/[t^t].[i^ee]/ / failed phone:eh / failed spelling:ll',
  'tortillas' => 't.aw.r/t.ee/eh.z / [t^t].[o^oh].[r^r]/[t^t].[i^ee]/ / failed phone:eh / failed spelling:ll',
  'tortoise' => 't.aw.r/t.eh.s / [t^t].[o^oh].[r^r]/[t^t].[o^uh]. / failed phone:s / failed spelling:is',
  'tortoises' => 't.aw.r/t.eh/s.eh.z / [t^t].[o^oh].[r^r]/[t^t].[o^uh]/ / failed phone:s / failed spelling:is',
  'tortorici' => 't.aw.r/t.aw/r.ee/ch.ee / [t^t].[o^oh].[r^r]/[t^t].[o^aw]/[r^r].[i^ee]/ / failed phone:t / failed spelling:ci',
  'tortuous' => 't.aw.r/ch.eh/w.eh.s / [t^t].[o^oh].[r^r]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:ou',
  'torturous' => 't.aw.r/t.ye.eh.s / [t^t].[o^oh].[r^r]/[t^t].[u^ue]. / failed phone:s / failed spelling:ro',
  'tosch' => 't.aw.sh / [t^t].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'totzke' => 't.aw.t.z.k / [t^t].[o^aw].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'tourville' => 't.oo.r/v.ih.l / [t^t].[ou^oo].[r^r]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'tousled' => 't.aw/s.eh.l.d / [t^t].[ou^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'toussaint' => 't.ue/s.ah.n / [t^t].[ou^ue]/[ss^s].[a^ah]. / failed phone:n / failed spelling:in',
  'touvier' => 't.ue/v.ee/ay / [t^t].[ou^ue]/[v^v].[i^ee]/[e^ay] / failed phone:ay / failed spelling:r',
  'towles' => 't.oh/eh.l.z / [t^t].[ow^oh]/ / failed phone:eh / failed spelling:le',
  'toye' => 't.oy / [t^t].[oy^oy] / failed phone:oy / failed spelling:oy',
  'tracz' => 't.r.aw.ch / [t^t].[r^r].[a^aw]. / failed phone:t / failed spelling:cz',
  'traczyk' => 't.r.aw/ch.ih.k / [t^t].[r^r].[a^aw]/ / failed phone:t / failed spelling:cz',
  'traditionalists' => 't.r.eh/d.ih/sh.n.eh/l.eh.s.t.s / [t^t].[r^r].[a^ah]/[d^d].[i^ih]/[t^sh]. / failed phone:n / failed spelling:io',
  'traeger' => 't.r.eh/g.er / [t^t].[r^r].[a^ah]/ / failed phone:g / failed spelling:eg',
  'trampled' => 't.r.ah.m/p.eh.l.d / [t^t].[r^r].[a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'tramples' => 't.r.ah.m/p.eh.l.z / [t^t].[r^r].[a^ah].[m^m]/[p^p]. / failed phone:eh / failed spelling:le',
  'tranche' => 't.r.ah.n.ch / [t^t].[r^r].[a^ah].[n^n].[ch^ch] / failed phone:t / failed spelling:ch',
  'transcanada' => 't.r.ah.n.z/k.ah/n.eh/t.eh / [t^t].[r^r].[a^ah].[n^n].[s^z]/[c^k].[a^ah]/[n^n].[a^ah]/ / failed phone:t / failed spelling:da',
  'trausch' => 't.r.ow.sh / [t^t].[r^r].[au^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'trebled' => 't.r.eh/b.eh.l.d / [t^t].[r^r].[e^eh]/[b^b]. / failed phone:eh / failed spelling:le',
  'treblinka' => 't.r.eh/b.l.ih.ng/k.er / [t^t].[r^r].[e^eh]/[b^b].[l^l].[i^ih].[n^ng]/[k^k]. / failed phone:er / failed spelling:a',
  'treichler' => 't.r.igh/k.eh/l.er / [t^t].[r^r].[ei^igh]/[ch^k]. / failed phone:eh / failed spelling:le',
  'trejo' => 't.r.ay/ye.oh / [t^t].[r^r].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'trekked' => 't.r.eh.k.t / [t^t].[r^r].[e^eh].[k^k]. / failed phone:t / failed spelling:ke',
  'trekking' => 't.r.eh/k.ih.ng / [t^t].[r^r].[e^eh]/[k^k]. / failed phone:ih / failed spelling:ki',
  'trembled' => 't.r.eh.m/b.eh.l.d / [t^t].[r^r].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'trembling' => 't.r.eh.m/b.eh/l.ih.ng / [t^t].[r^r].[e^eh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'treml' => 't.r.eh/m.eh.l / [t^t].[r^r].[e^eh]/[m^m]. / failed phone:eh / failed spelling:l',
  'tresch' => 't.r.eh.sh / [t^t].[r^r].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'trestles' => 't.r.eh/s.eh.l.z / [t^t].[r^r].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'triangles' => 't.r.igh/ah.ng/g.eh.l.z / [t^t].[r^r].[i^igh]/[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'tribbles' => 't.r.ih/b.eh.l.z / [t^t].[r^r].[i^ih]/[bb^b]. / failed phone:eh / failed spelling:le',
  'triche' => 't.r.ih.ch / [t^t].[r^r].[i^ih].[ch^ch] / failed phone:t / failed spelling:ch',
  'trickled' => 't.r.ih/k.eh.l.d / [t^t].[r^r].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'trickles' => 't.r.ih/k.eh.l.z / [t^t].[r^r].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kl',
  'trierweiler' => 't.r.ih.r/w.igh/l.er / [t^t].[r^r].[i^ih]. / failed phone:r / failed spelling:er',
  'trieu' => 't.r.ue / [t^t].[r^r]. / failed phone:ue / failed spelling:ie',
  'trifles' => 't.r.igh/f.eh.l.z / [t^t].[r^r].[i^igh]/[f^f]. / failed phone:eh / failed spelling:le',
  'trinh' => 't.r.ih.n / [t^t].[r^r].[i^ih].[n^n] / failed phone:n / failed spelling:nh',
  'triomphe' => 't.r.ee/oh.m.f / [t^t].[r^r].[i^ee]/[o^oh].[m^m].[ph^f] / failed phone:f / failed spelling:ph',
  'triplecast' => 't.r.ih/p.eh.l/k.ah.s.t / [t^t].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'tripled' => 't.r.ih/p.eh.l.d / [t^t].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'triples' => 't.r.ih/p.eh.l.z / [t^t].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'tripling' => 't.r.ih/p.eh/l.ih.ng / [t^t].[r^r].[i^ih]/[p^p]. / failed phone:eh / failed spelling:li',
  'trisler' => 't.r.ih/s.eh/l.er / [t^t].[r^r].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'tritsch' => 't.r.ih.ch / [t^t].[r^r].[i^ih].[t^t]. / failed phone:t / failed spelling:ts',
  'tritschler' => 't.r.ih.ch/l.er / [t^t].[r^r].[i^ih].[t^t].[sc^sh]/ / failed phone:l / failed spelling:hl',
  'troche' => 't.r.aw.ch / [t^t].[r^r].[o^aw].[ch^ch] / failed phone:t / failed spelling:ch',
  'troia' => 't.r.oh/ye.eh / [t^t].[r^r].[o^oh]/ / failed phone:ue / failed spelling:ia',
  'troiani' => 't.r.oh/ye.aw/n.ee / [t^t].[r^r].[o^oh]/ / failed phone:ye / failed spelling:ia',
  'trois' => 't.w.aw / [t^t]. / failed phone:w / failed spelling:ro',
  'trojanowski' => 't.r.eh/ye.eh/n.aw.f/s.k.ee / [t^t].[r^r].[o^uh]/ / failed phone:ue / failed spelling:ja',
  'troubh' => 't.r.ue.b / [t^t].[r^r].[ou^ue].[b^b] / failed phone:b / failed spelling:bh',
  'troubled' => 't.r.uh/b.eh.l.d / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troublefield' => 't.r.uh/b.eh.l/f.ee.l.d / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troublemaker' => 't.r.uh/b.eh.l/m.ay/k.er / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troublemakers' => 't.r.uh/b.eh.l/m.ay/k.er.z / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troubles' => 't.r.uh/b.eh.l.z / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troubleshooter' => 't.r.uh/b.eh.l/sh.ue/t.er / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troublesome' => 't.r.uh/b.eh.l/s.eh.m / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'troubling' => 't.r.uh/b.eh/l.ih.ng / [t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:li',
  'trudgen' => 't.r.uh/j.eh.n / [t^t].[r^r].[u^uh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'trudges' => 't.r.uh/j.ih.z / [t^t].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:ge',
  'trudging' => 't.r.uh/j.ih.ng / [t^t].[r^r].[u^uh]/[d^j]. / failed phone:ih / failed spelling:gi',
  'truffaut' => 't.r.ue/f.oh / [t^t].[r^r].[u^ue]/[ff^f].[a^oh] / failed phone:oh / failed spelling:au',
  'truffles' => 't.r.uh/f.eh.l.z / [t^t].[r^r].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'trujillo' => 't.r.ue/h.ee/oh / [t^t].[r^r].[u^ue]/ / failed phone:h / failed spelling:ji',
  'truncheons' => 't.r.uh.n/ch.ih.n.z / [t^t].[r^r].[u^uh].[n^n]/[ch^ch].[e^ih]. / failed phone:n / failed spelling:on',
  'trundled' => 't.r.uh.n/d.eh.l.d / [t^t].[r^r].[u^uh].[n^n]/[d^d]. / failed phone:eh / failed spelling:le',
  'truong' => 't.r.aw.ng / [t^t].[r^r]. / failed phone:aw / failed spelling:uo',
  'truskowski' => 't.r.eh/s.k.aw.f/s.k.ee / [t^t].[r^r].[u^uh]/[s^s].[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'trusler' => 't.r.uh/s.eh/l.er / [t^t].[r^r].[u^uh]/[s^s]. / failed phone:eh / failed spelling:le',
  'truszkowski' => 't.r.eh.sh/k.aw.f/s.k.ee / [t^t].[r^r].[u^uh].[s^sh]/ / failed phone:k / failed spelling:zk',
  'trybus' => 't.r.ih/b.ih.s / [t^t].[r^r].[y^ih]/[b^b]. / failed phone:ih / failed spelling:us',
  'trzcinski' => 't.er/zh.ih.n/s.k.ee / [t^t].[r^er]/[z^zh]. / failed phone:ih / failed spelling:ci',
  'trzeciak' => 't.er/z.eh/ch.ee/ah.k / [t^t].[r^er]/[z^z].[e^eh]/ / failed phone:t / failed spelling:ci',
  'ts' => 't.ee/eh.s / [t^t]. / failed phone:ee / failed spelling:s',
  'tsao' => 't/s.ow / [t^t]/[s^s]. / failed phone:ow / failed spelling:ao',
  'tsar' => 'z.aw.r /  / failed phone:z / failed spelling:ts',
  'tschantz' => 'ch.ah.n.t.s / [t^t].[sc^sh]. / failed phone:ah / failed spelling:ha',
  'tschetter' => 'ch.eh/t.er / [t^t].[sc^sh]. / failed phone:eh / failed spelling:he',
  'tschida' => 'ch.igh/d.eh / [t^t].[sc^sh]. / failed phone:igh / failed spelling:hi',
  'tschirhart' => 'ch.er/h.aw.r.t / [t^t].[sc^sh]. / failed phone:er / failed spelling:hi',
  'tschudy' => 'ch.ue/d.ee / [t^t].[sc^sh]. / failed phone:ue / failed spelling:hu',
  'tschumi' => 'ch.ue/m.ee / [t^t].[sc^sh]. / failed phone:ue / failed spelling:hu',
  'tsiang' => 't.s/ye.ah.ng / [t^t].[s^s]/ / failed phone:ye / failed spelling:ia',
  'tsingtao' => 's.ih.ng/t.ow /  / failed phone:s / failed spelling:ts',
  'tuberville' => 't.ue/b.er/v.ih.l / [t^t].[u^ue]/[b^b].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'tucci' => 't.ue/ch.ee / [t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'tucciarone' => 't.ue/ch.er/oh/n.ee / [t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'tuccillo' => 't.ue/ch.ih/l.oh / [t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'tucek' => 't.ue/ch.eh.k / [t^t].[u^ue]/ / failed phone:t / failed spelling:ce',
  'tucholski' => 't.eh/h.oh.l/s.k.ee / [t^t].[u^uh]/ / failed phone:h / failed spelling:ch',
  'tucson' => 't.ue/s.aw.n / [t^t].[u^ue]/[c^s]. / failed phone:aw / failed spelling:so',
  'tullius' => 't.uh/l.ee/ih.s / [t^t].[u^uh]/[ll^l].[i^ee]/ / failed phone:ih / failed spelling:us',
  'tumbled' => 't.uh.m/b.eh.l.d / [t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'tumbles' => 't.uh.m/b.eh.l.z / [t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'tumbleweed' => 't.uh.m/b.eh.l/w.ee.d / [t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'tumbling' => 't.uh.m/b.eh/l.ih.ng / [t^t].[u^uh].[m^m]/[b^b]. / failed phone:eh / failed spelling:li',
  'tunde' => 't.uh.n.d / [t^t].[u^uh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'tuohey' => 't.ue/h.ay / [t^t].[u^ue]/ / failed phone:h / failed spelling:oh',
  'tuohy' => 't.ue/ee / [t^t].[u^ue]/ / failed phone:ee / failed spelling:oh',
  'turberville' => 't.er/b.er/v.ih.l / [t^t].[ur^er]/[b^b].[er^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'turbeville' => 't.er.b/v.ih.l / [t^t].[ur^er].[b^b]/ / failed phone:v / failed spelling:ev',
  'turbot' => 't.er/b.oh / [t^t].[ur^er]/[b^b].[o^oh] / failed phone:oh / failed spelling:ot',
  'turenne' => 't.ye.ue/r.ih.n / [t^t].[u^ue]/[r^r].[e^ih].[n^n] / failed phone:n / failed spelling:nn',
  'turgeon' => 't.er/j.ih.n / [t^t].[ur^er]/[g^j].[e^ih]. / failed phone:n / failed spelling:on',
  'turntables' => 't.er.n/t.ay/b.eh.l.z / [t^t].[ur^er].[n^n]/[t^t].[a^ay]/[b^b]. / failed phone:eh / failed spelling:le',
  'turowski' => 't.er/aw.f/s.k.ee / [t^t].[ur^er]/[o^aw]. / failed phone:f / failed spelling:ws',
  'turrell' => 't.aw/r.eh.l / [t^t]. / failed phone:aw / failed spelling:ur',
  'turrill' => 't.aw/r.eh.l / [t^t]. / failed phone:aw / failed spelling:ur',
  'turtleneck' => 't.er/t.eh.l/n.eh.k / [t^t].[ur^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'turtlenecks' => 't.er/t.eh.l/n.eh.k.s / [t^t].[ur^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'turtles' => 't.er/t.eh.l.z / [t^t].[ur^er]/[t^t]. / failed phone:eh / failed spelling:le',
  'turville' => 't.er/v.ih.l / [t^t].[ur^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'tussled' => 't.uh/s.eh.l.d / [t^t].[u^uh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'tussles' => 't.uh/s.eh.l.z / [t^t].[u^uh]/[ss^s]. / failed phone:eh / failed spelling:le',
  'tuyle' => 't.ue.l / [t^t].[u^ue]. / failed phone:l / failed spelling:yl',
  'tuzzolino' => 't.ue.t/s.oh/l.ee/n.oh / [t^t].[u^ue]. / failed phone:t / failed spelling:zz',
  'tvsat' => 't.eh.v/s.ah.t / [t^t]. / failed phone:eh / failed spelling:vs',
  'twinkles' => 't.w.ih.ng/k.eh.l.z / [t^t].[w^w].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'twinkling' => 't.w.ih.ng/k.eh/l.ih.ng / [t^t].[w^w].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:li',
  'twosome' => 't.ue/s.eh.m / [tw^t].[o^ue]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'tyke' => 't.igh.k / [t^t].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'tyrrhenian' => 't.er/ee/n.ee/eh.n / [t^t].[yr^er]/ / failed phone:ee / failed spelling:rh',
  'uccel' => 'ue/ch.eh.l / [u^ue]/ / failed phone:t / failed spelling:cc',
  'ucci' => 'ue/ch.ee / [u^ue]/ / failed phone:t / failed spelling:cc',
  'udelle' => 'eh/d.eh.l / [u^uh]/[d^d].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'udverhye' => 'ue.d/v.air/h.ee / [u^ue].[d^d]/[v^v].[er^air]/[h^h].[y^ee] / failed phone:ee / failed spelling:ye',
  'uehling' => 'oo/l.ih.ng / [u^oo]/ / failed phone:l / failed spelling:eh',
  'uh' => 'uh / [u^uh] / failed phone:uh / failed spelling:uh',
  'uhde' => 'uh.d / [u^uh]. / failed phone:d / failed spelling:hd',
  'uher' => 'ue/er / [u^ue]/ / failed phone:er / failed spelling:he',
  'uhl' => 'uh.l / [u^uh]. / failed phone:l / failed spelling:hl',
  'uhland' => 'ue/l.eh.n.d / [u^ue]/ / failed phone:l / failed spelling:hl',
  'uhle' => 'ue/eh.l / [u^ue]/ / failed phone:eh / failed spelling:hl',
  'uhler' => 'ue/l.er / [u^ue]/ / failed phone:l / failed spelling:hl',
  'uhlich' => 'ue/l.ih.k / [u^ue]/ / failed phone:l / failed spelling:hl',
  'uhlig' => 'ue/l.ih.g / [u^ue]/ / failed phone:l / failed spelling:hl',
  'uhlir' => 'ue/l.er / [u^ue]/ / failed phone:l / failed spelling:hl',
  'uhlman' => 'ue.l/m.eh.n / [u^ue]. / failed phone:l / failed spelling:hl',
  'uhlmann' => 'ue.l/m.eh.n / [u^ue]. / failed phone:l / failed spelling:hl',
  'uhls' => 'ue.l.z / [u^ue]. / failed phone:l / failed spelling:hl',
  'uhr' => 'oo.r / [u^oo]. / failed phone:r / failed spelling:hr',
  'uhrich' => 'oo/r.ih.k / [u^oo]/ / failed phone:r / failed spelling:hr',
  'uhrig' => 'oo/r.ih.g / [u^oo]/ / failed phone:r / failed spelling:hr',
  'uhrin' => 'oo/r.ih.n / [u^oo]/ / failed phone:r / failed spelling:hr',
  'uk' => 'ye.ue/k.ay / [u^ue]/[k^k]. / failed phone:ay / failed spelling:',
  'ulatowski' => 'eh/l.eh/t.aw.f/s.k.ee / [u^uh]/[l^l].[a^ah]/[t^t].[o^aw]. / failed phone:f / failed spelling:ws',
  'umbaugh' => 'uh.m/b.ow / [u^uh].[m^m]/[b^b].[au^aw] / failed phone:ow / failed spelling:au',
  'umscheid' => 'uh.m/sh.igh.d / [u^uh].[m^m]/[sc^sh]. / failed phone:igh / failed spelling:he',
  'unacknowledged' => 'uh/n.eh.k/n.aw/l.eh.j.d / [u^uh]/[n^n].[a^ah].[c^k]/[kn^n].[o^aw]/ / failed phone:l / failed spelling:wl',
  'unambiguous' => 'uh/n.ah.m/b.ih/g.ye.eh/w.eh.s / [u^uh]/[n^n].[a^ah].[m^m]/[b^b].[i^ih]/[gu^g].[o^ue]/[u^w]. / failed phone:eh / failed spelling:s',
  'unangst' => 'aw/n.eh.ng.s.t /  / failed phone:aw / failed spelling:un',
  'unbridled' => 'eh.n/b.r.igh/d.eh.l.d / [u^uh].[n^n]/[b^b].[r^r].[i^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'uncles' => 'uh.ng/k.eh.l.z / [u^uh].[n^ng]/[c^k]. / failed phone:eh / failed spelling:le',
  'uncomfortably' => 'eh.n/k.uh.m.f/t.eh/b.l.ee / [u^uh].[n^n]/[c^k].[o^uh].[m^m].[f^f]/ / failed phone:t / failed spelling:or',
  'uncorrected' => 'uh.n/k.er/eh.k/t.ih.d / [u^uh].[n^n]/[c^k].[o^oh].[r^r]/ / failed phone:eh / failed spelling:re',
  'unctuous' => 'uh.ng.ch/w.eh.s / [u^uh].[n^ng]. / failed phone:t / failed spelling:ct',
  'undercarriage' => 'uh.n/d.er/k.ah/r.ih.j / [u^uh].[n^n]/[d^d].[er^er]/[c^k].[a^ah]/[rr^r].[i^ih]. / failed phone:j / failed spelling:ag',
  'underdahl' => 'uh.n/d.er/d.aw.l / [u^uh].[n^n]/[d^d].[er^er]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'undergraduate' => 'uh.n/d.er/g.r.ah/j.eh/w.eh.t / [u^uh].[n^n]/[d^d].[er^er]/[g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'undergraduates' => 'uh.n/d.er/g.r.ah/j.eh/w.eh.t.s / [u^uh].[n^n]/[d^d].[er^er]/[g^g].[r^r].[a^ah]/[d^j].[u^uh]/ / failed phone:w / failed spelling:at',
  'underkoffler' => 'uh.n/d.er/k.eh/f.eh/l.er / [u^uh].[n^n]/[d^d].[er^er]/[k^k].[o^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'unfamiliar' => 'uh.n/f.eh/m.ih/l.ye.er / [u^uh].[n^n]/[f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:er / failed spelling:ia',
  'unfamiliarities' => 'uh.n/f.eh/m.ih/l.ye.air/eh/t.ee.z / [u^uh].[n^n]/[f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:ye / failed spelling:ia',
  'unfamiliarity' => 'uh.n/f.eh/m.ih/l.ye.air/eh/t.ee / [u^uh].[n^n]/[f^f].[a^ah]/[m^m].[i^ih]/[l^l]. / failed phone:ye / failed spelling:ia',
  'unindicted' => 'uh/n.ih.n/d.igh/t.ih.d / [u^uh]/[n^n].[i^ih].[n^n]/[d^d].[i^igh]/ / failed phone:t / failed spelling:ct',
  'unknowns' => 'eh/n.oh.n.z / [u^uh]/[n^n]. / failed phone:oh / failed spelling:kn',
  'unprincipled' => 'eh.n/p.r.ih.n/s.eh/p.eh.l.d / [u^uh].[n^n]/[p^p].[r^r].[i^ih].[n^n]/[c^s].[i^ih]/[p^p]. / failed phone:eh / failed spelling:le',
  'unprofor' => 'uh/p.r.oh/f.aw.r / [u^uh]/ / failed phone:p / failed spelling:np',
  'unreasonable' => 'eh.n/r.ee.z/n.eh/b.eh.l / [u^uh].[n^n]/[r^r].[ea^ee].[s^z]/ / failed phone:n / failed spelling:on',
  'unreasoning' => 'eh.n/r.ee.z/n.ih.ng / [u^uh].[n^n]/[r^r].[ea^ee].[s^z]/ / failed phone:n / failed spelling:on',
  'unrein' => 'aw.n/r.igh.n /  / failed phone:aw / failed spelling:un',
  'unruffled' => 'eh.n/r.uh/f.eh.l.d / [u^uh].[n^n]/[r^r].[u^uh]/[ff^f]. / failed phone:eh / failed spelling:le',
  'unruh' => 'uh.n/r.ue / [u^uh].[n^n]/[r^r].[u^ue] / failed phone:ue / failed spelling:uh',
  'unsell' => 'aw.n/s.eh.l /  / failed phone:aw / failed spelling:un',
  'unsettled' => 'eh.n/s.eh/t.eh.l.d / [u^uh].[n^n]/[s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'unsettling' => 'eh.n/s.eh/t.eh/l.ih.ng / [u^uh].[n^n]/[s^s].[e^eh]/[t^t]. / failed phone:eh / failed spelling:tl',
  'unshackled' => 'eh.n/sh.ah/k.eh.l.d / [u^uh].[n^n]/[sh^sh].[a^ah]/[c^k]. / failed phone:eh / failed spelling:kl',
  'unterreiner' => 'aw.n/t.er/igh/n.er /  / failed phone:aw / failed spelling:un',
  'untiedt' => 'aw.n/t.ee.t /  / failed phone:aw / failed spelling:un',
  'untouchables' => 'eh.n/t.uh/ch.eh/b.eh.l.z / [u^uh].[n^n]/[t^t].[ou^uh]/[ch^ch].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'untoward' => 'eh.n/t.ue/aw.r.d / [u^uh].[n^n]/[t^t].[o^ue]/ / failed phone:oh / failed spelling:wa',
  'untroubled' => 'eh.n/t.r.uh/b.eh.l.d / [u^uh].[n^n]/[t^t].[r^r].[ou^uh]/[b^b]. / failed phone:eh / failed spelling:le',
  'unverzagt' => 'aw.n/v.er/z.aw.g.t /  / failed phone:aw / failed spelling:un',
  'unwelcome' => 'eh.n/w.eh.l/k.eh.m / [u^uh].[n^n]/[w^w].[e^eh].[l^l]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'unwin' => 'aw.n/w.ih.n /  / failed phone:aw / failed spelling:un',
  'unworried' => 'eh.n/w.er/ee.d / [u^uh].[n^n]/[w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'unzicker' => 'aw.n/z.ih/k.er /  / failed phone:aw / failed spelling:un',
  'updyke' => 'uh.p/d.igh.k / [u^uh].[p^p]/[d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'upham' => 'uh/p.eh.m / [u^uh]/[p^p]. / failed phone:eh / failed spelling:ha',
  'upholstered' => 'eh/p.oh.l/s.t.er.d / [u^uh]/[p^p]. / failed phone:oh / failed spelling:ho',
  'upholstery' => 'eh/p.oh.l/s.t.er/ee / [u^uh]/[p^p]. / failed phone:oh / failed spelling:ho',
  'uplinger' => 'ue/p.eh/l.ih.ng/er / [u^ue]/[p^p]. / failed phone:eh / failed spelling:li',
  'urbanczyk' => 'er/b.uh.n/ch.ih.k / [ur^er]/[b^b].[a^uh].[n^n]/ / failed phone:t / failed spelling:cz',
  'urbanowicz' => 'er/b.ah/n.eh/v.ih.ch / [ur^er]/[b^b].[a^ah]/[n^n].[o^uh]/ / failed phone:v / failed spelling:wi',
  'urbaszewski' => 'er/b.eh/s.ue/s.k.ee / [ur^er]/[b^b].[a^ah]/[s^s]. / failed phone:ue / failed spelling:ze',
  'urick' => 'ye.er/r.ih.k / [ur^er]/ / failed phone:r / failed spelling:ic',
  'urquart' => 'ah.r/k.er.t /  / failed phone:ah / failed spelling:ur',
  'urquhart' => 'er/k.aw.r.t / [ur^er]/[qu^k]. / failed phone:oh / failed spelling:ha',
  'urschel' => 'er/sh.eh.l / [ur^er]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'urstadt' => 'er/s.t.ah.t / [ur^er]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'usa' => 'ye.ue/eh/s.ay / [u^ue]/ / failed phone:eh / failed spelling:sa',
  'usair' => 'ye.ue/eh/s.air / [u^ue]/ / failed phone:eh / failed spelling:sa',
  'usameribancs' => 'ye.ue/eh/s.eh/m.air/ih/b.ah.n.k.s / [u^ue]/ / failed phone:eh / failed spelling:sa',
  'usbancorp' => 'ye.ue/eh.s/b.ah.ng/k.aw.r.p / [u^ue]/ / failed phone:eh / failed spelling:sb',
  'ustrust' => 'ye.ue/eh/s.t.r.uh.s.t / [u^ue]/ / failed phone:eh / failed spelling:st',
  'usually' => 'ye.ue/zh.eh/ee / [u^ue]/[s^zh].[u^uh]/ / failed phone:ee / failed spelling:al',
  'utah' => 'ye.ue/t.aw / [u^ue]/[t^t].[a^aw] / failed phone:aw / failed spelling:ah',
  'uwe' => 'ye.ue / [u^ue] / failed phone:ue / failed spelling:uw',
  'v' => 'v.ee / [v^v]. / failed phone:ee / failed spelling:',
  'vaapenfabrikk' => 'v.aw/p.eh.n/f.eh/b.r.ih.k / [v^v].[a^aw]/ / failed phone:p / failed spelling:ap',
  'vacaville' => 'v.ah/k.eh/v.ih.l / [v^v].[a^ah]/[c^k].[a^ah]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'vaccinia' => 'v.eh/ch.ee/n.ee/eh / [v^v].[a^ah]/ / failed phone:t / failed spelling:cc',
  'vacek' => 'v.aw/ch.eh.k / [v^v].[a^aw]/ / failed phone:t / failed spelling:ce',
  'vacuum' => 'v.ah/k.ye.ue.m / [v^v].[a^ah]/[c^k].[u^ue]. / failed phone:m / failed spelling:um',
  'vacuuming' => 'v.ah/k.ye.ue/m.ih.ng / [v^v].[a^ah]/[c^k].[u^ue]/ / failed phone:m / failed spelling:um',
  'vacuums' => 'v.ah/k.ye.ue.m.z / [v^v].[a^ah]/[c^k].[u^ue]. / failed phone:m / failed spelling:um',
  'vadehra' => 'v.eh/d.ay/r.eh / [v^v].[a^ah]/[d^d].[e^ay]/ / failed phone:r / failed spelling:hr',
  'vadnais' => 'v.eh.d/n.ay / [v^v].[a^ah].[d^d]/[n^n].[a^ay] / failed phone:ay / failed spelling:ai',
  'vaeth' => 'v.ee.th / [v^v]. / failed phone:ee / failed spelling:ae',
  'vahl' => 'v.aw.l / [v^v].[a^aw]. / failed phone:l / failed spelling:hl',
  'vajda' => 'v.igh/d.eh / [v^v]. / failed phone:igh / failed spelling:aj',
  'vajna' => 'v.igh/n.eh / [v^v]. / failed phone:igh / failed spelling:aj',
  'valencienne' => 'v.eh/l.eh.n/s.ee/eh.n / [v^v].[a^ah]/[l^l].[e^eh].[n^n]/[c^s].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'valent' => 'v.aw/l.ay/eh.n.t / [v^v].[a^aw]/[l^l].[e^ay]/ / failed phone:eh / failed spelling:nt',
  'valet' => 'v.ah/l.ay / [v^v].[a^ah]/[l^l].[e^ay] / failed phone:ay / failed spelling:t',
  'valiant' => 'v.ah/l.ye.eh.n.t / [v^v].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'valiantly' => 'v.ah/l.ye.eh.n.t/l.ee / [v^v].[a^ah]/[l^l]. / failed phone:ue / failed spelling:ia',
  'valle' => 'v.ay.l / [v^v].[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'valleau' => 'v.eh/l.oh / [v^v].[a^ah]/[ll^l]. / failed phone:oh / failed spelling:ea',
  'vallejo' => 'v.aw/l.ay/ye.oh / [v^v].[a^aw]/[ll^l].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'vallejos' => 'v.aw/l.ay/ye.oh.z / [v^v].[a^aw]/[ll^l].[e^ay]/ / failed phone:ye / failed spelling:jo',
  'vallely' => 'v.ay/l.ee / [v^v].[a^ay]/[ll^l].[e^ee] / failed phone:ee / failed spelling:el',
  'valois' => 'v.ah.l/w.aw / [v^v].[a^ah].[l^l]/ / failed phone:w / failed spelling:oi',
  'valonia' => 'v.eh/l.oh/n.ye.eh / [v^v].[a^ah]/[l^l].[o^oh]/[n^n]. / failed phone:ue / failed spelling:ia',
  'valtierra' => 'v.aw.l/t.ih/r.eh / [v^v].[a^aw].[l^l]/[t^t].[i^ih]/ / failed phone:r / failed spelling:er',
  'valuable' => 'v.ah/l.ye.eh/b.eh.l / [v^v].[a^ah]/[l^l].[u^ue]/ / failed phone:b / failed spelling:ab',
  'valuables' => 'v.ah/l.ye.eh/b.eh.l.z / [v^v].[a^ah]/[l^l].[u^ue]/ / failed phone:b / failed spelling:ab',
  'vanasse' => 'v.ah/n.ah.s / [v^v].[a^ah]/[n^n].[a^ah].[ss^s] / failed phone:s / failed spelling:ss',
  'vanbenschoten' => 'v.ah.n/b.eh.n/sh.eh/t.eh.n / [v^v].[a^ah].[n^n]/[b^b].[e^eh].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:ho',
  'vancise' => 'v.aw.n/ch.igh.s / [v^v].[a^aw].[n^n]/ / failed phone:t / failed spelling:ci',
  'vandaele' => 'v.ah.n/d.eh.l / [v^v].[a^ah].[n^n]/[d^d].[a^ah].[el^l] / failed phone:l / failed spelling:el',
  'vandamme' => 'v.ah.n/d.ah.m / [v^v].[a^ah].[n^n]/[d^d].[a^ah].[m^m] / failed phone:m / failed spelling:mm',
  'vande' => 'v.ah.n.d / [v^v].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'vandenberghe' => 'v.ah.n/d.eh.n/b.er.g / [v^v].[a^ah].[n^n]/[d^d].[e^eh].[n^n]/[b^b].[er^er].[gh^g] / failed phone:g / failed spelling:gh',
  'vandenbosch' => 'v.ah.n/d.eh.n/b.aw.sh / [v^v].[a^ah].[n^n]/[d^d].[e^eh].[n^n]/[b^b].[o^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'vandenheuvel' => 'v.ah.n/d.eh.n/h.oy/v.eh.l / [v^v].[a^ah].[n^n]/[d^d].[e^eh].[n^n]/[h^h]. / failed phone:oy / failed spelling:eu',
  'vanderheide' => 'v.ah.n/d.er/h.igh.d / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[h^h].[ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'vanderlaan' => 'v.ah.n/d.er/l.aw.n / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[l^l].[a^aw]. / failed phone:n / failed spelling:an',
  'vanderleest' => 'v.ah.n/d.er/eh/l.ee.s.t / [v^v].[a^ah].[n^n]/[d^d].[er^er]/ / failed phone:eh / failed spelling:le',
  'vanderlinde' => 'v.ah.n/d.er/l.ih.n.d / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[l^l].[i^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'vandermeulen' => 'v.ah.n/d.er/m.oy/l.eh.n / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[m^m]. / failed phone:oy / failed spelling:eu',
  'vanderschaaf' => 'v.ah.n/d.er/sh.aw.f / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[sc^sh]. / failed phone:aw / failed spelling:ha',
  'vandervelde' => 'v.ah.n/d.er/v.eh.l.d / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[v^v].[e^eh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'vanderweide' => 'v.ah.n/d.er/w.igh.d / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[w^w].[ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'vanderwoude' => 'v.ah.n/d.er/w.ow.d / [v^v].[a^ah].[n^n]/[d^d].[er^er]/[w^w].[ou^ow].[d^d] / failed phone:d / failed spelling:de',
  'vandeusen' => 'v.ah.n/d.oy/s.eh.n / [v^v].[a^ah].[n^n]/[d^d]. / failed phone:oy / failed spelling:eu',
  'vandevelde' => 'v.ah.n/d.eh/v.eh.l.d / [v^v].[a^ah].[n^n]/[d^d].[e^eh]/[v^v].[e^eh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'vandevoorde' => 'v.ah.n/d.eh/v.oo.r.d / [v^v].[a^ah].[n^n]/[d^d].[e^eh]/[v^v].[oo^oo].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'vandewalle' => 'v.ah.n/d.ue/ay.l / [v^v].[a^ah].[n^n]/[d^d].[ew^ue]/[a^ay].[ll^l] / failed phone:l / failed spelling:ll',
  'vandezande' => 'v.ah.n/d.eh/z.ih.n.d / [v^v].[a^ah].[n^n]/[d^d].[e^eh]/[z^z].[a^ih].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'vandyke' => 'v.ah.n/d.igh.k / [v^v].[a^ah].[n^n]/[d^d].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'vanhecke' => 'v.ah.n/h.eh.k / [v^v].[a^ah].[n^n]/[h^h].[e^eh].[c^k] / failed phone:k / failed spelling:ck',
  'vankeuren' => 'v.ah.ng/k.oy/r.eh.n / [v^v].[a^ah].[n^ng]/[k^k]. / failed phone:oy / failed spelling:eu',
  'vanleeuwen' => 'v.ah.n/l.ue/eh.n / [v^v].[a^ah].[n^n]/[le^l].[eu^ue]/ / failed phone:eh / failed spelling:we',
  'vanleuven' => 'v.ah.n/l.oy/v.eh.n / [v^v].[a^ah].[n^n]/[le^l]. / failed phone:oy / failed spelling:uv',
  'vanliere' => 'v.ah.n/l.ih.r / [v^v].[a^ah].[n^n]/[l^l].[i^ih]. / failed phone:r / failed spelling:er',
  'vanmaanen' => 'v.ah.n/m.aw/n.eh.n / [v^v].[a^ah].[n^n]/[m^m].[a^aw]/ / failed phone:n / failed spelling:an',
  'vanname' => 'v.ah/n.eh.m / [v^v].[a^ah]/[nn^n].[a^ah].[m^m] / failed phone:m / failed spelling:me',
  'vannucci' => 'v.aw/n.ue/ch.ee / [v^v].[a^aw]/[nn^n].[u^ue]/ / failed phone:t / failed spelling:cc',
  'vansandt' => 'v.ah.n/s.ah.n.t / [v^v].[a^ah].[n^n]/[s^s].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'vanschaick' => 'v.ah.n/sh.igh.k / [v^v].[a^ah].[n^n]/[sc^sh]. / failed phone:igh / failed spelling:ha',
  'vanschoick' => 'v.ah.n/sh.oy.k / [v^v].[a^ah].[n^n]/[sc^sh]. / failed phone:oy / failed spelling:ho',
  'vanslyke' => 'v.ah.n/s.l.igh.k / [v^v].[a^ah].[n^n]/[s^s].[l^l].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'vanwieren' => 'v.ah.n/w.ih/r.eh.n / [v^v].[a^ah].[n^n]/[w^w].[i^ih]/ / failed phone:r / failed spelling:er',
  'vanwyhe' => 'v.ah.n/w.igh.h / [v^v].[a^ah].[n^n]/[w^w].[y^igh].[h^h] / failed phone:h / failed spelling:he',
  'vanzandt' => 'v.ah.n/z.ah.n.t / [v^v].[a^ah].[n^n]/[z^z].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'vardeman' => 'v.aw.r.d/m.eh.n / [v^v].[a^oh].[r^r].[d^d]/ / failed phone:m / failed spelling:em',
  'variables' => 'v.air/ee/eh/b.eh.l.z / [v^v].[ar^air]/[i^ee]/[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'varricchio' => 'v.aw/r.ee/k.ee/oh / [v^v].[a^aw]/[rr^r].[i^ee]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'vasicek' => 'v.aw/s.ih/ch.eh.k / [v^v].[a^aw]/[s^s].[i^ih]/ / failed phone:t / failed spelling:ce',
  'vaske' => 'v.ay.s.k / [v^v].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'vasseur' => 'v.ah/s.er / [v^v].[a^ah]/[ss^s]. / failed phone:er / failed spelling:eu',
  'vaudeville' => 'v.aw.d/v.ih.l / [v^v].[au^aw].[d^d]/ / failed phone:v / failed spelling:ev',
  'vaudevillian' => 'v.aw.d/v.ih/l.ye.eh.n / [v^v].[au^aw].[d^d]/ / failed phone:v / failed spelling:ev',
  'vaughan' => 'v.aw.n / [v^v].[a^aw]. / failed phone:n / failed spelling:ug',
  'vecchiarelli' => 'v.eh/k.ee/aw/r.eh/l.ee / [v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'vecchio' => 'v.eh/k.ee/oh / [v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'vecchione' => 'v.eh/k.ee/oh/n.ee / [v^v].[e^eh]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'vecci' => 'v.eh/ch.ee / [v^v].[e^eh]/ / failed phone:t / failed spelling:cc',
  'vecellio' => 'v.eh/ch.eh/l.ee/oh / [v^v].[e^eh]/ / failed phone:t / failed spelling:ce',
  'vectra' => 'v.eh.k/t.r.er / [v^v].[e^eh].[c^k]/[t^t].[r^r]. / failed phone:er / failed spelling:a',
  'vegetables' => 'v.eh.j/t.eh/b.eh.l.z / [v^v].[e^eh].[ge^j]/[t^t].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'vehemence' => 'v.ee/eh/m.eh.n.s / [v^v].[e^ee]/ / failed phone:eh / failed spelling:he',
  'vehement' => 'v.ee/eh/m.eh.n.t / [v^v].[e^ee]/ / failed phone:eh / failed spelling:he',
  'vehemently' => 'v.ee/eh/m.eh.n.t/l.ee / [v^v].[e^ee]/ / failed phone:eh / failed spelling:he',
  'vehicles' => 'v.ee/h.ih/k.eh.l.z / [v^v].[e^ee]/[h^h].[i^ih]/[c^k]. / failed phone:eh / failed spelling:le',
  'veilleux' => 'v.eh/l.oh / [ve^v].[i^ih]/[ll^l]. / failed phone:oh / failed spelling:eu',
  'velayati' => 'v.eh/l.igh/aw/t.ee / [v^v].[e^eh]/[l^l]. / failed phone:igh / failed spelling:ay',
  'vellucci' => 'v.eh/l.ue/ch.ee / [v^v].[e^eh]/[ll^l].[u^ue]/ / failed phone:t / failed spelling:cc',
  'venables' => 'v.eh/n.eh/b.eh.l.z / [v^v].[e^eh]/[n^n].[a^ah]/[b^b]. / failed phone:eh / failed spelling:le',
  'venne' => 'v.eh.n / [v^v].[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'venneman' => 'v.eh.n/m.eh.n / [v^v].[e^eh].[n^n]/ / failed phone:m / failed spelling:ne',
  'venturesome' => 'v.eh.n/ch.er/s.eh.m / [v^v].[e^eh].[n^n]/[t^ch].[ure^er]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'venzke' => 'v.eh.n.z.k / [v^v].[e^eh].[n^n].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'verbeke' => 'v.er/b.ih.k / [ve^v].[r^er]/[b^b].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'verbrugge' => 'v.er/b.r.eh.g / [ve^v].[r^er]/[b^b].[r^r].[u^uh].[gg^g] / failed phone:g / failed spelling:gg',
  'verderame' => 'v.er/d.er/eh.m / [ve^v].[r^er]/[d^d].[er^er]/[a^ah].[m^m] / failed phone:m / failed spelling:me',
  'verdes' => 'v.er/d.ee / [ve^v].[r^er]/[d^d].[e^ee] / failed phone:ee / failed spelling:es',
  'verhofstadt' => 'v.er/h.aw.f/s.t.ah.t / [ve^v].[r^er]/[h^h].[o^aw].[f^f]/[s^s].[t^t].[a^ah]. / failed phone:t / failed spelling:dt',
  'vermeulen' => 'v.er/m.oy/l.eh.n / [ve^v].[r^er]/[m^m]. / failed phone:oy / failed spelling:eu',
  'versailles' => 'v.air/s.igh / [v^v].[er^air]/[s^s].[ai^igh] / failed phone:igh / failed spelling:ai',
  'verstraete' => 'v.er/s.t.r.eh.t / [ve^v].[r^er]/[s^s].[t^t].[r^r].[a^ah]. / failed phone:t / failed spelling:et',
  'vertebrae' => 'v.er/t.eh/b.r.ay / [ve^v].[r^er]/[t^t].[e^eh]/[b^b].[r^r].[a^ay] / failed phone:ay / failed spelling:ae',
  'vertucci' => 'v.er/t.ue/ch.ee / [ve^v].[r^er]/[t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'verville' => 'v.er/v.ih.l / [ve^v].[r^er]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'vetsch' => 'v.eh.ch / [v^v].[e^eh].[t^t]. / failed phone:t / failed spelling:ts',
  'vicente' => 'v.ee/ch.eh.n/t.ee / [v^v].[i^ee]/ / failed phone:t / failed spelling:cn',
  'vicino' => 'v.ee/ch.ee/n.oh / [v^v].[i^ee]/ / failed phone:t / failed spelling:ci',
  'vicknair' => 'v.ih.k/n.er / [v^v].[i^ih].[c^k]/[kn^n]. / failed phone:er / failed spelling:ai',
  'victoire' => 'v.ih.k/t.w.aw.r / [v^v].[i^ih].[c^k]/[t^t]. / failed phone:w / failed spelling:oi',
  'vidalia' => 'v.ih/d.ay/l.ye.eh / [v^v].[i^ih]/[d^d].[a^ay]/[l^l]. / failed phone:ue / failed spelling:ia',
  'videoconferencing' => 'v.ee/d.ee/oh/k.aw.n/f.r.eh.n/s.ih.ng / [v^v].[i^ee]/[d^d].[e^ee]/[o^oh]/[c^k].[o^aw].[n^n]/[f^f]. / failed phone:r / failed spelling:er',
  'vieira' => 'v.ee/air/eh / [v^v].[ie^ee]/ / failed phone:air / failed spelling:ir',
  'vienneau' => 'v.eh/n.oh / [v^v].[ie^eh]/[n^n]. / failed phone:oh / failed spelling:ne',
  'viereck' => 'v.ih/r.ih.k / [v^v].[i^ih]/ / failed phone:r / failed spelling:er',
  'vierling' => 'v.ih.r/l.ih.ng / [v^v].[i^ih]. / failed phone:r / failed spelling:er',
  'vierra' => 'v.ih/r.eh / [v^v].[i^ih]/ / failed phone:r / failed spelling:er',
  'viers' => 'v.ih.r.z / [v^v].[i^ih]. / failed phone:r / failed spelling:er',
  'viertel' => 'v.ih.r/t.eh.l / [v^v].[i^ih]. / failed phone:r / failed spelling:er',
  'view' => 'v.ye.ue / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewed' => 'v.ye.ue.d / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewer' => 'v.ye.ue/er / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewers' => 'v.ye.ue/er.z / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewership' => 'v.ye.ue/er/sh.ih.p / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewing' => 'v.ye.ue/ih.ng / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewpoint' => 'v.ye.ue/p.oy.n.t / [v^v]. / failed phone:ue / failed spelling:ie',
  'viewpoints' => 'v.ye.ue/p.oy.n.t.s / [v^v]. / failed phone:ue / failed spelling:ie',
  'views' => 'v.ye.ue.z / [v^v]. / failed phone:ue / failed spelling:ie',
  'vieyra' => 'v.ee/air/eh / [v^v].[ie^ee]/ / failed phone:air / failed spelling:yr',
  'viggiano' => 'v.ih/j.ee/aw/n.oh / [v^v].[i^ih]/[g^j]. / failed phone:ee / failed spelling:gi',
  'vigneault' => 'v.ih.g/n.oh / [v^v].[i^ih].[g^g]/[ne^n].[a^oh] / failed phone:oh / failed spelling:au',
  'vignette' => 'v.ih/n.ye.eh.t / [v^v].[i^ih]/[gn^n]. / failed phone:ue / failed spelling:et',
  'vignettes' => 'v.ih/n.ye.eh.t.s / [v^v].[i^ih]/[gn^n]. / failed phone:ue / failed spelling:et',
  'villasenor' => 'v.ee/l.aw/s.ay/eh/n.aw.r / [v^v].[i^ee]/[ll^l].[a^aw]/[s^s].[e^ay]/ / failed phone:eh / failed spelling:no',
  'ville' => 'v.ih.l / [v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'vincente' => 'v.ih.n/ch.eh.n/t.ee / [v^v].[i^ih].[n^n]/ / failed phone:t / failed spelling:ce',
  'vincenti' => 'v.ee.n/ch.eh.n/t.ee / [v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ce',
  'vincentia' => 'v.ee.n/ch.eh.n/sh.eh / [v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ce',
  'vinciguerra' => 'v.ee.n/ch.ee/g.air/eh / [v^v].[i^ee].[n^n]/ / failed phone:t / failed spelling:ci',
  'vinje' => 'v.ih.n.j / [v^v].[i^ih].[n^n].[j^j] / failed phone:j / failed spelling:je',
  'vip' => 'v.ee/igh/p.ee / [v^v].[i^ee]/ / failed phone:igh / failed spelling:p',
  'virag' => 'v.aw/r.eh.g / [v^v]. / failed phone:aw / failed spelling:ir',
  'virginia' => 'v.er/j.ih/n.ye.eh / [v^v].[ir^er]/[g^j].[i^ih]/[n^n]. / failed phone:ue / failed spelling:ia',
  'virginian' => 'v.er/j.ih/n.ye.eh.n / [v^v].[ir^er]/[g^j].[i^ih]/[n^n]. / failed phone:ue / failed spelling:ia',
  'virginians' => 'v.er/j.ih/n.ye.eh.n.z / [v^v].[ir^er]/[g^j].[i^ih]/[n^n]. / failed phone:ue / failed spelling:ia',
  'viridis' => 'v.aw/r.ih/d.ih.s / [v^v]. / failed phone:aw / failed spelling:ir',
  'virkler' => 'v.er/k.eh/l.er / [v^v].[ir^er]/[k^k]. / failed phone:eh / failed spelling:le',
  'visnic' => 'v.ih/s.n.ih.ch / [v^v].[i^ih]/[s^s].[n^n].[i^ih]. / failed phone:t / failed spelling:c',
  'visscher' => 'v.ih/sh.er / [v^v].[i^ih]/[s^sh]. / failed phone:er / failed spelling:sc',
  'visx' => 'v.ih/s.eh.k.s / [v^v].[i^ih]/[s^s]. / failed phone:eh / failed spelling:x',
  'vittles' => 'v.ih/t.eh.l.z / [v^v].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'vitucci' => 'v.ee/t.ue/ch.ee / [v^v].[i^ee]/[t^t].[u^ue]/ / failed phone:t / failed spelling:cc',
  'vivienne' => 'v.ih/v.ee/eh.n / [v^v].[i^ih]/[v^v].[i^ee]/[e^eh].[n^n] / failed phone:n / failed spelling:nn',
  'vizcaya' => 'v.ih.z/k.igh/eh / [v^v].[i^ih].[z^z]/[c^k]. / failed phone:igh / failed spelling:ay',
  'vizzini' => 'v.ee.t/s.ee/n.ee / [v^v].[i^ee]. / failed phone:t / failed spelling:zz',
  'vlcek' => 'v.l.eh/s.ih.k / [v^v].[l^l]. / failed phone:eh / failed spelling:ce',
  'vnesheconombank' => 'v.eh/n.eh/sh.eh/k.aw/n.eh.m/b.ah.ng.k / [v^v]. / failed phone:eh / failed spelling:ne',
  'vocke' => 'v.aw.k / [v^v].[o^aw].[c^k] / failed phone:k / failed spelling:ck',
  'voght' => 'v.aw.t / [v^v].[o^aw]. / failed phone:t / failed spelling:gh',
  'vogl' => 'v.aw/g.eh.l / [v^v].[o^aw]/[g^g]. / failed phone:eh / failed spelling:l',
  'vogt' => 'v.oh.t / [v^v].[o^oh]. / failed phone:t / failed spelling:gt',
  'vohs' => 'v.aw.s / [v^v].[o^aw]. / failed phone:s / failed spelling:hs',
  'voight' => 'v.oy.t / [v^v].[oi^oy]. / failed phone:t / failed spelling:gh',
  'voila' => 'v/w.aw/l.aw / [v^v]/ / failed phone:w / failed spelling:oi',
  'voir' => 'v/w.aw.r / [v^v]/ / failed phone:w / failed spelling:oi',
  'voisey' => 'v/w.aw/s.ay / [v^v]/ / failed phone:w / failed spelling:oi',
  'voisin' => 'v.oy/z.ah.n / [v^v].[oi^oy]/[s^z]. / failed phone:ah / failed spelling:in',
  'vojta' => 'v.oy/t.uh / [v^v]. / failed phone:oy / failed spelling:oj',
  'volle' => 'v.aw.l / [v^v].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'volokh' => 'v.aw/l.aw.k / [v^v].[o^aw]/[l^l].[o^aw].[k^k] / failed phone:k / failed spelling:kh',
  'voluptuous' => 'v.eh/l.uh.p/ch.eh/w.eh.s / [v^v].[o^uh]/[l^l].[u^uh].[p^p]/[t^ch].[u^uh]/ / failed phone:w / failed spelling:ou',
  'vonbehren' => 'v.aw.n/b.ih/r.eh.n / [v^v].[o^aw].[n^n]/[b^b].[e^ih]/ / failed phone:r / failed spelling:hr',
  'vonderhaar' => 'v.aw.n/d.er/h.aw.r / [v^v].[o^aw].[n^n]/[d^d].[er^er]/[h^h].[a^oh]. / failed phone:r / failed spelling:ar',
  'vonderheide' => 'v.aw.n/d.er/h.igh.d / [v^v].[o^aw].[n^n]/[d^d].[er^er]/[h^h].[ei^igh].[d^d] / failed phone:d / failed spelling:de',
  'vonfeldt' => 'v.aw.n/f.ih.l.t / [v^v].[o^aw].[n^n]/[f^f].[e^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'vorhauer' => 'v.aw.r/h.ow.r / [v^v].[o^oh].[r^r]/[h^h].[au^aw]. / failed phone:r / failed spelling:er',
  'vorpahl' => 'v.aw.r/p.aw.l / [v^v].[o^oh].[r^r]/[p^p].[a^aw]. / failed phone:l / failed spelling:hl',
  'vosler' => 'v.aw/s.eh/l.er / [v^v].[o^aw]/[s^s]. / failed phone:eh / failed spelling:le',
  'vossler' => 'v.aw/s.eh/l.er / [v^v].[o^aw]/[ss^s]. / failed phone:eh / failed spelling:le',
  'vowles' => 'v.ow/eh.l.z / [v^v].[ow^ow]/ / failed phone:eh / failed spelling:le',
  'vranesevic' => 'v.r.aw/n.eh/s.eh/v.ih.ch / [v^v].[r^r].[a^aw]/[n^n].[e^eh]/[s^s].[e^eh]/[v^v].[i^ih]. / failed phone:t / failed spelling:c',
  'vs' => 'v.er/s.eh.z / [v^v]. / failed phone:er / failed spelling:s',
  'vsel' => 'v.ee/s.eh.l / [v^v]. / failed phone:ee / failed spelling:se',
  'vukelich' => 'v.eh/k.eh/l.ih.h / [v^v].[u^uh]/[k^k].[e^eh]/[l^l].[i^ih]. / failed phone:h / failed spelling:ch',
  'vultaggio' => 'v.ue.l/t.aw/j.ee/oh / [v^v].[u^ue].[l^l]/[t^t].[a^aw]/[g^j]. / failed phone:ee / failed spelling:gi',
  'w' => 'd.uh/b.eh/l.ye.ue /  / failed phone:d / failed spelling:w',
  'waack' => 'w.aw.k / [w^w].[a^aw]. / failed phone:k / failed spelling:ac',
  'waag' => 'w.aw.g / [w^w].[a^aw]. / failed phone:g / failed spelling:ag',
  'waara' => 'w.aw/r.eh / [w^w].[a^aw]/ / failed phone:r / failed spelling:ar',
  'waas' => 'w.aw.z / [w^w].[a^aw]. / failed phone:z / failed spelling:as',
  'wachowiak' => 'v.eh/h.ow/ee/ah.k /  / failed phone:v / failed spelling:wa',
  'wachowski' => 'v.eh/h.aw.f/s.k.ee /  / failed phone:v / failed spelling:wa',
  'wachtel' => 'w.aw/ch.eh.l / [w^w].[a^aw]/[ch^ch]. / failed phone:eh / failed spelling:te',
  'wadhams' => 'w.aw/d.eh.m.z / [w^w].[a^aw]/[d^d]. / failed phone:eh / failed spelling:ha',
  'wadleigh' => 'w.aw.d/l.ee / [w^w].[a^aw].[d^d]/[le^l].[i^ee] / failed phone:ee / failed spelling:ig',
  'waechter' => 'w.eh.k/t.er / [w^w].[a^ah]. / failed phone:k / failed spelling:ec',
  'waertsilae' => 'w.air.t/s.eh/l.ay / [w^w].[aer^air].[t^t]/[s^s].[i^ih]/[l^l].[a^ay] / failed phone:ay / failed spelling:ae',
  'waffled' => 'w.aw/f.eh.l.d / [w^w].[a^aw]/[ff^f]. / failed phone:eh / failed spelling:le',
  'waffles' => 'w.aw/f.eh.l.z / [w^w].[a^aw]/[ff^f]. / failed phone:eh / failed spelling:le',
  'wagenaar' => 'w.ah/g.eh/n.aw.r / [w^w].[a^ah]/[g^g].[e^eh]/[n^n].[a^oh]. / failed phone:r / failed spelling:ar',
  'wagenknecht' => 'w.ah/g.eh/n.ih.k.t / [w^w].[a^ah]/[g^g].[e^eh]/[n^n]. / failed phone:ih / failed spelling:kn',
  'waggling' => 'w.ah/g.eh/l.ih.ng / [w^w].[a^ah]/[gg^g]. / failed phone:eh / failed spelling:li',
  'wah' => 'w.aw / [w^w].[a^aw] / failed phone:aw / failed spelling:ah',
  'wahl' => 'w.aw.l / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'wahlberg' => 'w.aw.l/b.er.g / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'wahle' => 'w.aw.l / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'wahlen' => 'w.aw/l.eh.n / [w^w].[a^aw]/ / failed phone:l / failed spelling:hl',
  'wahler' => 'w.aw/l.er / [w^w].[a^aw]/ / failed phone:l / failed spelling:hl',
  'wahlers' => 'w.aw/l.er.z / [w^w].[a^aw]/ / failed phone:l / failed spelling:hl',
  'wahlert' => 'w.aw/l.er.t / [w^w].[a^aw]/ / failed phone:l / failed spelling:hl',
  'wahlgren' => 'w.aw.l/g.r.eh.n / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'wahlquist' => 'w.aw.l/kw.ih.s.t / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'wahlstrom' => 'w.aw.l/s.t.r.eh.m / [w^w].[a^aw]. / failed phone:l / failed spelling:hl',
  'waide' => 'w.ay.d / [w^w].[ai^ay].[d^d] / failed phone:d / failed spelling:id',
  'wajda' => 'v.igh/d.eh /  / failed phone:v / failed spelling:wa',
  'wakeham' => 'w.ah/k.eh.m / [w^w].[a^ah]/[k^k].[e^eh]. / failed phone:m / failed spelling:ha',
  'walczak' => 'v.aw.l/ch.ah.k /  / failed phone:v / failed spelling:wa',
  'walczyk' => 'v.aw.l/ch.ih.k /  / failed phone:v / failed spelling:wa',
  'walda' => 'v.aw.l/d.eh /  / failed phone:v / failed spelling:wa',
  'walde' => 'w.aw.l.d / [w^w].[a^aw].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'waldemar' => 'v.aw.l/d.eh/m.aw.r /  / failed phone:v / failed spelling:wa',
  'waldholz' => 'w.aw.l.d/h.oh.l.t.s / [w^w].[a^aw].[l^l].[d^d]/[h^h].[o^oh].[l^l]. / failed phone:t / failed spelling:z',
  'waldschmidt' => 'w.aw.l.d/sh.m.ih.t / [w^w].[a^aw].[l^l].[d^d]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'walek' => 'v.aw/l.eh.k /  / failed phone:v / failed spelling:wa',
  'walke' => 'w.aw.k / [w^w].[a^aw].[lk^k] / failed phone:k / failed spelling:lk',
  'walkowski' => 'w.aw/k.aw.f/s.k.ee / [w^w].[a^aw]/[lk^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'walkway' => 'w.aw/kw.ay / [w^w].[a^aw]/ / failed phone:kw / failed spelling:lk',
  'walkways' => 'w.aw/kw.ay.z / [w^w].[a^aw]/ / failed phone:kw / failed spelling:lk',
  'walle' => 'w.aw.l / [w^w].[a^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'walski' => 'v.aw.l/s.k.ee /  / failed phone:v / failed spelling:wa',
  'walthour' => 'w.aw.l/t.ow.r / [w^w].[a^aw].[l^l]/[t^t]. / failed phone:ow / failed spelling:ho',
  'wamboldt' => 'w.aw.m/b.oh.l.t / [w^w].[a^aw].[m^m]/[b^b].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'wangled' => 'w.ah.ng/g.eh.l.d / [w^w].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'wanke' => 'w.aw.ng.k / [w^w].[a^aw].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'waples' => 'w.aw/p.eh.l.z / [w^w].[a^aw]/[p^p]. / failed phone:eh / failed spelling:le',
  'warbling' => 'w.aw.r/b.eh/l.ih.ng / [w^w].[a^oh].[r^r]/[b^b]. / failed phone:eh / failed spelling:li',
  'warde' => 'w.aw.r.d / [w^w].[a^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'warloeck' => 'w.aw.r/l.aw.k / [w^w].[a^oh].[r^r]/[l^l].[o^aw]. / failed phone:k / failed spelling:ec',
  'warnecke' => 'w.aw.r/n.ih.k / [w^w].[a^oh].[r^r]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'warneke' => 'w.aw.r/n.ih.k / [w^w].[a^oh].[r^r]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'warzecha' => 'w.aw.r/z.eh/h.eh / [w^w].[a^oh].[r^r]/[z^z].[e^eh]/ / failed phone:h / failed spelling:ch',
  'wasch' => 'w.aw.sh / [w^w].[a^aw].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wascher' => 'w.aw/sh.er / [w^w].[a^aw]/[sc^sh]. / failed phone:er / failed spelling:he',
  'washko' => 'v.aw.sh/k.oh /  / failed phone:v / failed spelling:wa',
  'wasielewski' => 'v.eh/s.ee/l.eh.f/s.k.ee /  / failed phone:v / failed spelling:wa',
  'wasik' => 'v.aw/s.ih.k /  / failed phone:v / failed spelling:wa',
  'wasilewski' => 'v.eh/s.ih/l.eh.f/s.k.ee /  / failed phone:v / failed spelling:wa',
  'waskiewicz' => 'v.aw/s.k.eh/v.ih.ch /  / failed phone:v / failed spelling:wa',
  'wasko' => 'v.aw/s.k.oh /  / failed phone:v / failed spelling:wa',
  'waskow' => 'v.aw/s.k.oh /  / failed phone:v / failed spelling:wa',
  'wasmer' => 'w.aw/s.eh/m.er / [w^w].[a^aw]/[s^s]. / failed phone:eh / failed spelling:me',
  'wassenaar' => 'w.aw/s.ih/n.aw.r / [w^w].[a^aw]/[ss^s].[e^ih]/[n^n].[a^oh]. / failed phone:r / failed spelling:ar',
  'waszak' => 'v.aw/sh.eh.k /  / failed phone:v / failed spelling:wa',
  'waszkiewicz' => 'v.aw.sh/k.eh/v.ih.ch /  / failed phone:v / failed spelling:wa',
  'watling' => 'w.aw/t.eh/l.ih.ng / [w^w].[a^aw]/[t^t]. / failed phone:eh / failed spelling:li',
  'watlington' => 'w.aw/t.eh/l.ih.ng/t.eh.n / [w^w].[a^aw]/[t^t]. / failed phone:eh / failed spelling:li',
  'watsonville' => 'w.aw.t/s.eh.n/v.ih.l / [w^w].[a^aw].[t^t]/[s^s].[o^uh].[n^n]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'wattles' => 'w.aw/t.eh.l.z / [w^w].[a^aw]/[t^t]. / failed phone:eh / failed spelling:tl',
  'waye' => 'w.ay / [w^w].[a^ay] / failed phone:ay / failed spelling:ay',
  'waynesville' => 'w.ay.n.z/v.ih.l / [w^w].[ay^ay].[ne^n].[s^z]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'wearisome' => 'w.ih/r.ee/s.eh.m / [w^w].[ea^ih]/[r^r].[i^ee]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'weckwerth' => 'w.eh/kw.er.th / [w^w].[e^eh]/[ck^kw]. / failed phone:er / failed spelling:we',
  'wedges' => 'w.eh/j.eh.z / [w^w].[e^eh]/[d^j]. / failed phone:eh / failed spelling:ge',
  'wedgwood' => 'w.eh.j/w.oo.d / [w^w].[e^eh].[d^j]/ / failed phone:w / failed spelling:gw',
  'wednesday' => 'w.eh.n.z/d.ay / [w^w].[e^eh]. / failed phone:n / failed spelling:dn',
  'wednesdays' => 'w.eh.n.z/d.ay.z / [w^w].[e^eh]. / failed phone:n / failed spelling:dn',
  'weekes' => 'w.ee.k.s / [w^w].[ee^ee].[k^k]. / failed phone:x / failed spelling:ek',
  'wehde' => 'w.eh.d / [w^w].[e^eh]. / failed phone:d / failed spelling:hd',
  'wehle' => 'w.eh/l.ee / [w^w].[e^eh]/ / failed phone:l / failed spelling:hl',
  'wehler' => 'w.eh/l.er / [w^w].[e^eh]/ / failed phone:l / failed spelling:hl',
  'wehling' => 'w.eh/l.ih.ng / [w^w].[e^eh]/ / failed phone:l / failed spelling:hl',
  'wehman' => 'w.eh/m.eh.n / [w^w].[e^eh]/ / failed phone:m / failed spelling:hm',
  'wehmeier' => 'w.eh/m.igh/er / [w^w].[e^eh]/ / failed phone:m / failed spelling:hm',
  'wehmeyer' => 'w.eh/m.igh/er / [w^w].[e^eh]/ / failed phone:m / failed spelling:hm',
  'wehrmacht' => 'v.er/m.aw.k.t /  / failed phone:v / failed spelling:we',
  'weida' => 'v.igh/d.eh /  / failed phone:v / failed spelling:we',
  'weideman' => 'w.igh.d/m.eh.n / [w^w].[ei^igh].[d^d]/ / failed phone:m / failed spelling:em',
  'weidemann' => 'w.igh.d/m.eh.n / [w^w].[ei^igh].[d^d]/ / failed phone:m / failed spelling:em',
  'weidler' => 'w.igh/d.eh/l.er / [w^w].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'weigandt' => 'w.igh/g.eh.n.t / [w^w].[ei^igh]/[g^g].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'weigl' => 'w.ee/g.eh.l / [w^w].[ei^ee]/[g^g]. / failed phone:eh / failed spelling:l',
  'weihe' => 'w.ee.h / [w^w].[ei^ee].[h^h] / failed phone:h / failed spelling:ih',
  'weimar' => 'v.igh/m.aw.r /  / failed phone:v / failed spelling:we',
  'weinzierl' => 'w.igh.n/z.ih.r.l / [w^w].[ei^igh].[n^n]/[z^z].[i^ih]. / failed phone:r / failed spelling:er',
  'weird' => 'w.ih.r.d / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirder' => 'w.ih.r/d.er / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirdest' => 'w.ih.r/d.eh.s.t / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirdly' => 'w.ih.r.d/l.ee / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirdness' => 'w.ih.r.d/n.eh.s / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirdo' => 'w.ih.r/d.oh / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirdos' => 'w.ih.r/d.oh.z / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weirton' => 'w.ih.r/t.eh.n / [w^w].[e^ih]. / failed phone:r / failed spelling:ir',
  'weischedel' => 'w.igh/sh.eh/d.eh.l / [w^w].[ei^igh]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'weishaar' => 'w.igh/sh.aw.r / [w^w].[ei^igh]/[sh^sh].[a^oh]. / failed phone:r / failed spelling:ar',
  'weiskopf' => 'w.igh/s.k.aw.f / [w^w].[ei^igh]/[s^s].[k^k].[o^aw]. / failed phone:f / failed spelling:pf',
  'weisse' => 'w.igh.s / [w^w].[ei^igh].[ss^s] / failed phone:s / failed spelling:ss',
  'weisz' => 'v.igh.sh /  / failed phone:v / failed spelling:we',
  'weizsaecker' => 'w.igh/s.ah/k.er / [w^w].[ei^igh]/[z^s]. / failed phone:ah / failed spelling:sa',
  'welcome' => 'w.eh.l/k.eh.m / [w^w].[e^eh].[l^l]/[c^k].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'welke' => 'w.eh.l.k / [w^w].[e^eh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'wel' => 'w.eh.l/k.er / [w^w].[e^eh].[l^l]/ / failed phone:k / failed spelling:',
  'welle' => 'w.eh.l / [w^w].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'welsch' => 'w.eh.l.sh / [w^w].[e^eh].[l^l].[sc^sh] / failed phone:sh / failed spelling:sc',
  'welsh' => 'w.eh.l.ch / [w^w].[e^eh].[l^l]. / failed phone:t / failed spelling:sh',
  'wende' => 'w.eh.n.d / [w^w].[e^eh].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'wendlandt' => 'w.eh.n.d/l.eh.n.t / [w^w].[e^eh].[n^n].[d^d]/[l^l].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'wendt' => 'w.eh.n.t / [w^w].[e^eh].[n^n]. / failed phone:t / failed spelling:dt',
  'wengler' => 'w.ih.ng/eh/l.er / [w^w].[e^ih].[n^ng]/ / failed phone:eh / failed spelling:gl',
  'wenke' => 'w.eh.ng.k / [w^w].[e^eh].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'wentzville' => 'w.eh.n.t/s.v.ih.l / [w^w].[e^eh].[n^n].[t^t]/[z^s].[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'wenzhou' => 'w.eh.n/z.ue / [w^w].[e^eh].[n^n]/[z^z]. / failed phone:ue / failed spelling:ho',
  'wenzl' => 'w.eh.n/z.eh.l / [w^w].[e^eh].[n^n]/[z^z]. / failed phone:eh / failed spelling:l',
  'were' => 'w.er / [w^w].[er^er] / failed phone:er / failed spelling:er',
  'werent' => 'w.er.n.t / [w^w].[er^er]. / failed phone:n / failed spelling:en',
  'werke' => 'w.er.k / [w^w].[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'werle' => 'w.aw/r.eh.l / [w^w]. / failed phone:aw / failed spelling:er',
  'wernecke' => 'w.er/n.ih.k / [w^w].[er^er]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'wernicke' => 'w.er/n.ih.k / [w^w].[er^er]/[n^n].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'werre' => 'w.air / [w^w].[er^air] / failed phone:air / failed spelling:er',
  'wesch' => 'w.eh.sh / [w^w].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wesche' => 'w.eh.sh / [w^w].[e^eh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wesler' => 'w.eh/s.eh/l.er / [w^w].[e^eh]/[s^s]. / failed phone:eh / failed spelling:le',
  'wesolowski' => 'v.ih/s.eh/l.aw.f/s.k.ee /  / failed phone:v / failed spelling:we',
  'wessling' => 'w.eh/s.eh/l.ih.ng / [w^w].[e^eh]/[ss^s]. / failed phone:eh / failed spelling:li',
  'westdeutsche' => 'w.eh.s.t/d.oy.ch / [w^w].[e^eh].[s^s].[t^t]/[d^d]. / failed phone:oy / failed spelling:eu',
  'westergaard' => 'w.eh/s.t.er/g.aw.r.d / [w^w].[e^eh]/[s^s].[te^t].[r^er]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'westfaelisches' => 'w.eh.s.t/f.ay/l.ih/sh.ih.z / [w^w].[e^eh].[s^s].[t^t]/[f^f].[a^ay]/[el^l].[i^ih]/[sc^sh]. / failed phone:ih / failed spelling:he',
  'westfahl' => 'w.eh.s.t/f.aw.l / [w^w].[e^eh].[s^s].[t^t]/[f^f].[a^aw]. / failed phone:l / failed spelling:hl',
  'wetzstein' => 'w.eh.t/s.t.igh.n / [w^w].[e^eh].[t^t]/[z^s]. / failed phone:t / failed spelling:st',
  'weyandt' => 'w.ay/eh.n.t / [w^w].[ey^ay]/[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'weyerhaeuser' => 'w.air/h.ow/z.er / [w^w]. / failed phone:air / failed spelling:ey',
  'weygandt' => 'w.ay/g.eh.n.t / [w^w].[ey^ay]/[g^g].[a^ah].[n^n]. / failed phone:t / failed spelling:dt',
  'weyhrauch' => 'w.ay/r.ow.k / [w^w].[e^ay]/ / failed phone:r / failed spelling:yh',
  'weyrauch' => 'w.air/ow.k / [w^w]. / failed phone:air / failed spelling:ey',
  'weyrich' => 'w.air/ih.k / [w^w]. / failed phone:air / failed spelling:ey',
  'whistled' => 'w.ih/s.eh.l.d / [wh^w].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'whistles' => 'w.ih/s.eh.l.z / [wh^w].[i^ih]/[st^s]. / failed phone:eh / failed spelling:le',
  'whittled' => 'w.ih/t.eh.l.d / [wh^w].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'whittlesey' => 'w.ih/t.eh.l/s.ee / [wh^w].[i^ih]/[t^t]. / failed phone:eh / failed spelling:tl',
  'wholehearted' => 'h.oh.l/h.aw.r/t.ih.d / [wh^h].[o^oh].[le^l]/[h^h]. / failed phone:oh / failed spelling:ea',
  'wholeheartedly' => 'h.oh.l/h.aw.r/t.ih.d/l.ee / [wh^h].[o^oh].[le^l]/[h^h]. / failed phone:oh / failed spelling:ea',
  'wholesome' => 'h.oh.l/s.eh.m / [wh^h].[o^oh].[le^l]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'wholesomeness' => 'h.oh.l/s.eh.m/n.eh.s / [wh^h].[o^oh].[le^l]/[s^s].[o^uh].[m^m]/ / failed phone:n / failed spelling:en',
  'wiacek' => 'v.igh/eh/ch.eh.k /  / failed phone:v / failed spelling:wi',
  'wiatrowski' => 'v.ee/eh/t.r.aw.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wicke' => 'w.ih.k / [w^w].[i^ih].[c^k] / failed phone:k / failed spelling:ck',
  'wickes' => 'w.ih.k.s / [w^w].[i^ih].[c^k]. / failed phone:s / failed spelling:ke',
  'wickham' => 'w.ih/k.eh.m / [w^w].[i^ih]/[c^k]. / failed phone:eh / failed spelling:kh',
  'wickliffe' => 'w.ih/k.l.ih.f / [w^w].[i^ih]/[ck^k].[l^l].[i^ih].[ff^f] / failed phone:f / failed spelling:ff',
  'wickware' => 'w.ih/kw.air / [w^w].[i^ih]/[ck^kw]. / failed phone:air / failed spelling:wa',
  'wickwire' => 'v.ih.s.k/v.igh.r /  / failed phone:v / failed spelling:wi',
  'widget' => 'w.ih/j.ih.t / [w^w].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'widgets' => 'w.ih/j.ih.t.s / [w^w].[i^ih]/[d^j]. / failed phone:ih / failed spelling:ge',
  'wiebe' => 'w.ee.b / [w^w].[ie^ee].[b^b] / failed phone:b / failed spelling:be',
  'wiebusch' => 'w.ee/b.eh.sh / [w^w].[ie^ee]/[b^b].[u^uh].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wieczorek' => 'v.ee/ch.aw/r.eh.k /  / failed phone:v / failed spelling:wi',
  'wiedeman' => 'w.ee.d/m.eh.n / [w^w].[ie^ee].[d^d]/ / failed phone:m / failed spelling:em',
  'wiedemann' => 'w.ee.d/m.eh.n / [w^w].[ie^ee].[d^d]/ / failed phone:m / failed spelling:em',
  'wiederkehr' => 'w.ee/d.er/k.ih.r / [w^w].[ie^ee]/[d^d].[er^er]/[k^k].[e^ih]. / failed phone:r / failed spelling:hr',
  'wiehe' => 'w.ee / [w^w].[ie^ee] / failed phone:ee / failed spelling:ie',
  'wiencek' => 'v.ee.n/ch.eh.k /  / failed phone:v / failed spelling:wi',
  'wienecke' => 'w.ee/n.ih.k / [w^w].[ie^ee]/[n^n].[e^ih].[c^k] / failed phone:k / failed spelling:ck',
  'wieneke' => 'w.ee/n.ih.k / [w^w].[ie^ee]/[n^n].[e^ih].[k^k] / failed phone:k / failed spelling:ke',
  'wienke' => 'w.ee.ng.k / [w^w].[ie^ee].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'wier' => 'w.ih.r / [w^w].[i^ih]. / failed phone:r / failed spelling:er',
  'wierenga' => 'v.ih/r.eh.ng/g.eh /  / failed phone:v / failed spelling:wi',
  'wierman' => 'w.ih.r/m.eh.n / [w^w].[i^ih]. / failed phone:r / failed spelling:er',
  'wiersema' => 'v.ih.r/s.ee/m.eh /  / failed phone:v / failed spelling:wi',
  'wiersma' => 'v.ih.r/s.m.eh /  / failed phone:v / failed spelling:wi',
  'wierzba' => 'v.ih.r.z/b.eh /  / failed phone:v / failed spelling:wi',
  'wierzbicki' => 'v.ih.r.z/b.ih.t/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wigglesworth' => 'w.ih/g.eh.l/z.w.er.th / [w^w].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:le',
  'wiggling' => 'w.ih/g.eh/l.ih.ng / [w^w].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:li',
  'wiggly' => 'w.ih/g.eh/l.ee / [w^w].[i^ih]/[gg^g]. / failed phone:eh / failed spelling:ly',
  'wiitala' => 'v.ee/t.aw/l.eh /  / failed phone:v / failed spelling:wi',
  'wilczak' => 'v.ih.l/ch.ah.k /  / failed phone:v / failed spelling:wi',
  'wilczek' => 'v.ih.l/ch.eh.k /  / failed phone:v / failed spelling:wi',
  'wilczewski' => 'v.ih.l/ch.eh.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wilczynski' => 'v.ih.l/ch.ih.n/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wilde' => 'w.igh.l.d / [w^w].[i^igh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'wildeman' => 'w.igh.l.d/m.eh.n / [w^w].[i^igh].[l^l].[d^d]/ / failed phone:m / failed spelling:em',
  'wildflowers' => 'w.igh.l.d/f.l.ow.r.z / [w^w].[i^igh].[l^l].[d^d]/[f^f].[l^l].[ow^ow]. / failed phone:r / failed spelling:er',
  'wildt' => 'w.ih.l.t / [w^w].[i^ih].[l^l]. / failed phone:t / failed spelling:dt',
  'wilfredo' => 'w.ih.l/f.ay/d.oh / [w^w].[i^ih].[l^l]/[f^f]. / failed phone:ay / failed spelling:re',
  'wilinski' => 'v.ih/l.ih.n/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wilke' => 'w.ih.l.k / [w^w].[i^ih].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'wilkes' => 'w.ih.l.k.s / [w^w].[i^ih].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'wilkesboro' => 'w.ih.l.k.s/b.er/oh / [w^w].[i^ih].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'wilkowski' => 'v.ih.l/k.aw.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'willabelle' => 'w.ih/l.eh/b.eh.l / [w^w].[i^ih]/[ll^l].[a^ah]/[b^b].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'wille' => 'w.ih.l / [w^w].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'william' => 'w.ih/l.ye.eh.m / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williams' => 'w.ih/l.ye.eh.m.z / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamsburg' => 'w.ih/l.ye.eh.m.z/b.er.g / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamsburgh' => 'w.ih/l.ye.eh.m.z/b.er.g / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamsen' => 'w.ih/l.ye.eh.m/s.eh.n / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamson' => 'w.ih/l.ye.eh.m/s.eh.n / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamsport' => 'w.ih/l.ye.eh.m/s.p.aw.r.t / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williamstown' => 'w.ih/l.ye.eh.m/s.t.ow.n / [w^w].[i^ih]/[ll^l]. / failed phone:ue / failed spelling:ia',
  'williard' => 'w.ih/l.ye.aw.r.d / [w^w].[i^ih]/[ll^l]. / failed phone:ye / failed spelling:ia',
  'willoughby' => 'w.ih/l.eh/b.ee / [w^w].[i^ih]/[ll^l].[o^uh]/ / failed phone:b / failed spelling:ug',
  'wimbledon' => 'w.ih.m/b.eh.l/d.eh.n / [w^w].[i^ih].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'windham' => 'w.ih.n/d.eh.m / [w^w].[i^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:ha',
  'windisch' => 'w.ih.n/d.ih.sh / [w^w].[i^ih].[n^n]/[d^d].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'windsor' => 'w.ih.n/z.er / [w^w].[i^ih].[n^n]/ / failed phone:z / failed spelling:ds',
  'windswept' => 'w.ih.n/s.w.eh.p.t / [w^w].[i^ih].[n^n]/ / failed phone:s / failed spelling:ds',
  'windt' => 'w.ih.n.t / [w^w].[i^ih].[n^n]. / failed phone:t / failed spelling:dt',
  'wingler' => 'w.ih.ng/g.eh/l.er / [w^w].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'winiarski' => 'v.ih/n.ee/aw.r/s.k.ee /  / failed phone:v / failed spelling:wi',
  'winiecki' => 'v.ih/n.ee.t/s.k.ee /  / failed phone:v / failed spelling:wi',
  'winkleman' => 'w.ih.ng/k.eh.l/m.eh.n / [w^w].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'winkles' => 'w.ih.ng/k.eh.l.z / [w^w].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'winkowski' => 'v.ih.ng/k.aw.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'winne' => 'w.ih.n / [w^w].[i^ih].[n^n] / failed phone:n / failed spelling:nn',
  'winnicki' => 'v.ih/n.ih.t/s.k.ee /  / failed phone:v / failed spelling:wi',
  'winola' => 'v.ih/n.oh/l.eh /  / failed phone:v / failed spelling:wi',
  'winsome' => 'w.ih.n/s.eh.m / [w^w].[i^ih].[n^n]/[s^s].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'wirkkala' => 'v.er/k.aw/l.eh /  / failed phone:v / failed spelling:wi',
  'wirkus' => 'w.er/k.ih.s / [w^w].[ir^er]/[k^k]. / failed phone:ih / failed spelling:us',
  'wisch' => 'w.ih.sh / [w^w].[i^ih].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wischmeyer' => 'w.ih/sh.m.igh/er / [w^w].[i^ih]/[sc^sh]. / failed phone:m / failed spelling:hm',
  'wisinski' => 'v.ih/s.ih.n/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wisler' => 'w.ih/s.eh/l.er / [w^w].[i^ih]/[s^s]. / failed phone:eh / failed spelling:le',
  'wismer' => 'w.ih/z.eh/m.er / [w^w].[i^ih]/[s^z]. / failed phone:eh / failed spelling:me',
  'wisneski' => 'v.ih/s.n.eh/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wisnewski' => 'v.ih/s.n.eh.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wisnieski' => 'v.ih/s.n.ee/s.k.ee /  / failed phone:v / failed spelling:wi',
  'wisniewski' => 'w.ih.z/n.ee/eh.f/s.k.ee / [w^w].[i^ih].[s^z]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'wisz' => 'v.ih.sh /  / failed phone:v / failed spelling:wi',
  'witczak' => 'v.ih.t/ch.ah.k /  / failed phone:v / failed spelling:wi',
  'witek' => 'v.ih/t.eh.k /  / failed phone:v / failed spelling:wi',
  'witkowski' => 'v.ih.t/k.aw.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'witowski' => 'v.ih/t.aw.f/s.k.ee /  / failed phone:v / failed spelling:wi',
  'witthuhn' => 'w.ih/th.eh.n / [w^w].[i^ih]/ / failed phone:th / failed spelling:tt',
  'witzke' => 'w.ih.t.z.k / [w^w].[i^ih].[t^t].[z^z].[k^k] / failed phone:k / failed spelling:ke',
  'wlodarczyk' => 'w.eh/l.aw/d.er/ch.ih.k / [w^w]. / failed phone:eh / failed spelling:lo',
  'wlodarski' => 'w.eh/l.eh/d.aw.r/s.k.ee / [w^w]. / failed phone:eh / failed spelling:lo',
  'wm' => 'w.ih/l.ye.eh.m / [w^w]. / failed phone:ih / failed spelling:m',
  'wobbe' => 'w.aw.b / [w^w].[o^aw].[bb^b] / failed phone:b / failed spelling:bb',
  'wobbled' => 'w.aw/b.eh.l.d / [w^w].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:le',
  'wobbling' => 'w.aw/b.eh/l.ih.ng / [w^w].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:li',
  'wobbly' => 'w.aw/b.eh/l.ee / [w^w].[o^aw]/[bb^b]. / failed phone:eh / failed spelling:ly',
  'woehl' => 'w.oh.l / [w^w].[o^oh]. / failed phone:l / failed spelling:eh',
  'woehler' => 'w.oh/l.er / [w^w].[o^oh]/ / failed phone:l / failed spelling:eh',
  'woehr' => 'w.aw.r / [w^w].[o^oh]. / failed phone:r / failed spelling:eh',
  'woehrle' => 'w.aw/r.eh.l / [w^w].[o^aw]/ / failed phone:r / failed spelling:eh',
  'woitschatzke' => 'w.oy/ch.ah.t/s.k.ee / [w^w].[oi^oy]/[t^t].[sc^sh]. / failed phone:ah / failed spelling:ha',
  'wojahn' => 'w.oh/h.aw.n / [w^w].[o^oh]/ / failed phone:h / failed spelling:ja',
  'wojciak' => 'w.oy/ch.ee/ah.k / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojcicki' => 'w.oy/ch.ih.t/s.k.ee / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojciech' => 'w.oy/ch.eh.k / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojciechowski' => 'w.oy/ch.ih/h.aw.f/s.k.ee / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojcik' => 'w.oy/ch.ih.k / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojdyla' => 'w.oy/d.ih/l.eh / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojick' => 'w.oy/ch.ih.k / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojnar' => 'w.oy/n.er / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojnarowski' => 'w.oy/n.er/ow/s.k.ee / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojnilower' => 'w.oy/n.eh/l.oh/er / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojnowski' => 'w.oy/n.ow/s.k.ee / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojtas' => 'w.oy/t.eh.s / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojtaszek' => 'w.oy/t.aw/sh.eh.k / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojtkiewicz' => 'w.oy.t/k.eh/v.ih.ch / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojtkowski' => 'w.oy.t/k.ow/s.k.ee / [w^w]. / failed phone:oy / failed spelling:oj',
  'wojtowicz' => 'w.oy/t.eh/v.ih.ch / [w^w]. / failed phone:oy / failed spelling:oj',
  'wolanski' => 'v.eh/l.ah.n/s.k.ee /  / failed phone:v / failed spelling:wo',
  'woldt' => 'w.oh.l.t / [w^w].[o^oh].[l^l]. / failed phone:t / failed spelling:dt',
  'wolfe' => 'w.oo.l.f / [w^w].[o^oo].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'wolinski' => 'v.eh/l.ih.n/s.k.ee /  / failed phone:v / failed spelling:wo',
  'wolinsky' => 'v.eh/l.ih.n/s.k.ee /  / failed phone:v / failed spelling:wo',
  'wolke' => 'w.oh.l.k / [w^w].[o^oh].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'wollaeger' => 'w.eh/l.ay/g.er / [w^w].[o^uh]/[ll^l].[a^ay]/ / failed phone:g / failed spelling:eg',
  'wolle' => 'w.aw.l / [w^w].[o^aw].[ll^l] / failed phone:l / failed spelling:ll',
  'wollschlager' => 'w.aw.l/sh.l.ay/g.er / [w^w].[o^aw].[ll^l]/[sc^sh]. / failed phone:l / failed spelling:hl',
  'woloszyn' => 'v.eh/l.aw/sh.ih.n /  / failed phone:v / failed spelling:wo',
  'wolske' => 'w.oh.l.s.k / [w^w].[o^oh].[l^l].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'wolski' => 'v.oh.l/s.k.ee /  / failed phone:v / failed spelling:wo',
  'wolsky' => 'v.oh.l/s.k.ee /  / failed phone:v / failed spelling:wo',
  'wolstenholme' => 'w.oh.l/s.t.ih.n/h.oh.l.m / [w^w].[o^oh].[l^l]/[s^s].[t^t].[e^ih].[n^n]/[h^h].[o^oh].[l^l].[m^m] / failed phone:m / failed spelling:me',
  'wombles' => 'w.aw.m/b.eh.l.z / [w^w].[o^aw].[m^m]/[b^b]. / failed phone:eh / failed spelling:le',
  'women' => 'w.ih/m.eh.n / [w^w]. / failed phone:ih / failed spelling:om',
  'woodrome' => 'w.oo/d.r.eh.m / [w^w].[oo^oo]/[d^d].[r^r].[o^uh].[m^m] / failed phone:m / failed spelling:me',
  'worcester' => 'w.oo/s.t.er / [w^w].[o^oo]/ / failed phone:s / failed spelling:rc',
  'workweek' => 'w.er/kw.ee.k / [w^w].[o^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'workweeks' => 'w.er/kw.ee.k.s / [w^w].[o^oh].[r^r]/ / failed phone:kw / failed spelling:kw',
  'worried' => 'w.er/ee.d / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'worriers' => 'w.er/ee/er.z / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'worries' => 'w.er/ee.z / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'worrisome' => 'w.er/ee/s.eh.m / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ri',
  'worry' => 'w.er/ee / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ry',
  'worrying' => 'w.er/ee/ih.ng / [w^w].[o^oh].[r^r]/ / failed phone:ee / failed spelling:ry',
  'woszczyna' => 'w.aw/zh.ee/n.eh / [w^w].[o^aw]/[s^zh]. / failed phone:ee / failed spelling:zc',
  'wouldve' => 'w.oo/d.eh.v / [w^w].[oul^oo]/[d^d]. / failed phone:eh / failed spelling:ve',
  'woulfe' => 'w.ow.l.f / [w^w].[ou^ow].[l^l].[f^f] / failed phone:f / failed spelling:fe',
  'wozniak' => 'v.aw.z/n.ee/ah.k /  / failed phone:v / failed spelling:wo',
  'woznicki' => 'v.eh.z/n.ih.t/s.k.ee /  / failed phone:v / failed spelling:wo',
  'wrangled' => 'r.ah.ng/g.eh.l.d / [wr^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'wrangler' => 'r.ah.ng/g.eh/l.er / [wr^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'wranglers' => 'r.ah.ng/g.eh/l.er.z / [wr^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'wrangles' => 'r.ah.ng/g.eh.l.z / [wr^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'wrangling' => 'r.ah.ng/g.eh/l.ih.ng / [wr^r].[a^ah].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'wrestled' => 'r.eh/s.eh.l.d / [wr^r].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'wrestler' => 'r.eh/s.eh/l.er / [wr^r].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'wrestles' => 'r.eh/s.eh.l.z / [wr^r].[e^eh]/[st^s]. / failed phone:eh / failed spelling:le',
  'wrinkled' => 'r.ih.ng/k.eh.l.d / [wr^r].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'wrinkles' => 'r.ih.ng/k.eh.l.z / [wr^r].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:le',
  'wrinkling' => 'r.ih.ng/k.eh/l.ih.ng / [wr^r].[i^ih].[n^ng]/[k^k]. / failed phone:eh / failed spelling:li',
  'wroblewski' => 'r.eh/b.l.ue.f/s.k.ee / [wr^r].[o^uh]/[b^b].[l^l].[ew^ue]. / failed phone:f / failed spelling:sk',
  'wrzesinski' => 'r.eh/z.ih/s.ih.n/s.k.ee / [wr^r]. / failed phone:eh / failed spelling:ze',
  'ws' => 'd.uh/b.eh/l.ye.ue/eh.s /  / failed phone:d / failed spelling:ws',
  'wuensch' => 'w.oo.n.sh / [w^w].[ue^oo].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wuerttemberg' => 'w.er/t.eh.m/b.er.g / [w^w]. / failed phone:er / failed spelling:ue',
  'wuhan' => 'w.ue/eh.n / [w^w].[u^ue]/ / failed phone:eh / failed spelling:ha',
  'wunsch' => 'w.uh.n.sh / [w^w].[u^uh].[n^n].[sc^sh] / failed phone:sh / failed spelling:sc',
  'wunschel' => 'w.uh.n/sh.eh.l / [w^w].[u^uh].[n^n]/[sc^sh]. / failed phone:eh / failed spelling:he',
  'wurdeman' => 'w.er.d/m.eh.n / [w^w].[ur^er].[d^d]/ / failed phone:m / failed spelling:em',
  'wy' => 'w.ay / [w^w]. / failed phone:ay / failed spelling:y',
  'wyborn' => 'v.ih/b.er.n /  / failed phone:v / failed spelling:wy',
  'wyche' => 'w.igh.ch / [w^w].[y^igh].[ch^ch] / failed phone:t / failed spelling:ch',
  'wyka' => 'v.ih/k.eh /  / failed phone:v / failed spelling:wy',
  'wyke' => 'w.igh.k / [w^w].[y^igh].[k^k] / failed phone:k / failed spelling:ke',
  'wykes' => 'w.igh.k.s / [w^w].[y^igh].[k^k]. / failed phone:s / failed spelling:es',
  'wylde' => 'w.igh.l.d / [w^w].[y^igh].[l^l].[d^d] / failed phone:d / failed spelling:de',
  'wyndham' => 'w.ih.n/d.eh.m / [w^w].[y^ih].[n^n]/[d^d]. / failed phone:eh / failed spelling:ha',
  'wyngaarden' => 'w.ih.n/g.aw.r/d.eh.n / [w^w].[y^ih].[n^n]/[g^g].[a^oh]. / failed phone:r / failed spelling:ar',
  'wynne' => 'w.ih.n / [w^w].[y^ih].[n^n] / failed phone:n / failed spelling:nn',
  'wysocki' => 'v.ih/s.oh.t/s.k.ee /  / failed phone:v / failed spelling:wy',
  'wyszynski' => 'v.ih/sh.ih.n/s.k.ee /  / failed phone:v / failed spelling:wy',
  'x' => 'eh.k.s /  / failed phone:eh / failed spelling:x',
  'xanax' => 'z.ah/n.ah.k.s /  / failed phone:z / failed spelling:xa',
  'xanthe' => 'z.ah.n.dh /  / failed phone:z / failed spelling:xa',
  'xantippe' => 'z.ah.n/t.ih.p /  / failed phone:z / failed spelling:xa',
  'xaver' => 'z.ay/v.er /  / failed phone:z / failed spelling:xa',
  'xavier' => 'z.ay/v.ye.er /  / failed phone:z / failed spelling:xa',
  'xaviera' => 'ih.g/z.ay/v.ye.air/eh /  / failed phone:ih / failed spelling:xa',
  'xebec' => 'z.eh/b.eh.k /  / failed phone:z / failed spelling:xe',
  'xena' => 'z.ee/n.eh /  / failed phone:z / failed spelling:xe',
  'xene' => 'z.ee.n /  / failed phone:z / failed spelling:xe',
  'xenia' => 'z.ee/n.ee/eh /  / failed phone:z / failed spelling:xe',
  'xenon' => 'z.ee/n.aw.n /  / failed phone:z / failed spelling:xe',
  'xenophobia' => 'z.eh/n.eh/f.oh/b.ee/eh /  / failed phone:z / failed spelling:xe',
  'xenophobic' => 'z.eh/n.eh/f.aw/b.ih.k /  / failed phone:z / failed spelling:xe',
  'xenophon' => 'z.eh/n.eh/f.eh.n /  / failed phone:z / failed spelling:xe',
  'xenos' => 'z.ee/n.oh.z /  / failed phone:z / failed spelling:xe',
  'xeriscape' => 'z.air/ih/s.k.ay.p /  / failed phone:z / failed spelling:xe',
  'xerox' => 'z.ih/r.aw.k.s /  / failed phone:z / failed spelling:xe',
  'xerxes' => 'z.er.k/s.ee.z /  / failed phone:z / failed spelling:xe',
  'xiamen' => 'z.ee/ay/m.eh.n /  / failed phone:z / failed spelling:xi',
  'xian' => 'z/ye.aw.n /  / failed phone:z / failed spelling:xi',
  'xiaoping' => 'zh.ow/p.ih.ng /  / failed phone:zh / failed spelling:xi',
  'xiaoyun' => 'sh.ow/ye.ue.n /  / failed phone:sh / failed spelling:xi',
  'xicor' => 'z.igh/k.aw.r /  / failed phone:z / failed spelling:xi',
  'xidex' => 'z.ih/d.eh.k.s /  / failed phone:z / failed spelling:xi',
  'xie' => 'z.ee /  / failed phone:z / failed spelling:xi',
  'xilinx' => 'z.igh/l.ih.ng.k.s /  / failed phone:z / failed spelling:xi',
  'xing' => 'sh.ih.ng /  / failed phone:sh / failed spelling:xi',
  'xinhua' => 'z.ih.n/w.aw /  / failed phone:z / failed spelling:xi',
  'xinjiang' => 'z.ih.n/j.ee/ah.ng /  / failed phone:z / failed spelling:xi',
  'xiong' => 'zh.aw.ng /  / failed phone:zh / failed spelling:xi',
  'xoma' => 'z.oh/m.eh /  / failed phone:z / failed spelling:xo',
  'xscribe' => 'eh.k/s.k.r.igh.b /  / failed phone:eh / failed spelling:xs',
  'xtra' => 'eh.k/s.t.r.eh /  / failed phone:eh / failed spelling:xt',
  'xu' => 'z.ue /  / failed phone:z / failed spelling:xu',
  'xuan' => 'zh/w.aw.n /  / failed phone:zh / failed spelling:xu',
  'xudong' => 'z.ue/d.aw.ng /  / failed phone:z / failed spelling:xu',
  'xue' => 'z.ue /  / failed phone:z / failed spelling:xu',
  'xuedong' => 'z.ue/d.aw.ng /  / failed phone:z / failed spelling:xu',
  'xuemei' => 'z.ue/m.igh /  / failed phone:z / failed spelling:xu',
  'xus' => 'z.uh.s /  / failed phone:z / failed spelling:xu',
  'xylia' => 'z.igh/l.ee/eh /  / failed phone:z / failed spelling:xy',
  'xylina' => 'z.igh/l.ih/n.eh /  / failed phone:z / failed spelling:xy',
  'xylogics' => 'z.igh/l.aw/j.ih.k.s /  / failed phone:z / failed spelling:xy',
  'xylon' => 'z.igh/l.eh.n /  / failed phone:z / failed spelling:xy',
  'xylona' => 'z.igh/l.eh/n.eh /  / failed phone:z / failed spelling:xy',
  'xylophone' => 'z.igh/l.eh/f.oh.n /  / failed phone:z / failed spelling:xy',
  'xyvision' => 'z.igh/v.ih/zh.eh.n /  / failed phone:z / failed spelling:xy',
  'y' => 'w.igh /  / failed phone:w / failed spelling:y',
  'yaacov' => 'ye.aw/k.oh.v / [y^ye].[a^aw]/ / failed phone:k / failed spelling:ac',
  'yacht' => 'ye.aw.t / [y^ye].[a^aw]. / failed phone:t / failed spelling:ch',
  'yachters' => 'ye.aw/t.er.z / [y^ye].[a^aw]/ / failed phone:t / failed spelling:ch',
  'yachting' => 'ye.aw/t.ih.ng / [y^ye].[a^aw]/ / failed phone:t / failed spelling:ch',
  'yachts' => 'ye.aw.t.s / [y^ye].[a^aw]. / failed phone:t / failed spelling:ch',
  'yachtsman' => 'ye.aw.t/s.m.eh.n / [y^ye].[a^aw]. / failed phone:t / failed spelling:ch',
  'yaeger' => 'ye.ee/j.er / [y^ye]. / failed phone:ee / failed spelling:ae',
  'yaffe' => 'ye.ah.f / [y^ye].[a^ah].[ff^f] / failed phone:f / failed spelling:ff',
  'yahnke' => 'ye.ah.ng.k / [y^ye].[a^ah]. / failed phone:ng / failed spelling:hn',
  'yahr' => 'ye.aw.r / [y^ye].[a^oh]. / failed phone:r / failed spelling:hr',
  'yahweh' => 'ye.ah/w.ay / [y^ye].[a^ah]/ / failed phone:w / failed spelling:hw',
  'yanayev' => 'ye.ah/n.igh/eh.v / [y^ye].[a^ah]/[n^n]. / failed phone:igh / failed spelling:ay',
  'yangtze' => 'ye.ah.ng.k.t/s.ee / [y^ye].[a^ah].[n^ng]. / failed phone:k / failed spelling:gt',
  'yanke' => 'ye.ah.ng.k / [y^ye].[a^ah].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'yankowski' => 'ye.eh.ng/k.aw.f/s.k.ee / [y^ye].[a^ah].[n^ng]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'yannuzzi' => 'ye.aw/n.ue.t/s.ee / [y^ye].[a^aw]/[nn^n].[u^ue]. / failed phone:t / failed spelling:zz',
  'yao' => 'ye.ow / [y^ye]. / failed phone:ow / failed spelling:ao',
  'yaobang' => 'ye.ow/b.ah.ng / [y^ye]. / failed phone:ow / failed spelling:ao',
  'yaohan' => 'ye.ow/h.aw.n / [y^ye]. / failed phone:ow / failed spelling:ao',
  'yarde' => 'ye.aw.r.d / [y^ye].[a^oh].[r^r].[d^d] / failed phone:d / failed spelling:de',
  'yarmulkes' => 'ye.aw.r/m.eh.l.k.s / [y^ye].[a^oh].[r^r]/[m^m].[u^uh].[l^l].[k^k]. / failed phone:s / failed spelling:es',
  'yd' => 'ye.aw.r.d / [y^ye]. / failed phone:oh / failed spelling:d',
  'yds' => 'ye.aw.r.d.z / [y^ye]. / failed phone:oh / failed spelling:ds',
  'ydstie' => 'ye.ih.d/s.t.ee / [y^ye]. / failed phone:ih / failed spelling:ds',
  'yeh' => 'ye.eh / [y^ye].[e^eh] / failed phone:eh / failed spelling:eh',
  'yeiri' => 'ye.air/ee / [y^ye]. / failed phone:air / failed spelling:ei',
  'yelle' => 'ye.eh.l / [y^ye].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'yeoman' => 'ye.oh/m.eh.n / [y^ye]. / failed phone:oh / failed spelling:eo',
  'yeomans' => 'ye.oh/m.eh.n.z / [y^ye]. / failed phone:oh / failed spelling:eo',
  'yerke' => 'ye.er.k / [y^ye].[er^er].[k^k] / failed phone:k / failed spelling:ke',
  'yeske' => 'ye.eh.s.k / [y^ye].[e^eh].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'yingling' => 'ye.ih.ng/g.eh/l.ih.ng / [y^ye].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:li',
  'yitzhak' => 'ye.ih.t/s.aw.k / [y^ye].[i^ih].[t^t]/[z^s]. / failed phone:aw / failed spelling:ha',
  'ylvisaker' => 'ye.ih.l/v.ih/s.aw/k.er / [y^ye]. / failed phone:ih / failed spelling:lv',
  'ynjiun' => 'ye.ih.n/j.ih.n / [y^ye]. / failed phone:ih / failed spelling:nj',
  'yogiisms' => 'ye.oh/g.ee/s.eh.m.z / [y^ye].[o^oh]/[g^g].[i^ee]/ / failed phone:s / failed spelling:is',
  'yolande' => 'ye.oh/l.eh.n.d / [y^ye].[o^oh]/[l^l].[a^ah].[n^n].[d^d] / failed phone:d / failed spelling:de',
  'yonke' => 'ye.aw.ng.k / [y^ye].[o^aw].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'yorio' => 'ye.aw.r/ye.oh / [y^ye].[o^oh].[r^r]/ / failed phone:ye / failed spelling:io',
  'yorke' => 'ye.aw.r.k / [y^ye].[o^oh].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'yorkshire' => 'ye.aw.r.k/sh.er / [y^ye].[o^oh].[r^r].[k^k]/[sh^sh].[ir^er] / failed phone:er / failed spelling:hi',
  'youngdahl' => 'ye.uh.ng/d.aw.l / [y^ye].[ou^uh].[ng^ng]/[d^d].[a^aw]. / failed phone:l / failed spelling:hl',
  'youville' => 'ye.ue/v.ih.l / [y^ye].[ou^ue]/[v^v].[i^ih].[ll^l] / failed phone:l / failed spelling:ll',
  'yuhasz' => 'ye.uh/h.eh.sh / [y^ye].[u^uh]/[h^h].[a^ah].[s^sh] / failed phone:sh / failed spelling:sz',
  'yuille' => 'ye.ue.l / [y^ye].[u^ue].[il^l] / failed phone:l / failed spelling:il',
  'yves' => 'ee.v / [y^ee].[ve^v] / failed phone:v / failed spelling:ve',
  'yvonne' => 'ih/v.aw.n / [y^ih]/[v^v].[o^aw].[n^n] / failed phone:n / failed spelling:nn',
  'yzaguirre' => 'ee/z.eh/g.w.igh/er / [y^ee]/[z^z].[a^ah]/[g^g].[u^w].[i^igh]/[r^er] / failed phone:er / failed spelling:rr',
  'z' => 'z.ee / [z^z]. / failed phone:ee / failed spelling:',
  'zablocki' => 'z.eh/b.l.oh.t/s.k.ee / [z^z].[a^ah]/[b^b].[l^l].[o^oh]. / failed phone:t / failed spelling:ck',
  'zaborowski' => 'z.eh/b.er/aw.f/s.k.ee / [z^z].[a^ah]/[b^b].[o^oh].[r^r]/[o^aw]. / failed phone:f / failed spelling:ws',
  'zaccheus' => 'z.ah/k.oy.z / [z^z].[a^ah]/[cc^k]. / failed phone:oy / failed spelling:he',
  'zacek' => 'z.aw/ch.eh.k / [z^z].[a^aw]/ / failed phone:t / failed spelling:ce',
  'zadeh' => 'z.aw/d.eh / [z^z].[a^aw]/[d^d].[e^eh] / failed phone:eh / failed spelling:eh',
  'zaentz' => 'z.ah.n.t.s / [z^z].[a^ah]. / failed phone:n / failed spelling:en',
  'zahler' => 'z.aw/l.er / [z^z].[a^aw]/ / failed phone:l / failed spelling:hl',
  'zahm' => 'z.ah.m / [z^z].[a^ah]. / failed phone:m / failed spelling:hm',
  'zahradnik' => 'z.er/ah.d/n.ih.k / [z^z]. / failed phone:er / failed spelling:ah',
  'zaire' => 'z.igh/ih.r / [z^z].[ai^igh]/ / failed phone:ih / failed spelling:re',
  'zairean' => 'z.igh/ih/r.eh.n / [z^z].[ai^igh]/ / failed phone:ih / failed spelling:re',
  'zaireans' => 'z.igh/ih/r.eh.n.z / [z^z].[ai^igh]/ / failed phone:ih / failed spelling:re',
  'zairian' => 'z.igh/ih/r.ee/eh.n / [z^z].[ai^igh]/ / failed phone:ih / failed spelling:ri',
  'zairians' => 'z.igh/ih/r.ee/eh.n.z / [z^z].[ai^igh]/ / failed phone:ih / failed spelling:ri',
  'zajac' => 'z.igh/eh.k / [z^z]. / failed phone:igh / failed spelling:aj',
  'zajicek' => 'z.igh/ih/ch.eh.k / [z^z]. / failed phone:igh / failed spelling:aj',
  'zajkowski' => 'z.igh/k.aw.f/s.k.ee / [z^z]. / failed phone:igh / failed spelling:aj',
  'zakharov' => 'z.ah/k.er/aw.v / [z^z].[a^ah]/[k^k]. / failed phone:er / failed spelling:ha',
  'zakrajsek' => 'z.eh/k.r.igh/s.eh.k / [z^z].[a^ah]/[k^k].[r^r]. / failed phone:igh / failed spelling:aj',
  'zalewski' => 'z.eh/l.eh.f/s.k.ee / [z^z].[a^ah]/[l^l].[e^eh]. / failed phone:f / failed spelling:ws',
  'zaniewski' => 'z.ah/n.ee/eh.f/s.k.ee / [z^z].[a^ah]/[n^n].[i^ee]/[e^eh]. / failed phone:f / failed spelling:ws',
  'zaremski' => 'z.er/eh/s.k.ee / [z^z].[ar^er]/[e^eh]/ / failed phone:s / failed spelling:ms',
  'zarzycki' => 'z.er/z.ih.t/s.k.ee / [z^z].[ar^er]/[z^z].[y^ih]. / failed phone:t / failed spelling:ck',
  'zaske' => 'z.ay.s.k / [z^z].[a^ay].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'zaslavskaya' => 'z.ah/s.l.eh.v/s.k.igh/eh / [z^z].[a^ah]/[s^s].[l^l].[a^ah].[v^v]/[s^s].[k^k]. / failed phone:igh / failed spelling:ay',
  'zaucha' => 'z.ow/h.eh / [z^z].[au^aw]/ / failed phone:h / failed spelling:ch',
  'zawacki' => 'z.aw/v.aw.t/s.k.ee / [z^z].[a^aw]/ / failed phone:v / failed spelling:wa',
  'zawadzki' => 'z.aw/v.aw.j/k.ee / [z^z].[a^aw]/ / failed phone:v / failed spelling:wa',
  'zawislak' => 'z.aw/v.ih/s.l.eh.k / [z^z].[a^aw]/ / failed phone:v / failed spelling:wi',
  'zawistowski' => 'z.aw/v.ih/s.t.aw.f/s.k.ee / [z^z].[a^aw]/ / failed phone:v / failed spelling:wi',
  'zayac' => 'z.igh/eh.k / [z^z]. / failed phone:igh / failed spelling:ay',
  'zbigniew' => 'z/b.ih.g/n.ue / [z^z]/[b^b].[i^ih].[g^g]/[n^n]. / failed phone:ue / failed spelling:ie',
  'zdrojewski' => 'z/d.r.oy/ue/s.k.ee / [z^z]/[d^d].[r^r]. / failed phone:oy / failed spelling:oj',
  'zebrowski' => 'z.eh/b.r.aw.f/s.k.ee / [z^z].[e^eh]/[b^b].[r^r].[o^aw]. / failed phone:f / failed spelling:ws',
  'zedillo' => 'z.ay/d.ee/oh / [z^z].[e^ay]/[d^d].[i^ee]/ / failed phone:oh / failed spelling:ll',
  'zeh' => 'z.eh / [z^z].[e^eh] / failed phone:eh / failed spelling:eh',
  'zeidler' => 'z.igh/d.eh/l.er / [z^z].[ei^igh]/[d^d]. / failed phone:eh / failed spelling:le',
  'zeigler' => 'z.igh/g.eh/l.er / [z^z].[ei^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'zeisler' => 'z.igh/s.eh/l.er / [z^z].[ei^igh]/[s^s]. / failed phone:eh / failed spelling:le',
  'zeitgeist' => 't/s.igh.t/g.igh.s.t /  / failed phone:t / failed spelling:ze',
  'zeitler' => 'z.igh/t.eh/l.er / [z^z].[ei^igh]/[t^t]. / failed phone:eh / failed spelling:le',
  'zelaya' => 'z.ay/l.igh/eh / [z^z].[e^ay]/[l^l]. / failed phone:igh / failed spelling:ay',
  'zelle' => 'z.eh.l / [z^z].[e^eh].[ll^l] / failed phone:l / failed spelling:ll',
  'zemke' => 'z.eh.m.k / [z^z].[e^eh].[m^m].[k^k] / failed phone:k / failed spelling:ke',
  'zentralsparkasse' => 'z.eh.n/t.r.eh.l/s.p.aw.r/k.aw/z.ih / [z^z].[e^eh].[n^n]/[t^t].[r^r].[a^ah].[l^l]/[s^s].[p^p].[a^oh].[r^r]/[k^k].[a^aw]/[s^z]. / failed phone:ih / failed spelling:se',
  'zeppenfeld' => 'z.eh/p.eh/f.eh.l.d / [z^z].[e^eh]/[pp^p].[e^eh]/ / failed phone:f / failed spelling:nf',
  'zerbe' => 'z.ih.r.b / [z^z].[e^ih].[r^r].[b^b] / failed phone:b / failed spelling:be',
  'zhan' => 'z.aw.n / [z^z]. / failed phone:aw / failed spelling:ha',
  'zhang' => 'zh.ah.ng / [z^zh]. / failed phone:ah / failed spelling:ha',
  'zhao' => 'zh.ow / [z^zh]. / failed phone:ow / failed spelling:ha',
  'zhejiang' => 'zh.ee/j.aw.ng / [z^zh]. / failed phone:ee / failed spelling:he',
  'zheng' => 'z.eh.ng / [z^z]. / failed phone:eh / failed spelling:he',
  'zhirinovsky' => 'zh.ih/r.eh/n.aw.f/s.k.ee / [z^zh]. / failed phone:ih / failed spelling:hi',
  'zhivago' => 'zh.ih/v.aw/g.oh / [z^zh]. / failed phone:ih / failed spelling:hi',
  'zhivkov' => 'zh.ih.v/k.aw.v / [z^zh]. / failed phone:ih / failed spelling:hi',
  'zhou' => 'z.ue / [z^z]. / failed phone:ue / failed spelling:ho',
  'zhu' => 'z.ue / [z^z]. / failed phone:ue / failed spelling:hu',
  'zhuhai' => 'z.ue/h.igh / [z^z]. / failed phone:ue / failed spelling:hu',
  'ziehl' => 'z.ee.l / [z^z].[ie^ee]. / failed phone:l / failed spelling:hl',
  'ziehm' => 'z.ee.m / [z^z].[ie^ee]. / failed phone:m / failed spelling:hm',
  'zielke' => 'z.ee.l.k / [z^z].[ie^ee].[l^l].[k^k] / failed phone:k / failed spelling:ke',
  'ziemke' => 'z.ee.m.k / [z^z].[ie^ee].[m^m].[k^k] / failed phone:k / failed spelling:ke',
  'zier' => 'z.ih.r / [z^z].[i^ih]. / failed phone:r / failed spelling:er',
  'zierke' => 'z.ee.r.k / [z^z].[ie^ee].[r^r].[k^k] / failed phone:k / failed spelling:ke',
  'zieske' => 'z.ee.s.k / [z^z].[ie^ee].[s^s].[k^k] / failed phone:k / failed spelling:ke',
  'ziesmer' => 'z.ee/s.eh/m.er / [z^z].[ie^ee]/[s^s]. / failed phone:eh / failed spelling:me',
  'zigler' => 'z.igh/g.eh/l.er / [z^z].[i^igh]/[g^g]. / failed phone:eh / failed spelling:le',
  'zingler' => 'z.ih.ng/g.eh/l.er / [z^z].[i^ih].[n^ng]/[g^g]. / failed phone:eh / failed spelling:le',
  'zinke' => 'z.ih.ng.k / [z^z].[i^ih].[n^ng].[k^k] / failed phone:k / failed spelling:ke',
  'ziolkowski' => 'z.ee/oh.l/k.aw.f/s.k.ee / [z^z].[i^ee]/[o^oh].[l^l]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'ziyad' => 'z.ee/ah.d / [z^z].[i^ee]/ / failed phone:ah / failed spelling:ya',
  'ziyang' => 'zh.ee/ah.ng / [z^zh].[i^ee]/ / failed phone:ah / failed spelling:ya',
  'zmijewski' => 'z/m.ee/ue/s.k.ee / [z^z]/[m^m].[i^ee]/ / failed phone:ue / failed spelling:jw',
  'zoghby' => 'z.oh/b.ee / [z^z].[o^oh]/ / failed phone:b / failed spelling:gh',
  'zoucha' => 'z.ue/h.eh / [z^z].[ou^ue]/ / failed phone:h / failed spelling:ch',
  'zsa' => 'zh.aw / [z^zh]. / failed phone:aw / failed spelling:sa',
  'zsazsa' => 'zh.aw/zh.aw / [z^zh]. / failed phone:aw / failed spelling:sa',
  'zschau' => 'zh.ow / [z^zh]. / failed phone:ow / failed spelling:sc',
  'zucchini' => 'z.ue/k.ee/n.ee / [z^z].[u^ue]/[cc^k]. / failed phone:ee / failed spelling:hi',
  'zuchowski' => 'z.eh/h.aw.f/s.k.ee / [z^z].[u^uh]/ / failed phone:h / failed spelling:ch',
  'zuehlke' => 'z.oo.l.k / [z^z].[u^oo]. / failed phone:l / failed spelling:eh',
  'zuelke' => 'z.ue.l.k / [z^z].[u^ue].[el^l].[k^k] / failed phone:k / failed spelling:ke',
  'zuhlke' => 'z.ue.l.k / [z^z].[u^ue]. / failed phone:l / failed spelling:hl',
  'zukowski' => 'z.eh/k.aw.f/s.k.ee / [z^z].[u^uh]/[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'zurawski' => 'z.er/aw.f/s.k.ee / [z^z].[ur^er]/[a^aw]. / failed phone:f / failed spelling:ws',
  'zurfluh' => 'z.er/f.l.ue / [z^z].[ur^er]/[f^f].[l^l].[u^ue] / failed phone:ue / failed spelling:uh',
  'zurkuhlen' => 'z.er/k.ye.ue/l.eh.n / [z^z].[ur^er]/[k^k].[u^ue]/ / failed phone:l / failed spelling:hl',
  'zurowski' => 'z.er/aw.f/s.k.ee / [z^z].[ur^er]/[o^aw]. / failed phone:f / failed spelling:ws',
  'zwahlen' => 'z.w.aw/l.eh.n / [z^z].[w^w].[a^aw]/ / failed phone:l / failed spelling:hl',
  'zwolinski' => 'z/v.eh/l.ih.n/s.k.ee / [z^z]/ / failed phone:v / failed spelling:wo',
  'zyskowski' => 'z.ih/s.k.aw.f/s.k.ee / [z^z].[y^ih]/[s^s].[k^k].[o^aw]. / failed phone:f / failed spelling:ws',
  'zzzz' => 'z.ee.z / [zz^z]. / failed phone:ee / failed spelling:zz',
)